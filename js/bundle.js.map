{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/Functions.ts","src/Game.ts","src/ObjectPool.ts","src/entities/Cat.ts","src/entities/Entity.ts","src/entities/Fish.ts","src/entities/Puffer.ts","src/entities/specials/Persephone.ts","src/entities/specials/Special.ts","src/main.ts","src/managers/DataManager.ts","src/managers/LoadManager.ts","src/managers/ProgressManager.ts","src/managers/ScreenManager.ts","src/managers/SoundManager.ts","src/screens/EndScreen.ts","src/screens/GameScreen.ts","src/screens/IntermediaryScreen.ts","src/screens/MenuScreen.ts","src/screens/Screen.ts","src/screens/SplashScreen.ts","src/screens/TutorialCreator.ts","src/ui/Sprites.ts","src/ui/custom/LevelSelectDisplay.ts","src/ui/display/Container.ts","src/ui/display/Layout.ts","src/ui/partials/GameScore.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Logging","message","console","log","_message","LoadManager_1","ProgressManager_1","ScreenManager_1","SplashScreen_1","MenuScreen_1","GameScreen_1","EndScreen_1","Functions_1","Sprites_1","IntermediaryScreen_1","DataManager_1","Game","canvasDiv","_this","this","_classCallCheck","_canvas","width","WIDTH","height","HEIGHT","_lastGameTime","_scaling","Promise","res","rej","__awaiter","regeneratorRuntime","mark","_callee","splash","wrap","_context","prev","next","_stage","createjs","StageGL","antialias","setClearColor","enableMouseOver","update","ScreenManager","registerScreen","SplashScreen","setCurrentScreen","getScreenByKey","addEventListener","LoadManager","ASSETS_UPDATED","Text","Math","ceil","Percentage","toString","loadAssets","catch","err","warn","success","DataManager","loadWorldsData","error","ProgressManager","WorldsData","changeCurrentLevel","getLevelDataByIndex","Sprites","setup","MenuScreen","GameScreen","EndScreen","IntermediaryScreen","Ticker","framerate","FRAME_RATE","on","stop","levelData","_currentLevel","currentScore","_currentScore","children","ch","scaleX","scaleY","_scaleChildren","gameTime","getMeasuredFPS","CurrentScreen","ObjectPool","obj","type","poolObj","active","Pool","push","_getObjectByType","_getObjectByObj","_pool","forEach","return","find","Entity_1","Cat","game","gameScreen","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","Spritesheets","Kitty_Spritesheet","_gameScreen","_speed","_fishCaughtMultiplier","_caughtFish","_isGrabbing","_isRising","_isInjured","_hasReachedSurface","_sprite","gotoAndPlay","ANIMATION","Idle","Entity","_this2","IsGamelogicPaused","X","Stage","mouseX","speed","mouseY","Speed","_catYTween","Tween","get","to","y","Ease","circIn","Grab","Hold","fishes","tryToGrabFishes","Y","caught","returnToSurface","_this3","removeTweens","wait","linear","reachSurface","_this4","hasNewFish","indexOf","release","_this5","Ow","injure","drop","Sound","play","Sounds","CatInjure","_this6","collectFish","_this7","_get","prototype","hasHitAPuffer","hitEnemy","value","freeze","Death","spritesheet","_game","Sprite","_direction","x","_isIgnoringCollision","_ignoreCollisionTimer","container","addChild","parent","removeChild","IGNORE_COLLISION","artificialReg","arguments","undefined","reg","regX","regY","Bounds","Width","Height","bounds","StageWidth","extents","StageHeight","HIT","Right","Left","lastX","getBounds","Top","Bottom","Fish","Peeper_Spritesheet","_isCaught","_isReturning","Slow","_naturalY","Panic","hitTest","disable","abs","isNeg","IsIgnoringCollision","testStageBounds","DirectionX","startIgnoreCollision","Fast","Puffer","Puffer_Spritesheet","_cooldown","_currentCooldown","Angry","cat","Recover","Special_1","Persephone","Persephone_Spritesheet","SPEC_ANIMATION","Special","Fish_1","_isOnMainPage","_resetAttentionSpan","isOnMainPage","floor","random","_attnSpanDuration","_desiredX","_desiredY","_isNeg","Game_1","document","getElementById","fileLocation","fetch","then","blob","json","_worldsData","index","flatten","concat","apply","worlds","currentLevel","getLevelIndexByData","world","level","_sheetsTotal","_sheetsLoaded","_percentage","_totalAssetsLoaded","_totalAssets","src","stage","reset","_preloadManager","LoadQueue","registerPlugins","WebAudioPlugin","HTMLAudioPlugin","FlashAudioPlugin","alternateExtensions","installPlugin","_onLoaded","_onComplete","_onError","data","setMaxConnections","loadManifest","ASSETS_LOADED","emitErrorEvent","dispatchEvent","AssetsLoadedEvent","AssetsFailedEvent","parseFloat","getItems","toFixed","AssetsUpdatedEvent","name","sheet","item","Types","JAVASCRIPT","window","id","_SpriteSheet","complete","_loadedSheet","ev","remove","IMAGE","Images","Bitmap","SOUND","emitUpdatedEvent","removeAllEventListeners","setInterval","emitLoadedEvent","Event","ASSETS_FAILED","worldsData","_levelsProgress","map","unlocked","completed","_specialsProgress","special","collected","unlocks","_readCookieData","worldIndex","levelIndex","nextLevel","nextWorld","saveCookieData","cookie","JSON","stringify","ProgressData","_getCookie","parse","levels","specials","cname","ca","decodeURIComponent","split","charAt","substring","Screen_1","key","screen","_screensLookup","tempScreen","Screen","resolve","promises","_currentScreen","Container","alpha","destroy","_callee2","_context2","all","create","enable","SoundManager","loop","_ambience","sound","position","prefVolume","duration","playAmbience","fadeInAmbience","_sfx","splice","keys","volume","step","fadeInterval","clearInterval","killOnFinish","Container_1","_isFail","bg","Catfish_End","_container","_buttonsContainer","LAYOUT_OPTIONS","ColumnLeftBottom","addMany","btnTryAgain","btnNextLevel","btnMainMenu","_completeSpr","_failSpr","CurrentLevelData","getNextLevel","intermediary","queueNextScreen","visible","TutorialCreator_1","ObjectPool_1","Persephone_1","Puffer_1","Cat_1","GameScore_1","SoundManager_1","_fishes","_puffers","_remainingFish","createPoolObject","POOL","CAT","FISH","_i","PUFFERFISH","PERSEPHONE","_cat","checkout","_staticContainer","BG_Spritesheet","_fishContainer","_pufferContainer","_winContainer","_gameScore","GameScore","_tutorialCreator","TutorialCreator","_pauseLogic","hitObjects","getObjectsUnderPoint","fish","puff","killedFish","win","changeCurrentScore","totalFish","combos","time","elasticOut","fadeOutAmbience","levelIndices","getIndexData","completeLevel","collectSpecial","checkoutSprites","_winBanner","Shape","graphics","beginFill","drawRect","cache","_winText","generateBitmapText","TypographyWhite","mouseEnabled","flip","setNaturalY","puffer","tutorials","queueTutorials","background","gotoAndStop","musicKey","music","playAmbienceWithFadeIn","showScore","showTimer","showFishRemain","showRemainingFish","startHUD","releaseAllObjects","normalizedTime","min","grab","removeAllChildren","_text","screenKey","evt","setTimeout","clearTimeout","_bg","endFill","_textContainer","_txtSprite","scale","LevelSelectDisplay_1","_swipeContainer","Catfish_Main","_mainContainer","_logo","_mainButtonsContainer","btnNewGame","btnOptions","btnLevelSelect","btnExit","_fancyFish","_optionsContainer","txtOptions","Typography","btnClearData","Buttons","ClearData","_clearedContainer","add","_levelSelectDisplay","LevelSelectDisplay","_collectedContainer","_collectibleFish","_swipeSpeed","_initialSwipePos","BubblesFade","playSFX","BTNSelect","circOut","bounceOut","cubicIn","cubicInOut","stageX","stageY","_dragTimer","_onMain","Music1","_onNewGame","_onOptions","_onLevelSelect","_onExit","_onFish","listenToClearData","CLEAR_DATA","_onClearData","_onDragStart","_onDragEnd","collFish","filter","d","toLowerCase","setMainPage","sineInOut","off","stopListenToClearData","removeAllTweens","_textSpritesheet","SpriteSheet","images","frames","animations","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","Z","b","g","h","j","k","l","m","q","s","v","w","z","0","2","3","4","5","6","7","8","9",".",",","'","\"","?","!","$","img","createElement","onload","text","textEl","_tutorialQueue","_youOverlay","Tutorial_Spritesheet","_fishOverlay","_pufferOverlay","_manyOverlay","_pauseOverlay","_specialOverlay","First","You","Many","Pause","t0","KEY","_runYou","_transition","_runFish","unpauseGameLogic","abrupt","_runPuffer","_runSpecial","nextScreen","_currentOverlay","_callee3","_context4","_callee4","_context5","catStart","pauseGameLogic","_backgrounds","Main","UI","Logo","Entities","BG","BGTop","Wave","_graphics","Timer","ScoreHUD_Spritesheet","Score","FishRemain","_buttons","NewGame","ButtonHelper","Options","LevelSelect","Exit","Fishbowl","LevelSelectBG","Menu_Level_Select","LevelEmpty","LevelComplete","LevelSpecialEmpty","LevelSpecialComplete","_setupBTNClearData","cursor","_canClearData","_btnDataDown","_btnDataComplete","_btnDataUp","details","color","textObj","BitmapText","_levelButtons","_background","Backgrounds","_levelsContainer","_levelTextContainer","LevelText","rebuild","btn","_onLevelClick","_onLevelHover","_onLevelUnhover","_levelsData","sprite","clone","reduce","acc","target","_getDataByIndex","Layout_1","layout","_sprites","_layout","Layout","direction","alignment","crossAlignment","spacing","MAKE_VERTICAL_CENTER","updateLayout","buildLayout","_toConsumableArray","sprites","_layout2","_layout3","ColumnLeftTop","VERTICAL","START","ColumnLeftCenter","CENTER","END","ColumnCenterTop","ColumnCenterCenter","ColumnCenterBottom","ColumnRightTop","ColumnRightCenter","ColumnRightBottom","_parent","_items","_alignment","_crossAlignment","_spacing","addToParent","_len","items","Array","_key","totalHeight","_item","_i2","_item2","_i3","_i4","HORIZONTAL","_useTimer","_useFishRemain","_useScore","_timerContainer","timerSprite","Graphics","_timerTextContainer","_fishRemainContainer","fishRemainSprite","_fishRemainTextContainer","_scoreContainer","scoreSprite","_scoreTextContainer"],"mappings":"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,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/* ************************************************* */\r\n/*                      LOGGING                      */\r\n/* ************************************************* */\r\nexport class Logging {\r\n    static success(message:string):void {\r\n        console.log(`%c ${message}`, 'color:seagreen; font-size:1.1em; font-weight:bold; border-left: solid 3px seagreen;')    ;\r\n    }\r\n\r\n    static message(message:string):void {\r\n        console.log(`%c ${message}`, 'color:#1E265C; font-size:1.1em; font-weight:bold; border-left: solid 3px #1E265C;');\r\n    }\r\n\r\n    static error(message:string):void {\r\n        console.log(`%c ${message}`, 'color:red; font-size:1.1em; border-left: solid 3px red;');\r\n    }\r\n}","import { LoadManager } from \"./managers/LoadManager\";\r\nimport { ProgressManager } from \"./managers/ProgressManager\";\r\nimport { ScreenManager } from \"./managers/ScreenManager\";\r\nimport { SplashScreen } from \"./screens/SplashScreen\";\r\nimport { MenuScreen } from \"./screens/MenuScreen\";\r\nimport { GameScreen } from \"./screens/GameScreen\";\r\nimport { EndScreen } from \"./screens/EndScreen\";\r\nimport { Logging } from \"./Functions\";\r\nimport { Sprites } from \"./ui/Sprites\";\r\nimport { IntermediaryScreen } from \"./screens/IntermediaryScreen\";\r\nimport { DataManager, LevelData } from \"./managers/DataManager\";\r\n\r\nexport interface ICurrentScore {\r\n    totalFish: number;\r\n    time: number;\r\n    combos: number;\r\n}\r\n\r\n\r\nexport class Game {\r\n    private _canvas:HTMLCanvasElement;\r\n    private _stage:createjs.StageGL;\r\n    private _scaling:number;\r\n\r\n    private _lastGameTime:number;\r\n\r\n    private _currentLevel:LevelData;\r\n    private _currentScore:ICurrentScore;\r\n\r\n    constructor(canvasDiv:HTMLCanvasElement) {\r\n\r\n        this._canvas = canvasDiv;\r\n        this._canvas.width = Game.WIDTH;\r\n        this._canvas.height = Game.HEIGHT;\r\n\r\n        this._lastGameTime = -1;\r\n\r\n        //set the scaling\r\n        this._scaling = Game.HEIGHT / 1024;\r\n\r\n        //start loading game assets\r\n        new Promise(async(res, rej) => {\r\n            //create the stage\r\n            this._stage = new createjs.StageGL(this._canvas, { antialias: true });\r\n            // this._stage = new createjs.StageGL(this._canvas);\r\n            (this._stage as any).setClearColor(\"#000000\");\r\n            this._stage.enableMouseOver(10);\r\n            this._stage.update();\r\n\r\n\r\n            //load the splash screen\r\n            ScreenManager.registerScreen(\"splash\", new SplashScreen(this));\r\n            ScreenManager.setCurrentScreen(\"splash\", this._stage);\r\n\r\n            const splash = ScreenManager.getScreenByKey(\"splash\") as SplashScreen;\r\n\r\n            //listen to asset updates\r\n            (this._stage as any).addEventListener(LoadManager.ASSETS_UPDATED, (e) => {\r\n                //update percent\r\n                splash.Text = Math.ceil(LoadManager.Percentage * 100).toString();\r\n            });\r\n            //load assets\r\n            await LoadManager.loadAssets(\"assets/manifest.json\", this._stage)\r\n                .catch(err => {\r\n                    console.warn(\"Error loading assets:\", err);\r\n                });\r\n\r\n            Logging.success(\"Assets Loaded Successfully!\");\r\n\r\n            //load level data\r\n            await DataManager.loadWorldsData(\"assets/data/levels.json\")\r\n                .catch(err => {\r\n                    Logging.error(err);\r\n                    return;\r\n                });\r\n            //load progress data\r\n            await ProgressManager.loadWorldsData(DataManager.WorldsData);\r\n\r\n            //set the current screen\r\n            //game test, load desired level patch -- if autoloading to game screen\r\n            this.changeCurrentLevel(DataManager.getLevelDataByIndex(0));\r\n\r\n            Logging.success(\"Level Data Loaded Successfully!\");\r\n\r\n            //setup createjs.Sprites\r\n            await Sprites.setup();\r\n\r\n            //build the screens\r\n            ScreenManager.registerScreen(\"menu\", new MenuScreen(this));\r\n            ScreenManager.registerScreen(\"game\", new GameScreen(this));\r\n            ScreenManager.registerScreen(\"end\", new EndScreen(this));\r\n            ScreenManager.registerScreen(\"intermediary\", new IntermediaryScreen(this));\r\n            \r\n\r\n            ScreenManager.setCurrentScreen(\"menu\", this._stage);\r\n            // ScreenManager.setCurrentScreen(\"game\", this._stage);\r\n            // ScreenManager.setCurrentScreen(\"end\", this._stage);\r\n\r\n            //setup the game loop\r\n            createjs.Ticker.framerate = Game.FRAME_RATE;\r\n            createjs.Ticker.on(\"tick\", this.update, this);\r\n\r\n            res();\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public changeCurrentLevel(levelData:LevelData) {\r\n        this._currentLevel = levelData;\r\n    }\r\n\r\n    public changeCurrentScore(currentScore:ICurrentScore) {\r\n        this._currentScore = currentScore;\r\n    }\r\n\r\n\r\n\r\n    //recursive sizing\r\n    private _scaleChildren(children) {\r\n\r\n\r\n        if(children != null) {\r\n            for(let i = 0; i < children.length; i++) {\r\n                const ch = children[i];\r\n                ch.scaleX = ch.scaleY = this._scaling;\r\n                if(ch.children != null && ch.scaleX != null) this._scaleChildren(ch);\r\n            }\r\n        }\r\n\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    public update(e:any) {\r\n\r\n        const gameTime = (this._lastGameTime != -1) ? createjs.Ticker.getMeasuredFPS() - this._lastGameTime : 1;\r\n        this._lastGameTime = createjs.Ticker.getMeasuredFPS();\r\n\r\n        //update the screen\r\n        if(ScreenManager.CurrentScreen != null) ScreenManager.CurrentScreen.update(gameTime);\r\n\r\n        //scale all children\r\n        // this._scaleChildren(this._stage.children);\r\n\r\n        //update the stage\r\n        this._stage.update();\r\n    }\r\n\r\n\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get FRAME_RATE() { return 30; }\r\n    // public static get WIDTH() { return Game.HEIGHT * 0.5625; } //desired size\r\n    // public static get HEIGHT() { return Math.min(document.body.clientHeight, 1024); }\r\n\r\n    public static get WIDTH() { return 576; }\r\n    public static get HEIGHT() { return 1024; }\r\n\r\n    public get StageWidth() { return this._canvas.width; } //actual size\r\n    public get StageHeight() { return this._canvas.height; }\r\n\r\n    public get Stage() { return this._stage; }\r\n    public get Scaling() { return this._scaling; }\r\n\r\n    public get CurrentLevelData() { return this._currentLevel; }\r\n    public get CurrentScoreData() { return this._currentScore; }\r\n\r\n\r\n\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n\r\n\r\n}","import { Logging } from \"./Functions\";\r\nimport { Entity } from \"./entities/Entity\";\r\n\r\nexport interface IPoolObject {\r\n    type:string;\r\n    obj:Entity,\r\n    active:boolean;\r\n}\r\n\r\nexport class ObjectPool {\r\n    private static _pool:IPoolObject[];\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Creates a pool object. */\r\n    public static createPoolObject(obj:Entity, type:string) {\r\n        const poolObj = {\r\n            type,\r\n            obj,\r\n            active: false\r\n        };\r\n        ObjectPool.Pool.push(poolObj);\r\n        return poolObj;\r\n    }\r\n\r\n    /**Checks out a pool object.  Use POOL global function to access. */\r\n    public static checkout(type:string) {\r\n        const poolObj = ObjectPool._getObjectByType(type);\r\n        if(poolObj != null) {\r\n            poolObj.active = true;\r\n            return poolObj.obj;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**Returns an object to the pool. */\r\n    public static return(obj:Entity) {\r\n        const poolObj = ObjectPool._getObjectByObj(obj);\r\n        if(poolObj != null) {\r\n            poolObj.active = false;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**Returns all objects to pool. */\r\n    public static releaseAllObjects() {\r\n        ObjectPool._pool.forEach(p => {\r\n            ObjectPool.return(p.obj);\r\n        });\r\n    }\r\n\r\n\r\n    public static _getObjectByType(type) {\r\n        const poolObj = ObjectPool._pool.find((o => o.type == type && !o.active));\r\n        if(poolObj == null) Logging.error(\"Object not found in pool, or pool is exhausted.  Return some objects.\");\r\n        return poolObj\r\n    }\r\n    public static _getObjectByObj(obj) {\r\n        return ObjectPool._pool.find((o => o.obj == obj));\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get Pool() { \r\n        if(ObjectPool._pool == null) ObjectPool._pool = [];\r\n        return ObjectPool._pool;\r\n    }\r\n}","import { Game } from \"../Game\";\r\nimport { Entity } from \"./Entity\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { IEnableable } from \"../Interfaces\";\r\nimport { Logging } from \"../Functions\";\r\nimport { GameScreen } from \"../screens/GameScreen\";\r\nimport { Fish } from \"./Fish\";\r\n\r\nexport class Cat extends Entity implements IEnableable {\r\n    private _gameScreen:GameScreen;\r\n    private _speed:number;\r\n    private _fishCaughtMultiplier:number; //this will be the rate at which the cat slows down when rising per fish\r\n\r\n    private _catYTween:createjs.Tween;\r\n    private _caughtFish:Fish[];\r\n\r\n    private _isGrabbing:boolean;\r\n    private _isRising:boolean;\r\n    private _isInjured:boolean;\r\n    private _hasReachedSurface:boolean;\r\n\r\n    constructor(game:Game, gameScreen:GameScreen) {\r\n        super(game, LoadManager.Spritesheets.Kitty_Spritesheet);\r\n        this._gameScreen = gameScreen;\r\n\r\n        this._speed = 3;\r\n        this._fishCaughtMultiplier = 0.05;\r\n\r\n        this._caughtFish = [];\r\n        this._isGrabbing = false;\r\n        this._isRising = false;\r\n        this._isInjured = false;\r\n        this._hasReachedSurface = true;\r\n\r\n        this._sprite.gotoAndPlay(Cat.ANIMATION.Idle);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    enable() {\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n    }\r\n\r\n\r\n    /***************/\r\n    /*   ACTIONS   */\r\n    /***************/\r\n    public grab() {\r\n        //if the game is paused, we shall not grab\r\n        if(this._gameScreen.IsGamelogicPaused) return;\r\n\r\n        //cannot grab if we are not at surface\r\n        if(!this._hasReachedSurface) return;\r\n\r\n        this._isGrabbing = true;\r\n        this._hasReachedSurface = false;\r\n\r\n        //move to x position\r\n        this.X = this._gameScreen.Game.Stage.mouseX;\r\n\r\n        //grab to y position\r\n        const speed = (this._gameScreen.Game.Stage.mouseY / 2) * this.Speed;\r\n        this._catYTween = createjs.Tween\r\n            .get(this._sprite)\r\n            .to({ y:this._gameScreen.Game.Stage.mouseY }, speed, createjs.Ease.circIn)\r\n            .call(() => {\r\n                //once the grab is done, turn off flag\r\n                this._isGrabbing = false;\r\n\r\n                 //play animations\r\n                this._sprite.gotoAndPlay(Cat.ANIMATION.Grab);\r\n                //listen for animation to finish\r\n                (this._sprite as any).on(\"animationend\", () => {\r\n                    this._sprite.gotoAndPlay(Cat.ANIMATION.Hold);\r\n                }, true);\r\n\r\n                //try to grab a fish\r\n                const fishes = this._gameScreen.tryToGrabFishes(this.X , this.Y);\r\n\r\n                //see if a fish was grabbed\r\n                if(fishes.length > 0) this.caught(fishes);\r\n                else this.returnToSurface();\r\n            });\r\n\r\n    }\r\n\r\n    /**\r\n     * Called to return cat to surface.\r\n     */\r\n    public returnToSurface() {\r\n        this._sprite.gotoAndPlay(Cat.ANIMATION.Idle);\r\n\r\n        //remove any lingering tweens\r\n        createjs.Tween.removeTweens(this._sprite);\r\n        const speed = (this.Y / 2) * this.Speed;\r\n        this._catYTween = createjs.Tween.get(this._sprite)\r\n            .wait(150)\r\n            .to({y:20}, speed, createjs.Ease.linear)\r\n            .call(() => {\r\n                //once the surface has been reached, allow x movement again\r\n                this.reachSurface();\r\n            });\r\n    }\r\n\r\n    public caught(fishes:Fish[]) {\r\n        if(fishes.length <= 0) return;\r\n        this._isRising = true;  \r\n        \r\n        let hasNewFish = false;\r\n\r\n        fishes.forEach(f => {\r\n            if(this._caughtFish.indexOf(f) != -1) return;\r\n            hasNewFish = true;\r\n            //grab the fish\r\n            f.catch();\r\n\r\n            //add fish to caught array\r\n            this._caughtFish.push(f);\r\n\r\n            //control the fish\r\n            f.Y = this.Y;\r\n        });\r\n\r\n        if(!hasNewFish) return;\r\n        \r\n        //if we grabbed a fish...\r\n        //go back up... slowly\r\n        createjs.Tween.removeTweens(this._sprite);\r\n        const speed = this.Y * this.Speed;\r\n        this._catYTween = createjs.Tween.get(this._sprite)\r\n            .wait(250)\r\n            .to({y:-20}, speed, createjs.Ease.linear)\r\n            .call(() => {\r\n                //once the surface has been reached, allow x movement again\r\n                this.reachSurface();\r\n                this._isRising = false;\r\n            });\r\n\r\n    }\r\n    public drop() {\r\n        //release the fish\r\n        this._caughtFish.forEach(f => f.release());\r\n        this._caughtFish = [];\r\n    }\r\n\r\n    /**Called when hit by an enemy. */\r\n    public injure() {\r\n        this._isInjured = true;\r\n        //start hurt animation\r\n        //end any current tweening\r\n        createjs.Tween.removeTweens(this._sprite);\r\n        this._sprite.gotoAndPlay(Cat.ANIMATION.Ow);\r\n        this._catYTween = createjs.Tween.get(this._sprite)\r\n            .wait(15)\r\n            .to({y:20}, 500, createjs.Ease.linear)\r\n            .call(() => {\r\n                //once the surface has been reached, allow x movement again\r\n                this.reachSurface();\r\n                this._sprite.gotoAndPlay(Cat.ANIMATION.Idle);\r\n            });\r\n    }\r\n\r\n    /**Called when the cat tickles an enemy. */\r\n    public hitEnemy() {\r\n        this.injure();\r\n        this.drop();\r\n\r\n        //play the sound\r\n        createjs.Sound.play(LoadManager.Sounds.CatInjure);\r\n    }\r\n\r\n    public reachSurface() {\r\n        //if we have a fish, send to main logic\r\n        if(this._caughtFish != null) {\r\n            this._caughtFish.forEach(f => {\r\n                this._gameScreen.collectFish(f);\r\n            });\r\n            this._caughtFish = [];\r\n        }\r\n\r\n        //set flags\r\n        this._hasReachedSurface = true;\r\n        this._isInjured = false;\r\n        this._isRising = false;\r\n        this._isGrabbing = false;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    update(gameTime:number) {\r\n        //if our game logic is paused, no FISHING\r\n        if(this._gameScreen.IsGamelogicPaused) return;\r\n\r\n        super.update(gameTime);\r\n\r\n\r\n        //if we are rising, attempt to catch more fish\r\n        if(this._isRising && !this._isInjured) {\r\n            //try to grab a fish\r\n            const fishes = this._gameScreen.tryToGrabFishes(this.X , this.Y);\r\n            //see if a fish was grabbed\r\n            if(fishes.length > 0)\r\n                this.caught(fishes);\r\n        }\r\n\r\n        //test puffer damage\r\n        if(this._isRising || this._isGrabbing) {\r\n            //don't test again if injured\r\n            if(!this._isInjured) {\r\n                //test for puffer hit\r\n                const hasHitPuffer = this._gameScreen.hasHitAPuffer(this.X, this.Y);\r\n                if(hasHitPuffer) {\r\n                    this.hitEnemy();\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        //drag fish with us if we have any\r\n        if(this._caughtFish != null) {\r\n            this._caughtFish.forEach(f => {\r\n                f.Y = this.Y - 20;\r\n            });\r\n        }\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get GRAB_RANGE() { return 120; }\r\n    public static get ANIMATION() {\r\n        return Object.freeze({\r\n            \"Idle\" : \"kittyIdle\",\r\n            \"Death\" : \"kittyIdle\",\r\n            \"Grab\" : \"kittyIdle\",\r\n            \"Hold\" : \"kittyIdle\",\r\n            \"Ow\" : \"kittyIdle\"\r\n        });\r\n    }\r\n    // public static get ANIMATION() {\r\n    //     return Object.freeze({\r\n    //         \"Idle\" : \"cat_idle\",\r\n    //         \"Death\" : \"cat_death\",\r\n    //         \"Grab\" : \"cat_grab\",\r\n    //         \"Hold\" : \"cat_grab_hold\",\r\n    //         \"Ow\" : \"cat_ow\"\r\n    //     });\r\n    // }\r\n    public get Speed() { \r\n        const caughtFishMult = ((this._caughtFish.length > 0) ? 1 + (this._caughtFish.length + this._fishCaughtMultiplier) : 1);\r\n\r\n        return caughtFishMult * this._speed;\r\n    }\r\n    public set Speed(value:number) { this._speed = value; }\r\n}","import { ICreateable, IUpdateable } from \"../Interfaces\";\r\nimport { Game } from \"../Game\";\r\n\r\nexport class Entity implements ICreateable<Entity>, IUpdateable {\r\n    private _game:Game;\r\n    protected _name:string;\r\n    protected _sprite:createjs.Sprite;\r\n    protected _direction:{ x:number, y:number };\r\n\r\n    private _isIgnoringCollision:boolean;\r\n    private _ignoreCollisionTimer:number;\r\n\r\n    constructor(game:Game, spritesheet:createjs.SpriteSheet) {\r\n        this._game = game;\r\n        this._sprite = new createjs.Sprite(spritesheet);\r\n        this._direction = { x:1, y:1 };\r\n\r\n        this._isIgnoringCollision = false;\r\n        this._ignoreCollisionTimer = 0;\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public create(container:createjs.Container):Entity {\r\n\r\n        //move to main container\r\n        if(container == null)\r\n            this._game.Stage.addChild(this._sprite);\r\n        else\r\n            container.addChild(this._sprite);\r\n        return this;\r\n    }\r\n\r\n    public destroy():Entity {\r\n        if(this._sprite == null || this._sprite.parent == null) return null;\r\n\r\n        //remove from main container\r\n        this._sprite.parent.removeChild(this._sprite);\r\n\r\n        return this;\r\n    }\r\n\r\n    public update(gameTime:number) {\r\n\r\n         //listen for collision ignore\r\n        if(this._isIgnoringCollision) {\r\n            this._ignoreCollisionTimer++;\r\n\r\n            if(this._ignoreCollisionTimer > Entity.IGNORE_COLLISION)\r\n                this._isIgnoringCollision = false;\r\n        }\r\n    }\r\n\r\n    protected startIgnoreCollision() {\r\n        this._isIgnoringCollision = true\r\n    }\r\n\r\n    protected testStageBounds(artificialReg:{x:number, y:number} = null) {\r\n        let reg = { x:this._sprite.regX, y:this._sprite.regY };\r\n        if(artificialReg != null) {\r\n            reg = {\r\n                x: (this._direction.x > 0) ? this.Bounds.Width * artificialReg.x : (this.Bounds.Width * (1 - artificialReg.x)),\r\n                y: (this._direction.y > 0) ? this.Bounds.Height * artificialReg.y : (this.Bounds.Height * (1 - artificialReg.y))\r\n            }\r\n        }\r\n        // const bounds = { width:this._game.StageWidth, height: this._game.StageHeight };\r\n        const bounds = { width:this._game.StageWidth, height: this._game.StageHeight };\r\n        const extents = {   \r\n            x:(this._direction.x > 0) ? (this.Bounds.Width - reg.x) : -reg.x, \r\n            y:(this._direction.y > 0) ? (this.Bounds.Height - reg.y) : -reg.y \r\n        };\r\n\r\n        //test walls\r\n        if((this.X + extents.x) > bounds.width) return Entity.HIT.Right;\r\n        else if(this.X + extents.x < 0) return Entity.HIT.Left;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get IGNORE_COLLISION() { return 20; }\r\n    public static get HIT() { return Object.freeze({Top:0, Right:1, Bottom:2, Left:3}); }\r\n\r\n    protected get Game():Game { return this._game; }\r\n\r\n    public get Sprite() { return this._sprite; }\r\n    public get Parent() { return this._sprite.parent; }\r\n\r\n    public get X() { return this._sprite.x; }\r\n    public set X(value) { this._sprite.x = value; }\r\n    public get Y() { return this._sprite.y; }\r\n    public set Y(value) { this._sprite.y = value; }\r\n\r\n    public set DirectionX(value) { \r\n        const lastX = this._direction.x;\r\n        this._direction.x = value; \r\n        //flip sprite if our direction has changed\r\n        if(this._direction.x != lastX) this._sprite.scaleX *= -1;\r\n    }\r\n    public get DirectionX() { return this._direction.x; }\r\n\r\n    public get Bounds() { \r\n        let bounds = this._sprite.getBounds();\r\n        return  { Width:bounds.width, Height:bounds.height };\r\n    }\r\n\r\n    public get IsIgnoringCollision() { return this._isIgnoringCollision; }\r\n}","import { Game } from \"../Game\";\r\nimport { Entity } from \"./Entity\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { IEnableable } from \"../Interfaces\";\r\nimport { Logging } from \"../Functions\";\r\n\r\nexport class Fish extends Entity implements IEnableable {\r\n    private _speed:number;\r\n    private _naturalY:number;\r\n\r\n    private _isCaught:boolean;\r\n    private _isReturning:boolean;\r\n\r\n    constructor(game:Game, spritesheet?:createjs.SpriteSheet) {\r\n        super(game, spritesheet || LoadManager.Spritesheets.Peeper_Spritesheet);\r\n        this._speed = 1;\r\n\r\n        this._isCaught = false;\r\n        this._isReturning = false;\r\n\r\n        this._sprite.gotoAndPlay(Fish.ANIMATION.Slow);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    \r\n\r\n\r\n    /***************/\r\n    /*   ACTIONS   */\r\n    /***************/\r\n    public setNaturalY() {\r\n        this._naturalY = this.Y;\r\n    }\r\n\r\n    public catch() {\r\n        if(this._isCaught) return;\r\n        \r\n        Logging.message(\"Fish was grabbed!\");\r\n        this._isCaught = true;\r\n\r\n        this._sprite.gotoAndPlay(Fish.ANIMATION.Panic);\r\n    }\r\n\r\n    public release() {\r\n        this._isCaught = false;\r\n        //return to natural y position\r\n        this._isReturning = true;\r\n    }\r\n\r\n\r\n    /**Test to see if global position hits sprite. */\r\n    public testHit(x:number, y:number):boolean {\r\n        return this._sprite.hitTest(x, y);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    destroy() {\r\n        //reset flags\r\n        this._isCaught = false;\r\n        //reset animations\r\n        this._sprite.gotoAndPlay(Fish.ANIMATION.Slow);\r\n\r\n        this.disable();\r\n        return super.destroy();\r\n    }\r\n\r\n    update(gameTime:number) {\r\n        super.update(gameTime);\r\n\r\n        //move the fishy\r\n        if(!this._isCaught)\r\n            // this.X += this._speed * gameTime * this._direction.x;\r\n            this.X += this._speed * this._direction.x;\r\n        //--if returning, swim to natural y\r\n        if(this._isReturning) {\r\n            //if we are still far away, swim!\r\n            if(Math.abs(this.Y - this._naturalY) > 30) {\r\n                const isNeg = this.Y > this._naturalY;\r\n                this.Y += (isNeg) ? -10 : 10;\r\n            }\r\n            else {\r\n                this._isReturning = false;\r\n                this._sprite.gotoAndPlay(Fish.ANIMATION.Slow);\r\n            }\r\n        }\r\n\r\n        //test collision\r\n        if(!this.IsIgnoringCollision) {\r\n\r\n            //if fish hits the edge, flip direction\r\n            const hit = this.testStageBounds({x:0.5, y:0.5});\r\n            switch(hit) {\r\n                case Entity.HIT.Right:\r\n                    this.DirectionX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X -= 5 - this.Bounds.Width;\r\n                    break;\r\n                case Entity.HIT.Left:\r\n                    this.DirectionX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X += 5 - this.Bounds.Width;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    enable() {\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get ANIMATION() {\r\n        return Object.freeze({\r\n            \"Slow\" : \"fishIdle\",\r\n            \"Fast\" : \"fishIdle\",\r\n            \"Panic\" : \"fishPanic\"\r\n        });\r\n    }\r\n    public get Speed() { return this._speed; }\r\n    public set Speed(value:number) { this._speed = value; }\r\n}","import { Game } from \"../Game\";\r\nimport { Entity } from \"./Entity\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { IEnableable } from \"../Interfaces\";\r\nimport { Logging } from \"../Functions\";\r\nimport { Cat } from \"./Cat\";\r\n\r\nexport class Puffer extends Entity implements IEnableable {\r\n    public get Type() { return \"Puffer\"; }\r\n\r\n    private _speed:number;\r\n    private _cooldown:number = 40;\r\n    private _currentCooldown:number = 0;\r\n\r\n    private _isCaught:boolean;\r\n\r\n    constructor(game:Game) {\r\n        super(game, LoadManager.Spritesheets.Puffer_Spritesheet);\r\n        this._speed = 1;\r\n\r\n        this._isCaught = false;\r\n\r\n        this._sprite.gotoAndPlay(Puffer.ANIMATION.Idle);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    \r\n\r\n\r\n    /***************/\r\n    /*   ACTIONS   */\r\n    /***************/\r\n    public puff() {\r\n        this._sprite.gotoAndPlay(Puffer.ANIMATION.Angry);\r\n        //start cooldown\r\n        this._currentCooldown = this._cooldown;\r\n    }\r\n\r\n\r\n    /**Test to see if global position hits sprite. */\r\n    public testHit(x:number, y:number, cat:Cat):boolean {\r\n        return (x >= this.X - cat.Bounds.Width && x <= this.X + this.Bounds.Width \r\n            && y >= this.Y - cat.Bounds.Height && y <= this.Y + this.Bounds.Height) ;\r\n        // return this._sprite.hitTest(x, y);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    destroy() {\r\n        //reset flags\r\n        this._isCaught = false;\r\n        //reset animations\r\n        this._sprite.gotoAndPlay(Puffer.ANIMATION.Idle);\r\n\r\n        this.disable();\r\n        return super.destroy();\r\n    }\r\n\r\n    update(gameTime:number) {\r\n        super.update(gameTime);\r\n\r\n        //move the fishy\r\n        if(!this._isCaught)\r\n            this.X += this._speed * gameTime * this._direction.x;\r\n\r\n        //do cooldown\r\n        if(this._currentCooldown >= 0) {\r\n            this._currentCooldown--;\r\n            if(this._currentCooldown == 0) {\r\n                //reset animations\r\n                this._sprite.gotoAndPlay(Puffer.ANIMATION.Recover);\r\n            }\r\n        }\r\n\r\n        //test collision\r\n        if(!this.IsIgnoringCollision) {\r\n\r\n            //if fish hits the edge, flip direction\r\n            const hit = this.testStageBounds({x:0.5, y:0.5});\r\n            switch(hit) {\r\n                case Entity.HIT.Right:\r\n                    this._direction.x *= -1;\r\n                    this._sprite.scaleX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X -= 5 - this.Bounds.Width;\r\n                    break;\r\n                case Entity.HIT.Left:\r\n                    this._direction.x *= -1;\r\n                    this._sprite.scaleX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X += 5 - this.Bounds.Width;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    enable() {\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get ANIMATION() {\r\n        return Object.freeze({\r\n            \"Idle\" : \"pufferIdle\",\r\n            \"Angry\" : \"pufferAngry\",\r\n            \"Recover\" : \"pufferRecover\"\r\n        });\r\n    }\r\n    public get Speed() { return this._speed; }\r\n    public set Speed(value:number) { this._speed = value; }\r\n}","import { LoadManager } from \"../../managers/LoadManager\";\r\nimport { Special } from \"./Special\";\r\nimport { Game } from \"../../Game\";\r\n\r\nexport class Persephone extends Special {\r\n\r\n    constructor(game:Game) {\r\n        super(game, LoadManager.Spritesheets.Persephone_Spritesheet);\r\n        this._sprite.gotoAndPlay(Persephone.SPEC_ANIMATION.Idle);\r\n    }\r\n\r\n\r\n    public static get SPEC_ANIMATION() {\r\n        return Object.freeze({\r\n            \"Idle\" : \"persIdle\"\r\n        });\r\n    }\r\n\r\n}","import { Fish } from \"../Fish\";\r\nimport { Game } from \"../../Game\";\r\n\r\nexport abstract class Special extends Fish {\r\n    private _isOnMainPage:boolean;\r\n    private _desiredX:number;\r\n    private _desiredY:number;\r\n    private _attnSpanDuration:number; //how long before fish wants to do something else\r\n\r\n    constructor(game:Game, spritesheet:createjs.SpriteSheet) {\r\n        super(game, spritesheet);\r\n        this._isOnMainPage = false;\r\n\r\n        this._resetAttentionSpan();\r\n    }\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public setMainPage(isOnMainPage) {\r\n        this._isOnMainPage = isOnMainPage;\r\n        //randomly place on the page\r\n        this.X = Math.floor(Math.random() * (576 - this.Sprite.getBounds().width));\r\n        this.Y = Math.floor(Math.random() * (1024 - this.Sprite.getBounds().height));\r\n        // this.X = Math.floor(Math.random() * (window.innerWidth - this.Sprite.getBounds().width));\r\n        // this.Y = Math.floor(Math.random() * (window.innerHeight - this.Sprite.getBounds().height));\r\n\r\n        //set reg to center\r\n        this.Sprite.regX = this.Sprite.getBounds().width / 2;\r\n    }\r\n\r\n    private _resetAttentionSpan() {\r\n        this._attnSpanDuration = Math.random() * 100 + 100;\r\n        this._desiredX = Math.floor(Math.random() * (576 - this.Sprite.getBounds().width));\r\n        this._desiredY = Math.floor(Math.random() * (1024 - this.Sprite.getBounds().height));\r\n        // this._desiredX = Math.floor(Math.random() * (window.innerWidth - this.Sprite.getBounds().width));\r\n        // this._desiredY = Math.floor(Math.random() * (window.innerHeight - this.Sprite.getBounds().height));\r\n\r\n        //do a flip?\r\n        if(this.DirectionX > 0 && this._desiredX < this.X)  this.DirectionX *= -1;\r\n        if(this.DirectionX < 0 && this._desiredX > this.X)  this.DirectionX *= -1;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /**Extend update for main menu logic. */\r\n    public update(gameTime:number) {\r\n\r\n        //listen for main page logic\r\n        if(this._isOnMainPage) {\r\n            //move to random y pos every once in a while\r\n            if(this._attnSpanDuration <= 0) this._resetAttentionSpan();\r\n            else this._attnSpanDuration--;\r\n\r\n            //float toward X\r\n            if(Math.abs(this.X - this._desiredX) > 60) {\r\n                const isNeg = this.X > this._desiredX;\r\n                this.X += (isNeg) ? -this.Speed : this.Speed;\r\n            }\r\n            //float toward y\r\n            if(Math.abs(this.Y - this._desiredY) > 30) {\r\n                const isNeg = this.Y > this._desiredY;\r\n                this.Y += (isNeg) ? -this.Speed : this.Speed;\r\n            }\r\n        }\r\n        else super.update(gameTime);\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n\r\n\r\n\r\n\r\n}","import { Game } from \"./Game\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    const game = new Game(document.getElementById(\"game-canvas\") as HTMLCanvasElement);\r\n});","import { Screen } from \"../screens/Screen\";\r\n\r\nexport interface WorldsData {\r\n    worlds:LevelData[];\r\n}\r\n\r\nexport interface LevelData {\r\n    name:string;\r\n    tutorials?:string[];\r\n    background?:string;\r\n    music?:string;\r\n    data:any[];\r\n    duration?:number;\r\n    showScore?:boolean;\r\n    showRemainingFish?:boolean;\r\n    special?:boolean;\r\n    unlocks?:string; // name of unlock fish\r\n}\r\n\r\nexport class DataManager {\r\n    private static _worldsData:WorldsData;\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Loads in the worlds data! */\r\n    public static loadWorldsData(fileLocation:string) {\r\n        return new Promise<WorldsData>(async(res, rej) => {\r\n            await fetch(fileLocation)\r\n                .then(blob => blob.json())\r\n                .then(json => {\r\n                    this._worldsData = json;\r\n                    res(this._worldsData);\r\n                })\r\n                .catch(err => {\r\n                    rej(\"Could not load world data! \" + err);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**Returns the level data received by the given index. */\r\n    public static getLevelDataByIndex(index:number) {\r\n        //flatten level data, and get data\r\n        let flatten = [].concat.apply([], DataManager._worldsData.worlds);\r\n        if(index < flatten.length)\r\n            return flatten[index];\r\n        return null;\r\n    }\r\n\r\n    /**Inverse of getLevelDataByIndex.\r\n     * @see getLevelDataByIndex . */\r\n    public static getLevelIndexByData(levelData:LevelData) {\r\n        //flatten level data, and get data\r\n        let flatten = [].concat.apply([], DataManager._worldsData.worlds);\r\n        return flatten.indexOf(levelData);\r\n    }\r\n\r\n    /**Gets the next level data or returns null if there is no next level. */\r\n    public static getNextLevel(currentLevel:number | LevelData) {\r\n        let index = currentLevel as number;\r\n        if(currentLevel as LevelData != null) index = this.getLevelIndexByData(currentLevel as LevelData);\r\n\r\n        //get the next index\r\n        return this.getLevelDataByIndex(index + 1);\r\n    }\r\n\r\n    /**Gets the world and level index of the given level. */\r\n    public static getIndexData(levelData:LevelData) {\r\n        //test each world and look for us\r\n        for(let i = 0; i < DataManager._worldsData.worlds.length; i++) {\r\n            const world = DataManager._worldsData.worlds[i];\r\n            for(let n = 0; n < (world as any).length; n++) {\r\n                if(world[n] == levelData) return { world:i, level:n };\r\n            }            \r\n        }\r\n\r\n        return { world:-1, level:-1 };\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get WorldsData():WorldsData { return DataManager._worldsData; }\r\n    public static get FlatWorldData() { return [].concat.apply([], DataManager._worldsData.worlds); }\r\n}","export class LoadManager {\r\n    public static get ASSETS_LOADED():string { return \"onAssetsLoaded\"; }\r\n    public static get ASSETS_FAILED():string { return \"onAssetsFailed\"; }\r\n    public static get ASSETS_UPDATED():string { return \"onAssetsUpdated\"; }\r\n\r\n    public static Spritesheets:{ [key:string]:createjs.SpriteSheet } = {};\r\n    public static Images:{ [key:string]:createjs.Bitmap } = {};\r\n    public static Sounds:{ [key:string]:string } = {};\r\n\r\n    private static _stage:createjs.StageGL;\r\n    private static _preloadManager:createjs.LoadQueue;\r\n    private static _sheetsTotal:number = 0;\r\n    private static _sheetsLoaded:number = 0;\r\n\r\n    private static _percentage:number = 0;\r\n    private static _totalAssetsLoaded:number = 0;\r\n    private static _totalAssets:number = 0;\r\n\r\n    private static AssetsLoadedEvent:any = new (createjs as any).Event(LoadManager.ASSETS_LOADED, false, true);\r\n    private static AssetsFailedEvent:any = new (createjs as any).Event(LoadManager.ASSETS_FAILED, false, true);\r\n    private static AssetsUpdatedEvent:any = new (createjs as any).Event(LoadManager.ASSETS_UPDATED, false, true);\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public static reset() {\r\n        LoadManager._sheetsTotal = 0;\r\n        LoadManager._sheetsLoaded = 0;\r\n\r\n        LoadManager._percentage = 0;\r\n        LoadManager._totalAssetsLoaded = 0;\r\n        LoadManager._totalAssets = 0;\r\n    }\r\n\r\n    public static loadAssets(src:string, stage:createjs.StageGL) {\r\n        LoadManager.reset();\r\n        LoadManager._stage = stage;\r\n\r\n        return new Promise(async(res, rej) => {\r\n            LoadManager._preloadManager = new createjs.LoadQueue();\r\n\r\n            //setup sound controllers\r\n            createjs.Sound.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin, createjs.FlashAudioPlugin]);\r\n            createjs.Sound.alternateExtensions = [\"mp3\",\"wav\"];\r\n            LoadManager._preloadManager.installPlugin(createjs.Sound);\r\n\r\n            //setup listeners\r\n            (LoadManager._preloadManager as any).on(\"fileload\", LoadManager._onLoaded, LoadManager);\r\n            (LoadManager._preloadManager as any).on(\"complete\", LoadManager._onComplete, LoadManager);\r\n            (LoadManager._preloadManager as any).on(\"error\", LoadManager._onError, LoadManager);\r\n\r\n            //get the manifest\r\n            fetch(src)\r\n                .then(blob => blob.json())\r\n                .then(data => {\r\n                    //load the manifest\r\n                    LoadManager._preloadManager.setMaxConnections(1);\r\n                    LoadManager._preloadManager.loadManifest(data);\r\n\r\n                    (LoadManager._stage as any).addEventListener(LoadManager.ASSETS_LOADED, () => {\r\n                        res();\r\n                    });\r\n                })\r\n                .catch(() => {\r\n                    LoadManager.emitErrorEvent();\r\n                    rej(\"Could not load assets!\");\r\n                });\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    public static emitLoadedEvent() {\r\n        if(LoadManager._stage != null) (LoadManager._stage as any).dispatchEvent(LoadManager.AssetsLoadedEvent);\r\n    }\r\n    public static emitErrorEvent() {\r\n        if(LoadManager._stage != null) (LoadManager._stage as any).dispatchEvent(LoadManager.AssetsFailedEvent);\r\n    }\r\n    public static emitUpdatedEvent() {\r\n        LoadManager._percentage = parseFloat((LoadManager._preloadManager.getItems(true).length / LoadManager._preloadManager.getItems(false).length).toFixed(2));\r\n        if(LoadManager._stage != null) (LoadManager._stage as any).dispatchEvent(LoadManager.AssetsUpdatedEvent);\r\n    }\r\n\r\n\r\n    private static _loadedSheet(name:string, sheet:createjs.SpriteSheet) {\r\n        LoadManager.Spritesheets[name] = sheet;\r\n\r\n        LoadManager._sheetsLoaded++;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    private static _onLoaded(e) {\r\n\r\n        switch(e.item.type) {\r\n            case (createjs as any).Types.JAVASCRIPT: {\r\n                //load the spritesheet\r\n                LoadManager._sheetsTotal++;\r\n                \r\n                const sheet = (window[e.item.id] as any)._SpriteSheet;\r\n\r\n                // listen for spritesheet to load\r\n                if(!sheet.complete) {\r\n                    sheet.on(\"complete\", (ev:any) => {\r\n                        LoadManager._loadedSheet(e.item.id, sheet);\r\n                        ev.remove();\r\n                    })\r\n                }\r\n                else LoadManager._loadedSheet(e.item.id, sheet);\r\n                break\r\n            }\r\n            case (createjs as any).Types.IMAGE: {\r\n                //build the bitmap\r\n                LoadManager.Images[e.item.id] = new createjs.Bitmap(e.item.src);\r\n            }\r\n            case (createjs as any).Types.SOUND: {\r\n                //build the sound\r\n                LoadManager.Sounds[e.item.id] = e.item.src;\r\n            }\r\n        }\r\n\r\n\r\n\r\n        //update event\r\n        LoadManager.emitUpdatedEvent();\r\n    }\r\n\r\n    private static _onComplete(e) {\r\n        //remove all preLoadManager events\r\n        (LoadManager._preloadManager as any).removeAllEventListeners();\r\n        \r\n        //make sure all spritesheets are loaded\r\n        if(LoadManager._sheetsLoaded < LoadManager._sheetsTotal) {\r\n            const loadInterval = setInterval((ev:any) => {\r\n                //see if they are loaded\r\n                if(LoadManager._sheetsLoaded >= LoadManager._sheetsTotal) {\r\n                    e.remove();\r\n                    // window.clearInterval(loadInterval);\r\n                    LoadManager.emitLoadedEvent();\r\n                }\r\n            }, 100)\r\n        }\r\n        else LoadManager.emitLoadedEvent();\r\n    }\r\n\r\n    private static _onError(e) {\r\n        LoadManager.emitErrorEvent();\r\n    }\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get Percentage():number { return LoadManager._percentage; }\r\n    \r\n\r\n\r\n\r\n}","import { WorldsData, LevelData } from \"./DataManager\";\r\nimport { Logging } from \"../Functions\";\r\n\r\nexport interface IProgressLevel {\r\n    unlocked: boolean;\r\n    completed: boolean;\r\n}\r\n\r\nexport interface IProgressSpecial {\r\n    collected: boolean;\r\n    unlocks: string;\r\n}\r\n\r\n/**Handles progress made while playing the game. */\r\nexport class ProgressManager {\r\n\r\n    private static _worldsData:WorldsData;\r\n    private static _levelsProgress:IProgressLevel[];\r\n    private static _specialsProgress:IProgressSpecial[];\r\n    \r\n    /*--------------- METHODS ------------------------*/\r\n    /**Loads in the worlds data so it can parse the progress data. */\r\n    public static loadWorldsData(worldsData:WorldsData) {\r\n        ProgressManager._worldsData = worldsData;\r\n\r\n        ProgressManager._levelsProgress = worldsData.worlds.map(world => {\r\n            return [].concat.apply([], world as any)\r\n                .map(level => {\r\n                    return { unlocked: false, completed: false };\r\n                });\r\n        });\r\n        ProgressManager._specialsProgress = worldsData.worlds.map(world => {\r\n            return [].concat.apply([], world as any)\r\n                .map(level => {\r\n                    if(level.special) return { collected: false, unlocks:level.unlocks };\r\n                    return null;\r\n                });\r\n        });\r\n\r\n        //unlock level 1\r\n        ProgressManager._levelsProgress[0][0].unlocked = true;\r\n\r\n        //read cookie data\r\n        ProgressManager._readCookieData();\r\n\r\n        //for TESTING\r\n        // ProgressManager.unlockAll();\r\n    }\r\n\r\n    /**Mark level as complete. Also saves data. */\r\n    public static completeLevel(worldIndex:number, levelIndex:number) {\r\n        //set to complete!\r\n        const level = ProgressManager._levelsProgress[worldIndex][levelIndex];\r\n        if(level == null) return;\r\n        level.completed = true;\r\n\r\n        //if there is a next level, unlock it\r\n        //test for next in this world\r\n        const nextLevel = ProgressManager._levelsProgress[worldIndex][levelIndex+1];\r\n        if(nextLevel != null) {\r\n            nextLevel.unlocked = true;\r\n        }\r\n        else {\r\n            const nextWorld = ProgressManager._levelsProgress[worldIndex+1][0];\r\n            if(nextWorld != null) nextWorld.unlocked = true;\r\n        }\r\n\r\n        //save cookie data\r\n        ProgressManager.saveCookieData();\r\n    }\r\n\r\n    /**Well look at you, you dirty little cheater. :) */\r\n    public static unlockAll() {\r\n\r\n        Logging.message(\"You're a dirty little cheater!\");\r\n\r\n        ProgressManager._levelsProgress = ProgressManager._worldsData.worlds.map(world => {\r\n            return [].concat.apply([], world as any)\r\n                .map(level => {\r\n                    return { unlocked: true, completed: false };\r\n                });\r\n        });\r\n        ProgressManager._specialsProgress = ProgressManager._worldsData.worlds.map(world => {\r\n            return [].concat.apply([], world as any)\r\n                .map(level => {\r\n                    if(level.special) return { collected: true, unlocks:level.unlocks };\r\n                    return null;\r\n                });\r\n        });\r\n\r\n    }\r\n\r\n    /**Mark special as collected.  Also saves data. */\r\n    public static collectSpecial(worldIndex:number, levelIndex:number) {\r\n        //set to collected!\r\n        const level = ProgressManager._specialsProgress[worldIndex][levelIndex];\r\n        if(level == null) return;\r\n        level.collected = true;\r\n\r\n        //save cookie data\r\n        ProgressManager.saveCookieData();\r\n    }\r\n\r\n    /**Saves the progress data to a cookie or two. */\r\n    public static saveCookieData() {\r\n\r\n        document.cookie = `progData=${JSON.stringify(ProgressManager.ProgressData)};path=/`;\r\n    }\r\n\r\n    /**Reads cookie data and fills in progress data. */\r\n    private static _readCookieData() {\r\n        //look for cookie\r\n        const cookie = ProgressManager._getCookie(\"progData\");\r\n        if(cookie != null && cookie != '') {\r\n            //read the cookie\r\n            const data = JSON.parse(cookie);\r\n            ProgressManager._levelsProgress = data.levels;\r\n            ProgressManager._specialsProgress = data.specials;\r\n        }\r\n    }\r\n\r\n\r\n    /*https://www.w3schools.com/js/js_cookies.asp*/\r\n    private static _getCookie(cname) {\r\n        var name = cname + \"=\";\r\n        var decodedCookie = decodeURIComponent(document.cookie);\r\n        var ca = decodedCookie.split(';');\r\n        for(var i = 0; i <ca.length; i++) {\r\n            var c = ca[i];\r\n            while (c.charAt(0) == ' ') {\r\n            c = c.substring(1);\r\n            }\r\n            if (c.indexOf(name) == 0) {\r\n            return c.substring(name.length, c.length);\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get ProgressData() {\r\n        return {\r\n            levels : ProgressManager._levelsProgress,\r\n            specials : ProgressManager._specialsProgress\r\n        };\r\n    }\r\n}","import { Screen } from \"../screens/Screen\";\r\n\r\nexport class ScreenManager {\r\n    private static _screensLookup:{ [key:string]:Screen } = { };\r\n    private static _currentScreen:Screen = null;\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Registers a screen into the Screen Manager.  Uses a key to associate it. */\r\n    public static registerScreen(key:string, screen:Screen):void {\r\n        //if we don't have this screen, add it\r\n        if(ScreenManager._screensLookup[key] == null)\r\n            ScreenManager._screensLookup[key] = screen;\r\n    }\r\n\r\n    /**Unregisters a screen from the Screen Manager. */\r\n    public static unregisterScreen(key:string):boolean {\r\n        if(ScreenManager._screensLookup[key] == null) return false;\r\n\r\n        ScreenManager._screensLookup[key] = null;\r\n        delete ScreenManager._screensLookup[key];\r\n        return true;\r\n    }\r\n\r\n    /**Sets the current screen.  Can be done with the screen itself or an associative key. */\r\n    public static setCurrentScreen(screen:string | Screen, stage:createjs.StageGL):Promise<void> {\r\n        let tempScreen = null;\r\n        if(screen instanceof Screen) tempScreen = screen;\r\n        else tempScreen = ScreenManager._screensLookup[screen];\r\n\r\n        //if we did not find a screen, do not follow through\r\n        if(tempScreen == null) return Promise.resolve();\r\n\r\n        let promises = [];\r\n        //if we have a previous screen, wait for it to fade out\r\n        if(ScreenManager._currentScreen != null)\r\n        promises.push(\r\n            new Promise(async(res) => {\r\n                //fade out\r\n                createjs.Tween\r\n                    .get(ScreenManager._currentScreen.Container)\r\n                    .to({ alpha:0 }, 500, createjs.Ease.linear)\r\n                    .call(() => {\r\n                        ScreenManager._currentScreen.destroy();\r\n                        ScreenManager._currentScreen.disable();\r\n                        res();\r\n                    });\r\n            })\r\n        );\r\n\r\n\r\n        //wait for certain actions to finish\r\n        return new Promise(async(res) => {\r\n            //wait for promises to finish\r\n            await Promise.all(promises);\r\n\r\n            //now add in the new one\r\n            ScreenManager._currentScreen = tempScreen;\r\n            ScreenManager._currentScreen.create(stage);\r\n            ScreenManager._currentScreen.Container.alpha = 0;\r\n            ScreenManager._currentScreen.disable(); //disable until ready\r\n            //fade in\r\n            createjs.Tween\r\n                .get(ScreenManager._currentScreen.Container)\r\n                .to({ alpha:1 }, 1200, createjs.Ease.linear)\r\n                .call(() => {\r\n                    ScreenManager._currentScreen.enable();\r\n                    res();\r\n                });\r\n\r\n        });\r\n    }\r\n\r\n    public static getScreenByKey(key:string):Screen {\r\n        return ScreenManager._screensLookup[key];\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get AllScreens() { return ScreenManager._screensLookup; }\r\n    public static get CurrentScreen() { return ScreenManager._currentScreen; }\r\n}","export class SoundManager {\r\n    private static _ambience:{ [key:string]:createjs.AbstractSoundInstance } = {};\r\n    private static _sfx:createjs.AbstractSoundInstance[] = [];\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Plays an ambience track. */\r\n    public static playAmbience(key:string, src:string, loop:boolean=true) {\r\n        //make sure this key is not in use\r\n        if(SoundManager._ambience[key] != null) {\r\n            SoundManager._ambience[key].stop();\r\n            console.warn(\"This ambience key is already in use! Overwriting!\");\r\n        }\r\n\r\n        //add the ambience as a sound js object\r\n        const sound = createjs.Sound.play(src, { loop:(loop) ? -1 : 1} );\r\n        SoundManager._ambience[key] = sound;\r\n        sound.position = 0;\r\n        return sound;\r\n    }\r\n    /**Plays an ambience track with fade in. */\r\n    public static playAmbienceWithFadeIn(key:string, src:string, loop:boolean=true, prefVolume:number=1, duration:number=100, ) {\r\n        const sound = SoundManager.playAmbience(key, src, loop);\r\n\r\n        //start fade in \r\n        if(sound != null) {\r\n            SoundManager.fadeInAmbience(key, prefVolume, duration);\r\n        }\r\n\r\n    }\r\n    /**Removes an ambience track. */\r\n    public static removeAmbience(key:string) {\r\n        //look for ambience\r\n        let sound = SoundManager._ambience[key];\r\n        if(sound == null) {\r\n            console.warn(\"Could not find ambience with key of \" + key);\r\n            return;\r\n        }\r\n\r\n        sound.stop();\r\n        sound = null;\r\n        //splice it out\r\n        SoundManager._ambience[key] = null;\r\n    }\r\n\r\n    /**Plays a sound effect. */\r\n    public static playSFX(src:string) {\r\n        const sound = createjs.Sound.play(src);\r\n        SoundManager._sfx.push(sound);\r\n\r\n        //listen for the sound to finish -- remove from array\r\n        sound.on(\"complete\", () => {\r\n            SoundManager._sfx.splice(SoundManager._sfx.indexOf(sound), 1);\r\n        });\r\n    }\r\n\r\n    /**Stops all queued sounds. */\r\n    public static stopAllSound() {\r\n        //ambience\r\n        Object.keys(SoundManager._ambience).forEach(key => {\r\n            SoundManager._ambience[key].stop();\r\n        });\r\n\r\n        //sfx\r\n        SoundManager._sfx.forEach(sound => sound.stop());\r\n    }\r\n\r\n    /**Plays any queued sounds. */\r\n    public static playAllSound() {\r\n         //ambience\r\n        Object.keys(SoundManager._ambience).forEach(key => {\r\n            const sound = SoundManager._ambience[key];\r\n            if(sound != null)\r\n                sound.play();\r\n        });\r\n\r\n        //sfx\r\n        SoundManager._sfx.forEach(sound => {\r\n            if(sound != null)\r\n                sound.play()\r\n        });\r\n    }\r\n\r\n\r\n    /**Fades in an ambience track. */\r\n    public static fadeInAmbience(key:string, prefVolume:number=1, duration:number=100) {\r\n        //find the ambience to fade\r\n        let sound = SoundManager._ambience[key];\r\n        if(sound == null) return;\r\n\r\n        //fade volume from 0\r\n        sound.volume = 0;\r\n        sound.play();\r\n        const step = prefVolume / duration;\r\n\r\n        const fadeEvent = () => {\r\n            //clear the interval if done\r\n            if(sound.volume >= prefVolume) {\r\n                window.clearInterval(fadeInterval);\r\n                return;\r\n            }\r\n\r\n            sound.volume += step;\r\n        };\r\n        const fadeInterval = window.setInterval(fadeEvent, 10);\r\n        \r\n    }\r\n    /**Fades out an ambience track. */\r\n    public static fadeOutAmbience(key:string, duration:number=100, killOnFinish:boolean=true) {\r\n        //find the ambience to fade\r\n        let sound = SoundManager._ambience[key];\r\n        if(sound == null) return;\r\n        const prefVolume = sound.volume;\r\n\r\n        //fade volume to 0\r\n        const step = prefVolume / duration;\r\n\r\n        const fadeEvent = () => {\r\n            //clear the interval if done\r\n            if(sound.volume <= 0) {\r\n                window.clearInterval(fadeInterval);\r\n                //turn off sound\r\n                sound.stop();\r\n                //set volume back to preferred\r\n                sound.volume = prefVolume;\r\n                if(killOnFinish) sound = null;\r\n                return;\r\n            }\r\n\r\n            sound.volume -= step;\r\n        };\r\n        const fadeInterval = window.setInterval(fadeEvent, 10);\r\n        \r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Container } from \"../ui/display/Container\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { Game } from \"../Game\";\r\nimport { DataManager } from \"../managers/DataManager\";\r\nimport { IntermediaryScreen } from \"./IntermediaryScreen\";\r\nimport { Logging } from \"../Functions\";\r\n\r\nexport class EndScreen extends Screen {\r\n    private _game:Game;\r\n    private _buttonsContainer:Container;\r\n\r\n    private _completeSpr:createjs.DisplayObject;\r\n    private _failSpr:createjs.DisplayObject;\r\n\r\n    //flags\r\n    private _isFail:boolean;\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n\r\n        this._game = game;\r\n        this._isFail = false;\r\n\r\n        //layout stuff\r\n        const bg = new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"bg\");\r\n        this._container.addChild(bg);\r\n\r\n        this._buttonsContainer = new Container(Container.LAYOUT_OPTIONS.ColumnLeftBottom);\r\n        this._buttonsContainer.addMany({\r\n            btnTryAgain : new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"btnTryAgain\"),\r\n            btnNextLevel : new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"btnNextLevel\"),\r\n            btnMainMenu : new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"btnMainMenu\"),\r\n        });\r\n        this._container.addChild(this._buttonsContainer.Container);\r\n\r\n        //--conditional text\r\n        this._completeSpr = new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"complete\");\r\n        this._failSpr = new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"failure\");\r\n        this._completeSpr.x = this._game.StageWidth / 2 - (this._completeSpr.getBounds().width / 2);\r\n        this._completeSpr.y = 220;\r\n        this._failSpr.x = this._game.StageWidth / 2 - (this._failSpr.getBounds().width / 2);\r\n        this._failSpr.y = this._game.StageHeight * 0.45;\r\n        this._container.addChild(this._completeSpr);\r\n        this._container.addChild(this._failSpr);\r\n\r\n        \r\n        \r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    create(stage:createjs.StageGL):Screen {\r\n        \r\n        \r\n        // //for testing\r\n        // (this._container as any).on(\"click\", (e) => {\r\n        //     ScreenManager.setCurrentScreen(\"menu\", stage);\r\n        // }, this, true);       \r\n        \r\n\r\n        return super.create(stage);\r\n    }\r\n\r\n\r\n    enable() {\r\n        super.enable();\r\n\r\n        //try again\r\n        (this._buttonsContainer.Sprites[\"btnTryAgain\"] as any).on(\"click\", () => {\r\n            //restart this level\r\n            this._game.changeCurrentLevel(this._game.CurrentLevelData);\r\n            ScreenManager.setCurrentScreen(\"game\", this._game.Stage);\r\n        }, this, true);\r\n        //next level\r\n        (this._buttonsContainer.Sprites[\"btnNextLevel\"] as any).on(\"click\", () => {\r\n            //find the next level\r\n            const nextLevel = DataManager.getNextLevel(this._game.CurrentLevelData);\r\n            //if there is no next level, go back to menu\r\n            if(nextLevel == null) {\r\n                //go to main menu\r\n                ScreenManager.setCurrentScreen(\"menu\", this._game.Stage);\r\n                return;\r\n            }\r\n\r\n            Logging.error(\"WHERE AM I? \" + nextLevel.name);\r\n            this._game.changeCurrentLevel(nextLevel);\r\n            //go to intermediary screen\r\n            const intermediary = ScreenManager.getScreenByKey(\"intermediary\") as IntermediaryScreen;\r\n            new Promise(async(res) => {\r\n                intermediary.Text = nextLevel.name;\r\n                await ScreenManager.setCurrentScreen(intermediary, this._game.Stage);\r\n                intermediary.queueNextScreen(\"game\", 1000);\r\n\r\n                res();\r\n            });\r\n        }, this, true);\r\n        //main menu\r\n        (this._buttonsContainer.Sprites[\"btnMainMenu\"] as any).on(\"click\", () => {\r\n            //go to main menu\r\n            ScreenManager.setCurrentScreen(\"menu\", this._game.Stage);\r\n        }, this, true);\r\n    }\r\n\r\n    disable() {\r\n        //toggle fail/success\r\n        this._completeSpr.visible = !this._isFail;\r\n        this._failSpr.visible = this._isFail;\r\n\r\n        Object.keys(this._buttonsContainer.Sprites).forEach(key => this._buttonsContainer.Sprites[key].removeAllEventListeners());\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n}","import { TutorialCreator } from \"./TutorialCreator\";\r\nimport { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { ObjectPool } from \"../ObjectPool\";\r\nimport { Fish } from \"../entities/Fish\";\r\nimport { Persephone } from \"../entities/specials/Persephone\";\r\nimport { Puffer } from \"../entities/Puffer\";\r\nimport { Cat } from \"../entities/Cat\";\r\nimport { Game } from \"../Game\";\r\nimport { Container } from \"../ui/display/Container\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { Logging } from \"../Functions\";\r\nimport { LevelData, DataManager } from \"../managers/DataManager\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { GameScore } from \"../ui/partials/GameScore\";\r\nimport { ProgressManager } from \"../managers/ProgressManager\";\r\nimport { SoundManager } from \"../managers/SoundManager\";\r\n\r\nexport class GameScreen extends Screen {\r\n    private _game:Game;\r\n\r\n    //create containers\r\n    private _staticContainer:Container;\r\n    private _fishContainer:createjs.Container;\r\n    private _pufferContainer:createjs.Container;\r\n\r\n    private _winContainer:createjs.Container;\r\n    private _winBanner:createjs.Shape;\r\n    private _winText:createjs.BitmapText;\r\n\r\n    private _gameScore:GameScore;\r\n    private _tutorialCreator:TutorialCreator;\r\n\r\n    private _cat:Cat;\r\n    private _fishes:Fish[];\r\n    private _puffers:Puffer[];\r\n\r\n    private _remainingFish:number;\r\n\r\n    private _pauseLogic:Boolean;\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n        this._game = game;\r\n        this._fishes = [];\r\n        this._puffers = [];\r\n        this._remainingFish = -1;\r\n\r\n        //create object pool\r\n        ObjectPool.createPoolObject(new Cat(this._game, this), POOL.CAT)\r\n        for(let i = 0; i < 120; i++) {\r\n            ObjectPool.createPoolObject(new Fish(this._game), POOL.FISH);\r\n        }\r\n        for(let i = 0; i < 30; i++) {\r\n            ObjectPool.createPoolObject(new Puffer(this._game), POOL.PUFFERFISH)\r\n        }\r\n        ObjectPool.createPoolObject(new Persephone(this._game), POOL.PERSEPHONE);\r\n\r\n\r\n        //pool out static kitty\r\n        this._cat = (ObjectPool.checkout(POOL.CAT) as Cat);\r\n        this._cat.X = 290;\r\n        this._cat.Y = 70;\r\n\r\n        //create containers\r\n        this._staticContainer = new Container();\r\n        this._staticContainer.addMany({\r\n            bg : new createjs.Sprite(LoadManager.Spritesheets.BG_Spritesheet, \"bg1\")\r\n        });\r\n\r\n        this._fishContainer = new createjs.Container();\r\n        this._pufferContainer = new createjs.Container();\r\n\r\n        this._winContainer = new createjs.Container();\r\n\r\n        this._gameScore = new GameScore(this._game);\r\n        this._tutorialCreator = new TutorialCreator(this._game, this);\r\n\r\n        this._pauseLogic = false;\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n\r\n    /**Attempts to grab a fish.  Returns any fish that are touching the global position. */\r\n    public tryToGrabFishes(x:number, y:number):Fish[] {\r\n        let fishes = [];\r\n\r\n\r\n        const hitObjects = this._container.getObjectsUnderPoint(x, y, 0);\r\n        for(let i = 0; i < this._fishes.length; i++) {\r\n            const fish = this._fishes[i];\r\n            if(hitObjects.indexOf(fish.Sprite) != -1) {\r\n                fishes.push(fish);\r\n            }\r\n        }\r\n\r\n        return fishes;\r\n\r\n    }\r\n\r\n    /**Tests to see if we hit a puffer. */\r\n    public hasHitAPuffer(x:number, y:number):Boolean {\r\n\r\n        let hasHitPuffer = false;\r\n        const hitObjects = this._container.getObjectsUnderPoint(x, y, 0);\r\n        for(let i = 0; i < this._puffers.length; i++) {\r\n            if(hitObjects.indexOf(this._puffers[i].Sprite) != -1) {\r\n                this._puffers[i].puff();\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public collectFish(fish:Fish) {\r\n        //get fish\r\n        Logging.success(\"GOT FISH!\");\r\n\r\n        const killedFish = fish.destroy();\r\n\r\n        //decrement fish counter -- make sure we didn't make an error\r\n        if(killedFish != null) {\r\n            this._remainingFish--;\r\n            this._fishes.splice(this._fishes.indexOf(killedFish as Fish), 1);\r\n\r\n            //if all our fish are gone, end the game!\r\n            if(this._remainingFish <= 0) {\r\n                //win game!\r\n                Logging.success(\"GAME IS OVER!\");\r\n                //call win\r\n                this.win();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public win() {\r\n        //disable controls\r\n        this.disable();\r\n        //set the score\r\n        this._game.changeCurrentScore({\r\n            totalFish: this._fishes.length,\r\n            combos: 10,\r\n            time: 100\r\n        });\r\n        \r\n        //show win banner\r\n        createjs.Tween.get(this._winContainer)\r\n            .to({y:this._game.StageHeight / 2 - 25}, 600, createjs.Ease.elasticOut)\r\n            .wait(2000)\r\n            .call(() => {\r\n                //transition to end screen\r\n                ScreenManager.setCurrentScreen(\"end\", this._game.Stage);\r\n                SoundManager.fadeOutAmbience(\"ambience\");\r\n\r\n                //save this data\r\n                const levelIndices = DataManager.getIndexData(this._game.CurrentLevelData);\r\n                //mark level as complete\r\n                ProgressManager.completeLevel(levelIndices.world, levelIndices.level);\r\n                //try to mark special as collected\r\n                ProgressManager.collectSpecial(levelIndices.world, levelIndices.level);\r\n\r\n                //reset game data\r\n                this.reset();\r\n            });\r\n    }\r\n\r\n    public pauseGameLogic() {\r\n        this._pauseLogic = true;\r\n    }\r\n\r\n    public unpauseGameLogic() {\r\n        this._pauseLogic = false;\r\n    }\r\n\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n        super.create(stage);\r\n        //add stuff\r\n        this._staticContainer.checkoutSprites();\r\n        this._staticContainer.Sprites.bg.y = 0;\r\n        this._container.addChild(this._staticContainer.Container);\r\n\r\n        this._container.addChild(this._fishContainer);\r\n        this._container.addChild(this._pufferContainer);\r\n\r\n        //add conditional text\r\n        this._winBanner = new createjs.Shape();\r\n        this._winBanner.graphics.beginFill(\"black\");\r\n        this._winBanner.graphics.drawRect(0, 0, this._game.StageWidth, 50);\r\n        this._winBanner.cache(0, 0, this._game.StageWidth, 50);\r\n        this._winContainer.addChild(this._winBanner);\r\n        this._winText = Sprites.generateBitmapText(\"Win!\", LoadManager.Spritesheets.TypographyWhite);\r\n        this._winContainer.addChild(this._winText);\r\n        this._winText.x = (this._game.StageWidth / 2) - (this._winText.getBounds().width / 2);\r\n\r\n        this._container.addChild(this._winContainer);\r\n        this._winContainer. y = this._game.StageHeight + 50;\r\n        this._winContainer.mouseEnabled = false;\r\n\r\n        \r\n        this._cat.create(this._container);\r\n\r\n\r\n        //testing\r\n        // const puffer = new createjs.Sprite(LoadManager.Spritesheets.Puffer_Spritesheet, \"pufferIdle\");\r\n        // puffer.x = 100;\r\n        // puffer.y = 200;\r\n        // (puffer as any).on(\"click\", () => {\r\n        //     puffer.gotoAndPlay(\"pufferAngry\")\r\n        // })\r\n        // this._container.addChild(puffer);\r\n\r\n\r\n        //add level data if it exists\r\n        // this.reset();\r\n        // this.destroy();\r\n        if(this._game.CurrentLevelData != null) {\r\n            //load in critters\r\n            for(let i = 0; i < this._game.CurrentLevelData.data.length; i++) {\r\n                const data = this._game.CurrentLevelData.data[i];\r\n                switch(data.id) {\r\n                    case POOL.PERSEPHONE:\r\n                    case POOL.FISH:\r\n                        const fish = (ObjectPool.checkout(data.id) as Fish);\r\n                        fish.create(this._fishContainer);\r\n                        if(data.speed != null) fish.Speed = data.speed; //set variables\r\n                        if(data.x != null) fish.X = data.x;\r\n                        if(data.y != null) fish.Y = data.y;\r\n                        if(data.flip != null && data.flip) fish.DirectionX = -1;\r\n                        fish.setNaturalY();\r\n                        this._fishes.push(fish);\r\n                        break;\r\n                    case POOL.PUFFERFISH:\r\n                        const puffer = (ObjectPool.checkout(POOL.PUFFERFISH) as Puffer);\r\n                        puffer.create(this._pufferContainer);\r\n                        if(data.speed != null) puffer.Speed = data.speed; //set variables\r\n                        if(data.x != null) puffer.X = data.x;\r\n                        if(data.y != null) puffer.Y = data.y;\r\n                        if(data.flip != null && data.flip) puffer.DirectionX = -1;\r\n                        this._puffers.push(puffer);\r\n                }      \r\n            }\r\n\r\n            //set fish total\r\n            this._remainingFish = this._fishes.length;\r\n        }\r\n        //get the level tutorials\r\n        if(this._game.CurrentLevelData.tutorials != null) {\r\n            this._tutorialCreator.queueTutorials(this._game.CurrentLevelData.tutorials);\r\n        }\r\n        //get the level background\r\n        if(this._game.CurrentLevelData.background != null) {\r\n            (this._staticContainer.Sprites[\"bg\"] as createjs.Sprite).gotoAndStop(this._game.CurrentLevelData.background);\r\n        }\r\n        else {\r\n            (this._staticContainer.Sprites[\"bg\"] as createjs.Sprite).gotoAndStop(\"bg1\");\r\n        }\r\n\r\n        //get the level music!\r\n        let musicKey = \"Music2\";\r\n        if(this._game.CurrentLevelData.music) musicKey = this._game.CurrentLevelData.music;\r\n        SoundManager.playAmbienceWithFadeIn(\"ambience\", LoadManager.Sounds[musicKey], true, 0.4, 400);\r\n\r\n\r\n        //add the score\r\n        // this._gameScore.Container.y = this._game.StageHeight - 40;\r\n        // this._container.addChild(this._gameScore.Container);\r\n\r\n\r\n        //update the game HUD for this round\r\n        const levelData = this._game.CurrentLevelData;\r\n        const showScore = (levelData.showScore != null && !levelData.showScore) ? false : true;\r\n        const showTimer = (levelData.duration != null);\r\n        const showFishRemain = (levelData.showRemainingFish != null && !levelData.showRemainingFish) ? false : true;\r\n        this._gameScore.startHUD(showScore, showFishRemain, showTimer);\r\n\r\n        return null;\r\n    }\r\n\r\n    public destroy() {\r\n\r\n        this._cat.destroy();\r\n        this._fishes.forEach(f => {\r\n            f.destroy();\r\n        });\r\n        this._puffers.forEach(f => {\r\n            f.destroy();\r\n        });\r\n\r\n        ObjectPool.releaseAllObjects();\r\n\r\n        this.reset();\r\n\r\n        return super.destroy();\r\n    }\r\n\r\n    public update(gameTime:number) {\r\n        //if our logic is paused, do not do game loop\r\n        if(this._pauseLogic) return;\r\n\r\n        const normalizedTime = Math.min(1, gameTime) + 0.5;\r\n\r\n        //update entities\r\n        this._fishes.forEach(fish => {\r\n            fish.update(normalizedTime);\r\n        });\r\n        this._puffers.forEach(puffer => {\r\n            puffer.update(normalizedTime);\r\n        });\r\n\r\n        this._cat.update(normalizedTime);\r\n\r\n        //update the score\r\n        this._gameScore.update(gameTime);\r\n\r\n        super.update(gameTime);\r\n    }\r\n\r\n    public enable() {\r\n        (this._container as any).on(\"click\", this._cat.grab, this._cat);\r\n    }\r\n\r\n    public disable() {\r\n        (this._container as any).removeAllEventListeners();\r\n    }\r\n\r\n    public reset() {\r\n        this._cat.X = 290;\r\n        this._fishes.forEach(f => { ObjectPool.return(f); });\r\n        this._puffers.forEach(f => { ObjectPool.return(f); });\r\n\r\n        ObjectPool.releaseAllObjects();\r\n\r\n        this._fishContainer.removeAllChildren();\r\n        this._pufferContainer.removeAllChildren();\r\n\r\n        this._fishes = [];\r\n        this._puffers = [];\r\n\r\n\r\n        super.reset();\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Game() { return this._game; }\r\n    public get Cat() { return this._cat; }\r\n    public get Fishes() { return this._fishes; }\r\n    public get IsGamelogicPaused() { return this._pauseLogic; }\r\n}\r\n\r\n\r\n\r\nexport class POOL { \r\n    static get CAT() { return \"cat\"; }\r\n    static get FISH() { return \"fish\"; }\r\n    static get PUFFERFISH() { return \"puffer\"; }\r\n    static get PERSEPHONE() { return \"persephone\"; }\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { Game } from \"../Game\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\n\r\nexport class IntermediaryScreen extends Screen {\r\n    private _game:Game;\r\n    private _bg:createjs.Shape;\r\n    private _textContainer:createjs.Container;\r\n    private _txtSprite:createjs.DisplayObject;\r\n\r\n    private _text:string;\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n        this._game = game;\r\n\r\n        this._text = \"\";\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Chooses the screen to load in after the intermediary. */\r\n    public queueNextScreen(screenKey:string, duration:number=3000) {\r\n        const evt = window.setTimeout(() => {\r\n            //load the screen\r\n            ScreenManager.setCurrentScreen(screenKey, this._game.Stage);\r\n            //clear the timeout\r\n            window.clearTimeout(evt);\r\n        }, duration);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n        //add stuff\r\n        this._bg = new createjs.Shape();\r\n        this._bg.graphics.beginFill(\"#191919\");\r\n        this._bg.graphics.drawRect(0, 0, this._game.StageWidth, this._game.StageHeight);\r\n        this._bg.graphics.endFill();\r\n        this._bg.cache(0, 0, this._game.StageWidth, this._game.StageHeight);\r\n        this._container.addChild(this._bg);\r\n\r\n        this._textContainer = new createjs.Container();\r\n        this._container.addChild(this._textContainer);\r\n\r\n        if(this._text != \"\") {\r\n            //create the text\r\n            this._txtSprite = Sprites.generateBitmapText(this._text, LoadManager.Spritesheets.TypographyWhite);\r\n            (this._txtSprite as any).scale = 0.6;\r\n            //load into container\r\n            this._textContainer.addChild(this._txtSprite);\r\n    \r\n            //put container at bottom\r\n            this._textContainer.x = (this._game.StageWidth / 2) - ((this._txtSprite.getBounds().width / 2) * 0.6);\r\n            this._textContainer.y = (this._game.StageHeight / 2) - (this._txtSprite.getBounds().height / 2);\r\n        }\r\n\r\n        return super.create(stage);\r\n    }\r\n\r\n    public destroy() {\r\n        this._textContainer.removeAllChildren();\r\n\r\n        return super.destroy();\r\n    }\r\n\r\n    public enable() {\r\n        super.enable();\r\n    }\r\n\r\n    public disable() {\r\n        super.disable();\r\n\r\n        this.reset();\r\n    }\r\n\r\n    public reset() {\r\n        this.Text = \"\";\r\n        super.reset();\r\n    }\r\n\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public set Text(value:string) {\r\n        this._text = value;\r\n    }\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { Layout } from \"../ui/display/Layout\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { Container } from \"../ui/display/Container\";\r\nimport { Logging } from \"../Functions\";\r\nimport { Game } from \"../Game\";\r\nimport { LevelSelectDisplay } from \"../ui/custom/LevelSelectDisplay\";\r\nimport { IntermediaryScreen } from \"./IntermediaryScreen\";\r\nimport { GameScreen, POOL } from \"./GameScreen\";\r\nimport { DataManager } from \"../managers/DataManager\";\r\nimport { Special } from \"../entities/specials/Special\";\r\nimport { Persephone } from \"../entities/specials/Persephone\";\r\nimport { ProgressManager } from \"../managers/ProgressManager\";\r\nimport { SoundManager } from \"../managers/SoundManager\";\r\n\r\nexport class MenuScreen extends Screen {\r\n    private _game:Game;\r\n    //containers\r\n    private _swipeContainer:createjs.Container;\r\n    private _staticContainer:Container;\r\n    // private _mainContainer:Container;\r\n    private _mainContainer:createjs.Container;\r\n    private _clearedContainer:Container;\r\n    private _optionsContainer:Container;\r\n    private _collectedContainer:createjs.Container;\r\n\r\n    private _mainButtonsContainer:Container;\r\n    private _logo:createjs.DisplayObject;\r\n    private _fancyFish:createjs.Sprite;\r\n\r\n    //custom containers\r\n    private _levelSelectDisplay:LevelSelectDisplay;\r\n\r\n    //properties\r\n    private _swipeSpeed:number;\r\n    private _currentScreen:string;\r\n    private _initialSwipePos:{x:number, y:number};\r\n    private _dragTimer:any;\r\n\r\n    //collectibles\r\n    private _collectibleFish:Special[];\r\n\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n\r\n        this._game = game;\r\n\r\n        //setup swipe container -- holds all moving sprites\r\n        this._swipeContainer = new createjs.Container();\r\n\r\n        //setup static container\r\n        this._staticContainer = new Container();\r\n        const bg = new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"bg\");\r\n\r\n        this._staticContainer.addMany({\r\n            bg\r\n        });\r\n\r\n        //setup main container\r\n        this._mainContainer = new createjs.Container();\r\n        this._logo = new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"logo\");\r\n        this._logo.x = this._game.StageWidth - this._logo.getBounds().width - 20;\r\n        this._logo.y = this._game.StageHeight * 0.4;\r\n        this._mainContainer.addChild(this._logo);\r\n        this._mainButtonsContainer = new Container(Container.LAYOUT_OPTIONS.ColumnLeftBottom);\r\n        this._mainButtonsContainer.addMany({\r\n            btnNewGame : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnNewGame\"),\r\n            btnOptions : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnOptions\"),\r\n            btnLevelSelect : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnLevelSelect\"),\r\n            btnExit : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnExit\"),\r\n        });\r\n        this._mainContainer.addChild(this._mainButtonsContainer.Container);\r\n        this._fancyFish = new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"fancyFish\");\r\n        this._fancyFish.x = this._game.StageWidth - this._fancyFish.getBounds().width - 20;\r\n        this._fancyFish.y = this._game.StageHeight - this._fancyFish.getBounds().height - 20;\r\n        this._mainContainer.addChild(this._fancyFish);\r\n        this._fancyFish.visible = false;\r\n\r\n        //setup options container\r\n        this._optionsContainer = new Container();\r\n        this._optionsContainer.addMany({\r\n            txtOptions : Sprites.generateBitmapText(\"Options\", LoadManager.Spritesheets.Typography),\r\n            btnClearData : Sprites.Buttons.ClearData\r\n        });\r\n        this._optionsContainer.Container.x -= this._game.StageWidth;\r\n\r\n        //setup cleared container\r\n        this._clearedContainer = new Container();\r\n        this._clearedContainer.add(\"txtCleared\", Sprites.generateBitmapText(\"Data successfully cleared!\", LoadManager.Spritesheets.Typography));\r\n        this._clearedContainer.Container.x -= this._game.StageWidth;\r\n        this._clearedContainer.Container.y -= this._game.StageHeight;\r\n\r\n        this._levelSelectDisplay = new LevelSelectDisplay(game);\r\n        this._levelSelectDisplay.Container.x += this._game.StageWidth;\r\n\r\n        //setup collected container\r\n        this._collectedContainer = new createjs.Container;\r\n        this._collectedContainer.y += this._game.StageHeight;\r\n\r\n\r\n        this._collectibleFish = [];\r\n\r\n\r\n        //setup properties\r\n        this._swipeSpeed = 800;\r\n        this._currentScreen = \"main\";\r\n        this._initialSwipePos = { x:-1, y:-1 };        \r\n\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    private _onNewGame() {\r\n        // SoundManager.stopAllSound();\r\n        SoundManager.fadeOutAmbience(\"ambience\");\r\n        //play the sound\r\n        createjs.Sound.play(LoadManager.Sounds.BubblesFade);\r\n        Logging.message(\"Go to new game!\");\r\n        \r\n        const data = DataManager.getLevelDataByIndex(0);\r\n        this._game.changeCurrentLevel(data);\r\n        \r\n        const intermediary = ScreenManager.getScreenByKey(\"intermediary\") as IntermediaryScreen;\r\n        new Promise(async(res) => {\r\n            intermediary.Text = data.name;\r\n            await ScreenManager.setCurrentScreen(intermediary, this.Stage);\r\n            intermediary.queueNextScreen(\"game\");\r\n\r\n            res();\r\n        });\r\n    }\r\n    private _onOptions() {\r\n        //play the sound\r\n        SoundManager.playSFX(LoadManager.Sounds.BTNSelect);\r\n        //go to options!\r\n        Logging.message(\"Go to options!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:this._game.StageWidth}, this._swipeSpeed, createjs.Ease.circOut);\r\n        this._currentScreen = \"options\";\r\n    }\r\n    private _onLevelSelect() {\r\n        //play the sound\r\n        SoundManager.playSFX(LoadManager.Sounds.BTNSelect);\r\n        Logging.message(\"Go to level select!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:-this._game.StageWidth}, this._swipeSpeed, createjs.Ease.circOut);\r\n        this._currentScreen = \"levelSelect\";\r\n    }\r\n    private _onFish() {\r\n        //play the sound\r\n        SoundManager.playSFX(LoadManager.Sounds.BTNSelect);\r\n        Logging.message(\"Go to fish!\");\r\n        createjs.Tween.get(this._swipeContainer).to({y:-this._game.StageHeight}, this._swipeSpeed, createjs.Ease.circOut);\r\n        this._currentScreen = \"fish\";\r\n    }\r\n    private _onExit() {\r\n        //play the sound\r\n        SoundManager.playSFX(LoadManager.Sounds.BTNSelect);\r\n        Logging.message(\"Go to exit!\");\r\n    }\r\n\r\n    private _onMain() {\r\n        Logging.message(\"Go to main!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:0, y:0}, this._swipeSpeed, createjs.Ease.bounceOut);\r\n        this._currentScreen = \"main\";\r\n    }\r\n\r\n    private _onClearData() {\r\n        Logging.success(\"Cleared data!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:this._game.StageWidth, y:this._game.StageHeight}, this._swipeSpeed, createjs.Ease.cubicIn);\r\n        // this._currentScreen = \"cleared\"\r\n        let e = window.setTimeout(() => {\r\n            createjs.Tween.get(this._swipeContainer).to({x:this._game.StageWidth, y:0}, this._swipeSpeed, createjs.Ease.cubicInOut);\r\n            window.clearInterval(e);\r\n            this._currentScreen = \"options\";\r\n        }, 2000);\r\n    }\r\n\r\n    private _onDragStart(e) {\r\n\r\n        this._initialSwipePos = { x:e.stageX, y:e.stageY };\r\n\r\n        //reset drag timer if not null\r\n        if(this._dragTimer != null) window.clearTimeout(this._dragTimer);\r\n        this._dragTimer = setTimeout(() => {\r\n            this._initialSwipePos = { x:-1, y:-1 };\r\n            this._dragTimer = null;\r\n        }, 500);\r\n    }\r\n    private _onDragEnd(e) {\r\n        if(this._initialSwipePos.x != -1 || this._initialSwipePos.y != -1) {\r\n            //find the direction\r\n            if((this._initialSwipePos.x - e.stageX) > 20) {\r\n                if(this._currentScreen == \"options\")\r\n                    this._onMain();\r\n            }\r\n            else if((this._initialSwipePos.x - e.stageX) < -20) {\r\n                if(this._currentScreen == \"levelSelect\")\r\n                    this._onMain();\r\n            }\r\n            else if((this._initialSwipePos.y - e.stageY) < -20) {\r\n                if(this._currentScreen == \"fish\")\r\n                    this._onMain();\r\n            }\r\n        }\r\n    }\r\n\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n        //start music\r\n        SoundManager.playAmbienceWithFadeIn(\"ambience\", LoadManager.Sounds.Music1, true, 1, 400);\r\n\r\n        //add in the containers\r\n        this._staticContainer.Sprites.bg.y = 0;\r\n        this._container.addChild(this._staticContainer.Container);\r\n        this._container.addChild(this._swipeContainer);\r\n        this._swipeContainer.addChild(this._mainContainer);\r\n        this._swipeContainer.addChild(this._optionsContainer.Container);\r\n        this._swipeContainer.addChild(this._clearedContainer.Container);\r\n        this._swipeContainer.addChild(this._collectedContainer);\r\n\r\n        \r\n        this._swipeContainer.addChild(this._levelSelectDisplay.Container);\r\n\r\n        return super.create(stage);\r\n    }\r\n\r\n    public enable() {\r\n        super.enable();\r\n        //listen to events\r\n        (this._mainButtonsContainer.Sprites.btnNewGame as any).on(\"click\", this._onNewGame, this, true);\r\n        (this._mainButtonsContainer.Sprites.btnOptions as any).on(\"click\", this._onOptions, this);\r\n        (this._mainButtonsContainer.Sprites.btnLevelSelect as any).on(\"click\", this._onLevelSelect, this);\r\n        (this._mainButtonsContainer.Sprites.btnExit as any).on(\"click\", this._onExit, this);\r\n\r\n        (this._fancyFish as any).on(\"click\", this._onFish, this);\r\n\r\n        Sprites.listenToClearData();\r\n        (this._optionsContainer.Sprites.btnClearData as any).on(Sprites.CLEAR_DATA, this._onClearData, this);\r\n\r\n        //listen for swipes\r\n        (this._staticContainer.Sprites.bg as any).on(\"mousedown\", this._onDragStart, this);\r\n        (this._staticContainer.Sprites.bg as any).on(\"click\", this._onDragEnd, this);\r\n\r\n        this._levelSelectDisplay.enable();\r\n\r\n        //testing -- add fakey collectible fish\r\n        //get any collected fish CLASS names\r\n        const collFish = [].concat.apply([], ProgressManager.ProgressData.specials).filter(d => d != null && d.collected).map(d => d.unlocks);\r\n\r\n        \r\n        collFish.forEach(f => {\r\n            switch(f.toLowerCase()) {\r\n                case POOL.PERSEPHONE:\r\n                    this._collectibleFish.push(new Persephone(this._game));\r\n                    break;\r\n            }\r\n        });\r\n            \r\n\r\n        //add the fish to the container\r\n        this._collectibleFish.forEach(f => {\r\n            f.setMainPage(true);\r\n            f.create(this._collectedContainer);\r\n            f.Speed = Math.random() * 3 + 3;\r\n        });\r\n\r\n        //if we don't have any collectible fish, hide the fish button\r\n        if(collFish.length <= 0) {\r\n            this._fancyFish.visible = false;\r\n        }\r\n        else {\r\n            this._fancyFish.visible = true;\r\n            this._fancyFish.alpha = 0;\r\n\r\n            createjs.Tween\r\n            .get(this._fancyFish)\r\n            .to({ alpha:1 }, 500, createjs.Ease.circIn);\r\n        }\r\n\r\n\r\n\r\n        //rock the fish\r\n        createjs.Tween\r\n            // @ts-ignore\r\n            .get(this._fancyFish, { loop:true })\r\n            .to({ y:this._fancyFish.y-30 }, 3000, createjs.Ease.sineInOut)\r\n            .to({ y:this._fancyFish.y }, 3000, createjs.Ease.sineInOut);\r\n\r\n        //rock the logo\r\n        createjs.Tween\r\n            // @ts-ignore\r\n            .get(this._logo, { loop:true })\r\n            .wait(1200)\r\n            .to({ y:this._logo.y-15 }, 4500, createjs.Ease.sineInOut)\r\n            .to({ y:this._logo.y }, 4800, createjs.Ease.sineInOut);\r\n    }\r\n\r\n    public disable() {\r\n        super.disable();\r\n        //stop listen to events\r\n        (this._mainButtonsContainer.Sprites.btnNewGame as any).off(\"click\", this._onNewGame);\r\n        (this._mainButtonsContainer.Sprites.btnOptions as any).off(\"click\", this._onOptions);\r\n        (this._mainButtonsContainer.Sprites.btnLevelSelect as any).off(\"click\", this._onLevelSelect);\r\n        (this._mainButtonsContainer.Sprites.btnExit as any).off(\"click\", this._onExit);\r\n\r\n        this._fancyFish.removeAllEventListeners();\r\n\r\n        Sprites.stopListenToClearData();\r\n        (this._optionsContainer.Sprites.btnClearData as any).off(Sprites.CLEAR_DATA, this._onClearData);\r\n\r\n        //stop listen for swipes\r\n        (this._staticContainer.Sprites.bg as any).off(\"mousedown\", this._onDragStart);\r\n        (this._staticContainer.Sprites.bg as any).off(\"click\", this._onDragEnd);\r\n\r\n\r\n        this._mainButtonsContainer.Sprites.btnNewGame.removeAllEventListeners();\r\n        this._mainButtonsContainer.Sprites.btnOptions.removeAllEventListeners();\r\n        this._mainButtonsContainer.Sprites.btnLevelSelect.removeAllEventListeners();\r\n        this._mainButtonsContainer.Sprites.btnExit.removeAllEventListeners();\r\n        this._staticContainer.Sprites.bg.removeAllEventListeners();\r\n\r\n\r\n        this._levelSelectDisplay.disable();\r\n\r\n        this.reset();\r\n\r\n\r\n        createjs.Tween.removeAllTweens();\r\n    }\r\n\r\n    public reset() {\r\n        //reset the position of the swipe container\r\n        this._swipeContainer.x = 0;\r\n        this._swipeContainer.y = 0;\r\n\r\n        super.reset();\r\n    }\r\n\r\n    public update(gameTime:number) {\r\n        this._collectibleFish.forEach(f => f.update(gameTime));\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n}","import { IUpdateable, ICreateable, IEnableable } from \"../Interfaces\";\r\n\r\nexport class Screen implements ICreateable<Screen>, IUpdateable, IEnableable {\r\n    private _stage:createjs.StageGL;\r\n    protected _container:createjs.Container;\r\n\r\n    constructor() {\r\n        this._container = new createjs.Container();\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Updates the screen. */\r\n    public update(gameTime:number) {\r\n\r\n    }\r\n\r\n    /**Creates the screen and adds to the stage. */\r\n    public create(stage:createjs.StageGL):Screen {\r\n        this._stage = stage;\r\n        //add to the stage\r\n        this._stage.addChild(this._container);\r\n\r\n        \r\n        return this;\r\n    }\r\n\r\n    /**Destroys the screen and removes from the stage. */\r\n    public destroy():Screen {\r\n\r\n        //remove from the stage\r\n        this._stage.removeChild(this._container);\r\n\r\n        return this;\r\n    }\r\n\r\n    public enable() {\r\n\r\n    }\r\n\r\n    public disable() {\r\n        \r\n    }\r\n\r\n    public reset() {\r\n        \r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container():createjs.Container { return this._container; }\r\n    protected get Stage():createjs.StageGL { return this._stage; }\r\n\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Game } from \"../Game\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\n\r\nexport class SplashScreen extends Screen {\r\n    private _game:Game;\r\n    private _textContainer:createjs.Container;\r\n\r\n    private _textSpritesheet;\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n        this._game = game;\r\n\r\n\r\n        this._textSpritesheet = new createjs.SpriteSheet({images: [\"assets/spritesheets/typography_white.png\"], frames: [[0,329,27,44,0,0,0],[89,47,21,44,0,0,0],[63,47,23,44,0,0,0],[32,141,24,44,0,0,0],[89,94,21,44,0,0,0],[110,141,20,44,0,0,0],[34,94,26,44,0,0,0],[0,188,28,44,0,0,0],[152,282,14,44,0,0,0],[158,94,16,44,0,0,0],[59,141,24,44,0,0,0],[136,94,19,44,0,0,0],[0,47,32,44,0,0,0],[0,141,29,44,0,0,0],[0,235,28,44,0,0,0],[86,141,21,44,0,0,0],[0,282,28,44,0,0,0],[63,94,23,44,0,0,0],[156,141,17,44,0,0,0],[81,235,21,44,0,0,0],[30,329,27,44,0,0,0],[66,0,24,44,0,0,0],[0,0,35,44,0,0,0],[31,188,23,44,0,0,0],[31,235,22,44,0,0,0],[57,188,23,44,0,0,0],[108,329,18,44,0,0,0],[60,329,21,44,0,0,0],[159,47,17,44,0,0,0],[118,0,20,44,0,0,0],[129,329,18,44,0,0,0],[169,282,14,44,0,0,0],[113,47,20,44,0,0,0],[84,329,21,44,0,0,0],[171,329,12,44,0,0,0],[186,282,12,44,0,0,0],[113,94,20,44,0,0,0],[191,188,12,44,0,0,0],[0,94,31,44,0,0,0],[56,235,22,44,0,0,0],[60,282,22,44,0,0,0],[108,188,20,44,0,0,0],[85,282,20,44,0,0,0],[177,94,15,44,0,0,0],[184,0,15,44,0,0,0],[179,47,15,44,0,0,0],[31,282,22,44,0,0,0],[131,282,18,44,0,0,0],[38,0,25,44,0,0,0],[150,329,18,44,0,0,0],[108,282,20,44,0,0,0],[152,235,18,44,0,0,0],[35,47,25,44,0,0,0],[153,188,16,44,0,0,0],[83,188,22,44,0,0,0],[131,188,19,44,0,0,0],[93,0,22,44,0,0,0],[129,235,20,44,0,0,0],[133,141,20,44,0,0,0],[141,0,20,44,0,0,0],[105,235,21,44,0,0,0],[136,47,20,44,0,0,0],[194,141,12,44,0,0,0],[195,94,12,44,0,0,0],[197,47,12,44,0,0,0],[172,188,16,44,0,0,0],[176,141,15,44,0,0,0],[173,235,14,44,0,0,0],[164,0,17,44,0,0,0]],  animations: {A:[0,0, true], B:[1,1, true], C:[2,2, true], D:[3,3, true], E:[4,4, true], F:[5,5, true], G:[6,6, true], H:[7,7, true], I:[8,8, true], J:[9,9, true], K:[10,10, true], L:[11,11, true], M:[12,12, true], N:[13,13, true], O:[14,14, true], P:[15,15, true], Q:[16,16, true], R:[17,17, true], S:[18,18, true], T:[19,19, true], U:[20,20, true], V:[21,21, true], W:[22,22, true], X:[23,23, true], Y:[24,24, true], Z:[25,25, true], a:[26,26, true], b:[27,27, true], c:[28,28, true], d:[29,29, true], e:[30,30, true], f:[31,31, true], g:[32,32, true], h:[33,33, true], i:[34,34, true], j:[35,35, true], k:[36,36, true], l:[37,37, true], m:[38,38, true], n:[39,39, true], o:[40,40, true], p:[41,41, true], q:[42,42, true], r:[43,43, true], s:[44,44, true], t:[45,45, true], u:[46,46, true], v:[47,47, true], w:[48,48, true], x:[49,49, true], y:[50,50, true], z:[51,51, true], 0:[52,52, true], 1:[53,53, true], 2:[54,54, true], 3:[55,55, true], 4:[56,56, true], 5:[57,57, true], 6:[58,58, true], 7:[59,59, true], 8:[60,60, true], 9:[61,61, true], \".\":[62,62, true], \",\":[63,63, true], \"'\":[64,64, true], \"\\\"\":[65,65, true], \"?\":[66,66, true], \"!\":[67,67, true], \"$\":[68,68, true]}});\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n        //add stuff\r\n        //load the image\r\n        const img = document.createElement(\"img\");\r\n        img.onload = (e) => {\r\n            const splash = new createjs.Bitmap(img);\r\n            this._container.addChild(splash);\r\n\r\n            super.create(stage);\r\n        }\r\n        img.src = \"assets/images/splash.png\";\r\n\r\n\r\n        this._textContainer = new createjs.Container();\r\n        this._container.addChild(this._textContainer);\r\n\r\n        this.Text = \"0\";\r\n\r\n        stage.update();\r\n\r\n\r\n\r\n        return this;\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public set Text(text:string) {\r\n        this._textContainer.removeAllChildren();\r\n        //add text\r\n        const textEl = Sprites.generateBitmapText(text, this._textSpritesheet);\r\n        this._textContainer.addChild(textEl);\r\n        this._container.addChild(this._textContainer);\r\n\r\n        this._game.Stage.update();\r\n    }\r\n}","import { LoadManager } from \"../managers/LoadManager\";\r\nimport { Game } from \"../Game\";\r\nimport { GameScreen } from \"./GameScreen\";\r\n\r\n/**This class creates the tutorial items.  This class will control the game and game screen when being used. */\r\nexport class TutorialCreator {\r\n    public static get KEY() {\r\n        return {\r\n            \"First\" : \"first\",\r\n            \"You\" : \"you\",\r\n            \"Fish\" : \"fish\",\r\n            \"Puffer\" : \"puffer\",\r\n            \"Many\" : \"many\",\r\n            \"Pause\" : \"pause\",\r\n            \"Special\" : \"special\"\r\n        }\r\n    };\r\n\r\n    private _game:Game;\r\n    private _gameScreen:GameScreen;\r\n\r\n\r\n    //tutorial overlays\r\n    private _youOverlay:createjs.Sprite;\r\n    private _fishOverlay:createjs.Sprite;\r\n    private _pufferOverlay:createjs.Sprite;\r\n    private _manyOverlay:createjs.Sprite;\r\n    private _pauseOverlay:createjs.Sprite;\r\n    private _specialOverlay:createjs.Sprite;\r\n\r\n    private _currentOverlay:createjs.Sprite;\r\n    private _tutorialQueue:string[];\r\n\r\n    constructor(game:Game, gameScreen:GameScreen) {\r\n        this._game = game;\r\n        this._gameScreen = gameScreen;\r\n\r\n        this._tutorialQueue = [];\r\n\r\n        //build all the required screens\r\n        this._youOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"you\");\r\n        this._fishOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"fish\");\r\n        this._pufferOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"puffer\");\r\n        this._manyOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"many\");\r\n        this._pauseOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"pause\");\r\n        this._specialOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"special\");\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public async queueTutorials(keys:string[]) {\r\n\r\n        for(let i = 0; i < keys.length; i++) {\r\n            const key = keys[i];\r\n\r\n            await new Promise(async(res, rej) => {\r\n\r\n                switch(key) {\r\n                    //first will play multiple screens\r\n                    case TutorialCreator.KEY.First :\r\n                        await this._runYou();\r\n                        await this._transition(this._fishOverlay);\r\n                        await this._runFish();\r\n                        await this._transition(null);\r\n                        this._gameScreen.unpauseGameLogic();\r\n                        res();\r\n                        break;\r\n                    case TutorialCreator.KEY.You :\r\n                        await this._runYou();\r\n                        await this._transition(null);\r\n                        this._gameScreen.unpauseGameLogic();\r\n                        res();\r\n                        break;\r\n                    case TutorialCreator.KEY.Fish :\r\n                        await this._runFish();\r\n                        await this._transition(null);\r\n                        this._gameScreen.unpauseGameLogic();\r\n                        res();\r\n                        break;\r\n                    case TutorialCreator.KEY.Puffer :\r\n                        await this._runPuffer();\r\n                        await this._transition(null);\r\n                        this._gameScreen.unpauseGameLogic();\r\n                        res();\r\n                        break;\r\n                    case TutorialCreator.KEY.Special :\r\n                        await this._runSpecial();\r\n                        await this._transition(null);\r\n                        this._gameScreen.unpauseGameLogic();\r\n                        res();\r\n                        break;\r\n\r\n                }\r\n\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    private async _transition(nextScreen) {\r\n        let promises = [];\r\n        //if we have a current screen, wait for it to fade out\r\n        if(this._currentOverlay != null) {\r\n            promises.push(\r\n                new Promise(async(res) => {\r\n                    //fade out\r\n                    createjs.Tween\r\n                        .get(this._currentOverlay)\r\n                        .to({ alpha:0 }, 500, createjs.Ease.linear)\r\n                        .call(() => {\r\n                            this._gameScreen.Container.removeChild(this._currentOverlay);\r\n                            res();\r\n                        });\r\n                })\r\n            );\r\n        }\r\n\r\n        //wait for certain actions to finish\r\n        return new Promise(async(res) => {\r\n            //wait for promises to finish\r\n            await Promise.all(promises);\r\n\r\n            //if we are transitioning to null, just end us\r\n            if(nextScreen == null) {\r\n                this._currentOverlay.alpha = 1;\r\n                res();\r\n                return;\r\n            }\r\n\r\n            this._currentOverlay.alpha = 1;\r\n\r\n            //now add in the new one\r\n            this._currentOverlay = nextScreen;\r\n            this._gameScreen.Container.addChild(this._currentOverlay);\r\n            this._currentOverlay.alpha = 0;\r\n\r\n            //fade in\r\n            createjs.Tween\r\n                .get(this._currentOverlay)\r\n                .to({ alpha:1 }, 500, createjs.Ease.linear)\r\n                .call(() => {\r\n                    res();\r\n                });\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    private async _runYou() {\r\n\r\n        return new Promise((res, rej) => {\r\n            this._currentOverlay = this._youOverlay;\r\n\r\n            const catStart = this._gameScreen.Cat.Y;\r\n            //move the cat hand\r\n            \r\n            this._gameScreen.Cat.Y = 80;\r\n            //pause the game\r\n            this._gameScreen.pauseGameLogic();\r\n            //overlay screen\r\n            this._gameScreen.Container.addChild(this._youOverlay);\r\n            //listen for screen click\r\n            (this._game.Stage).on(\"pressup\", () => { \r\n                //put cat paw back to start Y\r\n                this._gameScreen.Cat.Y = catStart;\r\n                res();\r\n            }, true, true);\r\n\r\n        });\r\n        \r\n    }\r\n\r\n    private async _runFish() {\r\n\r\n        return new Promise((res, rej) => {\r\n            this._currentOverlay = this._fishOverlay;\r\n            //pause the game\r\n            this._gameScreen.pauseGameLogic();\r\n            //overlay screen\r\n            this._gameScreen.Container.addChild(this._fishOverlay);\r\n            //listen for screen click\r\n            (this._game.Stage).on(\"pressup\", () => { \r\n                res();\r\n            }, true, true);\r\n        });\r\n\r\n    }\r\n\r\n    private async _runPuffer() {\r\n\r\n        return new Promise((res, rej) => {\r\n            this._currentOverlay = this._pufferOverlay;\r\n            //pause the game\r\n            this._gameScreen.pauseGameLogic();\r\n            //overlay screen\r\n            this._gameScreen.Container.addChild(this._pufferOverlay);\r\n            //listen for screen click\r\n            (this._game.Stage).on(\"pressup\", () => { \r\n                res();\r\n            }, true, true);\r\n        });\r\n\r\n    }\r\n\r\n    private async _runSpecial() {\r\n\r\n        return new Promise((res, rej) => {\r\n            this._currentOverlay = this._specialOverlay;\r\n            //pause the game\r\n            this._gameScreen.pauseGameLogic();\r\n            //overlay screen\r\n            this._gameScreen.Container.addChild(this._specialOverlay);\r\n            //listen for screen click\r\n            (this._game.Stage).on(\"pressup\", () => { \r\n                res();\r\n            }, true, true);\r\n        });\r\n\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n}","import { LoadManager } from \"../managers/LoadManager\";\r\n\r\n/**Used to gain access to in-game sprites. */\r\nexport class Sprites {\r\n    public static CLEAR_DATA:string = \"onClearData\";\r\n\r\n    private static _backgrounds:{ [key:string]:createjs.DisplayObject } = { };\r\n    private static _buttons:{ [key:string]:createjs.DisplayObject } = { };\r\n\r\n    private static _graphics:{ [key:string]:createjs.DisplayObject } = { };\r\n\r\n    private static _spritesheets:createjs.SpriteSheet[];\r\n\r\n    private static _canClearData:boolean = false;\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public static setup() {\r\n        return new Promise((res, rej) => {\r\n            // Sprites.spritesheets = spritesheets\r\n            //setup all the sprites\r\n            /* ------- STATIC ------- */\r\n            Sprites._backgrounds.Main = new createjs.Sprite(LoadManager.Spritesheets.UI); // Static BG\r\n            (Sprites._backgrounds.Main as createjs.Sprite).gotoAndStop(\"bg_main_static\");\r\n\r\n            Sprites._backgrounds.Logo = new createjs.Sprite(LoadManager.Spritesheets.Entities); // LOGO\r\n            (Sprites._backgrounds.Logo as createjs.Sprite).gotoAndStop(\"icon_title\");\r\n\r\n            Sprites._backgrounds.BG = LoadManager.Images.BG; // Redux\r\n            Sprites._backgrounds.BGTop = LoadManager.Images.BGTop;\r\n\r\n\r\n            /* ------- ANIMATED ------- */\r\n            Sprites._backgrounds.Wave = new createjs.Sprite(LoadManager.Spritesheets.UI); // Animated BG\r\n            (Sprites._backgrounds.Wave as createjs.Sprite).gotoAndPlay(\"bg_main\");\r\n\r\n\r\n            /* ------- GRAPHICS ------ */\r\n            Sprites._graphics.Timer = new createjs.Sprite(LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n            (Sprites._graphics.Timer as createjs.Sprite).gotoAndPlay(\"sprTime\");\r\n            Sprites._graphics.Score = new createjs.Sprite(LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n            (Sprites._graphics.Score as createjs.Sprite).gotoAndPlay(\"sprScore\");\r\n            Sprites._graphics.FishRemain = new createjs.Sprite(LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n            (Sprites._graphics.FishRemain as createjs.Sprite).gotoAndPlay(\"sprFish\");\r\n            \r\n            /* ------- BUTTONS ------- */\r\n            Sprites._buttons.NewGame = new createjs.Sprite(LoadManager.Spritesheets.Entities); // New Game\r\n            (Sprites._buttons.NewGame as createjs.Sprite).gotoAndStop(\"btn_new_game\");\r\n            new createjs.ButtonHelper(Sprites._buttons.NewGame as createjs.Sprite, \"btn_new_game\", \"btn_new_game_hover\", \"btn_new_game_hover\");\r\n\r\n\r\n            Sprites._buttons.Options = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Options\r\n            (Sprites._buttons.Options as createjs.Sprite).gotoAndStop(\"btn_new_game\");\r\n            new createjs.ButtonHelper(Sprites._buttons.Options as createjs.Sprite, \"btn_options\", \"btn_options_hover\", \"btn_options_hover\");\r\n\r\n            Sprites._buttons.LevelSelect = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Select\r\n            (Sprites._buttons.LevelSelect as createjs.Sprite).gotoAndStop(\"btn_select\");\r\n            new createjs.ButtonHelper(Sprites._buttons.LevelSelect as createjs.Sprite, \"btn_select\", \"btn_select_hover\", \"btn_select_hover\");\r\n\r\n            Sprites._buttons.Exit = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Exit\r\n            (Sprites._buttons.Exit as createjs.Sprite).gotoAndStop(\"btn_select\");\r\n            new createjs.ButtonHelper(Sprites._buttons.Exit as createjs.Sprite, \"btn_exit\", \"btn_exit_hover\", \"btn_exit_hover\");\r\n\r\n            Sprites._buttons.Fishbowl = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Fishbowl\r\n            (Sprites._buttons.Fishbowl as createjs.Sprite).gotoAndStop(\"btn_select\");\r\n            new createjs.ButtonHelper(Sprites._buttons.Fishbowl as createjs.Sprite, \"icon_fishbowl\", \"icon_fishbowl_hover\", \"icon_fishbowl_hover\", true);\r\n\r\n\r\n            /* ------- MENU ------- */\r\n            Sprites._backgrounds.LevelSelectBG = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Select BG\r\n            (Sprites._backgrounds.LevelSelectBG as createjs.Sprite).gotoAndStop(\"static_bg\");\r\n            Sprites._buttons.LevelEmpty = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Empty Button\r\n            (Sprites._buttons.LevelEmpty as createjs.Sprite).gotoAndStop(\"level_empty\");\r\n            Sprites._buttons.LevelComplete = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Complete Button\r\n            (Sprites._buttons.LevelComplete as createjs.Sprite).gotoAndStop(\"level_complete\");\r\n            Sprites._buttons.LevelSpecialEmpty = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Special Empty Button\r\n            (Sprites._buttons.LevelSpecialEmpty as createjs.Sprite).gotoAndStop(\"level_special_empty\");\r\n            Sprites._buttons.LevelSpecialComplete = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Special Complete Button\r\n            (Sprites._buttons.LevelSpecialComplete as createjs.Sprite).gotoAndStop(\"level_special_complete\");\r\n\r\n\r\n            /* ------- COMPLEX ------- */\r\n            Sprites._setupBTNClearData();\r\n\r\n            res();\r\n        });\r\n    }\r\n\r\n    // /* --- Complex createjs.Sprite Setup --- */\r\n    private static _setupBTNClearData() {\r\n        Sprites._buttons.ClearData = new createjs.Sprite(LoadManager.Spritesheets.UI); // BTN Clear Data\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndStop(\"btn_clear_data\");\r\n        (Sprites._buttons.ClearData as createjs.Sprite).cursor = \"pointer\";\r\n        Sprites._canClearData = false;\r\n    }\r\n    public static listenToClearData() {\r\n        //listen\r\n        (Sprites._buttons.ClearData as any).on(\"mousedown\", Sprites._btnDataDown);\r\n        (Sprites._buttons.ClearData as any).on(\"animationend\", Sprites._btnDataComplete);\r\n        (Sprites._buttons.ClearData as any).on(\"click\", Sprites._btnDataUp);\r\n    }\r\n    public static stopListenToClearData() {\r\n        //listen\r\n        (Sprites._buttons.ClearData as any).off(\"mousedown\", Sprites._btnDataDown);\r\n        (Sprites._buttons.ClearData as any).off(\"animationend\", Sprites._btnDataComplete);\r\n        (Sprites._buttons.ClearData as any).off(\"click\", Sprites._btnDataUp);\r\n    }\r\n\r\n    private static _btnDataDown(e) {\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndPlay(\"btn_clear_data_progress\");\r\n        Sprites._canClearData = true;\r\n    }\r\n    private static _btnDataUp(e) {\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndStop(\"btn_clear_data\");\r\n        Sprites._canClearData = false;\r\n    }\r\n    private static _btnDataComplete(e) {\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndStop(\"btn_clear_data\");\r\n        //dispatch event to button\r\n        if(Sprites._canClearData) {\r\n            (Sprites._buttons.ClearData as createjs.Sprite).dispatchEvent(new Event(Sprites.CLEAR_DATA));\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**A helper function to generate and cache text for the StageGL object. */\r\n    public static generateText(text, details = \"20px Arial\", color = \"#FFFEEE\") {\r\n        const textObj = new createjs.Text(text, details, color)\r\n        textObj.cache(0, 0, textObj.getBounds().width, textObj.getBounds().height);\r\n        return textObj;\r\n    }\r\n\r\n    public static generateBitmapText(text, spritesheet) {\r\n        const textObj = new createjs.BitmapText(text, spritesheet);\r\n        return textObj;\r\n    }\r\n\r\n\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get Backgrounds() { return Sprites._backgrounds; }\r\n    public static get Buttons() { return Sprites._buttons; }\r\n    public static get Graphics() { return Sprites._graphics; }\r\n\r\n    // static get BG() { return Sprites._bg }\r\n    // static get Logo() { return Sprites._logo }\r\n    // static get AnimBG() { return Sprites._animBg }\r\n    // static get GameBG() { return Sprites._gameBG }\r\n    // static get GameBGTop() { return Sprites._gameBGTop }\r\n    // //buttons\r\n    // static get BTN_New_Game() { return Sprites._btnNewGame }\r\n    // static get BTN_Options() { return Sprites._btnOptions }\r\n    // static get BTN_Select() { return Sprites._btnSelect }\r\n    // static get BTN_Exit() { return Sprites._btnExit }\r\n    // static get BTN_Fishbowl() { return Sprites._btnFishbowl }\r\n    // static get BTN_ClearData() { return Sprites._btnClearData }\r\n\r\n\r\n    // static get CLEAR_DATA() { return \"onClearData\" }\r\n}","import { Sprites } from \"../Sprites\";\r\nimport { LoadManager } from \"../../managers/LoadManager\";\r\nimport { ProgressManager } from \"../../managers/ProgressManager\";\r\nimport { Game } from \"../../Game\";\r\nimport { IEnableable } from \"../../Interfaces\";\r\nimport { GameScreen } from \"../../screens/GameScreen\";\r\nimport { DataManager } from \"../../managers/DataManager\";\r\nimport { ScreenManager } from \"../../managers/ScreenManager\";\r\nimport { IntermediaryScreen } from \"../../screens/IntermediaryScreen\";\r\nimport { SoundManager } from \"../../managers/SoundManager\";\r\n\r\n\r\nexport class LevelSelectDisplay implements IEnableable {\r\n    private _game:Game;\r\n\r\n    private _container:createjs.Container;\r\n    private _background:createjs.Sprite;\r\n    private _levelsContainer:createjs.Container;\r\n    private _levelTextContainer:createjs.Container;\r\n\r\n    private _levelsData:any;\r\n\r\n    private _levelButtons:createjs.Sprite[];\r\n\r\n    constructor(game:Game) {\r\n        this._game = game;\r\n        this._levelButtons = [];\r\n\r\n        //build the required components for the level select display\r\n        this._container = new createjs.Container();\r\n        this._background = Sprites.Backgrounds.LevelSelectBG as createjs.Sprite;\r\n        this._background.x = (game.StageWidth / 2) - (this._background.getBounds().width / 2);\r\n        this._background.y = 80;\r\n\r\n        this._levelsContainer = new createjs.Container();\r\n        this._container.addChild(this._background);\r\n        let text = Sprites.generateBitmapText(\"Level Select\", LoadManager.Spritesheets.Typography);\r\n        text.x = (game.StageWidth / 2) - (text.getBounds().width / 2);\r\n        text.y = 30;\r\n        this._container.addChild(text);\r\n\r\n\r\n        //setup display text\r\n        this._levelTextContainer = new createjs.Container();\r\n        this._container.addChild(this._levelTextContainer);\r\n\r\n        this.LevelText = \"\";\r\n\r\n\r\n\r\n        this.rebuild();\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public enable() {\r\n        this.rebuild();\r\n        this._levelButtons.forEach(btn => {\r\n            btn.on(\"click\", this._onLevelClick, this);\r\n            btn.on(\"mouseover\", this._onLevelHover, this);\r\n            btn.on(\"mouseout\", this._onLevelUnhover, this);\r\n        });\r\n    }\r\n\r\n    public disable() {\r\n        this._levelButtons.forEach(btn => {\r\n            btn.removeAllEventListeners();\r\n        });\r\n    }\r\n\r\n    public rebuild() {\r\n        //rebuild all buttons\r\n        this._levelButtons.forEach(ch => {\r\n            this._container.removeChild(ch);\r\n            ch.removeAllEventListeners();\r\n            ch = null;\r\n        });\r\n        this._levelButtons = [];\r\n        this._levelsContainer.removeAllChildren();\r\n\r\n        //build levels data\r\n        this._levelsData = DataManager.WorldsData.worlds.map((world, i) => {\r\n            return [].concat.apply([], world as any)\r\n            .map((level, n) => {\r\n                let special = ProgressManager.ProgressData.specials[i][n];\r\n\r\n                let obj = level;\r\n                obj.unlocked = ProgressManager.ProgressData.levels[i][n].unlocked;\r\n                obj.completed = ProgressManager.ProgressData.levels[i][n].completed;\r\n                obj.special = (special != null);\r\n\r\n                return obj;\r\n            })\r\n        });\r\n\r\n\r\n\r\n\r\n        //build the level icons\r\n        for(let r = 0; r < this._levelsData.length; r++) {\r\n            //iterate through levels\r\n            for(let i = 0; i < this._levelsData[r].length; i++) {\r\n                const levelData = this._levelsData[r][i];\r\n                //decide the sprite\r\n                let sprite = Sprites.Buttons.LevelEmpty.clone();\r\n                if(levelData.special != null && levelData.special) sprite = Sprites.Buttons.LevelSpecialEmpty.clone();\r\n                // //completed\r\n                if(levelData.completed) {\r\n                    sprite = Sprites.Buttons.LevelComplete.clone();\r\n                    if(levelData.special != null && levelData.special) sprite = Sprites.Buttons.LevelSpecialComplete;\r\n                }\r\n                //locked\r\n                if(!levelData.unlocked) {\r\n                    sprite.alpha = 0.25;\r\n                }\r\n                else {\r\n                    sprite.alpha = 1;\r\n                     //extras\r\n                    sprite.cursor = \"pointer\";\r\n                }\r\n\r\n                //place\r\n                sprite.x = 60 * i;\r\n                sprite.y = 50 * r;\r\n                //add\r\n                this._levelsContainer.addChild(sprite);\r\n                //to array\r\n                this._levelButtons.push(sprite as createjs.Sprite);\r\n            }\r\n        };\r\n\r\n        this._levelsContainer.x = (this._game.StageWidth / 2) - (this._levelsContainer.getBounds().width / 2);\r\n        this._levelsContainer.y = 100;\r\n        this._container.addChild(this._levelsContainer);\r\n    }\r\n\r\n\r\n    /**Returns level data from the given index. */\r\n    private _getDataByIndex(index:number) {\r\n        //flatten level data, and get data\r\n        let flatten = this._levelsData.reduce((acc, next) => acc.concat(next));\r\n        return flatten[index];\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    private _onLevelClick(e) {\r\n         //get button index\r\n        let index = this._levelButtons.indexOf(e.target);\r\n\r\n        if(index == -1) return;\r\n\r\n        \r\n        //set the level index\r\n        const data = DataManager.getLevelDataByIndex(index);\r\n        if(data == null) return;\r\n        if(!data.unlocked) return;\r\n\r\n        SoundManager.playSFX(LoadManager.Sounds.BubblesFade);\r\n        SoundManager.fadeOutAmbience(\"ambience\");\r\n\r\n        //make sure this level is UNLOCKED\r\n        this._game.changeCurrentLevel(data);\r\n        //go to intermediary screen\r\n        const intermediary = ScreenManager.getScreenByKey(\"intermediary\") as IntermediaryScreen;\r\n        new Promise(async(res) => {\r\n            intermediary.Text = data.name;\r\n            await ScreenManager.setCurrentScreen(intermediary, this._game.Stage);\r\n            intermediary.queueNextScreen(\"game\", 1000);\r\n\r\n            res();\r\n        });\r\n    }\r\n\r\n    private _onLevelHover(e) {\r\n        //find the button data\r\n        //get button index\r\n        let index = this._levelButtons.indexOf(e.target);\r\n        \r\n        if(index != -1) {\r\n            const data = this._getDataByIndex(index);\r\n            if(data != null) {\r\n                if(data.unlocked)\r\n                    this.LevelText = data.name;\r\n            }\r\n        }\r\n\r\n    }\r\n    private _onLevelUnhover(e) {\r\n        this.LevelText = \"\";\r\n    }\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container() { return this._container; }\r\n    public set LevelText(value:string) {\r\n        if(value == \"\") {\r\n            this._levelTextContainer.removeAllChildren();\r\n            return;\r\n        }\r\n        //create the text\r\n        const text = Sprites.generateBitmapText(value, LoadManager.Spritesheets.TypographyWhite);\r\n        (text as any).scale = 0.6;\r\n        //load into container\r\n        this._levelTextContainer.removeAllChildren();\r\n        this._levelTextContainer.addChild(text);\r\n\r\n        //put container at bottom\r\n        this._levelTextContainer.x = (this._game.StageWidth / 2) - ((text.getBounds().width / 2) * 0.6);\r\n        this._levelTextContainer.y = this._game.StageHeight - 30;\r\n    }\r\n}","import { Layout } from \"./Layout\";\r\n\r\n/**Uses custom classes and the createjs library to help easily build up ui interfaces with DisplayObjects. */\r\nexport class Container {\r\n    private _sprites:{ [key:string]:createjs.DisplayObject };\r\n    private _container:createjs.Container;\r\n    private _layout:Layout;\r\n\r\n    constructor(layout:{ direction:string, alignment:string, crossAlignment:string, spacing:number } = null) {\r\n        this._sprites = { };\r\n        this._container = new createjs.Container();\r\n        this._layout = (layout != null) ? new Layout(this._container, layout.direction, layout.alignment, layout.crossAlignment, layout.spacing)  : Layout.MAKE_VERTICAL_CENTER(this._container);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public add(key:string, sprite:createjs.DisplayObject, updateLayout:boolean=true):boolean {\r\n        if(this._sprites[key] != null) return false;\r\n        this._sprites[key] = sprite.clone();\r\n\r\n        if(updateLayout) this._layout.buildLayout(true, ...Object.keys(this._sprites).map(k => this._sprites[k]));\r\n        return true;\r\n    }\r\n\r\n    public addMany(sprites:{ [key:string]:createjs.DisplayObject }) {\r\n        Object.keys(sprites).forEach(k => {\r\n            this.add(k, sprites[k], false);\r\n        });\r\n\r\n        this._layout.buildLayout(true, ...Object.keys(this._sprites).map(k => this._sprites[k]));\r\n    }\r\n\r\n    public changeLayout(layout:Layout) {\r\n        this._layout = layout;\r\n    }\r\n\r\n    /**In case of wandering or reusable sprites, call them back to this layout! */\r\n    public checkoutSprites() {\r\n        this._layout.buildLayout(true, ...Object.keys(this._sprites).map(k => this._sprites[k]));\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container():createjs.Container { return this._container; }\r\n    public get Sprites() { return this._sprites; }\r\n\r\n    public static get LAYOUT_OPTIONS() {\r\n        return {\r\n            //column layouts\r\n            //-- left aligned\r\n            \"ColumnLeftTop\" : {direction:Layout.VERTICAL, alignment:Layout.START, crossAlignment:Layout.START, spacing:5},\r\n            \"ColumnLeftCenter\" : {direction:Layout.VERTICAL, alignment:Layout.START, crossAlignment:Layout.CENTER, spacing:5},\r\n            \"ColumnLeftBottom\" : {direction:Layout.VERTICAL, alignment:Layout.START, crossAlignment:Layout.END, spacing:5},\r\n            //-- center aligned\r\n            \"ColumnCenterTop\" : {direction:Layout.VERTICAL, alignment:Layout.CENTER, crossAlignment:Layout.START, spacing:5},\r\n            \"ColumnCenterCenter\" : {direction:Layout.VERTICAL, alignment:Layout.CENTER, crossAlignment:Layout.CENTER, spacing:5},\r\n            \"ColumnCenterBottom\" : {direction:Layout.VERTICAL, alignment:Layout.CENTER, crossAlignment:Layout.END, spacing:5},\r\n            //-- right aligned\r\n            \"ColumnRightTop\" : {direction:Layout.VERTICAL, alignment:Layout.END, crossAlignment:Layout.START, spacing:5},\r\n            \"ColumnRightCenter\" : {direction:Layout.VERTICAL, alignment:Layout.END, crossAlignment:Layout.CENTER, spacing:5},\r\n            \"ColumnRightBottom\" : {direction:Layout.VERTICAL, alignment:Layout.END, crossAlignment:Layout.END, spacing:5}\r\n        };\r\n    }\r\n}","import { Game } from \"../../Game\";\r\n\r\n/**Used to layout createjs display objects. */\r\nexport class Layout {\r\n    //justify content\r\n    public static HORIZONTAL:string = \"horizontal\";\r\n    public static VERTICAL:string = \"vertical\";\r\n    //align items\r\n    public static START:string = \"start\";\r\n    public static END:string = \"end\";\r\n    public static CENTER:string = \"center\";\r\n\r\n    private _parent:createjs.Container;\r\n    private _items:createjs.DisplayObject[];\r\n\r\n    private _direction:string;\r\n    private _alignment:string;\r\n    private _crossAlignment:string;\r\n    private _spacing:number;\r\n\r\n    constructor(parent:createjs.Container, direction:string, alignment:string, crossAlignment:string, spacing:number = 5) {\r\n        this._parent = parent;\r\n        this._items = [];\r\n\r\n        this._direction = direction;\r\n        this._alignment = alignment;\r\n        this._crossAlignment = crossAlignment;\r\n        this._spacing = spacing;\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public buildLayout(addToParent:boolean=true, ...items:createjs.DisplayObject[]) {\r\n        if(items.length <= 0) return;\r\n\r\n        this._items = items;\r\n\r\n        if(addToParent) {\r\n            this._parent.removeAllChildren();\r\n        }\r\n        \r\n\r\n        if(this._direction == Layout.VERTICAL) {\r\n            let totalHeight = 0;\r\n            //ALIGNMENT\r\n            switch(this._alignment) {\r\n                case Layout.START : {\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        item.x = 0;\r\n                        item.y = totalHeight;\r\n                        totalHeight += item.getBounds().height + this._spacing;\r\n                        if(addToParent) this._parent.addChild(item);\r\n                    }\r\n                    break;\r\n                }\r\n                case Layout.CENTER : {\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        item.x = (Game.WIDTH / 2) - (item.getBounds().width / 2);\r\n                        item.y = totalHeight;\r\n                        totalHeight += item.getBounds().height + this._spacing;\r\n                        if(addToParent) this._parent.addChild(item);\r\n                    }\r\n                    break;\r\n                }\r\n                case Layout.END : {\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        item.x = Game.WIDTH - item.getBounds().width;\r\n                        item.y = totalHeight;\r\n                        totalHeight += item.getBounds().height + this._spacing;\r\n                        if(addToParent) this._parent.addChild(item);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n\r\n            //CROSS ALIGNMENT\r\n            //handle vertical alignment\r\n            switch(this._crossAlignment) {\r\n                case Layout.START : {\r\n                    break;\r\n                }\r\n                case Layout.CENTER : {\r\n                    totalHeight += items[items.length-1].getBounds().height;\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        //decipher desired center\r\n                        item.y += (Game.HEIGHT / 2) - (totalHeight / 2);\r\n                    }\r\n                    break;\r\n                }\r\n                case Layout.END :  {\r\n                    totalHeight += items[items.length-1].getBounds().height;\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        //decipher desired center\r\n                        item.y += Game.HEIGHT - totalHeight;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n\r\n        }\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    \r\n    /*--------------- HELPER FUNCTIONS ---------------*/\r\n    public static MAKE_VERTICAL_CENTER(container:createjs.Container) { return new Layout(container, Layout.VERTICAL, Layout.CENTER, Layout.CENTER, 5); }\r\n    public static MAKE_VERTICAL_START(container:createjs.Container) { return new Layout(container, Layout.VERTICAL, Layout.CENTER, Layout.START, 5); }\r\n\r\n}","import { Game } from \"../../Game\";\r\nimport { Sprites } from \"../Sprites\";\r\nimport { LoadManager } from \"../../managers/LoadManager\";\r\n\r\n/**Creates a display container for the game screen. */\r\nexport class GameScore {\r\n    private _game:Game;\r\n    private _container:createjs.Container;\r\n    private _bg:createjs.Shape;\r\n    private _txtTimer:createjs.DisplayObject;\r\n\r\n    private _timerContainer:createjs.Container;\r\n    private _timerTextContainer:createjs.Container;\r\n    private _fishRemainContainer:createjs.Container;\r\n    private _fishRemainTextContainer:createjs.Container;\r\n    private _scoreContainer:createjs.Container;\r\n    private _scoreTextContainer:createjs.Container;\r\n\r\n    //game conditions\r\n    private _useTimer:boolean = false;\r\n    private _useFishRemain:boolean = true;\r\n    private _useScore:boolean = true;\r\n\r\n    constructor(game:Game) {\r\n        this._game = game;\r\n        //create the initial objects\r\n        this._container = new createjs.Container();\r\n        this._bg = new createjs.Shape();\r\n        this._bg.graphics.beginFill(\"#000000\");\r\n        this._bg.graphics.drawRect(0, 0, this._game.StageWidth, 40);\r\n        this._bg.graphics.endFill();\r\n        this._bg.cache(0, 0, this._game.StageWidth, 40);\r\n        this._container.addChild(this._bg);\r\n\r\n        //create the container objects\r\n        //timer\r\n        this._timerContainer = new createjs.Container();\r\n        this._timerContainer.x += 10;\r\n        const timerSprite = Sprites.Graphics.Timer.clone();\r\n        this._timerContainer.addChild(timerSprite);\r\n        this._timerTextContainer = new createjs.Container();\r\n        this._timerTextContainer.y += 8;\r\n        this._timerTextContainer.x += Sprites.Graphics.Timer.getBounds().width + 10;\r\n        this._timerContainer.addChild(this._timerTextContainer);\r\n        this._container.addChild(this._timerContainer);\r\n\r\n        //fish remain\r\n        this._fishRemainContainer = new createjs.Container();\r\n        const fishRemainSprite = Sprites.Graphics.FishRemain.clone();\r\n        this._fishRemainContainer.addChild(fishRemainSprite);\r\n        this._fishRemainTextContainer = new createjs.Container();\r\n        this._fishRemainTextContainer.y += 8;\r\n        this._fishRemainTextContainer.x += Sprites.Graphics.FishRemain.getBounds().width + 10;\r\n        this._fishRemainContainer.addChild(this._fishRemainTextContainer);\r\n        this._container.addChild(this._fishRemainContainer);\r\n\r\n        //score\r\n        this._scoreContainer = new createjs.Container();\r\n        this._scoreContainer.x = this._game.StageWidth - Sprites.Graphics.Score.getBounds().width - 40;\r\n        const scoreSprite = Sprites.Graphics.Score.clone();\r\n        this._scoreContainer.addChild(scoreSprite);\r\n        this._scoreTextContainer = new createjs.Container();\r\n        this._scoreTextContainer.y += 8;\r\n        this._scoreTextContainer.x += Sprites.Graphics.Score.getBounds().width + 10;\r\n        this._scoreContainer.addChild(this._scoreTextContainer);\r\n        this._container.addChild(this._scoreContainer);\r\n        \r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public startHUD(showScore:boolean, showFishRemain:boolean, showTimer:boolean) {\r\n        this._useScore = showScore;\r\n        this._useFishRemain = showFishRemain;\r\n        this._useTimer = showTimer;\r\n\r\n        if(this._useScore) this._container.addChild(this._scoreContainer);\r\n        else this._container.removeChild(this._scoreContainer);\r\n\r\n        if(this._useFishRemain) this._container.addChild(this._fishRemainContainer);\r\n        else this._container.removeChild(this._fishRemainContainer);\r\n\r\n        if(this._useTimer) this._container.addChild(this._timerContainer);\r\n        else this._container.removeChild(this._timerContainer);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public update(gameTime:number) {\r\n        \r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container() { return this._container; }\r\n\r\n}"]}