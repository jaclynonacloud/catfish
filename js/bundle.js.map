{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/Functions.ts","src/Game.ts","src/ObjectPool.ts","src/entities/Cat.ts","src/entities/Entity.ts","src/entities/Fish.ts","src/entities/Puffer.ts","src/entities/specials/Persephone.ts","src/main.ts","src/managers/DataManager.ts","src/managers/LoadManager.ts","src/managers/ScreenManager.ts","src/screens/EndScreen.ts","src/screens/GameScreen.ts","src/screens/IntermediaryScreen.ts","src/screens/MenuScreen.ts","src/screens/Screen.ts","src/screens/SplashScreen.ts","src/screens/TutorialCreator.ts","src/ui/Sprites.ts","src/ui/custom/LevelSelectDisplay.ts","src/ui/display/Container.ts","src/ui/display/Layout.ts","src/ui/partials/GameScore.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Logging","message","console","log","_message","LoadManager_1","ScreenManager_1","SplashScreen_1","MenuScreen_1","GameScreen_1","EndScreen_1","Functions_1","Sprites_1","IntermediaryScreen_1","DataManager_1","Game","canvasDiv","_this","this","_classCallCheck","_canvas","width","WIDTH","height","HEIGHT","_lastGameTime","_scaling","Promise","res","rej","__awaiter","regeneratorRuntime","mark","_callee","splash","wrap","_context","prev","next","_stage","createjs","StageGL","antialias","setClearColor","enableMouseOver","update","ScreenManager","registerScreen","SplashScreen","setCurrentScreen","getScreenByKey","addEventListener","LoadManager","ASSETS_UPDATED","Percentage","Text","Math","ceil","toString","loadAssets","catch","err","warn","success","DataManager","loadWorldsData","error","changeCurrentLevel","getLevelDataByIndex","Sprites","setup","MenuScreen","GameScreen","EndScreen","IntermediaryScreen","Ticker","framerate","FRAME_RATE","on","stop","levelData","_currentLevel","currentScore","_currentScore","children","ch","scaleX","scaleY","_scaleChildren","gameTime","getMeasuredFPS","CurrentScreen","ObjectPool","obj","type","poolObj","active","Pool","push","_getObjectByType","_getObjectByObj","_pool","forEach","return","find","Entity_1","Cat","gameScreen","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","Spritesheets","Kitty_Spritesheet","_speed","_fishCaughtMultiplier","_caughtFish","_isGrabbing","_isRising","_isInjured","_hasReachedSurface","_sprite","gotoAndPlay","ANIMATION","Idle","Entity","_this2","IsGamelogicPaused","X","Stage","mouseX","Speed","speed","mouseY","_catYTween","Tween","get","to","y","Ease","circIn","Grab","Hold","fishes","tryToGrabFishes","Y","caught","returnToSurface","_this3","removeTweens","wait","linear","reachSurface","_this4","hasNewFish","indexOf","release","_this5","Ow","injure","drop","_this6","collectFish","_this7","_get","prototype","hasHitAPuffer","hitEnemy","caughtFishMult","value","freeze","Death","spritesheet","_gameScreen","Sprite","_direction","x","_isIgnoringCollision","_ignoreCollisionTimer","Scaling","container","addChild","parent","removeChild","IGNORE_COLLISION","artificialReg","arguments","undefined","reg","regX","regY","Bounds","Width","Height","bounds","StageWidth","extents","StageHeight","HIT","Right","Left","lastX","getBounds","Top","Bottom","Fish","Peeper_Spritesheet","_isCaught","_isReturning","Slow","_naturalY","Panic","hitTest","disable","abs","isNeg","IsIgnoringCollision","testStageBounds","startIgnoreCollision","Fast","Puffer","Puffer_Spritesheet","_cooldown","_currentCooldown","Angry","cat","Recover","Fish_1","Persephone","Persephone_Spritesheet","SPEC_ANIMATION","Game_1","document","getElementById","fileLocation","fetch","then","blob","json","_worldsData","index","concat","apply","worlds","_sheetsTotal","_sheetsLoaded","_percentage","_totalAssetsLoaded","_totalAssets","src","stage","reset","_preloadManager","LoadQueue","Sound","registerPlugins","WebAudioPlugin","HTMLAudioPlugin","FlashAudioPlugin","alternateExtensions","installPlugin","_onLoaded","_onComplete","_onError","data","setMaxConnections","loadManifest","ASSETS_LOADED","emitErrorEvent","dispatchEvent","AssetsLoadedEvent","AssetsFailedEvent","parseFloat","getItems","toFixed","AssetsUpdatedEvent","name","sheet","item","Types","JAVASCRIPT","window","id","_SpriteSheet","complete","_loadedSheet","ev","remove","IMAGE","Images","Bitmap","emitUpdatedEvent","removeAllEventListeners","setInterval","emitLoadedEvent","Event","ASSETS_FAILED","Screen_1","key","screen","_screensLookup","tempScreen","Screen","resolve","promises","_currentScreen","Container","alpha","destroy","_callee2","_context2","all","create","enable","Container_1","game","_game","_isFail","bg","Catfish_End","_container","_buttonsContainer","LAYOUT_OPTIONS","ColumnLeftBottom","addMany","btnTryAgain","btnNextLevel","btnMainMenu","_completeSpr","_failSpr","visible","TutorialCreator_1","ObjectPool_1","Persephone_1","Puffer_1","Cat_1","GameScore_1","_fishes","_puffers","_remainingFish","createPoolObject","POOL","CAT","FISH","_i","PUFFERFISH","PERSEPHONE","_cat","checkout","_staticContainer","BG_Spritesheet","_fishContainer","_pufferContainer","_winContainer","_gameScore","GameScore","_tutorialCreator","TutorialCreator","_pauseLogic","hitObjects","getObjectsUnderPoint","fish","puff","killedFish","splice","win","changeCurrentScore","totalFish","combos","time","elasticOut","checkoutSprites","_winBanner","Shape","graphics","beginFill","drawRect","cache","_winText","generateBitmapText","TypographyWhite","mouseEnabled","CurrentLevelData","flip","DirectionX","setNaturalY","puffer","tutorials","queueTutorials","background","gotoAndStop","showScore","showTimer","duration","showFishRemain","showRemainingFish","startHUD","releaseAllObjects","removeAllChildren","normalizedTime","min","grab","_text","screenKey","evt","setTimeout","clearTimeout","_bg","endFill","_textContainer","_txtSprite","scale","LevelSelectDisplay_1","_swipeContainer","Catfish_Main","_mainContainer","_logo","_mainButtonsContainer","btnNewGame","btnOptions","btnLevelSelect","btnExit","_fancyFish","_optionsContainer","txtOptions","Typography","btnClearData","Buttons","ClearData","_clearedContainer","add","_levelSelectDisplay","LevelSelectDisplay","_swipeSpeed","_initialSwipePos","intermediary","queueNextScreen","circOut","bounceOut","cubicIn","cubicInOut","clearInterval","stageX","stageY","_dragTimer","_onMain","_onNewGame","_onOptions","_onLevelSelect","_onExit","listenToClearData","CLEAR_DATA","_onClearData","_onDragStart","_onDragEnd","loop","sineInOut","off","stopListenToClearData","removeAllTweens","_textSpritesheet","SpriteSheet","images","frames","animations","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","Z","b","d","g","h","j","k","l","m","q","s","v","w","z","0","2","3","4","5","6","7","8","9",".",",","'","\"","?","!","$","img","createElement","onload","text","textEl","_tutorialQueue","_youOverlay","Tutorial_Spritesheet","_fishOverlay","_pufferOverlay","_manyOverlay","_pauseOverlay","_specialOverlay","First","You","Many","Pause","Special","keys","t0","KEY","_runYou","_transition","_runFish","unpauseGameLogic","abrupt","_runPuffer","_runSpecial","nextScreen","_currentOverlay","_callee3","_context4","_callee4","_context5","catStart","pauseGameLogic","_backgrounds","Main","UI","Logo","Entities","BG","BGTop","Wave","_graphics","Timer","ScoreHUD_Spritesheet","Score","FishRemain","_buttons","NewGame","ButtonHelper","Options","LevelSelect","Exit","Fishbowl","LevelSelectBG","Menu_Level_Select","LevelEmpty","LevelComplete","LevelSpecialEmpty","LevelSpecialComplete","_setupBTNClearData","cursor","_canClearData","_btnDataDown","_btnDataComplete","_btnDataUp","details","color","textObj","BitmapText","_levelButtons","_background","Backgrounds","_levelsContainer","_levelTextContainer","LevelText","_levelsData","unlocked","special","sprite","clone","btn","_onLevelClick","_onLevelHover","_onLevelUnhover","reduce","acc","target","_getDataByIndex","Layout_1","layout","_sprites","_layout","Layout","direction","alignment","crossAlignment","spacing","MAKE_VERTICAL_CENTER","updateLayout","buildLayout","_toConsumableArray","map","sprites","_layout2","_layout3","ColumnLeftTop","VERTICAL","START","ColumnLeftCenter","CENTER","END","ColumnCenterTop","ColumnCenterCenter","ColumnCenterBottom","ColumnRightTop","ColumnRightCenter","ColumnRightBottom","_parent","_items","_alignment","_crossAlignment","_spacing","addToParent","_len","items","Array","_key","totalHeight","_item","_i2","_item2","_i3","_i4","HORIZONTAL","_useTimer","_useFishRemain","_useScore","_timerContainer","timerSprite","Graphics","_timerTextContainer","_fishRemainContainer","fishRemainSprite","_fishRemainTextContainer","_scoreContainer","scoreSprite","_scoreTextContainer"],"mappings":"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,OAAQ,CAAC,4CAA6CC,OAAQ,CAAC,CAAC,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,E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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/* ************************************************* */\r\n/*                      LOGGING                      */\r\n/* ************************************************* */\r\nexport class Logging {\r\n    static success(message:string):void {\r\n        console.log(`%c ${message}`, 'color:seagreen; font-size:1.1em; font-weight:bold; border-left: solid 3px seagreen;')    ;\r\n    }\r\n\r\n    static message(message:string):void {\r\n        console.log(`%c ${message}`, 'color:#1E265C; font-size:1.1em; font-weight:bold; border-left: solid 3px #1E265C;');\r\n    }\r\n\r\n    static error(message:string):void {\r\n        console.log(`%c ${message}`, 'color:red; font-size:1.1em; border-left: solid 3px red;');\r\n    }\r\n}","import { LoadManager } from \"./managers/LoadManager\";\r\nimport { ScreenManager } from \"./managers/ScreenManager\";\r\nimport { SplashScreen } from \"./screens/SplashScreen\";\r\nimport { MenuScreen } from \"./screens/MenuScreen\";\r\nimport { GameScreen } from \"./screens/GameScreen\";\r\nimport { EndScreen } from \"./screens/EndScreen\";\r\nimport { Logging } from \"./Functions\";\r\nimport { Sprites } from \"./ui/Sprites\";\r\nimport { IntermediaryScreen } from \"./screens/IntermediaryScreen\";\r\nimport { DataManager, LevelData } from \"./managers/DataManager\";\r\n\r\nexport interface ICurrentScore {\r\n    totalFish: number;\r\n    time: number;\r\n    combos: number;\r\n}\r\n\r\n\r\nexport class Game {\r\n    private _canvas:HTMLCanvasElement;\r\n    private _stage:createjs.StageGL;\r\n    private _scaling:number;\r\n\r\n    private _lastGameTime:number;\r\n\r\n    private _currentLevel:LevelData;\r\n    private _currentScore:ICurrentScore;\r\n\r\n    constructor(canvasDiv:HTMLCanvasElement) {\r\n\r\n        this._canvas = canvasDiv;\r\n        this._canvas.width = Game.WIDTH;\r\n        this._canvas.height = Game.HEIGHT;\r\n\r\n        this._lastGameTime = -1;\r\n\r\n        //set the scaling\r\n        this._scaling = Game.HEIGHT / 1024;\r\n\r\n        //start loading game assets\r\n        new Promise(async(res, rej) => {\r\n            //create the stage\r\n            console.log(\"Readying stage!\");\r\n            this._stage = new createjs.StageGL(this._canvas, { antialias: true });\r\n            // this._stage = new createjs.StageGL(this._canvas);\r\n            (this._stage as any).setClearColor(\"#000000\");\r\n            this._stage.enableMouseOver(10);\r\n            this._stage.update();\r\n\r\n            // this._stage.scaleX = this._stage.scaleY = 0.8;\r\n\r\n            console.log(this._stage, this._canvas);\r\n\r\n            //load the splash screen\r\n            ScreenManager.registerScreen(\"splash\", new SplashScreen(this));\r\n            ScreenManager.setCurrentScreen(\"splash\", this._stage);\r\n\r\n            const splash = ScreenManager.getScreenByKey(\"splash\") as SplashScreen;\r\n\r\n            //listen to asset updates\r\n            (this._stage as any).addEventListener(LoadManager.ASSETS_UPDATED, (e) => {\r\n                console.log(LoadManager.Percentage);\r\n                //update percent\r\n                splash.Text = Math.ceil(LoadManager.Percentage * 100).toString();\r\n            });\r\n            //load assets\r\n            await LoadManager.loadAssets(\"assets/manifest.json\", this._stage)\r\n                .catch(err => {\r\n                    console.warn(\"Error loading assets:\", err);\r\n                });\r\n\r\n            Logging.success(\"Assets Loaded Successfully!\");\r\n\r\n            //load level data\r\n            await DataManager.loadWorldsData(\"assets/data/levels.json\")\r\n                .catch(err => {\r\n                    Logging.error(err);\r\n                    return;\r\n                });\r\n\r\n            //set the current screen\r\n            //game test, load desired level patch -- if autoloading to game screen\r\n            this.changeCurrentLevel(DataManager.getLevelDataByIndex(0));\r\n\r\n            Logging.success(\"Level Data Loaded Successfully!\");\r\n\r\n            //setup createjs.Sprites\r\n            await Sprites.setup();\r\n\r\n            //build the screens\r\n            ScreenManager.registerScreen(\"menu\", new MenuScreen(this));\r\n            ScreenManager.registerScreen(\"game\", new GameScreen(this));\r\n            ScreenManager.registerScreen(\"end\", new EndScreen(this));\r\n            ScreenManager.registerScreen(\"intermediary\", new IntermediaryScreen(this));\r\n            \r\n\r\n            // ScreenManager.setCurrentScreen(\"menu\", this._stage);\r\n            ScreenManager.setCurrentScreen(\"game\", this._stage);\r\n            // ScreenManager.setCurrentScreen(\"end\", this._stage);\r\n\r\n            //setup the game loop\r\n            createjs.Ticker.framerate = Game.FRAME_RATE;\r\n            createjs.Ticker.on(\"tick\", this.update, this);\r\n\r\n            res();\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public changeCurrentLevel(levelData:LevelData) {\r\n        this._currentLevel = levelData;\r\n    }\r\n\r\n    public changeCurrentScore(currentScore:ICurrentScore) {\r\n        this._currentScore = currentScore;\r\n    }\r\n\r\n\r\n\r\n    //recursive sizing\r\n    private _scaleChildren(children) {\r\n\r\n\r\n        if(children != null) {\r\n            for(let i = 0; i < children.length; i++) {\r\n                const ch = children[i];\r\n                ch.scaleX = ch.scaleY = this._scaling;\r\n                if(ch.children != null && ch.scaleX != null) this._scaleChildren(ch);\r\n            }\r\n        }\r\n\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    public update(e:any) {\r\n\r\n        const gameTime = (this._lastGameTime != -1) ? createjs.Ticker.getMeasuredFPS() - this._lastGameTime : 1;\r\n        this._lastGameTime = createjs.Ticker.getMeasuredFPS();\r\n\r\n        //update the screen\r\n        if(ScreenManager.CurrentScreen != null) ScreenManager.CurrentScreen.update(gameTime);\r\n\r\n        //scale all children\r\n        // this._scaleChildren(this._stage.children);\r\n\r\n        //update the stage\r\n        this._stage.update();\r\n    }\r\n\r\n\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get FRAME_RATE() { return 30; }\r\n    // public static get WIDTH() { return Game.HEIGHT * 0.5625; } //desired size\r\n    // public static get HEIGHT() { return Math.min(document.body.clientHeight, 1024); }\r\n\r\n    public static get WIDTH() { return 576; }\r\n    public static get HEIGHT() { return 1024; }\r\n\r\n    public get StageWidth() { return this._canvas.width; } //actual size\r\n    public get StageHeight() { return this._canvas.height; }\r\n\r\n    public get Stage() { return this._stage; }\r\n    public get Scaling() { return this._scaling; }\r\n\r\n    public get CurrentLevelData() { return this._currentLevel; }\r\n    public get CurrentScoreData() { return this._currentScore; }\r\n\r\n\r\n\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n\r\n\r\n}","import { Logging } from \"./Functions\";\r\nimport { Entity } from \"./entities/Entity\";\r\n\r\nexport interface IPoolObject {\r\n    type:string;\r\n    obj:Entity,\r\n    active:boolean;\r\n}\r\n\r\nexport class ObjectPool {\r\n    private static _pool:IPoolObject[];\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Creates a pool object. */\r\n    public static createPoolObject(obj:Entity, type:string) {\r\n        const poolObj = {\r\n            type,\r\n            obj,\r\n            active: false\r\n        };\r\n        ObjectPool.Pool.push(poolObj);\r\n        return poolObj;\r\n    }\r\n\r\n    /**Checks out a pool object.  Use POOL global function to access. */\r\n    public static checkout(type:string) {\r\n        const poolObj = ObjectPool._getObjectByType(type);\r\n        if(poolObj != null) {\r\n            poolObj.active = true;\r\n            return poolObj.obj;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**Returns an object to the pool. */\r\n    public static return(obj:Entity) {\r\n        const poolObj = ObjectPool._getObjectByObj(obj);\r\n        if(poolObj != null) {\r\n            poolObj.active = false;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**Returns all objects to pool. */\r\n    public static releaseAllObjects() {\r\n        ObjectPool._pool.forEach(p => {\r\n            ObjectPool.return(p.obj);\r\n        });\r\n    }\r\n\r\n\r\n    public static _getObjectByType(type) {\r\n        const poolObj = ObjectPool._pool.find((o => o.type == type && !o.active));\r\n        if(poolObj == null) Logging.error(\"Object not found in pool, or pool is exhausted.  Return some objects.\");\r\n        return poolObj\r\n    }\r\n    public static _getObjectByObj(obj) {\r\n        return ObjectPool._pool.find((o => o.obj == obj));\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get Pool() { \r\n        if(ObjectPool._pool == null) ObjectPool._pool = [];\r\n        return ObjectPool._pool;\r\n    }\r\n}","import { Game } from \"../Game\";\r\nimport { Entity } from \"./Entity\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { IEnableable } from \"../Interfaces\";\r\nimport { Logging } from \"../Functions\";\r\nimport { GameScreen } from \"../screens/GameScreen\";\r\nimport { Fish } from \"./Fish\";\r\n\r\nexport class Cat extends Entity implements IEnableable {\r\n    private _speed:number;\r\n    private _fishCaughtMultiplier:number; //this will be the rate at which the cat slows down when rising per fish\r\n\r\n    private _catYTween:createjs.Tween;\r\n    private _caughtFish:Fish[];\r\n\r\n    private _isGrabbing:boolean;\r\n    private _isRising:boolean;\r\n    private _isInjured:boolean;\r\n    private _hasReachedSurface:boolean;\r\n\r\n    constructor(gameScreen:GameScreen) {\r\n        super(gameScreen, LoadManager.Spritesheets.Kitty_Spritesheet);\r\n        // super(gameScreen, LoadManager.Spritesheets.Cat_Spritesheet);\r\n        this._speed = 3;\r\n        this._fishCaughtMultiplier = 0.05;\r\n\r\n        this._caughtFish = [];\r\n        this._isGrabbing = false;\r\n        this._isRising = false;\r\n        this._isInjured = false;\r\n        this._hasReachedSurface = true;\r\n\r\n        this._sprite.gotoAndPlay(Cat.ANIMATION.Idle);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    enable() {\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n    }\r\n\r\n\r\n    /***************/\r\n    /*   ACTIONS   */\r\n    /***************/\r\n    public grab() {\r\n        //if the game is paused, we shall not grab\r\n        if(this.GameScreen.IsGamelogicPaused) return;\r\n\r\n        //cannot grab if we are not at surface\r\n        if(!this._hasReachedSurface) return;\r\n\r\n        this._isGrabbing = true;\r\n        this._hasReachedSurface = false;\r\n\r\n        //move to x position\r\n        this.X = this.GameScreen.Game.Stage.mouseX;\r\n\r\n\r\n        console.log(\"START SPEED:\", this.Speed);\r\n\r\n        //grab to y position\r\n        const speed = (this.GameScreen.Game.Stage.mouseY / 2) * this.Speed;\r\n        this._catYTween = createjs.Tween\r\n            .get(this._sprite)\r\n            .to({ y:this.GameScreen.Game.Stage.mouseY }, speed, createjs.Ease.circIn)\r\n            .call(() => {\r\n                //once the grab is done, turn off flag\r\n                this._isGrabbing = false;\r\n\r\n                 //play animations\r\n                this._sprite.gotoAndPlay(Cat.ANIMATION.Grab);\r\n                //listen for animation to finish\r\n                (this._sprite as any).on(\"animationend\", () => {\r\n                    this._sprite.gotoAndPlay(Cat.ANIMATION.Hold);\r\n                }, true);\r\n\r\n                //try to grab a fish\r\n                const fishes = this.GameScreen.tryToGrabFishes(this.X , this.Y);\r\n\r\n                //see if a fish was grabbed\r\n                if(fishes.length > 0) this.caught(fishes);\r\n                else this.returnToSurface();\r\n            });\r\n\r\n    }\r\n\r\n    /**\r\n     * Called to return cat to surface.\r\n     */\r\n    public returnToSurface() {\r\n        this._sprite.gotoAndPlay(Cat.ANIMATION.Idle);\r\n\r\n        //remove any lingering tweens\r\n        createjs.Tween.removeTweens(this._sprite);\r\n        const speed = (this.Y / 2) * this.Speed;\r\n        this._catYTween = createjs.Tween.get(this._sprite)\r\n            .wait(150)\r\n            .to({y:20}, speed, createjs.Ease.linear)\r\n            .call(() => {\r\n                //once the surface has been reached, allow x movement again\r\n                this.reachSurface();\r\n            });\r\n    }\r\n\r\n    public caught(fishes:Fish[]) {\r\n        console.log(\"I CAUGHT\");\r\n        if(fishes.length <= 0) return;\r\n        this._isRising = true;  \r\n        \r\n        let hasNewFish = false;\r\n\r\n        fishes.forEach(f => {\r\n            if(this._caughtFish.indexOf(f) != -1) return;\r\n            hasNewFish = true;\r\n            //grab the fish\r\n            f.catch();\r\n\r\n            //add fish to caught array\r\n            this._caughtFish.push(f);\r\n\r\n            //control the fish\r\n            f.Y = this.Y;\r\n        });\r\n        \r\n        console.log(\"I WAS CAUGHT, NOW RISING\");\r\n        console.log(\"FISH CAUGHT SPEED:\", this.Speed);\r\n\r\n        if(!hasNewFish) return;\r\n        \r\n        //if we grabbed a fish...\r\n        //go back up... slowly\r\n        createjs.Tween.removeTweens(this._sprite);\r\n        const speed = this.Y * this.Speed;\r\n        this._catYTween = createjs.Tween.get(this._sprite)\r\n            .wait(250)\r\n            .to({y:-20}, speed, createjs.Ease.linear)\r\n            .call(() => {\r\n                //once the surface has been reached, allow x movement again\r\n                this.reachSurface();\r\n                this._isRising = false;\r\n            });\r\n\r\n    }\r\n    public drop() {\r\n        //release the fish\r\n        this._caughtFish.forEach(f => f.release());\r\n        this._caughtFish = [];\r\n    }\r\n\r\n    /**Called when hit by an enemy. */\r\n    public injure() {\r\n        this._isInjured = true;\r\n        console.log(\"TAKING DAMAGE\");\r\n        //start hurt animation\r\n        //end any current tweening\r\n        createjs.Tween.removeTweens(this._sprite);\r\n        this._sprite.gotoAndPlay(Cat.ANIMATION.Ow);\r\n        this._catYTween = createjs.Tween.get(this._sprite)\r\n            .wait(15)\r\n            .to({y:20}, 500, createjs.Ease.linear)\r\n            .call(() => {\r\n                //once the surface has been reached, allow x movement again\r\n                this.reachSurface();\r\n                this._sprite.gotoAndPlay(Cat.ANIMATION.Idle);\r\n            });\r\n    }\r\n\r\n    /**Called when the cat tickles an enemy. */\r\n    public hitEnemy() {\r\n        this.injure();\r\n        this.drop();\r\n    }\r\n\r\n    public reachSurface() {\r\n        //if we have a fish, send to main logic\r\n        if(this._caughtFish != null) {\r\n            this._caughtFish.forEach(f => {\r\n                this.GameScreen.collectFish(f);\r\n            });\r\n            this._caughtFish = [];\r\n        }\r\n\r\n        //set flags\r\n        this._hasReachedSurface = true;\r\n        this._isInjured = false;\r\n        this._isRising = false;\r\n        this._isGrabbing = false;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    update(gameTime:number) {\r\n        //if our game logic is paused, no FISHING\r\n        if(this.GameScreen.IsGamelogicPaused) return;\r\n\r\n        super.update(gameTime);\r\n\r\n\r\n        //if we are rising, attempt to catch more fish\r\n        if(this._isRising && !this._isInjured) {\r\n            console.log(\"TRY TO GRAB\");\r\n            //try to grab a fish\r\n            const fishes = this.GameScreen.tryToGrabFishes(this.X , this.Y);\r\n            //see if a fish was grabbed\r\n            if(fishes.length > 0)\r\n                this.caught(fishes);\r\n        }\r\n\r\n        //test puffer damage\r\n        if(this._isRising || this._isGrabbing) {\r\n            //don't test again if injured\r\n            if(!this._isInjured) {\r\n                //test for puffer hit\r\n                const hasHitPuffer = this.GameScreen.hasHitAPuffer(this.X, this.Y);\r\n                if(hasHitPuffer) {\r\n                    this.hitEnemy();\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        //drag fish with us if we have any\r\n        if(this._caughtFish != null) {\r\n            this._caughtFish.forEach(f => {\r\n                f.Y = this.Y - 20;\r\n            });\r\n        }\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get GRAB_RANGE() { return 120; }\r\n    public static get ANIMATION() {\r\n        return Object.freeze({\r\n            \"Idle\" : \"kittyIdle\",\r\n            \"Death\" : \"kittyIdle\",\r\n            \"Grab\" : \"kittyIdle\",\r\n            \"Hold\" : \"kittyIdle\",\r\n            \"Ow\" : \"kittyIdle\"\r\n        });\r\n    }\r\n    // public static get ANIMATION() {\r\n    //     return Object.freeze({\r\n    //         \"Idle\" : \"cat_idle\",\r\n    //         \"Death\" : \"cat_death\",\r\n    //         \"Grab\" : \"cat_grab\",\r\n    //         \"Hold\" : \"cat_grab_hold\",\r\n    //         \"Ow\" : \"cat_ow\"\r\n    //     });\r\n    // }\r\n    public get Speed() { \r\n        const caughtFishMult = ((this._caughtFish.length > 0) ? 1 + (this._caughtFish.length + this._fishCaughtMultiplier) : 1);\r\n        console.log(caughtFishMult);\r\n\r\n        return caughtFishMult * this._speed;\r\n    }\r\n    public set Speed(value:number) { this._speed = value; }\r\n}","import { ICreateable, IUpdateable } from \"../Interfaces\";\r\nimport { GameScreen } from \"../screens/GameScreen\";\r\nimport { Game } from \"../Game\";\r\n\r\nexport class Entity implements ICreateable<Entity>, IUpdateable {\r\n    private _gameScreen:GameScreen;\r\n    protected _name:string;\r\n    protected _sprite:createjs.Sprite;\r\n    protected _direction:{ x:number, y:number };\r\n    private _scaling:number;\r\n\r\n    private _isIgnoringCollision:boolean;\r\n    private _ignoreCollisionTimer:number;\r\n\r\n    constructor(gameScreen:GameScreen, spritesheet:createjs.SpriteSheet) {\r\n        this._gameScreen = gameScreen;\r\n        this._sprite = new createjs.Sprite(spritesheet);\r\n        this._direction = { x:1, y:1 };\r\n\r\n        this._isIgnoringCollision = false;\r\n        this._ignoreCollisionTimer = 0;\r\n\r\n        //get the game scale\r\n        this._scaling = this._gameScreen.Game.Scaling;\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public create(container:createjs.Container):Entity {\r\n        // (this._sprite as any).scale = this._scaling;\r\n\r\n        //move to main container\r\n        if(container == null)\r\n            this._gameScreen.Game.Stage.addChild(this._sprite);\r\n        else\r\n            container.addChild(this._sprite);\r\n        return this;\r\n    }\r\n\r\n    public destroy():Entity {\r\n        if(this._sprite == null || this._sprite.parent == null) return null;\r\n\r\n        //remove from main container\r\n        this._sprite.parent.removeChild(this._sprite);\r\n\r\n        return this;\r\n    }\r\n\r\n    public update(gameTime:number) {\r\n\r\n         //listen for collision ignore\r\n        if(this._isIgnoringCollision) {\r\n            this._ignoreCollisionTimer++;\r\n\r\n            if(this._ignoreCollisionTimer > Entity.IGNORE_COLLISION)\r\n                this._isIgnoringCollision = false;\r\n        }\r\n    }\r\n\r\n    protected startIgnoreCollision() {\r\n        this._isIgnoringCollision = true\r\n    }\r\n\r\n    protected testStageBounds(artificialReg:{x:number, y:number} = null) {\r\n        let reg = { x:this._sprite.regX, y:this._sprite.regY };\r\n        if(artificialReg != null) {\r\n            reg = {\r\n                x: (this._direction.x > 0) ? this.Bounds.Width * artificialReg.x : (this.Bounds.Width * (1 - artificialReg.x)),\r\n                y: (this._direction.y > 0) ? this.Bounds.Height * artificialReg.y : (this.Bounds.Height * (1 - artificialReg.y))\r\n            }\r\n        }\r\n        // const bounds = { width:this._game.StageWidth, height: this._game.StageHeight };\r\n        const bounds = { width:this._gameScreen.Game.StageWidth, height: this._gameScreen.Game.StageHeight };\r\n        const extents = {   \r\n            x:(this._direction.x > 0) ? (this.Bounds.Width - reg.x) : -reg.x, \r\n            y:(this._direction.y > 0) ? (this.Bounds.Height - reg.y) : -reg.y \r\n        };\r\n\r\n        //test walls\r\n        if((this.X + extents.x) > bounds.width) return Entity.HIT.Right;\r\n        else if(this.X + extents.x < 0) return Entity.HIT.Left;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get IGNORE_COLLISION() { return 20; }\r\n    public static get HIT() { return Object.freeze({Top:0, Right:1, Bottom:2, Left:3}); }\r\n\r\n    protected get GameScreen() { return this._gameScreen; }\r\n\r\n    public get Sprite() { return this._sprite; }\r\n    public get Parent() { return this._sprite.parent; }\r\n\r\n    public get X() { return this._sprite.x; }\r\n    public set X(value) { this._sprite.x = value; }\r\n    public get Y() { return this._sprite.y; }\r\n    public set Y(value) { this._sprite.y = value; }\r\n\r\n    public set DirectionX(value) { \r\n        const lastX = this._direction.x;\r\n        this._direction.x = value; \r\n        //flip sprite if our direction has changed\r\n        if(this._direction.x != lastX) this._sprite.scaleX *= -1;\r\n    }\r\n\r\n    public get Bounds() { \r\n        let bounds = this._sprite.getBounds();\r\n        return  { Width:bounds.width, Height:bounds.height };\r\n    }\r\n\r\n    public get IsIgnoringCollision() { return this._isIgnoringCollision; }\r\n}","import { Game } from \"../Game\";\r\nimport { Entity } from \"./Entity\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { IEnableable } from \"../Interfaces\";\r\nimport { Logging } from \"../Functions\";\r\nimport { GameScreen } from \"../screens/GameScreen\";\r\n\r\nexport class Fish extends Entity implements IEnableable {\r\n    private _speed:number;\r\n    private _naturalY:number;\r\n\r\n    private _isCaught:boolean;\r\n    private _isReturning:boolean;\r\n\r\n    constructor(gameScreen:GameScreen, spritesheet?:createjs.SpriteSheet) {\r\n        super(gameScreen, spritesheet || LoadManager.Spritesheets.Peeper_Spritesheet);\r\n        this._speed = 1;\r\n\r\n        this._isCaught = false;\r\n        this._isReturning = false;\r\n\r\n        this._sprite.gotoAndPlay(Fish.ANIMATION.Slow);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    \r\n\r\n\r\n    /***************/\r\n    /*   ACTIONS   */\r\n    /***************/\r\n    public setNaturalY() {\r\n        this._naturalY = this.Y;\r\n    }\r\n\r\n    public catch() {\r\n        if(this._isCaught) return;\r\n        \r\n        Logging.message(\"Fish was grabbed!\");\r\n        this._isCaught = true;\r\n\r\n        this._sprite.gotoAndPlay(Fish.ANIMATION.Panic);\r\n    }\r\n\r\n    public release() {\r\n        this._isCaught = false;\r\n        //return to natural y position\r\n        this._isReturning = true;\r\n    }\r\n\r\n\r\n    /**Test to see if global position hits sprite. */\r\n    public testHit(x:number, y:number):boolean {\r\n        return this._sprite.hitTest(x, y);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    destroy() {\r\n        //reset flags\r\n        this._isCaught = false;\r\n        //reset animations\r\n        this._sprite.gotoAndPlay(Fish.ANIMATION.Slow);\r\n\r\n        this.disable();\r\n        return super.destroy();\r\n    }\r\n\r\n    update(gameTime:number) {\r\n        super.update(gameTime);\r\n\r\n        //move the fishy\r\n        if(!this._isCaught)\r\n            this.X += this._speed * gameTime * this._direction.x;\r\n        //--if returning, swim to natural y\r\n        if(this._isReturning) {\r\n            //if we are still far away, swim!\r\n            if(Math.abs(this.Y - this._naturalY) > 30) {\r\n                const isNeg = this.Y > this._naturalY;\r\n                this.Y += (isNeg) ? -10 : 10;\r\n            }\r\n            else {\r\n                this._isReturning = false;\r\n                this._sprite.gotoAndPlay(Fish.ANIMATION.Slow);\r\n            }\r\n        }\r\n\r\n        //test collision\r\n        if(!this.IsIgnoringCollision) {\r\n\r\n            //if fish hits the edge, flip direction\r\n            const hit = this.testStageBounds({x:0.5, y:0.5});\r\n            switch(hit) {\r\n                case Entity.HIT.Right:\r\n                    this._direction.x *= -1;\r\n                    this._sprite.scaleX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X -= 5 - this.Bounds.Width;\r\n                    break;\r\n                case Entity.HIT.Left:\r\n                    this._direction.x *= -1;\r\n                    this._sprite.scaleX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X += 5 - this.Bounds.Width;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    enable() {\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get ANIMATION() {\r\n        return Object.freeze({\r\n            \"Slow\" : \"fishIdle\",\r\n            \"Fast\" : \"fishIdle\",\r\n            \"Panic\" : \"fishPanic\"\r\n        });\r\n    }\r\n    public get Speed() { return this._speed; }\r\n    public set Speed(value:number) { this._speed = value; }\r\n}","import { Game } from \"../Game\";\r\nimport { Entity } from \"./Entity\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { IEnableable } from \"../Interfaces\";\r\nimport { Logging } from \"../Functions\";\r\nimport { GameScreen } from \"../screens/GameScreen\";\r\nimport { Cat } from \"./Cat\";\r\n\r\nexport class Puffer extends Entity implements IEnableable {\r\n    public get Type() { return \"Puffer\"; }\r\n    \r\n    private _speed:number;\r\n    private _cooldown:number = 40;\r\n    private _currentCooldown:number = 0;\r\n\r\n    private _isCaught:boolean;\r\n\r\n    constructor(gameScreen:GameScreen) {\r\n        super(gameScreen, LoadManager.Spritesheets.Puffer_Spritesheet);\r\n        this._speed = 1;\r\n\r\n        this._isCaught = false;\r\n\r\n        this._sprite.gotoAndPlay(Puffer.ANIMATION.Idle);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    \r\n\r\n\r\n    /***************/\r\n    /*   ACTIONS   */\r\n    /***************/\r\n    public puff() {\r\n        this._sprite.gotoAndPlay(Puffer.ANIMATION.Angry);\r\n        //start cooldown\r\n        this._currentCooldown = this._cooldown;\r\n    }\r\n\r\n\r\n    /**Test to see if global position hits sprite. */\r\n    public testHit(x:number, y:number, cat:Cat):boolean {\r\n        return (x >= this.X - cat.Bounds.Width && x <= this.X + this.Bounds.Width \r\n            && y >= this.Y - cat.Bounds.Height && y <= this.Y + this.Bounds.Height) ;\r\n        // return this._sprite.hitTest(x, y);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    destroy() {\r\n        //reset flags\r\n        this._isCaught = false;\r\n        //reset animations\r\n        this._sprite.gotoAndPlay(Puffer.ANIMATION.Idle);\r\n\r\n        this.disable();\r\n        return super.destroy();\r\n    }\r\n\r\n    update(gameTime:number) {\r\n        super.update(gameTime);\r\n\r\n        //move the fishy\r\n        if(!this._isCaught)\r\n            this.X += this._speed * gameTime * this._direction.x;\r\n\r\n        //do cooldown\r\n        if(this._currentCooldown >= 0) {\r\n            this._currentCooldown--;\r\n            if(this._currentCooldown == 0) {\r\n                //reset animations\r\n                this._sprite.gotoAndPlay(Puffer.ANIMATION.Recover);\r\n            }\r\n        }\r\n\r\n        //test collision\r\n        if(!this.IsIgnoringCollision) {\r\n\r\n            //if fish hits the edge, flip direction\r\n            const hit = this.testStageBounds({x:0.5, y:0.5});\r\n            switch(hit) {\r\n                case Entity.HIT.Right:\r\n                    this._direction.x *= -1;\r\n                    this._sprite.scaleX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X -= 5 - this.Bounds.Width;\r\n                    break;\r\n                case Entity.HIT.Left:\r\n                    this._direction.x *= -1;\r\n                    this._sprite.scaleX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X += 5 - this.Bounds.Width;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    enable() {\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get ANIMATION() {\r\n        return Object.freeze({\r\n            \"Idle\" : \"pufferIdle\",\r\n            \"Angry\" : \"pufferAngry\",\r\n            \"Recover\" : \"pufferRecover\"\r\n        });\r\n    }\r\n    public get Speed() { return this._speed; }\r\n    public set Speed(value:number) { this._speed = value; }\r\n}","import { LoadManager } from \"../../managers/LoadManager\";\r\nimport { Fish } from \"../Fish\";\r\nimport { GameScreen } from \"../../screens/GameScreen\";\r\n\r\nexport class Persephone extends Fish {\r\n\r\n    constructor(gameScreen:GameScreen) {\r\n        super(gameScreen, LoadManager.Spritesheets.Persephone_Spritesheet);\r\n        this._sprite.gotoAndPlay(Persephone.SPEC_ANIMATION.Idle);\r\n    }\r\n\r\n\r\n    public static get SPEC_ANIMATION() {\r\n        return Object.freeze({\r\n            \"Idle\" : \"persIdle\"\r\n        });\r\n    }\r\n\r\n}","import { Game } from \"./Game\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    const game = new Game(document.getElementById(\"game-canvas\") as HTMLCanvasElement);\r\n});","import { Screen } from \"../screens/Screen\";\r\n\r\nexport interface WorldsData {\r\n    worlds:LevelData[];\r\n}\r\n\r\nexport interface LevelData {\r\n    name:string;\r\n    tutorials?:string[];\r\n    background?:string;\r\n    data:any[];\r\n    duration?:number;\r\n    showScore?:boolean;\r\n    showRemainingFish?:boolean;\r\n}\r\n\r\nexport class DataManager {\r\n    private static _worldsData:WorldsData;\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Loads in the worlds data! */\r\n    public static loadWorldsData(fileLocation:string) {\r\n        return new Promise<WorldsData>(async(res, rej) => {\r\n            await fetch(fileLocation)\r\n                .then(blob => blob.json())\r\n                .then(json => {\r\n                    this._worldsData = json;\r\n                    res(this._worldsData);\r\n                })\r\n                .catch(err => {\r\n                    rej(\"Could not load world data! \" + err);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**Returns the level data received by the given index. */\r\n    public static getLevelDataByIndex(index:number) {\r\n        //flatten level data, and get data\r\n        let flatten = [].concat.apply([], DataManager._worldsData.worlds);\r\n        return flatten[index];\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get WorldsData():WorldsData { return DataManager._worldsData; }\r\n}","export class LoadManager {\r\n    public static get ASSETS_LOADED():string { return \"onAssetsLoaded\"; }\r\n    public static get ASSETS_FAILED():string { return \"onAssetsFailed\"; }\r\n    public static get ASSETS_UPDATED():string { return \"onAssetsUpdated\"; }\r\n\r\n    public static Spritesheets:{ [key:string]:createjs.SpriteSheet } = {};\r\n    public static Images:{ [key:string]:createjs.Bitmap } = {};\r\n\r\n    private static _stage:createjs.StageGL;\r\n    private static _preloadManager:createjs.LoadQueue;\r\n    private static _sheetsTotal:number = 0;\r\n    private static _sheetsLoaded:number = 0;\r\n\r\n    private static _percentage:number = 0;\r\n    private static _totalAssetsLoaded:number = 0;\r\n    private static _totalAssets:number = 0;\r\n\r\n    private static AssetsLoadedEvent:any = new (createjs as any).Event(LoadManager.ASSETS_LOADED, false, true);\r\n    private static AssetsFailedEvent:any = new (createjs as any).Event(LoadManager.ASSETS_FAILED, false, true);\r\n    private static AssetsUpdatedEvent:any = new (createjs as any).Event(LoadManager.ASSETS_UPDATED, false, true);\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public static reset() {\r\n        LoadManager._sheetsTotal = 0;\r\n        LoadManager._sheetsLoaded = 0;\r\n\r\n        LoadManager._percentage = 0;\r\n        LoadManager._totalAssetsLoaded = 0;\r\n        LoadManager._totalAssets = 0;\r\n    }\r\n\r\n    public static loadAssets(src:string, stage:createjs.StageGL) {\r\n        LoadManager.reset();\r\n        LoadManager._stage = stage;\r\n\r\n        return new Promise(async(res, rej) => {\r\n            LoadManager._preloadManager = new createjs.LoadQueue();\r\n\r\n            //setup sound controllers\r\n            createjs.Sound.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin, createjs.FlashAudioPlugin]);\r\n            createjs.Sound.alternateExtensions = [\"mp3\",\"wav\"];\r\n            LoadManager._preloadManager.installPlugin(createjs.Sound);\r\n\r\n            //setup listeners\r\n            (LoadManager._preloadManager as any).on(\"fileload\", LoadManager._onLoaded, LoadManager);\r\n            (LoadManager._preloadManager as any).on(\"complete\", LoadManager._onComplete, LoadManager);\r\n            (LoadManager._preloadManager as any).on(\"error\", LoadManager._onError, LoadManager);\r\n\r\n            //get the manifest\r\n            fetch(src)\r\n                .then(blob => blob.json())\r\n                .then(data => {\r\n                    //load the manifest\r\n                    LoadManager._preloadManager.setMaxConnections(1);\r\n                    LoadManager._preloadManager.loadManifest(data);\r\n\r\n                    (LoadManager._stage as any).addEventListener(LoadManager.ASSETS_LOADED, () => {\r\n                        res();\r\n                    });\r\n                })\r\n                .catch(() => {\r\n                    LoadManager.emitErrorEvent();\r\n                    rej(\"Could not load assets!\");\r\n                });\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    public static emitLoadedEvent() {\r\n        if(LoadManager._stage != null) (LoadManager._stage as any).dispatchEvent(LoadManager.AssetsLoadedEvent);\r\n    }\r\n    public static emitErrorEvent() {\r\n        if(LoadManager._stage != null) (LoadManager._stage as any).dispatchEvent(LoadManager.AssetsFailedEvent);\r\n    }\r\n    public static emitUpdatedEvent() {\r\n        LoadManager._percentage = parseFloat((LoadManager._preloadManager.getItems(true).length / LoadManager._preloadManager.getItems(false).length).toFixed(2));\r\n        if(LoadManager._stage != null) (LoadManager._stage as any).dispatchEvent(LoadManager.AssetsUpdatedEvent);\r\n    }\r\n\r\n\r\n    private static _loadedSheet(name:string, sheet:createjs.SpriteSheet) {\r\n        LoadManager.Spritesheets[name] = sheet;\r\n\r\n        LoadManager._sheetsLoaded++;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    private static _onLoaded(e) {\r\n\r\n        console.log(\"asset loaded: \" + e.item.src + \" type: \" + e.item.type);\r\n\r\n        switch(e.item.type) {\r\n            case (createjs as any).Types.JAVASCRIPT: {\r\n                //load the spritesheet\r\n                LoadManager._sheetsTotal++;\r\n                \r\n                const sheet = (window[e.item.id] as any)._SpriteSheet;\r\n\r\n                // listen for spritesheet to load\r\n                if(!sheet.complete) {\r\n                    sheet.on(\"complete\", (ev:any) => {\r\n                        LoadManager._loadedSheet(e.item.id, sheet);\r\n                        ev.remove();\r\n                    })\r\n                }\r\n                else LoadManager._loadedSheet(e.item.id, sheet);\r\n                break\r\n            }\r\n            case (createjs as any).Types.IMAGE: {\r\n                //build the bitmap\r\n                LoadManager.Images[e.item.id] = new createjs.Bitmap(e.item.src);\r\n            }\r\n        }\r\n\r\n\r\n\r\n        //update event\r\n        LoadManager.emitUpdatedEvent();\r\n    }\r\n\r\n    private static _onComplete(e) {\r\n        //remove all preLoadManager events\r\n        (LoadManager._preloadManager as any).removeAllEventListeners();\r\n        \r\n        //make sure all spritesheets are loaded\r\n        if(LoadManager._sheetsLoaded < LoadManager._sheetsTotal) {\r\n            const loadInterval = setInterval((ev:any) => {\r\n                //see if they are loaded\r\n                if(LoadManager._sheetsLoaded >= LoadManager._sheetsTotal) {\r\n                    e.remove();\r\n                    // window.clearInterval(loadInterval);\r\n                    LoadManager.emitLoadedEvent();\r\n                }\r\n            }, 100)\r\n        }\r\n        else LoadManager.emitLoadedEvent();\r\n    }\r\n\r\n    private static _onError(e) {\r\n        LoadManager.emitErrorEvent();\r\n    }\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get Percentage():number { return LoadManager._percentage; }\r\n    \r\n\r\n\r\n\r\n}","import { Screen } from \"../screens/Screen\";\r\n\r\nexport class ScreenManager {\r\n    private static _screensLookup:{ [key:string]:Screen } = { };\r\n    private static _currentScreen:Screen = null;\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Registers a screen into the Screen Manager.  Uses a key to associate it. */\r\n    public static registerScreen(key:string, screen:Screen):void {\r\n        //if we don't have this screen, add it\r\n        if(ScreenManager._screensLookup[key] == null)\r\n            ScreenManager._screensLookup[key] = screen;\r\n    }\r\n\r\n    /**Unregisters a screen from the Screen Manager. */\r\n    public static unregisterScreen(key:string):boolean {\r\n        if(ScreenManager._screensLookup[key] == null) return false;\r\n\r\n        ScreenManager._screensLookup[key] = null;\r\n        delete ScreenManager._screensLookup[key];\r\n        return true;\r\n    }\r\n\r\n    /**Sets the current screen.  Can be done with the screen itself or an associative key. */\r\n    public static setCurrentScreen(screen:string | Screen, stage:createjs.StageGL):Promise<void> {\r\n        let tempScreen = null;\r\n        if(screen instanceof Screen) tempScreen = screen;\r\n        else tempScreen = ScreenManager._screensLookup[screen];\r\n\r\n        //if we did not find a screen, do not follow through\r\n        if(tempScreen == null) return Promise.resolve();\r\n\r\n        let promises = [];\r\n        //if we have a previous screen, wait for it to fade out\r\n        if(ScreenManager._currentScreen != null)\r\n        promises.push(\r\n            new Promise(async(res) => {\r\n                //fade out\r\n                createjs.Tween\r\n                    .get(ScreenManager._currentScreen.Container)\r\n                    .to({ alpha:0 }, 500, createjs.Ease.linear)\r\n                    .call(() => {\r\n                        ScreenManager._currentScreen.destroy();\r\n                        ScreenManager._currentScreen.disable();\r\n                        res();\r\n                    });\r\n            })\r\n        );\r\n\r\n\r\n        //wait for certain actions to finish\r\n        return new Promise(async(res) => {\r\n            //wait for promises to finish\r\n            await Promise.all(promises);\r\n\r\n            //now add in the new one\r\n            ScreenManager._currentScreen = tempScreen;\r\n            ScreenManager._currentScreen.create(stage);\r\n            ScreenManager._currentScreen.Container.alpha = 0;\r\n            ScreenManager._currentScreen.disable(); //disable until ready\r\n            console.log(\"FADE IN\")\r\n            //fade in\r\n            createjs.Tween\r\n                .get(ScreenManager._currentScreen.Container)\r\n                .to({ alpha:1 }, 1200, createjs.Ease.linear)\r\n                .call(() => {\r\n                    console.log(\"DONE\");\r\n                    ScreenManager._currentScreen.enable();\r\n                    res();\r\n                });\r\n\r\n        });\r\n    }\r\n\r\n    public static getScreenByKey(key:string):Screen {\r\n        return ScreenManager._screensLookup[key];\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get AllScreens() { return ScreenManager._screensLookup; }\r\n    public static get CurrentScreen() { return ScreenManager._currentScreen; }\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Container } from \"../ui/display/Container\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { Game } from \"../Game\";\r\n\r\nexport class EndScreen extends Screen {\r\n    private _game:Game;\r\n    private _splash:createjs.Shape;\r\n    private _buttonsContainer:Container;\r\n\r\n    private _highScoreSpr:createjs.Sprite;\r\n    private _completeSpr:createjs.DisplayObject;\r\n    private _failSpr:createjs.DisplayObject;\r\n    private _scoreContainer:Container;\r\n\r\n    //scorebox holders\r\n    private _fishRemainContainer:createjs.Container;\r\n    private _timeContainer:createjs.Container;\r\n    private _combosContainer:createjs.Container;\r\n\r\n    //flags\r\n    private _isFail:boolean;\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n\r\n        this._game = game;\r\n        this._isFail = false;\r\n\r\n        //layout stuff\r\n        const bg = new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"bg\");\r\n        this._container.addChild(bg);\r\n\r\n        this._buttonsContainer = new Container(Container.LAYOUT_OPTIONS.ColumnLeftBottom);\r\n        this._buttonsContainer.addMany({\r\n            btnTryAgain : new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"btnTryAgain\"),\r\n            btnNextLevel : new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"btnNextLevel\"),\r\n            btnMainMenu : new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"btnMainMenu\"),\r\n        });\r\n        this._container.addChild(this._buttonsContainer.Container);\r\n\r\n        // //conditionals\r\n        // //--high score\r\n        // this._highScoreSpr = new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"highScore\");\r\n        // this._highScoreSpr.x = this._game.StageWidth / 2 - (this._highScoreSpr.getBounds().width / 2);\r\n        // this._highScoreSpr.y = 60;\r\n        // this._container.addChild(this._highScoreSpr);\r\n        //--conditional text\r\n        this._completeSpr = new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"complete\");\r\n        this._failSpr = new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"failure\");\r\n        this._completeSpr.x = this._game.StageWidth / 2 - (this._completeSpr.getBounds().width / 2);\r\n        this._completeSpr.y = 220;\r\n        this._failSpr.x = this._game.StageWidth / 2 - (this._failSpr.getBounds().width / 2);\r\n        this._failSpr.y = this._game.StageHeight * 0.45;\r\n        this._container.addChild(this._completeSpr);\r\n        this._container.addChild(this._failSpr);\r\n        // --score container\r\n        // this._scoreContainer = new Container(Container.LAYOUT_OPTIONS.ColumnCenterCenter);\r\n        // this._scoreContainer.addMany({\r\n        //     fishRemain: new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"fishRemain\"),\r\n        //     time: new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"time\"),\r\n        //     combos: new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"combos\"),\r\n        //     line: new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"line\")\r\n        // });\r\n        // const scoreX = 250;\r\n        // this._scoreContainer.Sprites[\"fishRemain\"].x = scoreX - (this._scoreContainer.Sprites[\"fishRemain\"].getBounds().width);\r\n        // this._scoreContainer.Sprites[\"time\"].x = scoreX - (this._scoreContainer.Sprites[\"time\"].getBounds().width);\r\n        // this._scoreContainer.Sprites[\"combos\"].x = scoreX - (this._scoreContainer.Sprites[\"combos\"].getBounds().width);\r\n        // this._scoreContainer.Sprites[\"line\"].x = this._game.StageWidth - this._scoreContainer.Sprites[\"line\"].getBounds().width - 30;\r\n        // this._scoreContainer.Sprites[\"line\"].y += 15;\r\n        // this._container.addChild(this._scoreContainer.Container);\r\n\r\n        //line them up\r\n        // this._fishRemainContainer = new createjs.Container();\r\n        // this._timeContainer = new createjs.Container();\r\n        // this._combosContainer = new createjs.Container();\r\n        // this._container.addChild(this._fishRemainContainer);\r\n        // this._container.addChild(this._timeContainer);\r\n        // this._container.addChild(this._combosContainer);\r\n\r\n        // this._fishRemainContainer.x = scoreX + 20;\r\n        // this._fishRemainContainer.y = this._scoreContainer.Sprites[\"fishRemain\"].y;\r\n        // this._timeContainer.x = scoreX + 20;\r\n        // this._timeContainer.y = this._scoreContainer.Sprites[\"time\"].y;\r\n        // this._combosContainer.x = scoreX + 20;\r\n        // this._combosContainer.y = this._scoreContainer.Sprites[\"combos\"].y;\r\n\r\n\r\n        // const peeper = new createjs.Sprite(LoadManager.Spritesheets.Kitty_Spritesheet);\r\n        // peeper.gotoAndPlay(\"kittyIdle\");\r\n        // this._container.addChild(peeper);\r\n\r\n        \r\n        \r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    create(stage:createjs.StageGL):Screen {\r\n        \r\n        \r\n        //for testing\r\n        (this._container as any).on(\"click\", (e) => {\r\n            ScreenManager.setCurrentScreen(\"menu\", stage);\r\n        }, this, true);       \r\n        \r\n\r\n        return super.create(stage);\r\n    }\r\n\r\n\r\n    enable() {\r\n        super.enable();\r\n\r\n        //fake score data\r\n        // this._game.changeCurrentScore({ totalFish:10, time:150, combos:2 });\r\n\r\n        // //toggle data based on current level stats\r\n        // const levelData = this._game.CurrentLevelData;\r\n        // //look for flags\r\n        // const showFishRemain = (levelData.showRemainingFish != null && !levelData.showRemainingFish) ? false : true;\r\n        // const showScore = (levelData.showScore != null && !levelData.showScore) ? false : true;\r\n        // const showTime = (levelData.duration != null);\r\n\r\n\r\n        // //layout score data\r\n        // const { totalFish, time, combos } = this._game.CurrentScoreData;\r\n        // const txtFishRemain = Sprites.generateBitmapText((showFishRemain) ? totalFish.toString() : \"-\", LoadManager.Spritesheets.TypographyWhite);\r\n        // this._fishRemainContainer.addChild(txtFishRemain);\r\n        // const txtTime = Sprites.generateBitmapText((showTime) ? time.toString() : \"-\", LoadManager.Spritesheets.TypographyWhite);\r\n        // this._timeContainer.addChild(txtTime);\r\n        // const txtCombos = Sprites.generateBitmapText((showScore) ? combos.toString() : \"-\", LoadManager.Spritesheets.TypographyWhite);\r\n        // this._combosContainer.addChild(txtCombos);\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n        //kill score containers\r\n        // this._fishRemainContainer.removeAllChildren();\r\n        // this._timeContainer.removeAllChildren();\r\n        // this._combosContainer.removeAllChildren();\r\n\r\n        //toggle fail/success\r\n        this._completeSpr.visible = !this._isFail;\r\n        this._failSpr.visible = this._isFail;\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n}","import { TutorialCreator } from \"./TutorialCreator\";\r\nimport { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { ObjectPool } from \"../ObjectPool\";\r\nimport { Fish } from \"../entities/Fish\";\r\nimport { Persephone } from \"../entities/specials/Persephone\";\r\nimport { Puffer } from \"../entities/Puffer\";\r\nimport { Cat } from \"../entities/Cat\";\r\nimport { Game } from \"../Game\";\r\nimport { Container } from \"../ui/display/Container\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { Logging } from \"../Functions\";\r\nimport { LevelData } from \"../managers/DataManager\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { GameScore } from \"../ui/partials/GameScore\";\r\n\r\nexport class GameScreen extends Screen {\r\n    private _game:Game;\r\n\r\n    //create containers\r\n    private _staticContainer:Container;\r\n    private _fishContainer:createjs.Container;\r\n    private _pufferContainer:createjs.Container;\r\n\r\n    private _winContainer:createjs.Container;\r\n    private _winBanner:createjs.Shape;\r\n    private _winText:createjs.BitmapText;\r\n\r\n    private _gameScore:GameScore;\r\n    private _tutorialCreator:TutorialCreator;\r\n\r\n    private _cat:Cat;\r\n    private _fishes:Fish[];\r\n    private _puffers:Puffer[];\r\n\r\n    private _remainingFish:number;\r\n\r\n    private _pauseLogic:Boolean;\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n        this._game = game;\r\n        this._fishes = [];\r\n        this._puffers = [];\r\n        this._remainingFish = -1;\r\n\r\n        //create object pool\r\n        ObjectPool.createPoolObject(new Cat(this), POOL.CAT)\r\n        for(let i = 0; i < 120; i++) {\r\n            ObjectPool.createPoolObject(new Fish(this), POOL.FISH);\r\n        }\r\n        for(let i = 0; i < 30; i++) {\r\n            ObjectPool.createPoolObject(new Puffer(this), POOL.PUFFERFISH)\r\n        }\r\n        ObjectPool.createPoolObject(new Persephone(this), POOL.PERSEPHONE);\r\n\r\n\r\n        //pool out static kitty\r\n        this._cat = (ObjectPool.checkout(POOL.CAT) as Cat);\r\n        this._cat.X = 290;\r\n        this._cat.Y = 70;\r\n\r\n        //create containers\r\n        this._staticContainer = new Container();\r\n        this._staticContainer.addMany({\r\n            bg : new createjs.Sprite(LoadManager.Spritesheets.BG_Spritesheet, \"bg1\")\r\n        });\r\n\r\n        this._fishContainer = new createjs.Container();\r\n        this._pufferContainer = new createjs.Container();\r\n\r\n        this._winContainer = new createjs.Container();\r\n\r\n        this._gameScore = new GameScore(this._game);\r\n        this._tutorialCreator = new TutorialCreator(this._game, this);\r\n\r\n        this._pauseLogic = false;\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n\r\n    /**Attempts to grab a fish.  Returns any fish that are touching the global position. */\r\n    public tryToGrabFishes(x:number, y:number):Fish[] {\r\n        let fishes = [];\r\n\r\n\r\n        const hitObjects = this._container.getObjectsUnderPoint(x, y, 0);\r\n        for(let i = 0; i < this._fishes.length; i++) {\r\n            const fish = this._fishes[i];\r\n            if(hitObjects.indexOf(fish.Sprite) != -1) {\r\n                fishes.push(fish);\r\n            }\r\n        }\r\n\r\n        return fishes;\r\n\r\n    }\r\n\r\n    /**Tests to see if we hit a puffer. */\r\n    public hasHitAPuffer(x:number, y:number):Boolean {\r\n        // console.log(\"TESTING PUFF\");\r\n\r\n        let hasHitPuffer = false;\r\n        const hitObjects = this._container.getObjectsUnderPoint(x, y, 0);\r\n        for(let i = 0; i < this._puffers.length; i++) {\r\n            if(hitObjects.indexOf(this._puffers[i].Sprite) != -1) {\r\n                console.log (\"I HIT A PUFF\");\r\n                this._puffers[i].puff();\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public collectFish(fish:Fish) {\r\n        //get fish\r\n        Logging.success(\"GOT FISH!\");\r\n\r\n        const killedFish = fish.destroy();\r\n\r\n        //decrement fish counter -- make sure we didn't make an error\r\n        if(killedFish != null) {\r\n            this._remainingFish--;\r\n            this._fishes.splice(this._fishes.indexOf(killedFish as Fish), 1);\r\n\r\n            //if all our fish are gone, end the game!\r\n            if(this._remainingFish <= 0) {\r\n                //win game!\r\n                Logging.success(\"GAME IS OVER!\");\r\n                //call win\r\n                this.win();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public win() {\r\n        //disable controls\r\n        this.disable();\r\n        //set the score\r\n        this._game.changeCurrentScore({\r\n            totalFish: this._fishes.length,\r\n            combos: 10,\r\n            time: 100\r\n        });\r\n        \r\n        //show win banner\r\n        createjs.Tween.get(this._winContainer)\r\n            .to({y:this._game.StageHeight / 2 - 25}, 600, createjs.Ease.elasticOut)\r\n            .wait(2000)\r\n            .call(() => {\r\n                //transition to end screen\r\n                ScreenManager.setCurrentScreen(\"end\", this._game.Stage);\r\n                // ScreenManager.setCurrentScreen(\"menu\", this._game.Stage);\r\n\r\n                //reset game data\r\n                this.reset();\r\n            });\r\n    }\r\n\r\n    public pauseGameLogic() {\r\n        this._pauseLogic = true;\r\n    }\r\n\r\n    public unpauseGameLogic() {\r\n        this._pauseLogic = false;\r\n    }\r\n\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n        super.create(stage);\r\n        //add stuff\r\n        this._staticContainer.checkoutSprites();\r\n        this._staticContainer.Sprites.bg.y = 0;\r\n        this._container.addChild(this._staticContainer.Container);\r\n\r\n        this._container.addChild(this._fishContainer);\r\n        this._container.addChild(this._pufferContainer);\r\n\r\n        //add conditional text\r\n        this._winBanner = new createjs.Shape();\r\n        this._winBanner.graphics.beginFill(\"black\");\r\n        this._winBanner.graphics.drawRect(0, 0, this._game.StageWidth, 50);\r\n        this._winBanner.cache(0, 0, this._game.StageWidth, 50);\r\n        this._winContainer.addChild(this._winBanner);\r\n        this._winText = Sprites.generateBitmapText(\"Win!\", LoadManager.Spritesheets.TypographyWhite);\r\n        this._winContainer.addChild(this._winText);\r\n        this._winText.x = (this._game.StageWidth / 2) - (this._winText.getBounds().width / 2);\r\n\r\n        this._container.addChild(this._winContainer);\r\n        this._winContainer. y = this._game.StageHeight + 50;\r\n        this._winContainer.mouseEnabled = false;\r\n\r\n        \r\n        this._cat.create(this._container);\r\n\r\n\r\n        //testing\r\n        // const puffer = new createjs.Sprite(LoadManager.Spritesheets.Puffer_Spritesheet, \"pufferIdle\");\r\n        // puffer.x = 100;\r\n        // puffer.y = 200;\r\n        // (puffer as any).on(\"click\", () => {\r\n        //     puffer.gotoAndPlay(\"pufferAngry\")\r\n        // })\r\n        // this._container.addChild(puffer);\r\n\r\n\r\n        //add level data if it exists\r\n        if(this._game.CurrentLevelData != null) {\r\n            //load in critters\r\n            for(let i = 0; i < this._game.CurrentLevelData.data.length; i++) {\r\n                const data = this._game.CurrentLevelData.data[i];\r\n                switch(data.id) {\r\n                    case POOL.FISH:\r\n                    case POOL.PERSEPHONE:\r\n                        const fish = (ObjectPool.checkout(data.id) as Fish);\r\n                        fish.create(this._fishContainer);\r\n                        if(data.speed != null) fish.Speed = data.speed; //set variables\r\n                        if(data.x != null) fish.X = data.x * this._game.Scaling;\r\n                        if(data.y != null) fish.Y = data.y * this._game.Scaling;\r\n                        // if(data.x != null) fish.X = data.x;\r\n                        // if(data.y != null) fish.Y = data.y;\r\n                        if(data.flip != null && data.flip) fish.DirectionX = -1;\r\n                        fish.setNaturalY();\r\n                        this._fishes.push(fish);\r\n                        break;\r\n                    case POOL.PUFFERFISH:\r\n                        const puffer = (ObjectPool.checkout(POOL.PUFFERFISH) as Puffer);\r\n                        puffer.create(this._pufferContainer);\r\n                        if(data.speed != null) puffer.Speed = data.speed; //set variables\r\n                        if(data.x != null) puffer.X = data.x * this._game.Scaling;\r\n                        if(data.y != null) puffer.Y = data.y * this._game.Scaling;\r\n                        if(data.flip != null && data.flip) puffer.DirectionX = -1;\r\n                        this._puffers.push(puffer);\r\n                }      \r\n            }\r\n\r\n            //set fish total\r\n            this._remainingFish = this._fishes.length;\r\n        }\r\n        //get the level tutorials\r\n        if(this._game.CurrentLevelData.tutorials != null) {\r\n            this._tutorialCreator.queueTutorials(this._game.CurrentLevelData.tutorials);\r\n        }\r\n        //get the level background\r\n        if(this._game.CurrentLevelData.background != null) {\r\n            (this._staticContainer.Sprites[\"bg\"] as createjs.Sprite).gotoAndStop(this._game.CurrentLevelData.background);\r\n        }\r\n        else {\r\n            (this._staticContainer.Sprites[\"bg\"] as createjs.Sprite).gotoAndStop(\"bg1\");\r\n        }\r\n\r\n\r\n        //add the score\r\n        // this._gameScore.Container.y = this._game.StageHeight - 40;\r\n        // this._container.addChild(this._gameScore.Container);\r\n\r\n\r\n        //update the game HUD for this round\r\n        const levelData = this._game.CurrentLevelData;\r\n        console.log(this._game.CurrentLevelData);\r\n        const showScore = (levelData.showScore != null && !levelData.showScore) ? false : true;\r\n        const showTimer = (levelData.duration != null);\r\n        const showFishRemain = (levelData.showRemainingFish != null && !levelData.showRemainingFish) ? false : true;\r\n        this._gameScore.startHUD(showScore, showFishRemain, showTimer);\r\n\r\n        return null;\r\n    }\r\n\r\n    public destroy() {\r\n        this._cat.destroy();\r\n        this._fishes.forEach(f => {\r\n            f.destroy();\r\n            ObjectPool.return(f);\r\n        });\r\n        this._puffers.forEach(f => {\r\n            f.destroy();\r\n            ObjectPool.return(f);\r\n        });\r\n\r\n        ObjectPool.releaseAllObjects();\r\n\r\n        this._fishContainer.removeAllChildren();\r\n        this._pufferContainer.removeAllChildren();\r\n\r\n        this._fishes = [];\r\n\r\n        return super.destroy();\r\n    }\r\n\r\n    public update(gameTime:number) {\r\n        //if our logic is paused, do not do game loop\r\n        if(this._pauseLogic) return;\r\n\r\n        const normalizedTime = Math.min(1, gameTime) + 0.5;\r\n\r\n        //update entities\r\n        this._fishes.forEach(fish => {\r\n            fish.update(normalizedTime);\r\n        });\r\n        this._puffers.forEach(puffer => {\r\n            puffer.update(normalizedTime);\r\n        });\r\n\r\n        this._cat.update(normalizedTime);\r\n\r\n        //update the score\r\n        this._gameScore.update(gameTime);\r\n\r\n        super.update(gameTime);\r\n    }\r\n\r\n    public enable() {\r\n        (this._container as any).on(\"click\", this._cat.grab, this._cat);\r\n    }\r\n\r\n    public disable() {\r\n        (this._container as any).removeAllEventListeners();\r\n    }\r\n\r\n    public reset() {\r\n        this._fishes.forEach(f => f.destroy());\r\n        this._puffers.forEach(p => p.destroy());\r\n\r\n        this._fishes = [];\r\n        this._puffers = [];\r\n\r\n        this._cat.X = 290;\r\n\r\n        super.reset();\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Game() { return this._game; }\r\n    public get Cat() { return this._cat; }\r\n    public get Fishes() { return this._fishes; }\r\n    public get IsGamelogicPaused() { return this._pauseLogic; }\r\n}\r\n\r\n\r\n\r\nexport class POOL { \r\n    static get CAT() { return \"cat\"; }\r\n    static get FISH() { return \"fish\"; }\r\n    static get PUFFERFISH() { return \"puffer\"; }\r\n    static get PERSEPHONE() { return \"persephone\"; }\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { Game } from \"../Game\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\n\r\nexport class IntermediaryScreen extends Screen {\r\n    private _game:Game;\r\n    private _bg:createjs.Shape;\r\n    private _textContainer:createjs.Container;\r\n    private _txtSprite:createjs.DisplayObject;\r\n\r\n    private _text:string;\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n        this._game = game;\r\n\r\n        this._text = \"\";\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Chooses the screen to load in after the intermediary. */\r\n    public queueNextScreen(screenKey:string, duration:number=3000) {\r\n        const evt = window.setTimeout(() => {\r\n            //load the screen\r\n            ScreenManager.setCurrentScreen(screenKey, this._game.Stage);\r\n            //clear the timeout\r\n            window.clearTimeout(evt);\r\n        }, duration);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n        //add stuff\r\n        this._bg = new createjs.Shape();\r\n        this._bg.graphics.beginFill(\"#191919\");\r\n        this._bg.graphics.drawRect(0, 0, this._game.StageWidth, this._game.StageHeight);\r\n        this._bg.graphics.endFill();\r\n        this._bg.cache(0, 0, this._game.StageWidth, this._game.StageHeight);\r\n        this._container.addChild(this._bg);\r\n\r\n        this._textContainer = new createjs.Container();\r\n        this._container.addChild(this._textContainer);\r\n\r\n        if(this._text != \"\") {\r\n            //create the text\r\n            this._txtSprite = Sprites.generateBitmapText(this._text, LoadManager.Spritesheets.TypographyWhite);\r\n            (this._txtSprite as any).scale = 0.6;\r\n            //load into container\r\n            this._textContainer.addChild(this._txtSprite);\r\n    \r\n            //put container at bottom\r\n            this._textContainer.x = (this._game.StageWidth / 2) - ((this._txtSprite.getBounds().width / 2) * 0.6);\r\n            this._textContainer.y = (this._game.StageHeight / 2) - (this._txtSprite.getBounds().height / 2);\r\n        }\r\n\r\n        return super.create(stage);\r\n    }\r\n\r\n    public destroy() {\r\n        this._textContainer.removeAllChildren();\r\n\r\n        return super.destroy();\r\n    }\r\n\r\n    public enable() {\r\n        super.enable();\r\n\r\n        //for testing\r\n        (this._container as any).on(\"click\", (e) => {\r\n            ScreenManager.setCurrentScreen(\"menu\", this.Stage);\r\n        }, this, true);\r\n    }\r\n\r\n    public disable() {\r\n        super.disable();\r\n\r\n        this.reset();\r\n    }\r\n\r\n    public reset() {\r\n        this.Text = \"\";\r\n        super.reset();\r\n    }\r\n\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public set Text(value:string) {\r\n        this._text = value;\r\n    }\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { Layout } from \"../ui/display/Layout\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { Container } from \"../ui/display/Container\";\r\nimport { Logging } from \"../Functions\";\r\nimport { Game } from \"../Game\";\r\nimport { LevelSelectDisplay } from \"../ui/custom/LevelSelectDisplay\";\r\nimport { IntermediaryScreen } from \"./IntermediaryScreen\";\r\nimport { GameScreen } from \"./GameScreen\";\r\nimport { DataManager } from \"../managers/DataManager\";\r\n\r\nexport class MenuScreen extends Screen {\r\n    private _game:Game;\r\n    //containers\r\n    private _swipeContainer:createjs.Container;\r\n    private _staticContainer:Container;\r\n    // private _mainContainer:Container;\r\n    private _mainContainer:createjs.Container;\r\n    private _clearedContainer:Container;\r\n    private _optionsContainer:Container;\r\n\r\n    private _mainButtonsContainer:Container;\r\n    private _logo:createjs.DisplayObject;\r\n    private _fancyFish:createjs.Sprite;\r\n\r\n    //custom containers\r\n    private _levelSelectDisplay:LevelSelectDisplay;\r\n\r\n    //properties\r\n    private _swipeSpeed:number;\r\n    private _currentScreen:string;\r\n    private _initialSwipePos:{x:number, y:number};\r\n    private _dragTimer:any;\r\n\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n\r\n        this._game = game;\r\n\r\n        //setup swipe container -- holds all moving sprites\r\n        this._swipeContainer = new createjs.Container();\r\n\r\n        //setup static container\r\n        this._staticContainer = new Container();\r\n        const bg = new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"bg\");\r\n\r\n        this._staticContainer.addMany({\r\n            bg\r\n        });\r\n\r\n        //setup main container\r\n        this._mainContainer = new createjs.Container();\r\n        this._logo = new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"logo\");\r\n        this._logo.x = this._game.StageWidth - this._logo.getBounds().width - 20;\r\n        this._logo.y = this._game.StageHeight * 0.4;\r\n        this._mainContainer.addChild(this._logo);\r\n        this._mainButtonsContainer = new Container(Container.LAYOUT_OPTIONS.ColumnLeftBottom);\r\n        this._mainButtonsContainer.addMany({\r\n            btnNewGame : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnNewGame\"),\r\n            btnOptions : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnOptions\"),\r\n            btnLevelSelect : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnLevelSelect\"),\r\n            btnExit : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnExit\"),\r\n        });\r\n        this._mainContainer.addChild(this._mainButtonsContainer.Container);\r\n        this._fancyFish = new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"fancyFish\");\r\n        this._fancyFish.x = this._game.StageWidth - this._fancyFish.getBounds().width - 20;\r\n        this._fancyFish.y = this._game.StageHeight - this._fancyFish.getBounds().height - 20;\r\n        this._mainContainer.addChild(this._fancyFish);\r\n        // this._mainContainer.addMany({\r\n        //     logo : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"logo\"),\r\n        //     fishbowl : Sprites.Buttons.Fishbowl,\r\n        //     btnNewGame : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnNewGame\"),\r\n        //     btnOptions : Sprites.Buttons.Options,\r\n        //     btnLevelSelect : Sprites.Buttons.LevelSelect,\r\n        //     btnExit : Sprites.Buttons.Exit\r\n        // });\r\n\r\n        //setup options container\r\n        this._optionsContainer = new Container();\r\n        this._optionsContainer.addMany({\r\n            txtOptions : Sprites.generateBitmapText(\"Options\", LoadManager.Spritesheets.Typography),\r\n            btnClearData : Sprites.Buttons.ClearData\r\n        });\r\n        this._optionsContainer.Container.x -= this._game.StageWidth;\r\n\r\n        //setup cleared container\r\n        this._clearedContainer = new Container();\r\n        this._clearedContainer.add(\"txtCleared\", Sprites.generateBitmapText(\"Data successfully cleared!\", LoadManager.Spritesheets.Typography));\r\n        this._clearedContainer.Container.x -= this._game.StageWidth;\r\n        this._clearedContainer.Container.y -= this._game.StageHeight;\r\n\r\n        this._levelSelectDisplay = new LevelSelectDisplay(game);\r\n        this._levelSelectDisplay.Container.x += this._game.StageWidth;\r\n\r\n\r\n        //setup properties\r\n        this._swipeSpeed = 800;\r\n        this._currentScreen = \"main\";\r\n        this._initialSwipePos = { x:-1, y:-1 };\r\n\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    private _onNewGame() {\r\n        Logging.message(\"Go to new game!\");\r\n        \r\n        const data = DataManager.getLevelDataByIndex(0);\r\n        this._game.changeCurrentLevel(data);\r\n        \r\n        const intermediary = ScreenManager.getScreenByKey(\"intermediary\") as IntermediaryScreen;\r\n        new Promise(async(res) => {\r\n            intermediary.Text = data.name;\r\n            await ScreenManager.setCurrentScreen(intermediary, this.Stage);\r\n            intermediary.queueNextScreen(\"game\");\r\n\r\n            res();\r\n        });\r\n    }\r\n    private _onOptions() {\r\n        //go to options!\r\n        Logging.message(\"Go to options!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:this._game.StageWidth}, this._swipeSpeed, createjs.Ease.circOut);\r\n        this._currentScreen = \"options\";\r\n    }\r\n    private _onLevelSelect() {\r\n        Logging.message(\"Go to level select!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:-this._game.StageWidth}, this._swipeSpeed, createjs.Ease.circOut);\r\n        this._currentScreen = \"levelSelect\";\r\n    }\r\n    private _onExit() {\r\n        Logging.message(\"Go to exit!\");\r\n    }\r\n\r\n    private _onMain() {\r\n        Logging.message(\"Go to main!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:0}, this._swipeSpeed, createjs.Ease.bounceOut);\r\n        this._currentScreen = \"main\";\r\n    }\r\n\r\n    private _onClearData() {\r\n        Logging.success(\"Cleared data!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:this._game.StageWidth, y:this._game.StageHeight}, this._swipeSpeed, createjs.Ease.cubicIn);\r\n        // this._currentScreen = \"cleared\"\r\n        let e = window.setTimeout(() => {\r\n            createjs.Tween.get(this._swipeContainer).to({x:this._game.StageWidth, y:0}, this._swipeSpeed, createjs.Ease.cubicInOut);\r\n            window.clearInterval(e);\r\n            this._currentScreen = \"options\";\r\n        }, 2000);\r\n    }\r\n\r\n    private _onDragStart(e) {\r\n\r\n        this._initialSwipePos = { x:e.stageX, y:e.stageY };\r\n\r\n        //reset drag timer if not null\r\n        if(this._dragTimer != null) window.clearTimeout(this._dragTimer);\r\n        this._dragTimer = setTimeout(() => {\r\n            this._initialSwipePos = { x:-1, y:-1 };\r\n            this._dragTimer = null;\r\n        }, 500);\r\n    }\r\n    private _onDragEnd(e) {\r\n        if(this._initialSwipePos.x != -1 || this._initialSwipePos.y != -1) {\r\n            //find the direction\r\n            if((this._initialSwipePos.x - e.stageX) > 20) {\r\n                if(this._currentScreen == \"options\")\r\n                    this._onMain();\r\n            }\r\n            else if((this._initialSwipePos.x - e.stageX) < -20) {\r\n                if(this._currentScreen == \"levelSelect\")\r\n                    this._onMain();\r\n            }\r\n        }\r\n    }\r\n\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n\r\n        //add in the containers\r\n        this._staticContainer.Sprites.bg.y = 0;\r\n        this._container.addChild(this._staticContainer.Container);\r\n        this._container.addChild(this._swipeContainer);\r\n        this._swipeContainer.addChild(this._mainContainer);\r\n        this._swipeContainer.addChild(this._optionsContainer.Container);\r\n        this._swipeContainer.addChild(this._clearedContainer.Container);\r\n        // this._swipeContainer.addChild(this._levelSelectContainer.Container);\r\n\r\n        \r\n        this._swipeContainer.addChild(this._levelSelectDisplay.Container);\r\n\r\n        return super.create(stage);\r\n    }\r\n\r\n    public enable() {\r\n        console.log(\"LOAD IN MENU ACTIONS\");\r\n        super.enable();\r\n        //listen to events\r\n        (this._mainButtonsContainer.Sprites.btnNewGame as any).on(\"click\", this._onNewGame, this, true);\r\n        (this._mainButtonsContainer.Sprites.btnOptions as any).on(\"click\", this._onOptions, this);\r\n        (this._mainButtonsContainer.Sprites.btnLevelSelect as any).on(\"click\", this._onLevelSelect, this);\r\n        (this._mainButtonsContainer.Sprites.btnExit as any).on(\"click\", this._onExit, this);\r\n\r\n        Sprites.listenToClearData();\r\n        (this._optionsContainer.Sprites.btnClearData as any).on(Sprites.CLEAR_DATA, this._onClearData, this);\r\n\r\n        //listen for swipes\r\n        (this._staticContainer.Sprites.bg as any).on(\"mousedown\", this._onDragStart, this);\r\n        (this._staticContainer.Sprites.bg as any).on(\"click\", this._onDragEnd, this);\r\n\r\n        // this._mainButtonsContainer.Sprites.btnOptions.on(\"click\", () => console.log(\"HELLO I CLIC\"));\r\n\r\n        this._levelSelectDisplay.enable();\r\n\r\n\r\n\r\n        //rock the fish\r\n        createjs.Tween\r\n            // @ts-ignore\r\n            .get(this._fancyFish, { loop:true })\r\n            .to({ y:this._fancyFish.y-30 }, 3000, createjs.Ease.sineInOut)\r\n            .to({ y:this._fancyFish.y }, 3000, createjs.Ease.sineInOut);\r\n\r\n        //rock the logo\r\n        createjs.Tween\r\n            // @ts-ignore\r\n            .get(this._logo, { loop:true })\r\n            .wait(1200)\r\n            .to({ y:this._logo.y-15 }, 4500, createjs.Ease.sineInOut)\r\n            .to({ y:this._logo.y }, 4800, createjs.Ease.sineInOut);\r\n    }\r\n\r\n    public disable() {\r\n        super.disable();\r\n        //stop listen to events\r\n        (this._mainButtonsContainer.Sprites.btnNewGame as any).off(\"click\", this._onNewGame);\r\n        (this._mainButtonsContainer.Sprites.btnOptions as any).off(\"click\", this._onOptions);\r\n        (this._mainButtonsContainer.Sprites.btnLevelSelect as any).off(\"click\", this._onLevelSelect);\r\n        (this._mainButtonsContainer.Sprites.btnExit as any).off(\"click\", this._onExit);\r\n\r\n        Sprites.stopListenToClearData();\r\n        (this._optionsContainer.Sprites.btnClearData as any).off(Sprites.CLEAR_DATA, this._onClearData);\r\n\r\n        //stop listen for swipes\r\n        (this._staticContainer.Sprites.bg as any).off(\"mousedown\", this._onDragStart);\r\n        (this._staticContainer.Sprites.bg as any).off(\"click\", this._onDragEnd);\r\n\r\n\r\n        this._levelSelectDisplay.disable();\r\n\r\n        this.reset();\r\n\r\n\r\n        createjs.Tween.removeAllTweens();\r\n    }\r\n\r\n    public reset() {\r\n        //reset the position of the swipe container\r\n        this._swipeContainer.x = 0;\r\n        this._swipeContainer.y = 0;\r\n\r\n        super.reset();\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n}","import { IUpdateable, ICreateable, IEnableable } from \"../Interfaces\";\r\n\r\nexport class Screen implements ICreateable<Screen>, IUpdateable, IEnableable {\r\n    private _stage:createjs.StageGL;\r\n    protected _container:createjs.Container;\r\n\r\n    constructor() {\r\n        this._container = new createjs.Container();\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Updates the screen. */\r\n    public update(gameTime:number) {\r\n\r\n    }\r\n\r\n    /**Creates the screen and adds to the stage. */\r\n    public create(stage:createjs.StageGL):Screen {\r\n        this._stage = stage;\r\n        //add to the stage\r\n        this._stage.addChild(this._container);\r\n\r\n        \r\n        return this;\r\n    }\r\n\r\n    /**Destroys the screen and removes from the stage. */\r\n    public destroy():Screen {\r\n\r\n        //remove from the stage\r\n        this._stage.removeChild(this._container);\r\n\r\n        return this;\r\n    }\r\n\r\n    public enable() {\r\n\r\n    }\r\n\r\n    public disable() {\r\n        \r\n    }\r\n\r\n    public reset() {\r\n        \r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container():createjs.Container { return this._container; }\r\n    protected get Stage():createjs.StageGL { return this._stage; }\r\n\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Game } from \"../Game\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\n\r\nexport class SplashScreen extends Screen {\r\n    private _game:Game;\r\n    private _textContainer:createjs.Container;\r\n\r\n    private _textSpritesheet;\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n        this._game = game;\r\n\r\n\r\n        this._textSpritesheet = new createjs.SpriteSheet({images: [\"assets/spritesheets/typography_white.png\"], frames: [[0,329,27,44,0,0,0],[89,47,21,44,0,0,0],[63,47,23,44,0,0,0],[32,141,24,44,0,0,0],[89,94,21,44,0,0,0],[110,141,20,44,0,0,0],[34,94,26,44,0,0,0],[0,188,28,44,0,0,0],[152,282,14,44,0,0,0],[158,94,16,44,0,0,0],[59,141,24,44,0,0,0],[136,94,19,44,0,0,0],[0,47,32,44,0,0,0],[0,141,29,44,0,0,0],[0,235,28,44,0,0,0],[86,141,21,44,0,0,0],[0,282,28,44,0,0,0],[63,94,23,44,0,0,0],[156,141,17,44,0,0,0],[81,235,21,44,0,0,0],[30,329,27,44,0,0,0],[66,0,24,44,0,0,0],[0,0,35,44,0,0,0],[31,188,23,44,0,0,0],[31,235,22,44,0,0,0],[57,188,23,44,0,0,0],[108,329,18,44,0,0,0],[60,329,21,44,0,0,0],[159,47,17,44,0,0,0],[118,0,20,44,0,0,0],[129,329,18,44,0,0,0],[169,282,14,44,0,0,0],[113,47,20,44,0,0,0],[84,329,21,44,0,0,0],[171,329,12,44,0,0,0],[186,282,12,44,0,0,0],[113,94,20,44,0,0,0],[191,188,12,44,0,0,0],[0,94,31,44,0,0,0],[56,235,22,44,0,0,0],[60,282,22,44,0,0,0],[108,188,20,44,0,0,0],[85,282,20,44,0,0,0],[177,94,15,44,0,0,0],[184,0,15,44,0,0,0],[179,47,15,44,0,0,0],[31,282,22,44,0,0,0],[131,282,18,44,0,0,0],[38,0,25,44,0,0,0],[150,329,18,44,0,0,0],[108,282,20,44,0,0,0],[152,235,18,44,0,0,0],[35,47,25,44,0,0,0],[153,188,16,44,0,0,0],[83,188,22,44,0,0,0],[131,188,19,44,0,0,0],[93,0,22,44,0,0,0],[129,235,20,44,0,0,0],[133,141,20,44,0,0,0],[141,0,20,44,0,0,0],[105,235,21,44,0,0,0],[136,47,20,44,0,0,0],[194,141,12,44,0,0,0],[195,94,12,44,0,0,0],[197,47,12,44,0,0,0],[172,188,16,44,0,0,0],[176,141,15,44,0,0,0],[173,235,14,44,0,0,0],[164,0,17,44,0,0,0]],  animations: {A:[0,0, true], B:[1,1, true], C:[2,2, true], D:[3,3, true], E:[4,4, true], F:[5,5, true], G:[6,6, true], H:[7,7, true], I:[8,8, true], J:[9,9, true], K:[10,10, true], L:[11,11, true], M:[12,12, true], N:[13,13, true], O:[14,14, true], P:[15,15, true], Q:[16,16, true], R:[17,17, true], S:[18,18, true], T:[19,19, true], U:[20,20, true], V:[21,21, true], W:[22,22, true], X:[23,23, true], Y:[24,24, true], Z:[25,25, true], a:[26,26, true], b:[27,27, true], c:[28,28, true], d:[29,29, true], e:[30,30, true], f:[31,31, true], g:[32,32, true], h:[33,33, true], i:[34,34, true], j:[35,35, true], k:[36,36, true], l:[37,37, true], m:[38,38, true], n:[39,39, true], o:[40,40, true], p:[41,41, true], q:[42,42, true], r:[43,43, true], s:[44,44, true], t:[45,45, true], u:[46,46, true], v:[47,47, true], w:[48,48, true], x:[49,49, true], y:[50,50, true], z:[51,51, true], 0:[52,52, true], 1:[53,53, true], 2:[54,54, true], 3:[55,55, true], 4:[56,56, true], 5:[57,57, true], 6:[58,58, true], 7:[59,59, true], 8:[60,60, true], 9:[61,61, true], \".\":[62,62, true], \",\":[63,63, true], \"'\":[64,64, true], \"\\\"\":[65,65, true], \"?\":[66,66, true], \"!\":[67,67, true], \"$\":[68,68, true]}});\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n        //add stuff\r\n        //load the image\r\n        const img = document.createElement(\"img\");\r\n        img.onload = (e) => {\r\n            const splash = new createjs.Bitmap(img);\r\n            this._container.addChild(splash);\r\n\r\n            super.create(stage);\r\n        }\r\n        img.src = \"assets/images/splash.png\";\r\n\r\n\r\n        this._textContainer = new createjs.Container();\r\n        this._container.addChild(this._textContainer);\r\n\r\n        this.Text = \"0\";\r\n\r\n        stage.update();\r\n\r\n\r\n\r\n        return this;\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public set Text(text:string) {\r\n        this._textContainer.removeAllChildren();\r\n        //add text\r\n        const textEl = Sprites.generateBitmapText(text, this._textSpritesheet);\r\n        this._textContainer.addChild(textEl);\r\n        this._container.addChild(this._textContainer);\r\n\r\n        this._game.Stage.update();\r\n    }\r\n}","import { LoadManager } from \"../managers/LoadManager\";\r\nimport { Game } from \"../Game\";\r\nimport { GameScreen } from \"./GameScreen\";\r\n\r\n/**This class creates the tutorial items.  This class will control the game and game screen when being used. */\r\nexport class TutorialCreator {\r\n    public static get KEY() {\r\n        return {\r\n            \"First\" : \"first\",\r\n            \"You\" : \"you\",\r\n            \"Fish\" : \"fish\",\r\n            \"Puffer\" : \"puffer\",\r\n            \"Many\" : \"many\",\r\n            \"Pause\" : \"pause\",\r\n            \"Special\" : \"special\"\r\n        }\r\n    };\r\n\r\n    private _game:Game;\r\n    private _gameScreen:GameScreen;\r\n\r\n\r\n    //tutorial overlays\r\n    private _youOverlay:createjs.Sprite;\r\n    private _fishOverlay:createjs.Sprite;\r\n    private _pufferOverlay:createjs.Sprite;\r\n    private _manyOverlay:createjs.Sprite;\r\n    private _pauseOverlay:createjs.Sprite;\r\n    private _specialOverlay:createjs.Sprite;\r\n\r\n    private _currentOverlay:createjs.Sprite;\r\n    private _tutorialQueue:string[];\r\n\r\n    constructor(game:Game, gameScreen:GameScreen) {\r\n        this._game = game;\r\n        this._gameScreen = gameScreen;\r\n\r\n        this._tutorialQueue = [];\r\n\r\n        //build all the required screens\r\n        this._youOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"you\");\r\n        this._fishOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"fish\");\r\n        this._pufferOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"puffer\");\r\n        this._manyOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"many\");\r\n        this._pauseOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"pause\");\r\n        this._specialOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"special\");\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public async queueTutorials(keys:string[]) {\r\n\r\n        for(let i = 0; i < keys.length; i++) {\r\n            const key = keys[i];\r\n\r\n            await new Promise(async(res, rej) => {\r\n\r\n                console.log(\"NUM\", i);\r\n\r\n                switch(key) {\r\n                    //first will play multiple screens\r\n                    case TutorialCreator.KEY.First :\r\n                        await this._runYou();\r\n                        await this._transition(this._fishOverlay);\r\n                        await this._runFish();\r\n                        await this._transition(null);\r\n                        this._gameScreen.unpauseGameLogic();\r\n                        res();\r\n                        break;\r\n                    case TutorialCreator.KEY.You :\r\n                        await this._runYou();\r\n                        await this._transition(null);\r\n                        this._gameScreen.unpauseGameLogic();\r\n                        res();\r\n                        break;\r\n                    case TutorialCreator.KEY.Fish :\r\n                        await this._runFish();\r\n                        await this._transition(null);\r\n                        this._gameScreen.unpauseGameLogic();\r\n                        res();\r\n                        break;\r\n                    case TutorialCreator.KEY.Puffer :\r\n                        await this._runPuffer();\r\n                        await this._transition(null);\r\n                        this._gameScreen.unpauseGameLogic();\r\n                        res();\r\n                        break;\r\n                    case TutorialCreator.KEY.Special :\r\n                        await this._runSpecial();\r\n                        await this._transition(null);\r\n                        this._gameScreen.unpauseGameLogic();\r\n                        res();\r\n                        break;\r\n\r\n                }\r\n\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    private async _transition(nextScreen) {\r\n        let promises = [];\r\n        //if we have a current screen, wait for it to fade out\r\n        if(this._currentOverlay != null) {\r\n            promises.push(\r\n                new Promise(async(res) => {\r\n                    //fade out\r\n                    createjs.Tween\r\n                        .get(this._currentOverlay)\r\n                        .to({ alpha:0 }, 500, createjs.Ease.linear)\r\n                        .call(() => {\r\n                            this._gameScreen.Container.removeChild(this._currentOverlay);\r\n                            res();\r\n                        });\r\n                })\r\n            );\r\n        }\r\n\r\n        //wait for certain actions to finish\r\n        return new Promise(async(res) => {\r\n            //wait for promises to finish\r\n            await Promise.all(promises);\r\n\r\n            //if we are transitioning to null, just end us\r\n            if(nextScreen == null) {\r\n                this._currentOverlay.alpha = 1;\r\n                res();\r\n                return;\r\n            }\r\n\r\n            this._currentOverlay.alpha = 1;\r\n\r\n            //now add in the new one\r\n            this._currentOverlay = nextScreen;\r\n            this._gameScreen.Container.addChild(this._currentOverlay);\r\n            this._currentOverlay.alpha = 0;\r\n\r\n            //fade in\r\n            createjs.Tween\r\n                .get(this._currentOverlay)\r\n                .to({ alpha:1 }, 500, createjs.Ease.linear)\r\n                .call(() => {\r\n                    res();\r\n                });\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    private async _runYou() {\r\n\r\n        return new Promise((res, rej) => {\r\n            this._currentOverlay = this._youOverlay;\r\n\r\n            const catStart = this._gameScreen.Cat.Y;\r\n            //move the cat hand\r\n            \r\n            this._gameScreen.Cat.Y = 80;\r\n            //pause the game\r\n            this._gameScreen.pauseGameLogic();\r\n            //overlay screen\r\n            this._gameScreen.Container.addChild(this._youOverlay);\r\n            //listen for screen click\r\n            (this._game.Stage).on(\"pressup\", () => { \r\n                //put cat paw back to start Y\r\n                this._gameScreen.Cat.Y = catStart;\r\n                res();\r\n            }, true, true);\r\n\r\n        });\r\n        \r\n    }\r\n\r\n    private async _runFish() {\r\n\r\n        return new Promise((res, rej) => {\r\n            this._currentOverlay = this._fishOverlay;\r\n            //pause the game\r\n            this._gameScreen.pauseGameLogic();\r\n            //overlay screen\r\n            this._gameScreen.Container.addChild(this._fishOverlay);\r\n            //listen for screen click\r\n            (this._game.Stage).on(\"pressup\", () => { \r\n                res();\r\n            }, true, true);\r\n        });\r\n\r\n    }\r\n\r\n    private async _runPuffer() {\r\n\r\n        return new Promise((res, rej) => {\r\n            this._currentOverlay = this._pufferOverlay;\r\n            //pause the game\r\n            this._gameScreen.pauseGameLogic();\r\n            //overlay screen\r\n            this._gameScreen.Container.addChild(this._pufferOverlay);\r\n            //listen for screen click\r\n            (this._game.Stage).on(\"pressup\", () => { \r\n                res();\r\n            }, true, true);\r\n        });\r\n\r\n    }\r\n\r\n    private async _runSpecial() {\r\n\r\n        return new Promise((res, rej) => {\r\n            this._currentOverlay = this._specialOverlay;\r\n            //pause the game\r\n            this._gameScreen.pauseGameLogic();\r\n            //overlay screen\r\n            this._gameScreen.Container.addChild(this._specialOverlay);\r\n            //listen for screen click\r\n            (this._game.Stage).on(\"pressup\", () => { \r\n                res();\r\n            }, true, true);\r\n        });\r\n\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n}","import { LoadManager } from \"../managers/LoadManager\";\r\n\r\n/**Used to gain access to in-game sprites. */\r\nexport class Sprites {\r\n    public static CLEAR_DATA:string = \"onClearData\";\r\n\r\n    private static _backgrounds:{ [key:string]:createjs.DisplayObject } = { };\r\n    private static _buttons:{ [key:string]:createjs.DisplayObject } = { };\r\n\r\n    private static _graphics:{ [key:string]:createjs.DisplayObject } = { };\r\n\r\n    private static _spritesheets:createjs.SpriteSheet[];\r\n\r\n    private static _canClearData:boolean = false;\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public static setup() {\r\n        return new Promise((res, rej) => {\r\n            // Sprites.spritesheets = spritesheets\r\n            //setup all the sprites\r\n            /* ------- STATIC ------- */\r\n            Sprites._backgrounds.Main = new createjs.Sprite(LoadManager.Spritesheets.UI); // Static BG\r\n            (Sprites._backgrounds.Main as createjs.Sprite).gotoAndStop(\"bg_main_static\");\r\n\r\n            Sprites._backgrounds.Logo = new createjs.Sprite(LoadManager.Spritesheets.Entities); // LOGO\r\n            (Sprites._backgrounds.Logo as createjs.Sprite).gotoAndStop(\"icon_title\");\r\n\r\n            Sprites._backgrounds.BG = LoadManager.Images.BG; // Redux\r\n            Sprites._backgrounds.BGTop = LoadManager.Images.BGTop;\r\n\r\n\r\n            /* ------- ANIMATED ------- */\r\n            Sprites._backgrounds.Wave = new createjs.Sprite(LoadManager.Spritesheets.UI); // Animated BG\r\n            (Sprites._backgrounds.Wave as createjs.Sprite).gotoAndPlay(\"bg_main\");\r\n\r\n\r\n            /* ------- GRAPHICS ------ */\r\n            Sprites._graphics.Timer = new createjs.Sprite(LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n            (Sprites._graphics.Timer as createjs.Sprite).gotoAndPlay(\"sprTime\");\r\n            Sprites._graphics.Score = new createjs.Sprite(LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n            (Sprites._graphics.Score as createjs.Sprite).gotoAndPlay(\"sprScore\");\r\n            Sprites._graphics.FishRemain = new createjs.Sprite(LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n            (Sprites._graphics.FishRemain as createjs.Sprite).gotoAndPlay(\"sprFish\");\r\n            \r\n            /* ------- BUTTONS ------- */\r\n            Sprites._buttons.NewGame = new createjs.Sprite(LoadManager.Spritesheets.Entities); // New Game\r\n            (Sprites._buttons.NewGame as createjs.Sprite).gotoAndStop(\"btn_new_game\");\r\n            new createjs.ButtonHelper(Sprites._buttons.NewGame as createjs.Sprite, \"btn_new_game\", \"btn_new_game_hover\", \"btn_new_game_hover\");\r\n\r\n\r\n            Sprites._buttons.Options = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Options\r\n            (Sprites._buttons.Options as createjs.Sprite).gotoAndStop(\"btn_new_game\");\r\n            new createjs.ButtonHelper(Sprites._buttons.Options as createjs.Sprite, \"btn_options\", \"btn_options_hover\", \"btn_options_hover\");\r\n\r\n            Sprites._buttons.LevelSelect = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Select\r\n            (Sprites._buttons.LevelSelect as createjs.Sprite).gotoAndStop(\"btn_select\");\r\n            new createjs.ButtonHelper(Sprites._buttons.LevelSelect as createjs.Sprite, \"btn_select\", \"btn_select_hover\", \"btn_select_hover\");\r\n\r\n            Sprites._buttons.Exit = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Exit\r\n            (Sprites._buttons.Exit as createjs.Sprite).gotoAndStop(\"btn_select\");\r\n            new createjs.ButtonHelper(Sprites._buttons.Exit as createjs.Sprite, \"btn_exit\", \"btn_exit_hover\", \"btn_exit_hover\");\r\n\r\n            Sprites._buttons.Fishbowl = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Fishbowl\r\n            (Sprites._buttons.Fishbowl as createjs.Sprite).gotoAndStop(\"btn_select\");\r\n            new createjs.ButtonHelper(Sprites._buttons.Fishbowl as createjs.Sprite, \"icon_fishbowl\", \"icon_fishbowl_hover\", \"icon_fishbowl_hover\", true);\r\n\r\n\r\n            /* ------- MENU ------- */\r\n            Sprites._backgrounds.LevelSelectBG = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Select BG\r\n            (Sprites._backgrounds.LevelSelectBG as createjs.Sprite).gotoAndStop(\"static_bg\");\r\n            Sprites._buttons.LevelEmpty = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Empty Button\r\n            (Sprites._buttons.LevelEmpty as createjs.Sprite).gotoAndStop(\"level_empty\");\r\n            Sprites._buttons.LevelComplete = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Complete Button\r\n            (Sprites._buttons.LevelComplete as createjs.Sprite).gotoAndStop(\"level_complete\");\r\n            Sprites._buttons.LevelSpecialEmpty = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Special Empty Button\r\n            (Sprites._buttons.LevelSpecialEmpty as createjs.Sprite).gotoAndStop(\"level_special_empty\");\r\n            Sprites._buttons.LevelSpecialComplete = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Special Complete Button\r\n            (Sprites._buttons.LevelSpecialComplete as createjs.Sprite).gotoAndStop(\"level_special_complete\");\r\n\r\n\r\n            /* ------- COMPLEX ------- */\r\n            Sprites._setupBTNClearData();\r\n\r\n            res();\r\n        });\r\n    }\r\n\r\n    // /* --- Complex createjs.Sprite Setup --- */\r\n    private static _setupBTNClearData() {\r\n        Sprites._buttons.ClearData = new createjs.Sprite(LoadManager.Spritesheets.UI); // BTN Clear Data\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndStop(\"btn_clear_data\");\r\n        (Sprites._buttons.ClearData as createjs.Sprite).cursor = \"pointer\";\r\n        Sprites._canClearData = false;\r\n    }\r\n    public static listenToClearData() {\r\n        //listen\r\n        (Sprites._buttons.ClearData as any).on(\"mousedown\", Sprites._btnDataDown);\r\n        (Sprites._buttons.ClearData as any).on(\"animationend\", Sprites._btnDataComplete);\r\n        (Sprites._buttons.ClearData as any).on(\"click\", Sprites._btnDataUp);\r\n    }\r\n    public static stopListenToClearData() {\r\n        //listen\r\n        (Sprites._buttons.ClearData as any).off(\"mousedown\", Sprites._btnDataDown);\r\n        (Sprites._buttons.ClearData as any).off(\"animationend\", Sprites._btnDataComplete);\r\n        (Sprites._buttons.ClearData as any).off(\"click\", Sprites._btnDataUp);\r\n    }\r\n\r\n    private static _btnDataDown(e) {\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndPlay(\"btn_clear_data_progress\");\r\n        Sprites._canClearData = true;\r\n    }\r\n    private static _btnDataUp(e) {\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndStop(\"btn_clear_data\");\r\n        Sprites._canClearData = false;\r\n    }\r\n    private static _btnDataComplete(e) {\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndStop(\"btn_clear_data\");\r\n        //dispatch event to button\r\n        if(Sprites._canClearData) {\r\n            (Sprites._buttons.ClearData as createjs.Sprite).dispatchEvent(new Event(Sprites.CLEAR_DATA));\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**A helper function to generate and cache text for the StageGL object. */\r\n    public static generateText(text, details = \"20px Arial\", color = \"#FFFEEE\") {\r\n        const textObj = new createjs.Text(text, details, color)\r\n        textObj.cache(0, 0, textObj.getBounds().width, textObj.getBounds().height);\r\n        return textObj;\r\n    }\r\n\r\n    public static generateBitmapText(text, spritesheet) {\r\n        const textObj = new createjs.BitmapText(text, spritesheet);\r\n        return textObj;\r\n    }\r\n\r\n\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get Backgrounds() { return Sprites._backgrounds; }\r\n    public static get Buttons() { return Sprites._buttons; }\r\n    public static get Graphics() { return Sprites._graphics; }\r\n\r\n    // static get BG() { return Sprites._bg }\r\n    // static get Logo() { return Sprites._logo }\r\n    // static get AnimBG() { return Sprites._animBg }\r\n    // static get GameBG() { return Sprites._gameBG }\r\n    // static get GameBGTop() { return Sprites._gameBGTop }\r\n    // //buttons\r\n    // static get BTN_New_Game() { return Sprites._btnNewGame }\r\n    // static get BTN_Options() { return Sprites._btnOptions }\r\n    // static get BTN_Select() { return Sprites._btnSelect }\r\n    // static get BTN_Exit() { return Sprites._btnExit }\r\n    // static get BTN_Fishbowl() { return Sprites._btnFishbowl }\r\n    // static get BTN_ClearData() { return Sprites._btnClearData }\r\n\r\n\r\n    // static get CLEAR_DATA() { return \"onClearData\" }\r\n}","import { Sprites } from \"../Sprites\";\r\nimport { LoadManager } from \"../../managers/LoadManager\";\r\nimport { Game } from \"../../Game\";\r\nimport { IEnableable } from \"../../Interfaces\";\r\nimport { GameScreen } from \"../../screens/GameScreen\";\r\nimport { DataManager } from \"../../managers/DataManager\";\r\nimport { ScreenManager } from \"../../managers/ScreenManager\";\r\nimport { IntermediaryScreen } from \"../../screens/IntermediaryScreen\";\r\n\r\n\r\nexport class LevelSelectDisplay implements IEnableable {\r\n    private _game:Game;\r\n\r\n    private _container:createjs.Container;\r\n    private _background:createjs.Sprite;\r\n    private _levelsContainer:createjs.Container;\r\n    private _levelTextContainer:createjs.Container;\r\n\r\n    private _levelsData:any;\r\n\r\n    private _levelButtons:createjs.Sprite[];\r\n\r\n    constructor(game:Game) {\r\n        this._game = game;\r\n        this._levelButtons = [];\r\n\r\n        //build the required components for the level select display\r\n        this._container = new createjs.Container();\r\n        this._background = Sprites.Backgrounds.LevelSelectBG as createjs.Sprite;\r\n        this._background.x = (game.StageWidth / 2) - (this._background.getBounds().width / 2);\r\n        this._background.y = 80;\r\n\r\n        this._levelsContainer = new createjs.Container();\r\n        this._container.addChild(this._background);\r\n        let text = Sprites.generateBitmapText(\"Level Select\", LoadManager.Spritesheets.Typography);\r\n        text.x = (game.StageWidth / 2) - (text.getBounds().width / 2);\r\n        text.y = 30;\r\n        this._container.addChild(text);\r\n\r\n\r\n        //setup display text\r\n        this._levelTextContainer = new createjs.Container();\r\n        this._container.addChild(this._levelTextContainer);\r\n\r\n        this.LevelText = \"Hello World!\";\r\n\r\n\r\n        //spoof some level data\r\n        this._levelsData = [\r\n            [\r\n                { name: \"Welcome to the pond!\", complete:true, unlocked:true, data:[0, 0, 0, 0, 0, 0, 0] },\r\n                { name: \"A new adventure!\", complete:true, unlocked:true, data:[0, 0, 0, 0, 0, 0, 0] },\r\n                { name: \"Learn to aim!\", complete:false, unlocked:true, data:[0, 0, 0, 0, 0, 0, 0] },\r\n                { name: \"Persephone!\", special:true, complete:false, unlocked:false, data:[0, 0, 0, 0, 0, 0, 0] },\r\n            ],\r\n            [\r\n                { name: \"In deep water!\", complete:false, unlocked:false, data:[0, 0, 0, 0, 0, 0, 0] },\r\n                { name: \"An ocean of fish!\", complete:false, unlocked:false, data:[0, 0, 0, 0, 0, 0, 0] },\r\n                { name: \"Barnacles ahoy!\", complete:false, unlocked:false, data:[0, 0, 0, 0, 0, 0, 0] },\r\n                { name: \"Owen!\", special:true, complete:false, unlocked:false, data:[0, 0, 0, 0, 0, 0, 0] },\r\n            ]\r\n        ];\r\n\r\n\r\n        //build the level icons\r\n        for(let r = 0; r < this._levelsData.length; r++) {\r\n            //iterate through levels\r\n            for(let i = 0; i < this._levelsData[r].length; i++) {\r\n                const levelData = this._levelsData[r][i];\r\n                console.log(\"LEVEL\", levelData);\r\n                //decide the sprite\r\n                let sprite = Sprites.Buttons.LevelEmpty.clone();\r\n                if(levelData.special != null && levelData.special) sprite = Sprites.Buttons.LevelSpecialEmpty.clone();\r\n                // //completed\r\n                if(levelData.complete) {\r\n                    sprite = Sprites.Buttons.LevelComplete.clone();\r\n                    if(levelData.special != null && levelData.special) sprite = Sprites.Buttons.LevelSpecialComplete;\r\n                }\r\n                //locked\r\n                if(!levelData.unlocked) {\r\n                    sprite.alpha = 0.25;\r\n                }\r\n                else {\r\n                    sprite.alpha = 1;\r\n                     //extras\r\n                    sprite.cursor = \"pointer\";\r\n                }\r\n\r\n                //place\r\n                sprite.x = 60 * i;\r\n                sprite.y = 50 * r;\r\n                //add\r\n                this._levelsContainer.addChild(sprite);\r\n                //to array\r\n                this._levelButtons.push(sprite as createjs.Sprite);\r\n            }\r\n        };\r\n\r\n        this._levelsContainer.x = (game.StageWidth / 2) - (this._levelsContainer.getBounds().width / 2);\r\n        this._levelsContainer.y = 100;\r\n        this._container.addChild(this._levelsContainer);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public enable() {\r\n        this._levelButtons.forEach(btn => {\r\n            btn.on(\"click\", this._onLevelClick, this);\r\n            btn.on(\"mouseover\", this._onLevelHover, this);\r\n            btn.on(\"mouseout\", this._onLevelUnhover, this);\r\n        });\r\n    }\r\n\r\n    public disable() {\r\n        this._levelButtons.forEach(btn => {\r\n            btn.removeAllEventListeners();\r\n        });\r\n    }\r\n\r\n\r\n    /**Returns level data from the given index. */\r\n    private _getDataByIndex(index:number) {\r\n        //flatten level data, and get data\r\n        let flatten = this._levelsData.reduce((acc, next) => acc.concat(next));\r\n        return flatten[index];\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    private _onLevelClick(e) {\r\n         //get button index\r\n        let index = this._levelButtons.indexOf(e.target);\r\n\r\n        if(index == -1) return;\r\n\r\n        //set the level index\r\n        const data = DataManager.getLevelDataByIndex(index);\r\n        console.log(\"MY LEVEL DATA\", data);\r\n        this._game.changeCurrentLevel(data);\r\n        //go to intermediary screen\r\n        const intermediary = ScreenManager.getScreenByKey(\"intermediary\") as IntermediaryScreen;\r\n        new Promise(async(res) => {\r\n            intermediary.Text = data.name;\r\n            await ScreenManager.setCurrentScreen(intermediary, this._game.Stage);\r\n            intermediary.queueNextScreen(\"game\", 1000);\r\n\r\n            res();\r\n        });\r\n    }\r\n\r\n    private _onLevelHover(e) {\r\n        //find the button data\r\n        //get button index\r\n        let index = this._levelButtons.indexOf(e.target);\r\n        \r\n        if(index != -1) {\r\n            const data = this._getDataByIndex(index);\r\n            if(data != null) {\r\n                if(data.unlocked)\r\n                    this.LevelText = data.name;\r\n            }\r\n        }\r\n\r\n    }\r\n    private _onLevelUnhover(e) {\r\n        this.LevelText = \"\";\r\n    }\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container() { return this._container; }\r\n    public set LevelText(value:string) {\r\n        if(value == \"\") {\r\n            this._levelTextContainer.removeAllChildren();\r\n            return;\r\n        }\r\n        //create the text\r\n        const text = Sprites.generateBitmapText(value, LoadManager.Spritesheets.TypographyWhite);\r\n        (text as any).scale = 0.6;\r\n        //load into container\r\n        this._levelTextContainer.removeAllChildren();\r\n        this._levelTextContainer.addChild(text);\r\n\r\n        //put container at bottom\r\n        this._levelTextContainer.x = (this._game.StageWidth / 2) - ((text.getBounds().width / 2) * 0.6);\r\n        this._levelTextContainer.y = this._game.StageHeight - 30;\r\n    }\r\n}","import { Layout } from \"./Layout\";\r\n\r\n/**Uses custom classes and the createjs library to help easily build up ui interfaces with DisplayObjects. */\r\nexport class Container {\r\n    private _sprites:{ [key:string]:createjs.DisplayObject };\r\n    private _container:createjs.Container;\r\n    private _layout:Layout;\r\n\r\n    constructor(layout:{ direction:string, alignment:string, crossAlignment:string, spacing:number } = null) {\r\n        this._sprites = { };\r\n        this._container = new createjs.Container();\r\n        this._layout = (layout != null) ? new Layout(this._container, layout.direction, layout.alignment, layout.crossAlignment, layout.spacing)  : Layout.MAKE_VERTICAL_CENTER(this._container);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public add(key:string, sprite:createjs.DisplayObject, updateLayout:boolean=true):boolean {\r\n        if(this._sprites[key] != null) return false;\r\n        this._sprites[key] = sprite.clone();\r\n\r\n        if(updateLayout) this._layout.buildLayout(true, ...Object.keys(this._sprites).map(k => this._sprites[k]));\r\n        return true;\r\n    }\r\n\r\n    public addMany(sprites:{ [key:string]:createjs.DisplayObject }) {\r\n        Object.keys(sprites).forEach(k => {\r\n            this.add(k, sprites[k], false);\r\n        });\r\n\r\n        this._layout.buildLayout(true, ...Object.keys(this._sprites).map(k => this._sprites[k]));\r\n    }\r\n\r\n    public changeLayout(layout:Layout) {\r\n        this._layout = layout;\r\n    }\r\n\r\n    /**In case of wandering or reusable sprites, call them back to this layout! */\r\n    public checkoutSprites() {\r\n        this._layout.buildLayout(true, ...Object.keys(this._sprites).map(k => this._sprites[k]));\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container():createjs.Container { return this._container; }\r\n    public get Sprites() { return this._sprites; }\r\n\r\n    public static get LAYOUT_OPTIONS() {\r\n        return {\r\n            //column layouts\r\n            //-- left aligned\r\n            \"ColumnLeftTop\" : {direction:Layout.VERTICAL, alignment:Layout.START, crossAlignment:Layout.START, spacing:5},\r\n            \"ColumnLeftCenter\" : {direction:Layout.VERTICAL, alignment:Layout.START, crossAlignment:Layout.CENTER, spacing:5},\r\n            \"ColumnLeftBottom\" : {direction:Layout.VERTICAL, alignment:Layout.START, crossAlignment:Layout.END, spacing:5},\r\n            //-- center aligned\r\n            \"ColumnCenterTop\" : {direction:Layout.VERTICAL, alignment:Layout.CENTER, crossAlignment:Layout.START, spacing:5},\r\n            \"ColumnCenterCenter\" : {direction:Layout.VERTICAL, alignment:Layout.CENTER, crossAlignment:Layout.CENTER, spacing:5},\r\n            \"ColumnCenterBottom\" : {direction:Layout.VERTICAL, alignment:Layout.CENTER, crossAlignment:Layout.END, spacing:5},\r\n            //-- right aligned\r\n            \"ColumnRightTop\" : {direction:Layout.VERTICAL, alignment:Layout.END, crossAlignment:Layout.START, spacing:5},\r\n            \"ColumnRightCenter\" : {direction:Layout.VERTICAL, alignment:Layout.END, crossAlignment:Layout.CENTER, spacing:5},\r\n            \"ColumnRightBottom\" : {direction:Layout.VERTICAL, alignment:Layout.END, crossAlignment:Layout.END, spacing:5}\r\n        };\r\n    }\r\n}","import { Game } from \"../../Game\";\r\n\r\n/**Used to layout createjs display objects. */\r\nexport class Layout {\r\n    //justify content\r\n    public static HORIZONTAL:string = \"horizontal\";\r\n    public static VERTICAL:string = \"vertical\";\r\n    //align items\r\n    public static START:string = \"start\";\r\n    public static END:string = \"end\";\r\n    public static CENTER:string = \"center\";\r\n\r\n    private _parent:createjs.Container;\r\n    private _items:createjs.DisplayObject[];\r\n\r\n    private _direction:string;\r\n    private _alignment:string;\r\n    private _crossAlignment:string;\r\n    private _spacing:number;\r\n\r\n    constructor(parent:createjs.Container, direction:string, alignment:string, crossAlignment:string, spacing:number = 5) {\r\n        this._parent = parent;\r\n        this._items = [];\r\n\r\n        this._direction = direction;\r\n        this._alignment = alignment;\r\n        this._crossAlignment = crossAlignment;\r\n        this._spacing = spacing;\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public buildLayout(addToParent:boolean=true, ...items:createjs.DisplayObject[]) {\r\n        if(items.length <= 0) return;\r\n\r\n        this._items = items;\r\n\r\n        if(addToParent) {\r\n            this._parent.removeAllChildren();\r\n        }\r\n        \r\n\r\n        if(this._direction == Layout.VERTICAL) {\r\n            let totalHeight = 0;\r\n            //ALIGNMENT\r\n            switch(this._alignment) {\r\n                case Layout.START : {\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        item.x = 0;\r\n                        item.y = totalHeight;\r\n                        totalHeight += item.getBounds().height + this._spacing;\r\n                        if(addToParent) this._parent.addChild(item);\r\n                    }\r\n                    break;\r\n                }\r\n                case Layout.CENTER : {\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        item.x = (Game.WIDTH / 2) - (item.getBounds().width / 2);\r\n                        item.y = totalHeight;\r\n                        totalHeight += item.getBounds().height + this._spacing;\r\n                        if(addToParent) this._parent.addChild(item);\r\n                    }\r\n                    break;\r\n                }\r\n                case Layout.END : {\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        item.x = Game.WIDTH - item.getBounds().width;\r\n                        item.y = totalHeight;\r\n                        totalHeight += item.getBounds().height + this._spacing;\r\n                        if(addToParent) this._parent.addChild(item);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n\r\n            //CROSS ALIGNMENT\r\n            //handle vertical alignment\r\n            switch(this._crossAlignment) {\r\n                case Layout.START : {\r\n                    break;\r\n                }\r\n                case Layout.CENTER : {\r\n                    totalHeight += items[items.length-1].getBounds().height;\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        //decipher desired center\r\n                        item.y += (Game.HEIGHT / 2) - (totalHeight / 2);\r\n                    }\r\n                    break;\r\n                }\r\n                case Layout.END :  {\r\n                    totalHeight += items[items.length-1].getBounds().height;\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        //decipher desired center\r\n                        item.y += Game.HEIGHT - totalHeight;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n\r\n        }\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    \r\n    /*--------------- HELPER FUNCTIONS ---------------*/\r\n    public static MAKE_VERTICAL_CENTER(container:createjs.Container) { return new Layout(container, Layout.VERTICAL, Layout.CENTER, Layout.CENTER, 5); }\r\n    public static MAKE_VERTICAL_START(container:createjs.Container) { return new Layout(container, Layout.VERTICAL, Layout.CENTER, Layout.START, 5); }\r\n\r\n}","import { Game } from \"../../Game\";\r\nimport { Sprites } from \"../Sprites\";\r\nimport { LoadManager } from \"../../managers/LoadManager\";\r\n\r\n/**Creates a display container for the game screen. */\r\nexport class GameScore {\r\n    private _game:Game;\r\n    private _container:createjs.Container;\r\n    private _bg:createjs.Shape;\r\n    private _txtTimer:createjs.DisplayObject;\r\n\r\n    private _timerContainer:createjs.Container;\r\n    private _timerTextContainer:createjs.Container;\r\n    private _fishRemainContainer:createjs.Container;\r\n    private _fishRemainTextContainer:createjs.Container;\r\n    private _scoreContainer:createjs.Container;\r\n    private _scoreTextContainer:createjs.Container;\r\n\r\n    //game conditions\r\n    private _useTimer:boolean = false;\r\n    private _useFishRemain:boolean = true;\r\n    private _useScore:boolean = true;\r\n\r\n    constructor(game:Game) {\r\n        this._game = game;\r\n        //create the initial objects\r\n        this._container = new createjs.Container();\r\n        this._bg = new createjs.Shape();\r\n        this._bg.graphics.beginFill(\"#000000\");\r\n        this._bg.graphics.drawRect(0, 0, this._game.StageWidth, 40);\r\n        this._bg.graphics.endFill();\r\n        this._bg.cache(0, 0, this._game.StageWidth, 40);\r\n        this._container.addChild(this._bg);\r\n\r\n        //create the container objects\r\n        //timer\r\n        this._timerContainer = new createjs.Container();\r\n        this._timerContainer.x += 10;\r\n        const timerSprite = Sprites.Graphics.Timer.clone();\r\n        this._timerContainer.addChild(timerSprite);\r\n        this._timerTextContainer = new createjs.Container();\r\n        this._timerTextContainer.y += 8;\r\n        this._timerTextContainer.x += Sprites.Graphics.Timer.getBounds().width + 10;\r\n        this._timerContainer.addChild(this._timerTextContainer);\r\n        this._container.addChild(this._timerContainer);\r\n\r\n        //fish remain\r\n        this._fishRemainContainer = new createjs.Container();\r\n        const fishRemainSprite = Sprites.Graphics.FishRemain.clone();\r\n        this._fishRemainContainer.addChild(fishRemainSprite);\r\n        this._fishRemainTextContainer = new createjs.Container();\r\n        this._fishRemainTextContainer.y += 8;\r\n        this._fishRemainTextContainer.x += Sprites.Graphics.FishRemain.getBounds().width + 10;\r\n        this._fishRemainContainer.addChild(this._fishRemainTextContainer);\r\n        this._container.addChild(this._fishRemainContainer);\r\n\r\n        //score\r\n        this._scoreContainer = new createjs.Container();\r\n        this._scoreContainer.x = this._game.StageWidth - Sprites.Graphics.Score.getBounds().width - 40;\r\n        const scoreSprite = Sprites.Graphics.Score.clone();\r\n        this._scoreContainer.addChild(scoreSprite);\r\n        this._scoreTextContainer = new createjs.Container();\r\n        this._scoreTextContainer.y += 8;\r\n        this._scoreTextContainer.x += Sprites.Graphics.Score.getBounds().width + 10;\r\n        this._scoreContainer.addChild(this._scoreTextContainer);\r\n        this._container.addChild(this._scoreContainer);\r\n        \r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public startHUD(showScore:boolean, showFishRemain:boolean, showTimer:boolean) {\r\n        this._useScore = showScore;\r\n        this._useFishRemain = showFishRemain;\r\n        this._useTimer = showTimer;\r\n\r\n        console.log(\"SHOW ME THE SCORE, REMAIN, TIMER\", showScore, showFishRemain, showTimer);\r\n\r\n        if(this._useScore) this._container.addChild(this._scoreContainer);\r\n        else this._container.removeChild(this._scoreContainer);\r\n\r\n        if(this._useFishRemain) this._container.addChild(this._fishRemainContainer);\r\n        else this._container.removeChild(this._fishRemainContainer);\r\n\r\n        if(this._useTimer) this._container.addChild(this._timerContainer);\r\n        else this._container.removeChild(this._timerContainer);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public update(gameTime:number) {\r\n        \r\n        // //get the game timer\r\n        // let timer = gameTime;\r\n        // this._timerTextContainer.removeAllChildren();\r\n        // let timerCont = Sprites.generateBitmapText(this._game.CurrentLevelData.currentTime.toString(), LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n        // this._timerTextContainer.addChild(timerCont);\r\n\r\n        // //get the fish remain score\r\n        // let fishRemain = gameTime;\r\n        // this._fishRemainTextContainer.removeAllChildren();\r\n        // let fishRemainCont = Sprites.generateBitmapText(this._game.CurrentLevelData.remainingFish.toString(), LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n        // this._fishRemainTextContainer.addChild(fishRemainCont);\r\n        // this._fishRemainContainer.x = (this._game.StageWidth / 2) - (this._fishRemainContainer.getBounds().width / 2);\r\n\r\n        // //get the score\r\n        // let score = gameTime;\r\n        // this._scoreTextContainer.removeAllChildren();\r\n        // let scoreCont = Sprites.generateBitmapText(this._game.CurrentLevelData.score.toString(), LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n        // this._scoreTextContainer.addChild(scoreCont);\r\n        // this._scoreContainer.x = this._game.StageWidth - this._scoreContainer.getBounds().width - 40;\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container() { return this._container; }\r\n\r\n}"]}