{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/Functions.ts","src/Game.ts","src/ObjectPool.ts","src/entities/Cat.ts","src/entities/Entity.ts","src/entities/Fish.ts","src/entities/Puffer.ts","src/main.ts","src/managers/DataManager.ts","src/managers/LoadManager.ts","src/managers/ScreenManager.ts","src/screens/EndScreen.ts","src/screens/GameScreen.ts","src/screens/IntermediaryScreen.ts","src/screens/MenuScreen.ts","src/screens/Screen.ts","src/screens/SplashScreen.ts","src/ui/Sprites.ts","src/ui/custom/LevelSelectDisplay.ts","src/ui/display/Container.ts","src/ui/display/Layout.ts","src/ui/partials/GameScore.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Logging","message","console","log","_message","LoadManager_1","ScreenManager_1","SplashScreen_1","MenuScreen_1","GameScreen_1","EndScreen_1","Functions_1","Sprites_1","IntermediaryScreen_1","DataManager_1","Game","canvasDiv","_this","this","_classCallCheck","_canvas","width","WIDTH","height","HEIGHT","_lastGameTime","_scaling","Promise","res","rej","__awaiter","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","_stage","createjs","StageGL","antialias","setClearColor","enableMouseOver","update","addEventListener","LoadManager","ASSETS_UPDATED","Percentage","loadAssets","catch","err","warn","success","DataManager","loadWorldsData","error","changeCurrentLevel","getLevelDataByIndex","Sprites","setup","ScreenManager","registerScreen","SplashScreen","MenuScreen","GameScreen","EndScreen","IntermediaryScreen","setCurrentScreen","Ticker","framerate","FRAME_RATE","on","stop","levelData","_currentLevel","currentScore","_currentScore","gameTime","getMeasuredFPS","CurrentScreen","Math","min","document","body","clientHeight","ObjectPool","obj","type","poolObj","active","Pool","push","_getObjectByType","_getObjectByObj","_pool","find","Entity_1","Cat","gameScreen","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","Spritesheets","Kitty_Spritesheet","_speed","_fishCaughtMultiplier","_caughtFish","_isGrabbing","_isRising","_isInjured","_hasReachedSurface","_sprite","gotoAndPlay","ANIMATION","Idle","Entity","_this2","X","Stage","mouseX","Speed","speed","mouseY","_catYTween","Tween","get","to","y","Ease","circIn","Grab","Hold","fishes","tryToGrabFishes","Y","caught","returnToSurface","_this3","removeTweens","wait","linear","reachSurface","_this4","hasNewFish","forEach","indexOf","release","_this5","Ow","injure","drop","_this6","collectFish","_this7","_get","prototype","hasHitAPuffer","hitEnemy","caughtFishMult","value","freeze","Death","spritesheet","_gameScreen","Sprite","_direction","x","_isIgnoringCollision","_ignoreCollisionTimer","Scaling","container","addChild","parent","removeChild","IGNORE_COLLISION","artificialReg","arguments","undefined","reg","regX","regY","Bounds","Width","Height","bounds","StageWidth","extents","StageHeight","HIT","Right","Left","lastX","scaleX","getBounds","Top","Bottom","Fish","Peeper_Spritesheet","_isCaught","_isReturning","Slow","_naturalY","Panic","hitTest","disable","abs","isNeg","IsIgnoringCollision","testStageBounds","startIgnoreCollision","Fast","Puffer","Puffer_Spritesheet","_cooldown","_currentCooldown","Angry","cat","Recover","Game_1","getElementById","fileLocation","fetch","then","blob","json","_worldsData","index","concat","apply","worlds","_sheetsTotal","_sheetsLoaded","_percentage","_totalAssetsLoaded","_totalAssets","src","stage","reset","_preloadManager","LoadQueue","Sound","registerPlugins","WebAudioPlugin","HTMLAudioPlugin","FlashAudioPlugin","alternateExtensions","installPlugin","_onLoaded","_onComplete","_onError","data","setMaxConnections","loadManifest","ASSETS_LOADED","emitErrorEvent","dispatchEvent","AssetsLoadedEvent","AssetsFailedEvent","parseFloat","getItems","toFixed","AssetsUpdatedEvent","name","sheet","item","Types","JAVASCRIPT","window","id","_SpriteSheet","complete","_loadedSheet","ev","remove","IMAGE","Images","Bitmap","emitUpdatedEvent","removeAllEventListeners","setInterval","emitLoadedEvent","Event","ASSETS_FAILED","Screen_1","key","screen","_screensLookup","tempScreen","Screen","resolve","promises","_currentScreen","Container","alpha","destroy","_callee2","_context2","all","create","enable","Container_1","game","_game","_isFail","bg","Catfish_End","_container","_buttonsContainer","LAYOUT_OPTIONS","ColumnLeftBottom","addMany","btnTryAgain","btnNextLevel","btnMainMenu","_highScoreSpr","_completeSpr","_failSpr","_scoreContainer","ColumnCenterCenter","fishRemain","time","combos","line","_fishRemainContainer","_timeContainer","_combosContainer","scoreX","changeCurrentScore","totalFish","CurrentLevelData","showFishRemain","showRemainingFish","showScore","showTime","duration","_game$CurrentScoreDat","CurrentScoreData","txtFishRemain","generateBitmapText","toString","TypographyWhite","txtTime","txtCombos","removeAllChildren","visible","ObjectPool_1","Fish_1","Puffer_1","Cat_1","GameScore_1","_fishes","_puffers","_remainingFish","createPoolObject","POOL","CAT","FISH","_i","PUFFERFISH","_cat","checkout","_staticContainer","BG_Spritesheet","_fishContainer","_pufferContainer","_winContainer","_gameScore","GameScore","hitObjects","getObjectsUnderPoint","fish","puff","killedFish","splice","win","elasticOut","checkoutSprites","_winBanner","Shape","graphics","beginFill","drawRect","cache","_winText","mouseEnabled","flip","DirectionX","setNaturalY","puffer","showTimer","startHUD","return","normalizedTime","grab","_text","screenKey","evt","setTimeout","clearTimeout","_bg","endFill","_textContainer","_txtSprite","scale","Text","LevelSelectDisplay_1","_swipeContainer","Catfish_Main","_mainContainer","_logo","_mainButtonsContainer","btnNewGame","btnOptions","btnLevelSelect","btnExit","_fancyFish","_optionsContainer","txtOptions","Typography","btnClearData","Buttons","ClearData","_clearedContainer","add","_levelSelectDisplay","LevelSelectDisplay","_swipeSpeed","_initialSwipePos","intermediary","getScreenByKey","queueNextScreen","circOut","bounceOut","cubicIn","cubicInOut","clearInterval","stageX","stageY","_dragTimer","_onMain","_onNewGame","_onOptions","_onLevelSelect","_onExit","listenToClearData","CLEAR_DATA","_onClearData","_onDragStart","_onDragEnd","loop","sineInOut","off","stopListenToClearData","removeAllTweens","_splash","_backgrounds","Main","UI","gotoAndStop","Logo","Entities","BG","BGTop","Wave","_graphics","Timer","ScoreHUD_Spritesheet","Score","FishRemain","_buttons","NewGame","ButtonHelper","Options","LevelSelect","Exit","Fishbowl","LevelSelectBG","Menu_Level_Select","LevelEmpty","LevelComplete","LevelSpecialEmpty","LevelSpecialComplete","_setupBTNClearData","cursor","_canClearData","_btnDataDown","_btnDataComplete","_btnDataUp","text","details","color","textObj","BitmapText","_levelButtons","_background","Backgrounds","_levelsContainer","_levelTextContainer","LevelText","_levelsData","unlocked","special","sprite","clone","btn","_onLevelClick","_onLevelHover","_onLevelUnhover","reduce","acc","target","_getDataByIndex","Layout_1","layout","_sprites","_layout","Layout","direction","alignment","crossAlignment","spacing","MAKE_VERTICAL_CENTER","updateLayout","buildLayout","_toConsumableArray","keys","map","k","sprites","_layout2","_layout3","ColumnLeftTop","VERTICAL","START","ColumnLeftCenter","CENTER","END","ColumnCenterTop","ColumnCenterBottom","ColumnRightTop","ColumnRightCenter","ColumnRightBottom","_parent","_items","_alignment","_crossAlignment","_spacing","addToParent","_len","items","Array","_key","totalHeight","_item","_i2","_item2","_i3","_i4","HORIZONTAL","_useTimer","_useFishRemain","_useScore","_timerContainer","timerSprite","Graphics","_timerTextContainer","fishRemainSprite","_fishRemainTextContainer","scoreSprite","_scoreTextContainer"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/* ************************************************* */\r\n/*                      LOGGING                      */\r\n/* ************************************************* */\r\nexport class Logging {\r\n    static success(message:string):void {\r\n        console.log(`%c ${message}`, 'color:seagreen; font-size:1.1em; font-weight:bold; border-left: solid 3px seagreen;')    ;\r\n    }\r\n\r\n    static message(message:string):void {\r\n        console.log(`%c ${message}`, 'color:#1E265C; font-size:1.1em; font-weight:bold; border-left: solid 3px #1E265C;');\r\n    }\r\n\r\n    static error(message:string):void {\r\n        console.log(`%c ${message}`, 'color:red; font-size:1.1em; border-left: solid 3px red;');\r\n    }\r\n}","import { LoadManager } from \"./managers/LoadManager\";\r\nimport { ScreenManager } from \"./managers/ScreenManager\";\r\nimport { SplashScreen } from \"./screens/SplashScreen\";\r\nimport { MenuScreen } from \"./screens/MenuScreen\";\r\nimport { GameScreen } from \"./screens/GameScreen\";\r\nimport { EndScreen } from \"./screens/EndScreen\";\r\nimport { Logging } from \"./Functions\";\r\nimport { Sprites } from \"./ui/Sprites\";\r\nimport { IntermediaryScreen } from \"./screens/IntermediaryScreen\";\r\nimport { DataManager, LevelData } from \"./managers/DataManager\";\r\n\r\nexport interface ICurrentScore {\r\n    totalFish: number;\r\n    time: number;\r\n    combos: number;\r\n}\r\n\r\n\r\nexport class Game {\r\n    private _canvas:HTMLCanvasElement;\r\n    private _stage:createjs.StageGL;\r\n    private _scaling:number;\r\n\r\n    private _lastGameTime:number;\r\n\r\n    private _currentLevel:LevelData;\r\n    private _currentScore:ICurrentScore;\r\n\r\n    constructor(canvasDiv:HTMLCanvasElement) {\r\n\r\n        this._canvas = canvasDiv;\r\n        this._canvas.width = Game.WIDTH;\r\n        this._canvas.height = Game.HEIGHT;\r\n\r\n        this._lastGameTime = -1;\r\n\r\n        //set the scaling\r\n        this._scaling = Game.HEIGHT / 1024;\r\n\r\n        //start loading game assets\r\n        new Promise(async(res, rej) => {\r\n            //create the stage\r\n            console.log(\"Readying stage!\");\r\n            this._stage = new createjs.StageGL(this._canvas, { antialias: true });\r\n            // this._stage = new createjs.StageGL(this._canvas);\r\n            (this._stage as any).setClearColor(\"#000000\");\r\n            this._stage.enableMouseOver(10);\r\n            this._stage.update();\r\n\r\n            // this._stage.scaleX = this._stage.scaleY = 0.8;\r\n\r\n            console.log(this._stage, this._canvas);\r\n\r\n            //listen to asset updates\r\n            (this._stage as any).addEventListener(LoadManager.ASSETS_UPDATED, (e) => {\r\n                console.log(LoadManager.Percentage);\r\n            });\r\n            //load assets\r\n            await LoadManager.loadAssets(\"assets/manifest.json\", this._stage)\r\n                .catch(err => {\r\n                    console.warn(\"Error loading assets:\", err);\r\n                });\r\n\r\n            Logging.success(\"Assets Loaded Successfully!\");\r\n\r\n            //load level data\r\n            await DataManager.loadWorldsData(\"assets/data/levels.json\")\r\n                .catch(err => {\r\n                    Logging.error(err);\r\n                    return;\r\n                });\r\n\r\n            //set the current screen\r\n            //game test, load desired level patch -- if autoloading to game screen\r\n            this.changeCurrentLevel(DataManager.getLevelDataByIndex(0));\r\n\r\n            Logging.success(\"Level Data Loaded Successfully!\");\r\n\r\n            //setup createjs.Sprites\r\n            await Sprites.setup();\r\n\r\n            //build the screens\r\n            ScreenManager.registerScreen(\"splash\", new SplashScreen());\r\n            ScreenManager.registerScreen(\"menu\", new MenuScreen(this));\r\n            ScreenManager.registerScreen(\"game\", new GameScreen(this));\r\n            ScreenManager.registerScreen(\"end\", new EndScreen(this));\r\n            ScreenManager.registerScreen(\"intermediary\", new IntermediaryScreen(this));\r\n            \r\n\r\n            ScreenManager.setCurrentScreen(\"game\", this._stage);\r\n            // ScreenManager.setCurrentScreen(\"end\", this._stage);\r\n\r\n            //setup the game loop\r\n            createjs.Ticker.framerate = Game.FRAME_RATE;\r\n            createjs.Ticker.on(\"tick\", this.update, this);\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public changeCurrentLevel(levelData:LevelData) {\r\n        this._currentLevel = levelData;\r\n    }\r\n\r\n    public changeCurrentScore(currentScore:ICurrentScore) {\r\n        this._currentScore = currentScore;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    public update(e:any) {\r\n\r\n        const gameTime = (this._lastGameTime != -1) ? createjs.Ticker.getMeasuredFPS() - this._lastGameTime : 1;\r\n        this._lastGameTime = createjs.Ticker.getMeasuredFPS();\r\n\r\n        //update the screen\r\n        if(ScreenManager.CurrentScreen != null) ScreenManager.CurrentScreen.update(gameTime);\r\n\r\n        //update the stage\r\n        this._stage.update();\r\n    }\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get FRAME_RATE() { return 30; }\r\n    public static get WIDTH() { return Game.HEIGHT * 0.5625; } //desired size\r\n    public static get HEIGHT() { return Math.min(document.body.clientHeight, 1024); }\r\n\r\n    public get StageWidth() { return this._canvas.width; } //actual size\r\n    public get StageHeight() { return this._canvas.height; }\r\n\r\n    public get Stage() { return this._stage; }\r\n    public get Scaling() { return this._scaling; }\r\n\r\n    public get CurrentLevelData() { return this._currentLevel; }\r\n    public get CurrentScoreData() { return this._currentScore; }\r\n\r\n\r\n\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n\r\n\r\n}","import { Logging } from \"./Functions\";\r\nimport { Entity } from \"./entities/Entity\";\r\n\r\nexport interface IPoolObject {\r\n    type:string;\r\n    obj:Entity,\r\n    active:boolean;\r\n}\r\n\r\nexport class ObjectPool {\r\n    private static _pool:IPoolObject[];\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Creates a pool object. */\r\n    public static createPoolObject(obj:Entity, type:string) {\r\n        const poolObj = {\r\n            type,\r\n            obj,\r\n            active: false\r\n        };\r\n        ObjectPool.Pool.push(poolObj);\r\n        return poolObj;\r\n    }\r\n\r\n    /**Checks out a pool object.  Use POOL global function to access. */\r\n    public static checkout(type:string) {\r\n        const poolObj = ObjectPool._getObjectByType(type);\r\n        if(poolObj != null) {\r\n            poolObj.active = true;\r\n            return poolObj.obj;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**Returns an object to the pool. */\r\n    public static return(obj:Entity) {\r\n        const poolObj = ObjectPool._getObjectByObj(obj);\r\n        if(poolObj != null) {\r\n            poolObj.active = false;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    public static _getObjectByType(type) {\r\n        const poolObj = ObjectPool._pool.find((o => o.type == type && !o.active));\r\n        if(poolObj == null) Logging.error(\"Object not found in pool, or pool is exhausted.  Return some objects.\");\r\n        return poolObj\r\n    }\r\n    public static _getObjectByObj(obj) {\r\n        return ObjectPool._pool.find((o => o.obj == obj));\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get Pool() { \r\n        if(ObjectPool._pool == null) ObjectPool._pool = [];\r\n        return ObjectPool._pool;\r\n    }\r\n}","import { Game } from \"../Game\";\r\nimport { Entity } from \"./Entity\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { IEnableable } from \"../Interfaces\";\r\nimport { Logging } from \"../Functions\";\r\nimport { GameScreen } from \"../screens/GameScreen\";\r\nimport { Fish } from \"./Fish\";\r\n\r\nexport class Cat extends Entity implements IEnableable {\r\n    private _speed:number;\r\n    private _fishCaughtMultiplier:number; //this will be the rate at which the cat slows down when rising per fish\r\n\r\n    private _catYTween:createjs.Tween;\r\n    private _caughtFish:Fish[];\r\n\r\n    private _isGrabbing:boolean;\r\n    private _isRising:boolean;\r\n    private _isInjured:boolean;\r\n    private _hasReachedSurface:boolean;\r\n\r\n    constructor(gameScreen:GameScreen) {\r\n        super(gameScreen, LoadManager.Spritesheets.Kitty_Spritesheet);\r\n        // super(gameScreen, LoadManager.Spritesheets.Cat_Spritesheet);\r\n        this._speed = 3;\r\n        this._fishCaughtMultiplier = 0.05;\r\n\r\n        this._caughtFish = [];\r\n        this._isGrabbing = false;\r\n        this._isRising = false;\r\n        this._isInjured = false;\r\n        this._hasReachedSurface = true;\r\n\r\n        this._sprite.gotoAndPlay(Cat.ANIMATION.Idle);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    enable() {\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n    }\r\n\r\n\r\n    /***************/\r\n    /*   ACTIONS   */\r\n    /***************/\r\n    public grab() {\r\n        //cannot grab if we are not at surface\r\n        if(!this._hasReachedSurface) return;\r\n\r\n        this._isGrabbing = true;\r\n        this._hasReachedSurface = false;\r\n\r\n        //move to x position\r\n        this.X = this.GameScreen.Game.Stage.mouseX;\r\n\r\n\r\n        console.log(\"START SPEED:\", this.Speed);\r\n\r\n        //grab to y position\r\n        const speed = (this.GameScreen.Game.Stage.mouseY / 2) * this.Speed;\r\n        this._catYTween = createjs.Tween\r\n            .get(this._sprite)\r\n            .to({ y:this.GameScreen.Game.Stage.mouseY }, speed, createjs.Ease.circIn)\r\n            .call(() => {\r\n                //once the grab is done, turn off flag\r\n                this._isGrabbing = false;\r\n\r\n                 //play animations\r\n                this._sprite.gotoAndPlay(Cat.ANIMATION.Grab);\r\n                //listen for animation to finish\r\n                (this._sprite as any).on(\"animationend\", () => {\r\n                    this._sprite.gotoAndPlay(Cat.ANIMATION.Hold);\r\n                }, true);\r\n\r\n                //try to grab a fish\r\n                const fishes = this.GameScreen.tryToGrabFishes(this.X , this.Y);\r\n\r\n                //see if a fish was grabbed\r\n                if(fishes.length > 0) this.caught(fishes);\r\n                else this.returnToSurface();\r\n            });\r\n\r\n    }\r\n\r\n    /**\r\n     * Called to return cat to surface.\r\n     */\r\n    public returnToSurface() {\r\n        this._sprite.gotoAndPlay(Cat.ANIMATION.Idle);\r\n\r\n        //remove any lingering tweens\r\n        createjs.Tween.removeTweens(this._sprite);\r\n        const speed = (this.Y / 2) * this.Speed;\r\n        this._catYTween = createjs.Tween.get(this._sprite)\r\n            .wait(150)\r\n            .to({y:20}, speed, createjs.Ease.linear)\r\n            .call(() => {\r\n                //once the surface has been reached, allow x movement again\r\n                this.reachSurface();\r\n            });\r\n    }\r\n\r\n    public caught(fishes:Fish[]) {\r\n        console.log(\"I CAUGHT\");\r\n        if(fishes.length <= 0) return;\r\n        this._isRising = true;  \r\n        \r\n        let hasNewFish = false;\r\n\r\n        fishes.forEach(f => {\r\n            if(this._caughtFish.indexOf(f) != -1) return;\r\n            hasNewFish = true;\r\n            //grab the fish\r\n            f.catch();\r\n\r\n            //add fish to caught array\r\n            this._caughtFish.push(f);\r\n\r\n            //control the fish\r\n            f.Y = this.Y;\r\n        });\r\n        \r\n        console.log(\"I WAS CAUGHT, NOW RISING\");\r\n        console.log(\"FISH CAUGHT SPEED:\", this.Speed);\r\n\r\n        if(!hasNewFish) return;\r\n        \r\n        //if we grabbed a fish...\r\n        //go back up... slowly\r\n        createjs.Tween.removeTweens(this._sprite);\r\n        const speed = this.Y * this.Speed;\r\n        this._catYTween = createjs.Tween.get(this._sprite)\r\n            .wait(250)\r\n            .to({y:-20}, speed, createjs.Ease.linear)\r\n            .call(() => {\r\n                //once the surface has been reached, allow x movement again\r\n                this.reachSurface();\r\n                this._isRising = false;\r\n            });\r\n\r\n    }\r\n    public drop() {\r\n        //release the fish\r\n        this._caughtFish.forEach(f => f.release());\r\n        this._caughtFish = [];\r\n    }\r\n\r\n    /**Called when hit by an enemy. */\r\n    public injure() {\r\n        this._isInjured = true;\r\n        console.log(\"TAKING DAMAGE\");\r\n        //start hurt animation\r\n        //end any current tweening\r\n        createjs.Tween.removeTweens(this._sprite);\r\n        this._sprite.gotoAndPlay(Cat.ANIMATION.Ow);\r\n        this._catYTween = createjs.Tween.get(this._sprite)\r\n            .wait(15)\r\n            .to({y:20}, 500, createjs.Ease.linear)\r\n            .call(() => {\r\n                //once the surface has been reached, allow x movement again\r\n                this.reachSurface();\r\n                this._sprite.gotoAndPlay(Cat.ANIMATION.Idle);\r\n            });\r\n    }\r\n\r\n    /**Called when the cat tickles an enemy. */\r\n    public hitEnemy() {\r\n        this.injure();\r\n        this.drop();\r\n    }\r\n\r\n    public reachSurface() {\r\n        //if we have a fish, send to main logic\r\n        if(this._caughtFish != null) {\r\n            this._caughtFish.forEach(f => {\r\n                this.GameScreen.collectFish(f);\r\n            });\r\n            this._caughtFish = [];\r\n        }\r\n\r\n        //set flags\r\n        this._hasReachedSurface = true;\r\n        this._isInjured = false;\r\n        this._isRising = false;\r\n        this._isGrabbing = false;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    update(gameTime:number) {\r\n        super.update(gameTime);\r\n\r\n\r\n        //if we are rising, attempt to catch more fish\r\n        if(this._isRising && !this._isInjured) {\r\n            console.log(\"TRY TO GRAB\");\r\n            //try to grab a fish\r\n            const fishes = this.GameScreen.tryToGrabFishes(this.X , this.Y);\r\n            //see if a fish was grabbed\r\n            if(fishes.length > 0)\r\n                this.caught(fishes);\r\n        }\r\n\r\n        //test puffer damage\r\n        if(this._isRising || this._isGrabbing) {\r\n            //don't test again if injured\r\n            if(!this._isInjured) {\r\n                //test for puffer hit\r\n                const hasHitPuffer = this.GameScreen.hasHitAPuffer(this.X, this.Y);\r\n                if(hasHitPuffer) {\r\n                    this.hitEnemy();\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        //drag fish with us if we have any\r\n        if(this._caughtFish != null) {\r\n            this._caughtFish.forEach(f => {\r\n                f.Y = this.Y - 20;\r\n            });\r\n        }\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get GRAB_RANGE() { return 120; }\r\n    public static get ANIMATION() {\r\n        return Object.freeze({\r\n            \"Idle\" : \"kittyIdle\",\r\n            \"Death\" : \"kittyIdle\",\r\n            \"Grab\" : \"kittyIdle\",\r\n            \"Hold\" : \"kittyIdle\",\r\n            \"Ow\" : \"kittyIdle\"\r\n        });\r\n    }\r\n    // public static get ANIMATION() {\r\n    //     return Object.freeze({\r\n    //         \"Idle\" : \"cat_idle\",\r\n    //         \"Death\" : \"cat_death\",\r\n    //         \"Grab\" : \"cat_grab\",\r\n    //         \"Hold\" : \"cat_grab_hold\",\r\n    //         \"Ow\" : \"cat_ow\"\r\n    //     });\r\n    // }\r\n    public get Speed() { \r\n        const caughtFishMult = ((this._caughtFish.length > 0) ? 1 + (this._caughtFish.length + this._fishCaughtMultiplier) : 1);\r\n        console.log(caughtFishMult);\r\n\r\n        return caughtFishMult * this._speed;\r\n    }\r\n    public set Speed(value:number) { this._speed = value; }\r\n}","import { ICreateable, IUpdateable } from \"../Interfaces\";\r\nimport { GameScreen } from \"../screens/GameScreen\";\r\nimport { Game } from \"../Game\";\r\n\r\nexport class Entity implements ICreateable<Entity>, IUpdateable {\r\n    private _gameScreen:GameScreen;\r\n    protected _name:string;\r\n    protected _sprite:createjs.Sprite;\r\n    protected _direction:{ x:number, y:number };\r\n    private _scaling:number;\r\n\r\n    private _isIgnoringCollision:boolean;\r\n    private _ignoreCollisionTimer:number;\r\n\r\n    constructor(gameScreen:GameScreen, spritesheet:createjs.SpriteSheet) {\r\n        this._gameScreen = gameScreen;\r\n        this._sprite = new createjs.Sprite(spritesheet);\r\n        this._direction = { x:1, y:1 };\r\n\r\n        this._isIgnoringCollision = false;\r\n        this._ignoreCollisionTimer = 0;\r\n\r\n        //get the game scale\r\n        this._scaling = this._gameScreen.Game.Scaling;\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public create(container:createjs.Container):Entity {\r\n        // (this._sprite as any).scale = this._scaling;\r\n\r\n        //move to main container\r\n        if(container == null)\r\n            this._gameScreen.Game.Stage.addChild(this._sprite);\r\n        else\r\n            container.addChild(this._sprite);\r\n        return this;\r\n    }\r\n\r\n    public destroy():Entity {\r\n        if(this._sprite == null || this._sprite.parent == null) return null;\r\n\r\n        //remove from main container\r\n        this._sprite.parent.removeChild(this._sprite);\r\n\r\n        return this;\r\n    }\r\n\r\n    public update(gameTime:number) {\r\n\r\n         //listen for collision ignore\r\n        if(this._isIgnoringCollision) {\r\n            this._ignoreCollisionTimer++;\r\n\r\n            if(this._ignoreCollisionTimer > Entity.IGNORE_COLLISION)\r\n                this._isIgnoringCollision = false;\r\n        }\r\n    }\r\n\r\n    protected startIgnoreCollision() {\r\n        this._isIgnoringCollision = true\r\n    }\r\n\r\n    protected testStageBounds(artificialReg:{x:number, y:number} = null) {\r\n        let reg = { x:this._sprite.regX, y:this._sprite.regY };\r\n        if(artificialReg != null) {\r\n            reg = {\r\n                x: (this._direction.x > 0) ? this.Bounds.Width * artificialReg.x : (this.Bounds.Width * (1 - artificialReg.x)),\r\n                y: (this._direction.y > 0) ? this.Bounds.Height * artificialReg.y : (this.Bounds.Height * (1 - artificialReg.y))\r\n            }\r\n        }\r\n        // const bounds = { width:this._game.StageWidth, height: this._game.StageHeight };\r\n        const bounds = { width:this._gameScreen.Game.StageWidth, height: this._gameScreen.Game.StageHeight };\r\n        const extents = {   \r\n            x:(this._direction.x > 0) ? (this.Bounds.Width - reg.x) : -reg.x, \r\n            y:(this._direction.y > 0) ? (this.Bounds.Height - reg.y) : -reg.y \r\n        };\r\n\r\n        //test walls\r\n        if((this.X + extents.x) > bounds.width) return Entity.HIT.Right;\r\n        else if(this.X + extents.x < 0) return Entity.HIT.Left;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get IGNORE_COLLISION() { return 20; }\r\n    public static get HIT() { return Object.freeze({Top:0, Right:1, Bottom:2, Left:3}); }\r\n\r\n    protected get GameScreen() { return this._gameScreen; }\r\n\r\n    public get Sprite() { return this._sprite; }\r\n    public get Parent() { return this._sprite.parent; }\r\n\r\n    public get X() { return this._sprite.x; }\r\n    public set X(value) { this._sprite.x = value; }\r\n    public get Y() { return this._sprite.y; }\r\n    public set Y(value) { this._sprite.y = value; }\r\n\r\n    public set DirectionX(value) { \r\n        const lastX = this._direction.x;\r\n        this._direction.x = value; \r\n        //flip sprite if our direction has changed\r\n        if(this._direction.x != lastX) this._sprite.scaleX *= -1;\r\n    }\r\n\r\n    public get Bounds() { \r\n        let bounds = this._sprite.getBounds();\r\n        return  { Width:bounds.width, Height:bounds.height };\r\n    }\r\n\r\n    public get IsIgnoringCollision() { return this._isIgnoringCollision; }\r\n}","import { Game } from \"../Game\";\r\nimport { Entity } from \"./Entity\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { IEnableable } from \"../Interfaces\";\r\nimport { Logging } from \"../Functions\";\r\nimport { GameScreen } from \"../screens/GameScreen\";\r\n\r\nexport class Fish extends Entity implements IEnableable {\r\n    private _speed:number;\r\n    private _naturalY:number;\r\n\r\n    private _isCaught:boolean;\r\n    private _isReturning:boolean;\r\n\r\n    constructor(gameScreen:GameScreen) {\r\n        super(gameScreen, LoadManager.Spritesheets.Peeper_Spritesheet);\r\n        this._speed = 1;\r\n\r\n        this._isCaught = false;\r\n        this._isReturning = false;\r\n\r\n        this._sprite.gotoAndPlay(Fish.ANIMATION.Slow);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    \r\n\r\n\r\n    /***************/\r\n    /*   ACTIONS   */\r\n    /***************/\r\n    public setNaturalY() {\r\n        this._naturalY = this.Y;\r\n    }\r\n\r\n    public catch() {\r\n        if(this._isCaught) return;\r\n        \r\n        Logging.message(\"Fish was grabbed!\");\r\n        this._isCaught = true;\r\n\r\n        this._sprite.gotoAndPlay(Fish.ANIMATION.Panic);\r\n    }\r\n\r\n    public release() {\r\n        this._isCaught = false;\r\n        //return to natural y position\r\n        this._isReturning = true;\r\n    }\r\n\r\n\r\n    /**Test to see if global position hits sprite. */\r\n    public testHit(x:number, y:number):boolean {\r\n        return this._sprite.hitTest(x, y);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    destroy() {\r\n        //reset flags\r\n        this._isCaught = false;\r\n        //reset animations\r\n        this._sprite.gotoAndPlay(Fish.ANIMATION.Slow);\r\n\r\n        this.disable();\r\n        return super.destroy();\r\n    }\r\n\r\n    update(gameTime:number) {\r\n        super.update(gameTime);\r\n\r\n        //move the fishy\r\n        if(!this._isCaught)\r\n            this.X += this._speed * gameTime * this._direction.x;\r\n        //--if returning, swim to natural y\r\n        if(this._isReturning) {\r\n            //if we are still far away, swim!\r\n            if(Math.abs(this.Y - this._naturalY) > 30) {\r\n                const isNeg = this.Y > this._naturalY;\r\n                this.Y += (isNeg) ? -10 : 10;\r\n            }\r\n            else {\r\n                this._isReturning = false;\r\n                this._sprite.gotoAndPlay(Fish.ANIMATION.Slow);\r\n            }\r\n        }\r\n\r\n        //test collision\r\n        if(!this.IsIgnoringCollision) {\r\n\r\n            //if fish hits the edge, flip direction\r\n            const hit = this.testStageBounds({x:0.5, y:0.5});\r\n            switch(hit) {\r\n                case Entity.HIT.Right:\r\n                    this._direction.x *= -1;\r\n                    this._sprite.scaleX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X -= 5 - this.Bounds.Width;\r\n                    break;\r\n                case Entity.HIT.Left:\r\n                    this._direction.x *= -1;\r\n                    this._sprite.scaleX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X += 5 - this.Bounds.Width;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    enable() {\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get ANIMATION() {\r\n        return Object.freeze({\r\n            \"Slow\" : \"fishIdle\",\r\n            \"Fast\" : \"fishIdle\",\r\n            \"Panic\" : \"fishPanic\"\r\n        });\r\n    }\r\n    public get Speed() { return this._speed; }\r\n    public set Speed(value:number) { this._speed = value; }\r\n}","import { Game } from \"../Game\";\r\nimport { Entity } from \"./Entity\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { IEnableable } from \"../Interfaces\";\r\nimport { Logging } from \"../Functions\";\r\nimport { GameScreen } from \"../screens/GameScreen\";\r\nimport { Cat } from \"./Cat\";\r\n\r\nexport class Puffer extends Entity implements IEnableable {\r\n    public get Type() { return \"Puffer\"; }\r\n    \r\n    private _speed:number;\r\n    private _cooldown:number = 40;\r\n    private _currentCooldown:number = 0;\r\n\r\n    private _isCaught:boolean;\r\n\r\n    constructor(gameScreen:GameScreen) {\r\n        super(gameScreen, LoadManager.Spritesheets.Puffer_Spritesheet);\r\n        this._speed = 1;\r\n\r\n        this._isCaught = false;\r\n\r\n        this._sprite.gotoAndPlay(Puffer.ANIMATION.Idle);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    \r\n\r\n\r\n    /***************/\r\n    /*   ACTIONS   */\r\n    /***************/\r\n    public puff() {\r\n        this._sprite.gotoAndPlay(Puffer.ANIMATION.Angry);\r\n        //start cooldown\r\n        this._currentCooldown = this._cooldown;\r\n    }\r\n\r\n\r\n    /**Test to see if global position hits sprite. */\r\n    public testHit(x:number, y:number, cat:Cat):boolean {\r\n        return (x >= this.X - cat.Bounds.Width && x <= this.X + this.Bounds.Width \r\n            && y >= this.Y - cat.Bounds.Height && y <= this.Y + this.Bounds.Height) ;\r\n        // return this._sprite.hitTest(x, y);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    destroy() {\r\n        //reset flags\r\n        this._isCaught = false;\r\n        //reset animations\r\n        this._sprite.gotoAndPlay(Puffer.ANIMATION.Idle);\r\n\r\n        this.disable();\r\n        return super.destroy();\r\n    }\r\n\r\n    update(gameTime:number) {\r\n        super.update(gameTime);\r\n\r\n        //move the fishy\r\n        if(!this._isCaught)\r\n            this.X += this._speed * gameTime * this._direction.x;\r\n\r\n        //do cooldown\r\n        if(this._currentCooldown >= 0) {\r\n            this._currentCooldown--;\r\n            if(this._currentCooldown == 0) {\r\n                //reset animations\r\n                this._sprite.gotoAndPlay(Puffer.ANIMATION.Recover);\r\n            }\r\n        }\r\n\r\n        //test collision\r\n        if(!this.IsIgnoringCollision) {\r\n\r\n            //if fish hits the edge, flip direction\r\n            const hit = this.testStageBounds({x:0.5, y:0.5});\r\n            switch(hit) {\r\n                case Entity.HIT.Right:\r\n                    this._direction.x *= -1;\r\n                    this._sprite.scaleX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X -= 5 - this.Bounds.Width;\r\n                    break;\r\n                case Entity.HIT.Left:\r\n                    this._direction.x *= -1;\r\n                    this._sprite.scaleX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X += 5 - this.Bounds.Width;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    enable() {\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get ANIMATION() {\r\n        return Object.freeze({\r\n            \"Idle\" : \"pufferIdle\",\r\n            \"Angry\" : \"pufferAngry\",\r\n            \"Recover\" : \"pufferRecover\"\r\n        });\r\n    }\r\n    public get Speed() { return this._speed; }\r\n    public set Speed(value:number) { this._speed = value; }\r\n}","import { Game } from \"./Game\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    const game = new Game(document.getElementById(\"game-canvas\") as HTMLCanvasElement);\r\n});","import { Screen } from \"../screens/Screen\";\r\n\r\nexport interface WorldsData {\r\n    worlds:LevelData[];\r\n}\r\n\r\nexport interface LevelData {\r\n    name:string;\r\n    data:any[];\r\n    duration?:number;\r\n    showScore?:boolean;\r\n    showRemainingFish?:boolean;\r\n}\r\n\r\nexport class DataManager {\r\n    private static _worldsData:WorldsData;\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Loads in the worlds data! */\r\n    public static loadWorldsData(fileLocation:string) {\r\n        return new Promise<WorldsData>(async(res, rej) => {\r\n            await fetch(fileLocation)\r\n                .then(blob => blob.json())\r\n                .then(json => {\r\n                    this._worldsData = json;\r\n                    res(this._worldsData);\r\n                })\r\n                .catch(err => {\r\n                    rej(\"Could not load world data! \" + err);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**Returns the level data received by the given index. */\r\n    public static getLevelDataByIndex(index:number) {\r\n        //flatten level data, and get data\r\n        let flatten = [].concat.apply([], DataManager._worldsData.worlds);\r\n        return flatten[index];\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get WorldsData():WorldsData { return DataManager._worldsData; }\r\n}","export class LoadManager {\r\n    public static get ASSETS_LOADED():string { return \"onAssetsLoaded\"; }\r\n    public static get ASSETS_FAILED():string { return \"onAssetsFailed\"; }\r\n    public static get ASSETS_UPDATED():string { return \"onAssetsUpdated\"; }\r\n\r\n    public static Spritesheets:{ [key:string]:createjs.SpriteSheet } = {};\r\n    public static Images:{ [key:string]:createjs.Bitmap } = {};\r\n\r\n    private static _stage:createjs.StageGL;\r\n    private static _preloadManager:createjs.LoadQueue;\r\n    private static _sheetsTotal:number = 0;\r\n    private static _sheetsLoaded:number = 0;\r\n\r\n    private static _percentage:number = 0;\r\n    private static _totalAssetsLoaded:number = 0;\r\n    private static _totalAssets:number = 0;\r\n\r\n    private static AssetsLoadedEvent:any = new (createjs as any).Event(LoadManager.ASSETS_LOADED, false, true);\r\n    private static AssetsFailedEvent:any = new (createjs as any).Event(LoadManager.ASSETS_FAILED, false, true);\r\n    private static AssetsUpdatedEvent:any = new (createjs as any).Event(LoadManager.ASSETS_UPDATED, false, true);\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public static reset() {\r\n        LoadManager._sheetsTotal = 0;\r\n        LoadManager._sheetsLoaded = 0;\r\n\r\n        LoadManager._percentage = 0;\r\n        LoadManager._totalAssetsLoaded = 0;\r\n        LoadManager._totalAssets = 0;\r\n    }\r\n\r\n    public static loadAssets(src:string, stage:createjs.StageGL) {\r\n        LoadManager.reset();\r\n        LoadManager._stage = stage;\r\n\r\n        return new Promise(async(res, rej) => {\r\n            LoadManager._preloadManager = new createjs.LoadQueue();\r\n\r\n            //setup sound controllers\r\n            createjs.Sound.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin, createjs.FlashAudioPlugin]);\r\n            createjs.Sound.alternateExtensions = [\"mp3\",\"wav\"];\r\n            LoadManager._preloadManager.installPlugin(createjs.Sound);\r\n\r\n            //setup listeners\r\n            (LoadManager._preloadManager as any).on(\"fileload\", LoadManager._onLoaded, LoadManager);\r\n            (LoadManager._preloadManager as any).on(\"complete\", LoadManager._onComplete, LoadManager);\r\n            (LoadManager._preloadManager as any).on(\"error\", LoadManager._onError, LoadManager);\r\n\r\n            //get the manifest\r\n            fetch(src)\r\n                .then(blob => blob.json())\r\n                .then(data => {\r\n                    //load the manifest\r\n                    LoadManager._preloadManager.setMaxConnections(1);\r\n                    LoadManager._preloadManager.loadManifest(data);\r\n\r\n                    (LoadManager._stage as any).addEventListener(LoadManager.ASSETS_LOADED, () => {\r\n                        res();\r\n                    });\r\n                })\r\n                .catch(() => {\r\n                    LoadManager.emitErrorEvent();\r\n                    rej(\"Could not load assets!\");\r\n                });\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    public static emitLoadedEvent() {\r\n        if(LoadManager._stage != null) (LoadManager._stage as any).dispatchEvent(LoadManager.AssetsLoadedEvent);\r\n    }\r\n    public static emitErrorEvent() {\r\n        if(LoadManager._stage != null) (LoadManager._stage as any).dispatchEvent(LoadManager.AssetsFailedEvent);\r\n    }\r\n    public static emitUpdatedEvent() {\r\n        LoadManager._percentage = parseFloat((LoadManager._preloadManager.getItems(true).length / LoadManager._preloadManager.getItems(false).length).toFixed(2));\r\n        if(LoadManager._stage != null) (LoadManager._stage as any).dispatchEvent(LoadManager.AssetsUpdatedEvent);\r\n    }\r\n\r\n\r\n    private static _loadedSheet(name:string, sheet:createjs.SpriteSheet) {\r\n        LoadManager.Spritesheets[name] = sheet;\r\n\r\n        LoadManager._sheetsLoaded++;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    private static _onLoaded(e) {\r\n\r\n        console.log(\"asset loaded: \" + e.item.src + \" type: \" + e.item.type);\r\n\r\n        switch(e.item.type) {\r\n            case (createjs as any).Types.JAVASCRIPT: {\r\n                //load the spritesheet\r\n                LoadManager._sheetsTotal++;\r\n                \r\n                const sheet = (window[e.item.id] as any)._SpriteSheet;\r\n\r\n                // listen for spritesheet to load\r\n                if(!sheet.complete) {\r\n                    sheet.on(\"complete\", (ev:any) => {\r\n                        LoadManager._loadedSheet(e.item.id, sheet);\r\n                        ev.remove();\r\n                    })\r\n                }\r\n                else LoadManager._loadedSheet(e.item.id, sheet);\r\n                break\r\n            }\r\n            case (createjs as any).Types.IMAGE: {\r\n                //build the bitmap\r\n                LoadManager.Images[e.item.id] = new createjs.Bitmap(e.item.src);\r\n            }\r\n        }\r\n\r\n\r\n\r\n        //update event\r\n        LoadManager.emitUpdatedEvent();\r\n    }\r\n\r\n    private static _onComplete(e) {\r\n        //remove all preLoadManager events\r\n        (LoadManager._preloadManager as any).removeAllEventListeners();\r\n        \r\n        //make sure all spritesheets are loaded\r\n        if(LoadManager._sheetsLoaded < LoadManager._sheetsTotal) {\r\n            const loadInterval = setInterval((ev:any) => {\r\n                //see if they are loaded\r\n                if(LoadManager._sheetsLoaded >= LoadManager._sheetsTotal) {\r\n                    e.remove();\r\n                    // window.clearInterval(loadInterval);\r\n                    LoadManager.emitLoadedEvent();\r\n                }\r\n            }, 100)\r\n        }\r\n        else LoadManager.emitLoadedEvent();\r\n    }\r\n\r\n    private static _onError(e) {\r\n        LoadManager.emitErrorEvent();\r\n    }\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get Percentage():number { return LoadManager._percentage; }\r\n    \r\n\r\n\r\n\r\n}","import { Screen } from \"../screens/Screen\";\r\n\r\nexport class ScreenManager {\r\n    private static _screensLookup:{ [key:string]:Screen } = { };\r\n    private static _currentScreen:Screen = null;\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Registers a screen into the Screen Manager.  Uses a key to associate it. */\r\n    public static registerScreen(key:string, screen:Screen):void {\r\n        //if we don't have this screen, add it\r\n        if(ScreenManager._screensLookup[key] == null)\r\n            ScreenManager._screensLookup[key] = screen;\r\n    }\r\n\r\n    /**Unregisters a screen from the Screen Manager. */\r\n    public static unregisterScreen(key:string):boolean {\r\n        if(ScreenManager._screensLookup[key] == null) return false;\r\n\r\n        ScreenManager._screensLookup[key] = null;\r\n        delete ScreenManager._screensLookup[key];\r\n        return true;\r\n    }\r\n\r\n    /**Sets the current screen.  Can be done with the screen itself or an associative key. */\r\n    public static setCurrentScreen(screen:string | Screen, stage:createjs.StageGL):Promise<void> {\r\n        let tempScreen = null;\r\n        if(screen instanceof Screen) tempScreen = screen;\r\n        else tempScreen = ScreenManager._screensLookup[screen];\r\n\r\n        //if we did not find a screen, do not follow through\r\n        if(tempScreen == null) return Promise.resolve();\r\n\r\n        let promises = [];\r\n        //if we have a previous screen, wait for it to fade out\r\n        if(ScreenManager._currentScreen != null)\r\n        promises.push(\r\n            new Promise(async(res) => {\r\n                //fade out\r\n                createjs.Tween\r\n                    .get(ScreenManager._currentScreen.Container)\r\n                    .to({ alpha:0 }, 500, createjs.Ease.linear)\r\n                    .call(() => {\r\n                        ScreenManager._currentScreen.destroy();\r\n                        ScreenManager._currentScreen.disable();\r\n                        res();\r\n                    });\r\n            })\r\n        );\r\n\r\n\r\n        //wait for certain actions to finish\r\n        return new Promise(async(res) => {\r\n            //wait for promises to finish\r\n            await Promise.all(promises);\r\n\r\n            //now add in the new one\r\n            ScreenManager._currentScreen = tempScreen;\r\n            ScreenManager._currentScreen.create(stage);\r\n            ScreenManager._currentScreen.Container.alpha = 0;\r\n            ScreenManager._currentScreen.disable(); //disable until ready\r\n            console.log(\"FADE IN\")\r\n            //fade in\r\n            createjs.Tween\r\n                .get(ScreenManager._currentScreen.Container)\r\n                .to({ alpha:1 }, 1200, createjs.Ease.linear)\r\n                .call(() => {\r\n                    console.log(\"DONE\");\r\n                    ScreenManager._currentScreen.enable();\r\n                    res();\r\n                });\r\n\r\n        });\r\n    }\r\n\r\n    public static getScreenByKey(key:string):Screen {\r\n        return ScreenManager._screensLookup[key];\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get AllScreens() { return ScreenManager._screensLookup; }\r\n    public static get CurrentScreen() { return ScreenManager._currentScreen; }\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Container } from \"../ui/display/Container\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { Game } from \"../Game\";\r\n\r\nexport class EndScreen extends Screen {\r\n    private _game:Game;\r\n    private _splash:createjs.Shape;\r\n    private _buttonsContainer:Container;\r\n\r\n    private _highScoreSpr:createjs.Sprite;\r\n    private _completeSpr:createjs.DisplayObject;\r\n    private _failSpr:createjs.DisplayObject;\r\n    private _scoreContainer:Container;\r\n\r\n    //scorebox holders\r\n    private _fishRemainContainer:createjs.Container;\r\n    private _timeContainer:createjs.Container;\r\n    private _combosContainer:createjs.Container;\r\n\r\n    //flags\r\n    private _isFail:boolean;\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n\r\n        this._game = game;\r\n        this._isFail = false;\r\n\r\n        //layout stuff\r\n        const bg = new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"bg\");\r\n        this._container.addChild(bg);\r\n\r\n        this._buttonsContainer = new Container(Container.LAYOUT_OPTIONS.ColumnLeftBottom);\r\n        this._buttonsContainer.addMany({\r\n            btnTryAgain : new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"btnTryAgain\"),\r\n            btnNextLevel : new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"btnNextLevel\"),\r\n            btnMainMenu : new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"btnMainMenu\"),\r\n        });\r\n        this._container.addChild(this._buttonsContainer.Container);\r\n\r\n        //conditionals\r\n        //--high score\r\n        this._highScoreSpr = new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"highScore\");\r\n        this._highScoreSpr.x = this._game.StageWidth / 2 - (this._highScoreSpr.getBounds().width / 2);\r\n        this._highScoreSpr.y = 60;\r\n        this._container.addChild(this._highScoreSpr);\r\n        //--conditional text\r\n        this._completeSpr = new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"complete\");\r\n        this._failSpr = new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"failure\");\r\n        this._completeSpr.x = this._game.StageWidth / 2 - (this._completeSpr.getBounds().width / 2);\r\n        this._completeSpr.y = 220;\r\n        this._failSpr.x = this._game.StageWidth / 2 - (this._failSpr.getBounds().width / 2);\r\n        this._failSpr.y = this._game.StageHeight * 0.45;\r\n        this._container.addChild(this._completeSpr);\r\n        this._container.addChild(this._failSpr);\r\n        //--score container\r\n        this._scoreContainer = new Container(Container.LAYOUT_OPTIONS.ColumnCenterCenter);\r\n        this._scoreContainer.addMany({\r\n            fishRemain: new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"fishRemain\"),\r\n            time: new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"time\"),\r\n            combos: new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"combos\"),\r\n            line: new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"line\")\r\n        });\r\n        const scoreX = 250;\r\n        this._scoreContainer.Sprites[\"fishRemain\"].x = scoreX - (this._scoreContainer.Sprites[\"fishRemain\"].getBounds().width);\r\n        this._scoreContainer.Sprites[\"time\"].x = scoreX - (this._scoreContainer.Sprites[\"time\"].getBounds().width);\r\n        this._scoreContainer.Sprites[\"combos\"].x = scoreX - (this._scoreContainer.Sprites[\"combos\"].getBounds().width);\r\n        this._scoreContainer.Sprites[\"line\"].x = this._game.StageWidth - this._scoreContainer.Sprites[\"line\"].getBounds().width - 30;\r\n        this._scoreContainer.Sprites[\"line\"].y += 15;\r\n        this._container.addChild(this._scoreContainer.Container);\r\n\r\n        //line them up\r\n        this._fishRemainContainer = new createjs.Container();\r\n        this._timeContainer = new createjs.Container();\r\n        this._combosContainer = new createjs.Container();\r\n        this._container.addChild(this._fishRemainContainer);\r\n        this._container.addChild(this._timeContainer);\r\n        this._container.addChild(this._combosContainer);\r\n\r\n        this._fishRemainContainer.x = scoreX + 20;\r\n        this._fishRemainContainer.y = this._scoreContainer.Sprites[\"fishRemain\"].y;\r\n        this._timeContainer.x = scoreX + 20;\r\n        this._timeContainer.y = this._scoreContainer.Sprites[\"time\"].y;\r\n        this._combosContainer.x = scoreX + 20;\r\n        this._combosContainer.y = this._scoreContainer.Sprites[\"combos\"].y;\r\n\r\n\r\n        // const peeper = new createjs.Sprite(LoadManager.Spritesheets.Kitty_Spritesheet);\r\n        // peeper.gotoAndPlay(\"kittyIdle\");\r\n        // this._container.addChild(peeper);\r\n\r\n        \r\n        \r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    create(stage:createjs.StageGL):Screen {\r\n        \r\n        \r\n        //for testing\r\n        (this._container as any).on(\"click\", (e) => {\r\n            ScreenManager.setCurrentScreen(\"menu\", stage);\r\n        }, this, true);       \r\n        \r\n\r\n        return super.create(stage);\r\n    }\r\n\r\n\r\n    enable() {\r\n        super.enable();\r\n\r\n        //fake score data\r\n        this._game.changeCurrentScore({ totalFish:10, time:150, combos:2 });\r\n\r\n        //toggle data based on current level stats\r\n        const levelData = this._game.CurrentLevelData;\r\n        //look for flags\r\n        const showFishRemain = (levelData.showRemainingFish != null && !levelData.showRemainingFish) ? false : true;\r\n        const showScore = (levelData.showScore != null && !levelData.showScore) ? false : true;\r\n        const showTime = (levelData.duration != null);\r\n\r\n\r\n        //layout score data\r\n        const { totalFish, time, combos } = this._game.CurrentScoreData;\r\n        const txtFishRemain = Sprites.generateBitmapText((showFishRemain) ? totalFish.toString() : \"-\", LoadManager.Spritesheets.TypographyWhite);\r\n        this._fishRemainContainer.addChild(txtFishRemain);\r\n        const txtTime = Sprites.generateBitmapText((showTime) ? time.toString() : \"-\", LoadManager.Spritesheets.TypographyWhite);\r\n        this._timeContainer.addChild(txtTime);\r\n        const txtCombos = Sprites.generateBitmapText((showScore) ? combos.toString() : \"-\", LoadManager.Spritesheets.TypographyWhite);\r\n        this._combosContainer.addChild(txtCombos);\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n        //kill score containers\r\n        this._fishRemainContainer.removeAllChildren();\r\n        this._timeContainer.removeAllChildren();\r\n        this._combosContainer.removeAllChildren();\r\n\r\n        //toggle fail/success\r\n        this._completeSpr.visible = !this._isFail;\r\n        this._failSpr.visible = this._isFail;\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { ObjectPool } from \"../ObjectPool\";\r\nimport { Fish } from \"../entities/Fish\";\r\nimport { Puffer } from \"../entities/Puffer\";\r\nimport { Cat } from \"../entities/Cat\";\r\nimport { Game } from \"../Game\";\r\nimport { Container } from \"../ui/display/Container\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { Logging } from \"../Functions\";\r\nimport { LevelData } from \"../managers/DataManager\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { GameScore } from \"../ui/partials/GameScore\";\r\n\r\nexport class GameScreen extends Screen {\r\n    private _game:Game;\r\n\r\n    //create containers\r\n    private _staticContainer:Container;\r\n    private _fishContainer:createjs.Container;\r\n    private _pufferContainer:createjs.Container;\r\n\r\n    private _winContainer:createjs.Container;\r\n    private _winBanner:createjs.Shape;\r\n    private _winText:createjs.BitmapText;\r\n\r\n    private _gameScore:GameScore;\r\n\r\n    private _cat:Cat;\r\n    private _fishes:Fish[];\r\n    private _puffers:Puffer[];\r\n\r\n    private _remainingFish:number;\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n        this._game = game;\r\n        this._fishes = [];\r\n        this._puffers = [];\r\n        this._remainingFish = -1;\r\n\r\n        //create object pool\r\n        ObjectPool.createPoolObject(new Cat(this), POOL.CAT)\r\n        for(let i = 0; i < 120; i++) {\r\n            ObjectPool.createPoolObject(new Fish(this), POOL.FISH);\r\n        }\r\n        for(let i = 0; i < 30; i++) {\r\n            ObjectPool.createPoolObject(new Puffer(this), POOL.PUFFERFISH)\r\n        }\r\n\r\n\r\n        //pool out static kitty\r\n        this._cat = (ObjectPool.checkout(POOL.CAT) as Cat);\r\n\r\n        //create containers\r\n        this._staticContainer = new Container();\r\n        this._staticContainer.addMany({\r\n            bg : new createjs.Sprite(LoadManager.Spritesheets.BG_Spritesheet, \"bg1\")\r\n        });\r\n\r\n        this._fishContainer = new createjs.Container();\r\n        this._pufferContainer = new createjs.Container();\r\n\r\n        this._winContainer = new createjs.Container();\r\n\r\n        this._gameScore = new GameScore(this._game);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n\r\n    /**Attempts to grab a fish.  Returns any fish that are touching the global position. */\r\n    public tryToGrabFishes(x:number, y:number):Fish[] {\r\n        let fishes = [];\r\n\r\n\r\n        const hitObjects = this._container.getObjectsUnderPoint(x, y, 0);\r\n        for(let i = 0; i < this._fishes.length; i++) {\r\n            const fish = this._fishes[i];\r\n            if(hitObjects.indexOf(fish.Sprite) != -1) {\r\n                fishes.push(fish);\r\n            }\r\n        }\r\n\r\n        return fishes;\r\n\r\n    }\r\n\r\n    /**Tests to see if we hit a puffer. */\r\n    public hasHitAPuffer(x:number, y:number):Boolean {\r\n        // console.log(\"TESTING PUFF\");\r\n\r\n        let hasHitPuffer = false;\r\n        const hitObjects = this._container.getObjectsUnderPoint(x, y, 0);\r\n        for(let i = 0; i < this._puffers.length; i++) {\r\n            if(hitObjects.indexOf(this._puffers[i].Sprite) != -1) {\r\n                console.log (\"I HIT A PUFF\");\r\n                this._puffers[i].puff();\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public collectFish(fish:Fish) {\r\n        //get fish\r\n        Logging.success(\"GOT FISH!\");\r\n\r\n        const killedFish = fish.destroy();\r\n\r\n        //decrement fish counter -- make sure we didn't make an error\r\n        if(killedFish != null) {\r\n            this._remainingFish--;\r\n            this._fishes.splice(this._fishes.indexOf(killedFish as Fish), 1);\r\n\r\n            //if all our fish are gone, end the game!\r\n            if(this._remainingFish <= 0) {\r\n                //win game!\r\n                Logging.success(\"GAME IS OVER!\");\r\n                //call win\r\n                this.win();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public win() {\r\n        //disable controls\r\n        this.disable();\r\n        //set the score\r\n        this._game.changeCurrentScore({\r\n            totalFish: this._fishes.length,\r\n            combos: 10,\r\n            time: 100\r\n        });\r\n        \r\n        //show win banner\r\n        createjs.Tween.get(this._winContainer)\r\n            .to({y:this._game.StageHeight / 2 - 25}, 600, createjs.Ease.elasticOut)\r\n            .wait(2000)\r\n            .call(() => {\r\n                //transition to end screen\r\n                ScreenManager.setCurrentScreen(\"end\", this._game.Stage);\r\n                // ScreenManager.setCurrentScreen(\"menu\", this._game.Stage);\r\n\r\n                //reset game data\r\n                this.reset();\r\n            });\r\n    }\r\n\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n        super.create(stage);\r\n        //add stuff\r\n        this._staticContainer.checkoutSprites();\r\n        this._staticContainer.Sprites.bg.y = 0;\r\n        this._container.addChild(this._staticContainer.Container);\r\n\r\n        this._container.addChild(this._fishContainer);\r\n        this._container.addChild(this._pufferContainer);\r\n\r\n        //add conditional text\r\n        this._winBanner = new createjs.Shape();\r\n        this._winBanner.graphics.beginFill(\"black\");\r\n        this._winBanner.graphics.drawRect(0, 0, this._game.StageWidth, 50);\r\n        this._winBanner.cache(0, 0, this._game.StageWidth, 50);\r\n        this._winContainer.addChild(this._winBanner);\r\n        this._winText = Sprites.generateBitmapText(\"Win!\", LoadManager.Spritesheets.TypographyWhite);\r\n        this._winContainer.addChild(this._winText);\r\n        this._winText.x = (this._game.StageWidth / 2) - (this._winText.getBounds().width / 2);\r\n\r\n        this._container.addChild(this._winContainer);\r\n        this._winContainer. y = this._game.StageHeight + 50;\r\n        this._winContainer.mouseEnabled = false;\r\n\r\n        \r\n        this._cat.create(this._container);\r\n\r\n\r\n        //testing\r\n        // const puffer = new createjs.Sprite(LoadManager.Spritesheets.Puffer_Spritesheet, \"pufferIdle\");\r\n        // puffer.x = 100;\r\n        // puffer.y = 200;\r\n        // (puffer as any).on(\"click\", () => {\r\n        //     puffer.gotoAndPlay(\"pufferAngry\")\r\n        // })\r\n        // this._container.addChild(puffer);\r\n\r\n\r\n        //add level data if it exists\r\n        if(this._game.CurrentLevelData != null) {\r\n            //load in critters\r\n            for(let i = 0; i < this._game.CurrentLevelData.data.length; i++) {\r\n                const data = this._game.CurrentLevelData.data[i];\r\n                switch(data.id) {\r\n                    case POOL.FISH:\r\n                        const fish = (ObjectPool.checkout(POOL.FISH) as Fish);\r\n                        fish.create(this._fishContainer);\r\n                        if(data.speed != null) fish.Speed = data.speed; //set variables\r\n                        if(data.x != null) fish.X = data.x * this._game.Scaling;\r\n                        if(data.y != null) fish.Y = data.y * this._game.Scaling;\r\n                        // if(data.x != null) fish.X = data.x;\r\n                        // if(data.y != null) fish.Y = data.y;\r\n                        if(data.flip != null && data.flip) fish.DirectionX = -1;\r\n                        fish.setNaturalY();\r\n                        this._fishes.push(fish);\r\n                        break;\r\n                    case POOL.PUFFERFISH:\r\n                        const puffer = (ObjectPool.checkout(POOL.PUFFERFISH) as Puffer);\r\n                        puffer.create(this._pufferContainer);\r\n                        if(data.speed != null) puffer.Speed = data.speed; //set variables\r\n                        if(data.x != null) puffer.X = data.x * this._game.Scaling;\r\n                        if(data.y != null) puffer.Y = data.y * this._game.Scaling;\r\n                        if(data.flip != null && data.flip) puffer.DirectionX = -1;\r\n                        this._puffers.push(puffer);\r\n                }      \r\n            }\r\n\r\n            //set fish total\r\n            this._remainingFish = this._fishes.length;\r\n        }\r\n\r\n\r\n        //add the score\r\n        this._gameScore.Container.y = this._game.StageHeight - 40;\r\n        this._container.addChild(this._gameScore.Container);\r\n\r\n        //update the game HUD for this round\r\n        const levelData = this._game.CurrentLevelData;\r\n        console.log(this._game.CurrentLevelData);\r\n        const showScore = (levelData.showScore != null && !levelData.showScore) ? false : true;\r\n        const showTimer = (levelData.duration != null);\r\n        const showFishRemain = (levelData.showRemainingFish != null && !levelData.showRemainingFish) ? false : true;\r\n        this._gameScore.startHUD(showScore, showFishRemain, showTimer);\r\n\r\n        return null;\r\n    }\r\n\r\n    public destroy() {\r\n        this._cat.destroy();\r\n        this._fishes.forEach(f => {\r\n            f.destroy();\r\n            ObjectPool.return(f);\r\n        });\r\n        this._puffers.forEach(f => {\r\n            f.destroy();\r\n            ObjectPool.return(f);\r\n        });\r\n\r\n        this._fishContainer.removeAllChildren();\r\n        this._pufferContainer.removeAllChildren();\r\n\r\n        this._fishes = [];\r\n\r\n        return super.destroy();\r\n    }\r\n\r\n    public update(gameTime:number) {\r\n        const normalizedTime = Math.min(1, gameTime) + 0.5;\r\n\r\n        //update entities\r\n        this._fishes.forEach(fish => {\r\n            fish.update(normalizedTime);\r\n        });\r\n        this._puffers.forEach(puffer => {\r\n            puffer.update(normalizedTime);\r\n        });\r\n\r\n        this._cat.update(normalizedTime);\r\n\r\n        //update the score\r\n        this._gameScore.update(gameTime);\r\n\r\n        super.update(gameTime);\r\n    }\r\n\r\n    public enable() {\r\n        (this._container as any).on(\"click\", this._cat.grab, this._cat);\r\n    }\r\n\r\n    public disable() {\r\n        (this._container as any).removeAllEventListeners();\r\n    }\r\n\r\n    public reset() {\r\n        this._fishes.forEach(f => f.destroy());\r\n        this._puffers.forEach(p => p.destroy());\r\n\r\n        this._fishes = [];\r\n        this._puffers = [];\r\n\r\n        super.reset();\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Game() { return this._game; }\r\n}\r\n\r\n\r\n\r\nexport class POOL { \r\n    static get CAT() { return \"cat\"; }\r\n    static get FISH() { return \"fish\"; }\r\n    static get PUFFERFISH() { return \"puffer\"; }\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { Game } from \"../Game\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\n\r\nexport class IntermediaryScreen extends Screen {\r\n    private _game:Game;\r\n    private _bg:createjs.Shape;\r\n    private _textContainer:createjs.Container;\r\n    private _txtSprite:createjs.DisplayObject;\r\n\r\n    private _text:string;\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n        this._game = game;\r\n\r\n        this._text = \"\";\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Chooses the screen to load in after the intermediary. */\r\n    public queueNextScreen(screenKey:string, duration:number=3000) {\r\n        const evt = window.setTimeout(() => {\r\n            //load the screen\r\n            ScreenManager.setCurrentScreen(screenKey, this._game.Stage);\r\n            //clear the timeout\r\n            window.clearTimeout(evt);\r\n        }, duration);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n        //add stuff\r\n        this._bg = new createjs.Shape();\r\n        this._bg.graphics.beginFill(\"#191919\");\r\n        this._bg.graphics.drawRect(0, 0, this._game.StageWidth, this._game.StageHeight);\r\n        this._bg.graphics.endFill();\r\n        this._bg.cache(0, 0, this._game.StageWidth, this._game.StageHeight);\r\n        this._container.addChild(this._bg);\r\n\r\n        this._textContainer = new createjs.Container();\r\n        this._container.addChild(this._textContainer);\r\n\r\n        if(this._text != \"\") {\r\n            //create the text\r\n            this._txtSprite = Sprites.generateBitmapText(this._text, LoadManager.Spritesheets.TypographyWhite);\r\n            (this._txtSprite as any).scale = 0.6;\r\n            //load into container\r\n            this._textContainer.addChild(this._txtSprite);\r\n    \r\n            //put container at bottom\r\n            this._textContainer.x = (this._game.StageWidth / 2) - ((this._txtSprite.getBounds().width / 2) * 0.6);\r\n            this._textContainer.y = (this._game.StageHeight / 2) - (this._txtSprite.getBounds().height / 2);\r\n        }\r\n\r\n        return super.create(stage);\r\n    }\r\n\r\n    public destroy() {\r\n        this._textContainer.removeAllChildren();\r\n\r\n        return super.destroy();\r\n    }\r\n\r\n    public enable() {\r\n        super.enable();\r\n\r\n        //for testing\r\n        (this._container as any).on(\"click\", (e) => {\r\n            ScreenManager.setCurrentScreen(\"menu\", this.Stage);\r\n        }, this, true);\r\n    }\r\n\r\n    public disable() {\r\n        super.disable();\r\n\r\n        this.reset();\r\n    }\r\n\r\n    public reset() {\r\n        this.Text = \"\";\r\n        super.reset();\r\n    }\r\n\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public set Text(value:string) {\r\n        this._text = value;\r\n    }\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { Layout } from \"../ui/display/Layout\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { Container } from \"../ui/display/Container\";\r\nimport { Logging } from \"../Functions\";\r\nimport { Game } from \"../Game\";\r\nimport { LevelSelectDisplay } from \"../ui/custom/LevelSelectDisplay\";\r\nimport { IntermediaryScreen } from \"./IntermediaryScreen\";\r\nimport { GameScreen } from \"./GameScreen\";\r\nimport { DataManager } from \"../managers/DataManager\";\r\n\r\nexport class MenuScreen extends Screen {\r\n    private _game:Game;\r\n    //containers\r\n    private _swipeContainer:createjs.Container;\r\n    private _staticContainer:Container;\r\n    // private _mainContainer:Container;\r\n    private _mainContainer:createjs.Container;\r\n    private _clearedContainer:Container;\r\n    private _optionsContainer:Container;\r\n\r\n    private _mainButtonsContainer:Container;\r\n    private _logo:createjs.DisplayObject;\r\n    private _fancyFish:createjs.Sprite;\r\n\r\n    //custom containers\r\n    private _levelSelectDisplay:LevelSelectDisplay;\r\n\r\n    //properties\r\n    private _swipeSpeed:number;\r\n    private _currentScreen:string;\r\n    private _initialSwipePos:{x:number, y:number};\r\n    private _dragTimer:any;\r\n\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n\r\n        this._game = game;\r\n\r\n        //setup swipe container -- holds all moving sprites\r\n        this._swipeContainer = new createjs.Container();\r\n\r\n        //setup static container\r\n        this._staticContainer = new Container();\r\n        const bg = new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"bg\");\r\n\r\n        this._staticContainer.addMany({\r\n            bg\r\n        });\r\n\r\n        //setup main container\r\n        this._mainContainer = new createjs.Container();\r\n        this._logo = new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"logo\");\r\n        this._logo.x = this._game.StageWidth - this._logo.getBounds().width - 20;\r\n        this._logo.y = this._game.StageHeight * 0.4;\r\n        this._mainContainer.addChild(this._logo);\r\n        this._mainButtonsContainer = new Container(Container.LAYOUT_OPTIONS.ColumnLeftBottom);\r\n        this._mainButtonsContainer.addMany({\r\n            btnNewGame : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnNewGame\"),\r\n            btnOptions : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnOptions\"),\r\n            btnLevelSelect : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnLevelSelect\"),\r\n            btnExit : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnExit\"),\r\n        });\r\n        this._mainContainer.addChild(this._mainButtonsContainer.Container);\r\n        this._fancyFish = new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"fancyFish\");\r\n        this._fancyFish.x = this._game.StageWidth - this._fancyFish.getBounds().width - 20;\r\n        this._fancyFish.y = this._game.StageHeight - this._fancyFish.getBounds().height - 20;\r\n        this._mainContainer.addChild(this._fancyFish);\r\n        // this._mainContainer.addMany({\r\n        //     logo : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"logo\"),\r\n        //     fishbowl : Sprites.Buttons.Fishbowl,\r\n        //     btnNewGame : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnNewGame\"),\r\n        //     btnOptions : Sprites.Buttons.Options,\r\n        //     btnLevelSelect : Sprites.Buttons.LevelSelect,\r\n        //     btnExit : Sprites.Buttons.Exit\r\n        // });\r\n\r\n        //setup options container\r\n        this._optionsContainer = new Container();\r\n        this._optionsContainer.addMany({\r\n            txtOptions : Sprites.generateBitmapText(\"Options\", LoadManager.Spritesheets.Typography),\r\n            btnClearData : Sprites.Buttons.ClearData\r\n        });\r\n        this._optionsContainer.Container.x -= this._game.StageWidth;\r\n\r\n        //setup cleared container\r\n        this._clearedContainer = new Container();\r\n        this._clearedContainer.add(\"txtCleared\", Sprites.generateBitmapText(\"Data successfully cleared!\", LoadManager.Spritesheets.Typography));\r\n        this._clearedContainer.Container.x -= this._game.StageWidth;\r\n        this._clearedContainer.Container.y -= this._game.StageHeight;\r\n\r\n        this._levelSelectDisplay = new LevelSelectDisplay(game);\r\n        this._levelSelectDisplay.Container.x += this._game.StageWidth;\r\n\r\n\r\n        //setup properties\r\n        this._swipeSpeed = 800;\r\n        this._currentScreen = \"main\";\r\n        this._initialSwipePos = { x:-1, y:-1 };\r\n\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    private _onNewGame() {\r\n        Logging.message(\"Go to new game!\");\r\n        \r\n        const data = DataManager.getLevelDataByIndex(0);\r\n        \r\n        const intermediary = ScreenManager.getScreenByKey(\"intermediary\") as IntermediaryScreen;\r\n        new Promise(async(res) => {\r\n            intermediary.Text = data.name;\r\n            await ScreenManager.setCurrentScreen(intermediary, this.Stage);\r\n            intermediary.queueNextScreen(\"game\");\r\n\r\n            res();\r\n        });\r\n    }\r\n    private _onOptions() {\r\n        //go to options!\r\n        Logging.message(\"Go to options!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:this._game.StageWidth}, this._swipeSpeed, createjs.Ease.circOut);\r\n        this._currentScreen = \"options\";\r\n    }\r\n    private _onLevelSelect() {\r\n        Logging.message(\"Go to level select!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:-this._game.StageWidth}, this._swipeSpeed, createjs.Ease.circOut);\r\n        this._currentScreen = \"levelSelect\";\r\n    }\r\n    private _onExit() {\r\n        Logging.message(\"Go to exit!\");\r\n    }\r\n\r\n    private _onMain() {\r\n        Logging.message(\"Go to main!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:0}, this._swipeSpeed, createjs.Ease.bounceOut);\r\n        this._currentScreen = \"main\";\r\n    }\r\n\r\n    private _onClearData() {\r\n        Logging.success(\"Cleared data!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:this._game.StageWidth, y:this._game.StageHeight}, this._swipeSpeed, createjs.Ease.cubicIn);\r\n        // this._currentScreen = \"cleared\"\r\n        let e = window.setTimeout(() => {\r\n            createjs.Tween.get(this._swipeContainer).to({x:this._game.StageWidth, y:0}, this._swipeSpeed, createjs.Ease.cubicInOut);\r\n            window.clearInterval(e);\r\n            this._currentScreen = \"options\";\r\n        }, 2000);\r\n    }\r\n\r\n    private _onDragStart(e) {\r\n\r\n        this._initialSwipePos = { x:e.stageX, y:e.stageY };\r\n\r\n        //reset drag timer if not null\r\n        if(this._dragTimer != null) window.clearTimeout(this._dragTimer);\r\n        this._dragTimer = setTimeout(() => {\r\n            this._initialSwipePos = { x:-1, y:-1 };\r\n            this._dragTimer = null;\r\n        }, 500);\r\n    }\r\n    private _onDragEnd(e) {\r\n        if(this._initialSwipePos.x != -1 || this._initialSwipePos.y != -1) {\r\n            //find the direction\r\n            if((this._initialSwipePos.x - e.stageX) > 20) {\r\n                if(this._currentScreen == \"options\")\r\n                    this._onMain();\r\n            }\r\n            else if((this._initialSwipePos.x - e.stageX) < -20) {\r\n                if(this._currentScreen == \"levelSelect\")\r\n                    this._onMain();\r\n            }\r\n        }\r\n    }\r\n\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n\r\n        //add in the containers\r\n        this._staticContainer.Sprites.bg.y = 0;\r\n        this._container.addChild(this._staticContainer.Container);\r\n        this._container.addChild(this._swipeContainer);\r\n        this._swipeContainer.addChild(this._mainContainer);\r\n        this._swipeContainer.addChild(this._optionsContainer.Container);\r\n        this._swipeContainer.addChild(this._clearedContainer.Container);\r\n        // this._swipeContainer.addChild(this._levelSelectContainer.Container);\r\n\r\n        \r\n        this._swipeContainer.addChild(this._levelSelectDisplay.Container);\r\n\r\n        return super.create(stage);\r\n    }\r\n\r\n    public enable() {\r\n        console.log(\"LOAD IN MENU ACTIONS\");\r\n        super.enable();\r\n        //listen to events\r\n        (this._mainButtonsContainer.Sprites.btnNewGame as any).on(\"click\", this._onNewGame, this, true);\r\n        (this._mainButtonsContainer.Sprites.btnOptions as any).on(\"click\", this._onOptions, this);\r\n        (this._mainButtonsContainer.Sprites.btnLevelSelect as any).on(\"click\", this._onLevelSelect, this);\r\n        (this._mainButtonsContainer.Sprites.btnExit as any).on(\"click\", this._onExit, this);\r\n\r\n        Sprites.listenToClearData();\r\n        (this._optionsContainer.Sprites.btnClearData as any).on(Sprites.CLEAR_DATA, this._onClearData, this);\r\n\r\n        //listen for swipes\r\n        (this._staticContainer.Sprites.bg as any).on(\"mousedown\", this._onDragStart, this);\r\n        (this._staticContainer.Sprites.bg as any).on(\"click\", this._onDragEnd, this);\r\n\r\n        // this._mainButtonsContainer.Sprites.btnOptions.on(\"click\", () => console.log(\"HELLO I CLIC\"));\r\n\r\n        this._levelSelectDisplay.enable();\r\n\r\n\r\n\r\n        //rock the fish\r\n        createjs.Tween\r\n            // @ts-ignore\r\n            .get(this._fancyFish, { loop:true })\r\n            .to({ y:this._fancyFish.y-30 }, 3000, createjs.Ease.sineInOut)\r\n            .to({ y:this._fancyFish.y }, 3000, createjs.Ease.sineInOut);\r\n\r\n        //rock the logo\r\n        createjs.Tween\r\n            // @ts-ignore\r\n            .get(this._logo, { loop:true })\r\n            .wait(1200)\r\n            .to({ y:this._logo.y-15 }, 4500, createjs.Ease.sineInOut)\r\n            .to({ y:this._logo.y }, 4800, createjs.Ease.sineInOut);\r\n    }\r\n\r\n    public disable() {\r\n        super.disable();\r\n        //stop listen to events\r\n        (this._mainButtonsContainer.Sprites.btnNewGame as any).off(\"click\", this._onNewGame);\r\n        (this._mainButtonsContainer.Sprites.btnOptions as any).off(\"click\", this._onOptions);\r\n        (this._mainButtonsContainer.Sprites.btnLevelSelect as any).off(\"click\", this._onLevelSelect);\r\n        (this._mainButtonsContainer.Sprites.btnExit as any).off(\"click\", this._onExit);\r\n\r\n        Sprites.stopListenToClearData();\r\n        (this._optionsContainer.Sprites.btnClearData as any).off(Sprites.CLEAR_DATA, this._onClearData);\r\n\r\n        //stop listen for swipes\r\n        (this._staticContainer.Sprites.bg as any).off(\"mousedown\", this._onDragStart);\r\n        (this._staticContainer.Sprites.bg as any).off(\"click\", this._onDragEnd);\r\n\r\n\r\n        this._levelSelectDisplay.disable();\r\n\r\n        this.reset();\r\n\r\n\r\n        createjs.Tween.removeAllTweens();\r\n    }\r\n\r\n    public reset() {\r\n        //reset the position of the swipe container\r\n        this._swipeContainer.x = 0;\r\n        this._swipeContainer.y = 0;\r\n\r\n        super.reset();\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n}","import { IUpdateable, ICreateable, IEnableable } from \"../Interfaces\";\r\n\r\nexport class Screen implements ICreateable<Screen>, IUpdateable, IEnableable {\r\n    private _stage:createjs.StageGL;\r\n    protected _container:createjs.Container;\r\n\r\n    constructor() {\r\n        this._container = new createjs.Container();\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Updates the screen. */\r\n    public update(gameTime:number) {\r\n\r\n    }\r\n\r\n    /**Creates the screen and adds to the stage. */\r\n    public create(stage:createjs.StageGL):Screen {\r\n        this._stage = stage;\r\n        //add to the stage\r\n        this._stage.addChild(this._container);\r\n\r\n        \r\n        return this;\r\n    }\r\n\r\n    /**Destroys the screen and removes from the stage. */\r\n    public destroy():Screen {\r\n\r\n        //remove from the stage\r\n        this._stage.removeChild(this._container);\r\n\r\n        return this;\r\n    }\r\n\r\n    public enable() {\r\n\r\n    }\r\n\r\n    public disable() {\r\n        \r\n    }\r\n\r\n    public reset() {\r\n        \r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container():createjs.Container { return this._container; }\r\n    protected get Stage():createjs.StageGL { return this._stage; }\r\n\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\n\r\nexport class SplashScreen extends Screen {\r\n    private _splash:createjs.Shape;\r\n    \r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n        //add stuff\r\n        this._splash = new createjs.Shape();\r\n        this._splash.graphics.beginFill(\"red\");\r\n        this._splash.graphics.drawRect(0, 0, 100, 100);\r\n        this._splash.graphics.endFill();\r\n        this._splash.cache(0, 0, 100, 100);\r\n        this._container.addChild(this._splash);\r\n        super.create(stage);\r\n\r\n        //for testing\r\n        (this._container as any).on(\"click\", (e) => {\r\n            ScreenManager.setCurrentScreen(\"menu\", stage);\r\n        }, this, true);\r\n\r\n        return this;\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n}","import { LoadManager } from \"../managers/LoadManager\";\r\n\r\n/**Used to gain access to in-game sprites. */\r\nexport class Sprites {\r\n    public static CLEAR_DATA:string = \"onClearData\";\r\n\r\n    private static _backgrounds:{ [key:string]:createjs.DisplayObject } = { };\r\n    private static _buttons:{ [key:string]:createjs.DisplayObject } = { };\r\n\r\n    private static _graphics:{ [key:string]:createjs.DisplayObject } = { };\r\n\r\n    private static _spritesheets:createjs.SpriteSheet[];\r\n\r\n    private static _canClearData:boolean = false;\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public static setup() {\r\n        return new Promise((res, rej) => {\r\n            // Sprites.spritesheets = spritesheets\r\n            //setup all the sprites\r\n            /* ------- STATIC ------- */\r\n            Sprites._backgrounds.Main = new createjs.Sprite(LoadManager.Spritesheets.UI); // Static BG\r\n            (Sprites._backgrounds.Main as createjs.Sprite).gotoAndStop(\"bg_main_static\");\r\n\r\n            Sprites._backgrounds.Logo = new createjs.Sprite(LoadManager.Spritesheets.Entities); // LOGO\r\n            (Sprites._backgrounds.Logo as createjs.Sprite).gotoAndStop(\"icon_title\");\r\n\r\n            Sprites._backgrounds.BG = LoadManager.Images.BG; // Redux\r\n            Sprites._backgrounds.BGTop = LoadManager.Images.BGTop;\r\n\r\n\r\n            /* ------- ANIMATED ------- */\r\n            Sprites._backgrounds.Wave = new createjs.Sprite(LoadManager.Spritesheets.UI); // Animated BG\r\n            (Sprites._backgrounds.Wave as createjs.Sprite).gotoAndPlay(\"bg_main\");\r\n\r\n\r\n            /* ------- GRAPHICS ------ */\r\n            Sprites._graphics.Timer = new createjs.Sprite(LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n            (Sprites._graphics.Timer as createjs.Sprite).gotoAndPlay(\"sprTime\");\r\n            Sprites._graphics.Score = new createjs.Sprite(LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n            (Sprites._graphics.Score as createjs.Sprite).gotoAndPlay(\"sprScore\");\r\n            Sprites._graphics.FishRemain = new createjs.Sprite(LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n            (Sprites._graphics.FishRemain as createjs.Sprite).gotoAndPlay(\"sprFish\");\r\n            \r\n            /* ------- BUTTONS ------- */\r\n            Sprites._buttons.NewGame = new createjs.Sprite(LoadManager.Spritesheets.Entities); // New Game\r\n            (Sprites._buttons.NewGame as createjs.Sprite).gotoAndStop(\"btn_new_game\");\r\n            new createjs.ButtonHelper(Sprites._buttons.NewGame as createjs.Sprite, \"btn_new_game\", \"btn_new_game_hover\", \"btn_new_game_hover\");\r\n\r\n\r\n            Sprites._buttons.Options = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Options\r\n            (Sprites._buttons.Options as createjs.Sprite).gotoAndStop(\"btn_new_game\");\r\n            new createjs.ButtonHelper(Sprites._buttons.Options as createjs.Sprite, \"btn_options\", \"btn_options_hover\", \"btn_options_hover\");\r\n\r\n            Sprites._buttons.LevelSelect = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Select\r\n            (Sprites._buttons.LevelSelect as createjs.Sprite).gotoAndStop(\"btn_select\");\r\n            new createjs.ButtonHelper(Sprites._buttons.LevelSelect as createjs.Sprite, \"btn_select\", \"btn_select_hover\", \"btn_select_hover\");\r\n\r\n            Sprites._buttons.Exit = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Exit\r\n            (Sprites._buttons.Exit as createjs.Sprite).gotoAndStop(\"btn_select\");\r\n            new createjs.ButtonHelper(Sprites._buttons.Exit as createjs.Sprite, \"btn_exit\", \"btn_exit_hover\", \"btn_exit_hover\");\r\n\r\n            Sprites._buttons.Fishbowl = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Fishbowl\r\n            (Sprites._buttons.Fishbowl as createjs.Sprite).gotoAndStop(\"btn_select\");\r\n            new createjs.ButtonHelper(Sprites._buttons.Fishbowl as createjs.Sprite, \"icon_fishbowl\", \"icon_fishbowl_hover\", \"icon_fishbowl_hover\", true);\r\n\r\n\r\n            /* ------- MENU ------- */\r\n            Sprites._backgrounds.LevelSelectBG = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Select BG\r\n            (Sprites._backgrounds.LevelSelectBG as createjs.Sprite).gotoAndStop(\"static_bg\");\r\n            Sprites._buttons.LevelEmpty = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Empty Button\r\n            (Sprites._buttons.LevelEmpty as createjs.Sprite).gotoAndStop(\"level_empty\");\r\n            Sprites._buttons.LevelComplete = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Complete Button\r\n            (Sprites._buttons.LevelComplete as createjs.Sprite).gotoAndStop(\"level_complete\");\r\n            Sprites._buttons.LevelSpecialEmpty = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Special Empty Button\r\n            (Sprites._buttons.LevelSpecialEmpty as createjs.Sprite).gotoAndStop(\"level_special_empty\");\r\n            Sprites._buttons.LevelSpecialComplete = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Special Complete Button\r\n            (Sprites._buttons.LevelSpecialComplete as createjs.Sprite).gotoAndStop(\"level_special_complete\");\r\n\r\n\r\n            /* ------- COMPLEX ------- */\r\n            Sprites._setupBTNClearData();\r\n\r\n            res();\r\n        });\r\n    }\r\n\r\n    // /* --- Complex createjs.Sprite Setup --- */\r\n    private static _setupBTNClearData() {\r\n        Sprites._buttons.ClearData = new createjs.Sprite(LoadManager.Spritesheets.UI); // BTN Clear Data\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndStop(\"btn_clear_data\");\r\n        (Sprites._buttons.ClearData as createjs.Sprite).cursor = \"pointer\";\r\n        Sprites._canClearData = false;\r\n    }\r\n    public static listenToClearData() {\r\n        //listen\r\n        (Sprites._buttons.ClearData as any).on(\"mousedown\", Sprites._btnDataDown);\r\n        (Sprites._buttons.ClearData as any).on(\"animationend\", Sprites._btnDataComplete);\r\n        (Sprites._buttons.ClearData as any).on(\"click\", Sprites._btnDataUp);\r\n    }\r\n    public static stopListenToClearData() {\r\n        //listen\r\n        (Sprites._buttons.ClearData as any).off(\"mousedown\", Sprites._btnDataDown);\r\n        (Sprites._buttons.ClearData as any).off(\"animationend\", Sprites._btnDataComplete);\r\n        (Sprites._buttons.ClearData as any).off(\"click\", Sprites._btnDataUp);\r\n    }\r\n\r\n    private static _btnDataDown(e) {\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndPlay(\"btn_clear_data_progress\");\r\n        Sprites._canClearData = true;\r\n    }\r\n    private static _btnDataUp(e) {\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndStop(\"btn_clear_data\");\r\n        Sprites._canClearData = false;\r\n    }\r\n    private static _btnDataComplete(e) {\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndStop(\"btn_clear_data\");\r\n        //dispatch event to button\r\n        if(Sprites._canClearData) {\r\n            (Sprites._buttons.ClearData as createjs.Sprite).dispatchEvent(new Event(Sprites.CLEAR_DATA));\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**A helper function to generate and cache text for the StageGL object. */\r\n    public static generateText(text, details = \"20px Arial\", color = \"#FFFEEE\") {\r\n        const textObj = new createjs.Text(text, details, color)\r\n        textObj.cache(0, 0, textObj.getBounds().width, textObj.getBounds().height);\r\n        return textObj;\r\n    }\r\n\r\n    public static generateBitmapText(text, spritesheet) {\r\n        const textObj = new createjs.BitmapText(text, spritesheet);\r\n        return textObj;\r\n    }\r\n\r\n\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get Backgrounds() { return Sprites._backgrounds; }\r\n    public static get Buttons() { return Sprites._buttons; }\r\n    public static get Graphics() { return Sprites._graphics; }\r\n\r\n    // static get BG() { return Sprites._bg }\r\n    // static get Logo() { return Sprites._logo }\r\n    // static get AnimBG() { return Sprites._animBg }\r\n    // static get GameBG() { return Sprites._gameBG }\r\n    // static get GameBGTop() { return Sprites._gameBGTop }\r\n    // //buttons\r\n    // static get BTN_New_Game() { return Sprites._btnNewGame }\r\n    // static get BTN_Options() { return Sprites._btnOptions }\r\n    // static get BTN_Select() { return Sprites._btnSelect }\r\n    // static get BTN_Exit() { return Sprites._btnExit }\r\n    // static get BTN_Fishbowl() { return Sprites._btnFishbowl }\r\n    // static get BTN_ClearData() { return Sprites._btnClearData }\r\n\r\n\r\n    // static get CLEAR_DATA() { return \"onClearData\" }\r\n}","import { Sprites } from \"../Sprites\";\r\nimport { LoadManager } from \"../../managers/LoadManager\";\r\nimport { Game } from \"../../Game\";\r\nimport { IEnableable } from \"../../Interfaces\";\r\nimport { GameScreen } from \"../../screens/GameScreen\";\r\nimport { DataManager } from \"../../managers/DataManager\";\r\nimport { ScreenManager } from \"../../managers/ScreenManager\";\r\nimport { IntermediaryScreen } from \"../../screens/IntermediaryScreen\";\r\n\r\n\r\nexport class LevelSelectDisplay implements IEnableable {\r\n    private _game:Game;\r\n\r\n    private _container:createjs.Container;\r\n    private _background:createjs.Sprite;\r\n    private _levelsContainer:createjs.Container;\r\n    private _levelTextContainer:createjs.Container;\r\n\r\n    private _levelsData:any;\r\n\r\n    private _levelButtons:createjs.Sprite[];\r\n\r\n    constructor(game:Game) {\r\n        this._game = game;\r\n        this._levelButtons = [];\r\n\r\n        //build the required components for the level select display\r\n        this._container = new createjs.Container();\r\n        this._background = Sprites.Backgrounds.LevelSelectBG as createjs.Sprite;\r\n        this._background.x = (game.StageWidth / 2) - (this._background.getBounds().width / 2);\r\n        this._background.y = 80;\r\n\r\n        this._levelsContainer = new createjs.Container();\r\n        this._container.addChild(this._background);\r\n        let text = Sprites.generateBitmapText(\"Level Select\", LoadManager.Spritesheets.Typography);\r\n        text.x = (game.StageWidth / 2) - (text.getBounds().width / 2);\r\n        text.y = 30;\r\n        this._container.addChild(text);\r\n\r\n\r\n        //setup display text\r\n        this._levelTextContainer = new createjs.Container();\r\n        this._container.addChild(this._levelTextContainer);\r\n\r\n        this.LevelText = \"Hello World!\";\r\n\r\n\r\n        //spoof some level data\r\n        this._levelsData = [\r\n            [\r\n                { name: \"Welcome to the pond!\", complete:true, unlocked:true, data:[0, 0, 0, 0, 0, 0, 0] },\r\n                { name: \"A new adventure!\", complete:true, unlocked:true, data:[0, 0, 0, 0, 0, 0, 0] },\r\n                { name: \"Learn to aim!\", complete:false, unlocked:true, data:[0, 0, 0, 0, 0, 0, 0] },\r\n                { name: \"Persephone!\", special:true, complete:false, unlocked:false, data:[0, 0, 0, 0, 0, 0, 0] },\r\n            ],\r\n            [\r\n                { name: \"In deep water!\", complete:false, unlocked:false, data:[0, 0, 0, 0, 0, 0, 0] },\r\n                { name: \"An ocean of fish!\", complete:false, unlocked:false, data:[0, 0, 0, 0, 0, 0, 0] },\r\n                { name: \"Barnacles ahoy!\", complete:false, unlocked:false, data:[0, 0, 0, 0, 0, 0, 0] },\r\n                { name: \"Owen!\", special:true, complete:false, unlocked:false, data:[0, 0, 0, 0, 0, 0, 0] },\r\n            ]\r\n        ];\r\n\r\n\r\n        //build the level icons\r\n        for(let r = 0; r < this._levelsData.length; r++) {\r\n            //iterate through levels\r\n            for(let i = 0; i < this._levelsData[r].length; i++) {\r\n                const levelData = this._levelsData[r][i];\r\n                console.log(\"LEVEL\", levelData);\r\n                //decide the sprite\r\n                let sprite = Sprites.Buttons.LevelEmpty.clone();\r\n                if(levelData.special != null && levelData.special) sprite = Sprites.Buttons.LevelSpecialEmpty.clone();\r\n                // //completed\r\n                if(levelData.complete) {\r\n                    sprite = Sprites.Buttons.LevelComplete.clone();\r\n                    if(levelData.special != null && levelData.special) sprite = Sprites.Buttons.LevelSpecialComplete;\r\n                }\r\n                //locked\r\n                if(!levelData.unlocked) {\r\n                    sprite.alpha = 0.25;\r\n                }\r\n                else {\r\n                    sprite.alpha = 1;\r\n                     //extras\r\n                    sprite.cursor = \"pointer\";\r\n                }\r\n\r\n                //place\r\n                sprite.x = 60 * i;\r\n                sprite.y = 50 * r;\r\n                //add\r\n                this._levelsContainer.addChild(sprite);\r\n                //to array\r\n                this._levelButtons.push(sprite as createjs.Sprite);\r\n            }\r\n        };\r\n\r\n        this._levelsContainer.x = (game.StageWidth / 2) - (this._levelsContainer.getBounds().width / 2);\r\n        this._levelsContainer.y = 100;\r\n        this._container.addChild(this._levelsContainer);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public enable() {\r\n        this._levelButtons.forEach(btn => {\r\n            btn.on(\"click\", this._onLevelClick, this);\r\n            btn.on(\"mouseover\", this._onLevelHover, this);\r\n            btn.on(\"mouseout\", this._onLevelUnhover, this);\r\n        });\r\n    }\r\n\r\n    public disable() {\r\n        this._levelButtons.forEach(btn => {\r\n            btn.removeAllEventListeners();\r\n        });\r\n    }\r\n\r\n\r\n    /**Returns level data from the given index. */\r\n    private _getDataByIndex(index:number) {\r\n        //flatten level data, and get data\r\n        let flatten = this._levelsData.reduce((acc, next) => acc.concat(next));\r\n        return flatten[index];\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    private _onLevelClick(e) {\r\n         //get button index\r\n        let index = this._levelButtons.indexOf(e.target);\r\n\r\n        if(index == -1) return;\r\n\r\n        //set the level index\r\n        const data = DataManager.getLevelDataByIndex(index);\r\n        console.log(\"MY LEVEL DATA\", data);\r\n        this._game.changeCurrentLevel(data);\r\n        //go to intermediary screen\r\n        const intermediary = ScreenManager.getScreenByKey(\"intermediary\") as IntermediaryScreen;\r\n        new Promise(async(res) => {\r\n            intermediary.Text = data.name;\r\n            await ScreenManager.setCurrentScreen(intermediary, this._game.Stage);\r\n            intermediary.queueNextScreen(\"game\", 1000);\r\n\r\n            res();\r\n        });\r\n    }\r\n\r\n    private _onLevelHover(e) {\r\n        //find the button data\r\n        //get button index\r\n        let index = this._levelButtons.indexOf(e.target);\r\n        \r\n        if(index != -1) {\r\n            const data = this._getDataByIndex(index);\r\n            if(data != null) {\r\n                if(data.unlocked)\r\n                    this.LevelText = data.name;\r\n            }\r\n        }\r\n\r\n    }\r\n    private _onLevelUnhover(e) {\r\n        this.LevelText = \"\";\r\n    }\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container() { return this._container; }\r\n    public set LevelText(value:string) {\r\n        if(value == \"\") {\r\n            this._levelTextContainer.removeAllChildren();\r\n            return;\r\n        }\r\n        //create the text\r\n        const text = Sprites.generateBitmapText(value, LoadManager.Spritesheets.TypographyWhite);\r\n        (text as any).scale = 0.6;\r\n        //load into container\r\n        this._levelTextContainer.removeAllChildren();\r\n        this._levelTextContainer.addChild(text);\r\n\r\n        //put container at bottom\r\n        this._levelTextContainer.x = (this._game.StageWidth / 2) - ((text.getBounds().width / 2) * 0.6);\r\n        this._levelTextContainer.y = this._game.StageHeight - 30;\r\n    }\r\n}","import { Layout } from \"./Layout\";\r\n\r\n/**Uses custom classes and the createjs library to help easily build up ui interfaces with DisplayObjects. */\r\nexport class Container {\r\n    private _sprites:{ [key:string]:createjs.DisplayObject };\r\n    private _container:createjs.Container;\r\n    private _layout:Layout;\r\n\r\n    constructor(layout:{ direction:string, alignment:string, crossAlignment:string, spacing:number } = null) {\r\n        this._sprites = { };\r\n        this._container = new createjs.Container();\r\n        this._layout = (layout != null) ? new Layout(this._container, layout.direction, layout.alignment, layout.crossAlignment, layout.spacing)  : Layout.MAKE_VERTICAL_CENTER(this._container);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public add(key:string, sprite:createjs.DisplayObject, updateLayout:boolean=true):boolean {\r\n        if(this._sprites[key] != null) return false;\r\n        this._sprites[key] = sprite.clone();\r\n\r\n        if(updateLayout) this._layout.buildLayout(true, ...Object.keys(this._sprites).map(k => this._sprites[k]));\r\n        return true;\r\n    }\r\n\r\n    public addMany(sprites:{ [key:string]:createjs.DisplayObject }) {\r\n        Object.keys(sprites).forEach(k => {\r\n            this.add(k, sprites[k], false);\r\n        });\r\n\r\n        this._layout.buildLayout(true, ...Object.keys(this._sprites).map(k => this._sprites[k]));\r\n    }\r\n\r\n    public changeLayout(layout:Layout) {\r\n        this._layout = layout;\r\n    }\r\n\r\n    /**In case of wandering or reusable sprites, call them back to this layout! */\r\n    public checkoutSprites() {\r\n        this._layout.buildLayout(true, ...Object.keys(this._sprites).map(k => this._sprites[k]));\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container():createjs.Container { return this._container; }\r\n    public get Sprites() { return this._sprites; }\r\n\r\n    public static get LAYOUT_OPTIONS() {\r\n        return {\r\n            //column layouts\r\n            //-- left aligned\r\n            \"ColumnLeftTop\" : {direction:Layout.VERTICAL, alignment:Layout.START, crossAlignment:Layout.START, spacing:5},\r\n            \"ColumnLeftCenter\" : {direction:Layout.VERTICAL, alignment:Layout.START, crossAlignment:Layout.CENTER, spacing:5},\r\n            \"ColumnLeftBottom\" : {direction:Layout.VERTICAL, alignment:Layout.START, crossAlignment:Layout.END, spacing:5},\r\n            //-- center aligned\r\n            \"ColumnCenterTop\" : {direction:Layout.VERTICAL, alignment:Layout.CENTER, crossAlignment:Layout.START, spacing:5},\r\n            \"ColumnCenterCenter\" : {direction:Layout.VERTICAL, alignment:Layout.CENTER, crossAlignment:Layout.CENTER, spacing:5},\r\n            \"ColumnCenterBottom\" : {direction:Layout.VERTICAL, alignment:Layout.CENTER, crossAlignment:Layout.END, spacing:5},\r\n            //-- right aligned\r\n            \"ColumnRightTop\" : {direction:Layout.VERTICAL, alignment:Layout.END, crossAlignment:Layout.START, spacing:5},\r\n            \"ColumnRightCenter\" : {direction:Layout.VERTICAL, alignment:Layout.END, crossAlignment:Layout.CENTER, spacing:5},\r\n            \"ColumnRightBottom\" : {direction:Layout.VERTICAL, alignment:Layout.END, crossAlignment:Layout.END, spacing:5}\r\n        };\r\n    }\r\n}","import { Game } from \"../../Game\";\r\n\r\n/**Used to layout createjs display objects. */\r\nexport class Layout {\r\n    //justify content\r\n    public static HORIZONTAL:string = \"horizontal\";\r\n    public static VERTICAL:string = \"vertical\";\r\n    //align items\r\n    public static START:string = \"start\";\r\n    public static END:string = \"end\";\r\n    public static CENTER:string = \"center\";\r\n\r\n    private _parent:createjs.Container;\r\n    private _items:createjs.DisplayObject[];\r\n\r\n    private _direction:string;\r\n    private _alignment:string;\r\n    private _crossAlignment:string;\r\n    private _spacing:number;\r\n\r\n    constructor(parent:createjs.Container, direction:string, alignment:string, crossAlignment:string, spacing:number = 5) {\r\n        this._parent = parent;\r\n        this._items = [];\r\n\r\n        this._direction = direction;\r\n        this._alignment = alignment;\r\n        this._crossAlignment = crossAlignment;\r\n        this._spacing = spacing;\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public buildLayout(addToParent:boolean=true, ...items:createjs.DisplayObject[]) {\r\n        if(items.length <= 0) return;\r\n\r\n        this._items = items;\r\n\r\n        if(addToParent) {\r\n            this._parent.removeAllChildren();\r\n        }\r\n        \r\n\r\n        if(this._direction == Layout.VERTICAL) {\r\n            let totalHeight = 0;\r\n            //ALIGNMENT\r\n            switch(this._alignment) {\r\n                case Layout.START : {\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        item.x = 0;\r\n                        item.y = totalHeight;\r\n                        totalHeight += item.getBounds().height + this._spacing;\r\n                        if(addToParent) this._parent.addChild(item);\r\n                    }\r\n                    break;\r\n                }\r\n                case Layout.CENTER : {\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        item.x = (Game.WIDTH / 2) - (item.getBounds().width / 2);\r\n                        item.y = totalHeight;\r\n                        totalHeight += item.getBounds().height + this._spacing;\r\n                        if(addToParent) this._parent.addChild(item);\r\n                    }\r\n                    break;\r\n                }\r\n                case Layout.END : {\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        item.x = Game.WIDTH - item.getBounds().width;\r\n                        item.y = totalHeight;\r\n                        totalHeight += item.getBounds().height + this._spacing;\r\n                        if(addToParent) this._parent.addChild(item);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n\r\n            //CROSS ALIGNMENT\r\n            //handle vertical alignment\r\n            switch(this._crossAlignment) {\r\n                case Layout.START : {\r\n                    break;\r\n                }\r\n                case Layout.CENTER : {\r\n                    totalHeight += items[items.length-1].getBounds().height;\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        //decipher desired center\r\n                        item.y += (Game.HEIGHT / 2) - (totalHeight / 2);\r\n                    }\r\n                    break;\r\n                }\r\n                case Layout.END :  {\r\n                    totalHeight += items[items.length-1].getBounds().height;\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        //decipher desired center\r\n                        item.y += Game.HEIGHT - totalHeight;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n\r\n        }\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    \r\n    /*--------------- HELPER FUNCTIONS ---------------*/\r\n    public static MAKE_VERTICAL_CENTER(container:createjs.Container) { return new Layout(container, Layout.VERTICAL, Layout.CENTER, Layout.CENTER, 5); }\r\n    public static MAKE_VERTICAL_START(container:createjs.Container) { return new Layout(container, Layout.VERTICAL, Layout.CENTER, Layout.START, 5); }\r\n\r\n}","import { Game } from \"../../Game\";\r\nimport { Sprites } from \"../Sprites\";\r\nimport { LoadManager } from \"../../managers/LoadManager\";\r\n\r\n/**Creates a display container for the game screen. */\r\nexport class GameScore {\r\n    private _game:Game;\r\n    private _container:createjs.Container;\r\n    private _bg:createjs.Shape;\r\n    private _txtTimer:createjs.DisplayObject;\r\n\r\n    private _timerContainer:createjs.Container;\r\n    private _timerTextContainer:createjs.Container;\r\n    private _fishRemainContainer:createjs.Container;\r\n    private _fishRemainTextContainer:createjs.Container;\r\n    private _scoreContainer:createjs.Container;\r\n    private _scoreTextContainer:createjs.Container;\r\n\r\n    //game conditions\r\n    private _useTimer:boolean = false;\r\n    private _useFishRemain:boolean = true;\r\n    private _useScore:boolean = true;\r\n\r\n    constructor(game:Game) {\r\n        this._game = game;\r\n        //create the initial objects\r\n        this._container = new createjs.Container();\r\n        this._bg = new createjs.Shape();\r\n        this._bg.graphics.beginFill(\"#000000\");\r\n        this._bg.graphics.drawRect(0, 0, this._game.StageWidth, 40);\r\n        this._bg.graphics.endFill();\r\n        this._bg.cache(0, 0, this._game.StageWidth, 40);\r\n        this._container.addChild(this._bg);\r\n\r\n        //create the container objects\r\n        //timer\r\n        this._timerContainer = new createjs.Container();\r\n        this._timerContainer.x += 10;\r\n        const timerSprite = Sprites.Graphics.Timer.clone();\r\n        this._timerContainer.addChild(timerSprite);\r\n        this._timerTextContainer = new createjs.Container();\r\n        this._timerTextContainer.y += 8;\r\n        this._timerTextContainer.x += Sprites.Graphics.Timer.getBounds().width + 10;\r\n        this._timerContainer.addChild(this._timerTextContainer);\r\n        this._container.addChild(this._timerContainer);\r\n\r\n        //fish remain\r\n        this._fishRemainContainer = new createjs.Container();\r\n        const fishRemainSprite = Sprites.Graphics.FishRemain.clone();\r\n        this._fishRemainContainer.addChild(fishRemainSprite);\r\n        this._fishRemainTextContainer = new createjs.Container();\r\n        this._fishRemainTextContainer.y += 8;\r\n        this._fishRemainTextContainer.x += Sprites.Graphics.FishRemain.getBounds().width + 10;\r\n        this._fishRemainContainer.addChild(this._fishRemainTextContainer);\r\n        this._container.addChild(this._fishRemainContainer);\r\n\r\n        //score\r\n        this._scoreContainer = new createjs.Container();\r\n        this._scoreContainer.x = this._game.StageWidth - Sprites.Graphics.Score.getBounds().width - 40;\r\n        const scoreSprite = Sprites.Graphics.Score.clone();\r\n        this._scoreContainer.addChild(scoreSprite);\r\n        this._scoreTextContainer = new createjs.Container();\r\n        this._scoreTextContainer.y += 8;\r\n        this._scoreTextContainer.x += Sprites.Graphics.Score.getBounds().width + 10;\r\n        this._scoreContainer.addChild(this._scoreTextContainer);\r\n        this._container.addChild(this._scoreContainer);\r\n        \r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public startHUD(showScore:boolean, showFishRemain:boolean, showTimer:boolean) {\r\n        this._useScore = showScore;\r\n        this._useFishRemain = showFishRemain;\r\n        this._useTimer = showTimer;\r\n\r\n        console.log(\"SHOW ME THE SCORE, REMAIN, TIMER\", showScore, showFishRemain, showTimer);\r\n\r\n        if(this._useScore) this._container.addChild(this._scoreContainer);\r\n        else this._container.removeChild(this._scoreContainer);\r\n\r\n        if(this._useFishRemain) this._container.addChild(this._fishRemainContainer);\r\n        else this._container.removeChild(this._fishRemainContainer);\r\n\r\n        if(this._useTimer) this._container.addChild(this._timerContainer);\r\n        else this._container.removeChild(this._timerContainer);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public update(gameTime:number) {\r\n        \r\n        // //get the game timer\r\n        // let timer = gameTime;\r\n        // this._timerTextContainer.removeAllChildren();\r\n        // let timerCont = Sprites.generateBitmapText(this._game.CurrentLevelData.currentTime.toString(), LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n        // this._timerTextContainer.addChild(timerCont);\r\n\r\n        // //get the fish remain score\r\n        // let fishRemain = gameTime;\r\n        // this._fishRemainTextContainer.removeAllChildren();\r\n        // let fishRemainCont = Sprites.generateBitmapText(this._game.CurrentLevelData.remainingFish.toString(), LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n        // this._fishRemainTextContainer.addChild(fishRemainCont);\r\n        // this._fishRemainContainer.x = (this._game.StageWidth / 2) - (this._fishRemainContainer.getBounds().width / 2);\r\n\r\n        // //get the score\r\n        // let score = gameTime;\r\n        // this._scoreTextContainer.removeAllChildren();\r\n        // let scoreCont = Sprites.generateBitmapText(this._game.CurrentLevelData.score.toString(), LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n        // this._scoreTextContainer.addChild(scoreCont);\r\n        // this._scoreContainer.x = this._game.StageWidth - this._scoreContainer.getBounds().width - 40;\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container() { return this._container; }\r\n\r\n}"]}