{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/Functions.ts","src/Game.ts","src/ObjectPool.ts","src/entities/Cat.ts","src/entities/Entity.ts","src/entities/Fish.ts","src/entities/Puffer.ts","src/entities/specials/Persephone.ts","src/entities/specials/Special.ts","src/main.ts","src/managers/DataManager.ts","src/managers/LoadManager.ts","src/managers/ProgressManager.ts","src/managers/ScreenManager.ts","src/screens/EndScreen.ts","src/screens/GameScreen.ts","src/screens/IntermediaryScreen.ts","src/screens/MenuScreen.ts","src/screens/Screen.ts","src/screens/SplashScreen.ts","src/screens/TutorialCreator.ts","src/ui/Sprites.ts","src/ui/custom/LevelSelectDisplay.ts","src/ui/display/Container.ts","src/ui/display/Layout.ts","src/ui/partials/GameScore.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Logging","message","console","log","_message","LoadManager_1","ProgressManager_1","ScreenManager_1","SplashScreen_1","MenuScreen_1","GameScreen_1","EndScreen_1","Functions_1","Sprites_1","IntermediaryScreen_1","DataManager_1","Game","canvasDiv","_this","this","_classCallCheck","_canvas","width","WIDTH","height","HEIGHT","_lastGameTime","_scaling","Promise","res","rej","__awaiter","regeneratorRuntime","mark","_callee","splash","wrap","_context","prev","next","_stage","createjs","StageGL","antialias","setClearColor","enableMouseOver","update","ScreenManager","registerScreen","SplashScreen","setCurrentScreen","getScreenByKey","addEventListener","LoadManager","ASSETS_UPDATED","Percentage","Text","Math","ceil","toString","loadAssets","catch","err","warn","success","DataManager","loadWorldsData","error","ProgressManager","WorldsData","changeCurrentLevel","getLevelDataByIndex","Sprites","setup","MenuScreen","GameScreen","EndScreen","IntermediaryScreen","Ticker","framerate","FRAME_RATE","on","stop","levelData","_currentLevel","currentScore","_currentScore","children","ch","scaleX","scaleY","_scaleChildren","gameTime","getMeasuredFPS","CurrentScreen","ObjectPool","obj","type","poolObj","active","Pool","push","_getObjectByType","_getObjectByObj","_pool","forEach","return","find","Entity_1","Cat","game","gameScreen","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","Spritesheets","Kitty_Spritesheet","_gameScreen","_speed","_fishCaughtMultiplier","_caughtFish","_isGrabbing","_isRising","_isInjured","_hasReachedSurface","_sprite","gotoAndPlay","ANIMATION","Idle","Entity","_this2","IsGamelogicPaused","X","Stage","mouseX","speed","mouseY","Speed","_catYTween","Tween","get","to","y","Ease","circIn","Grab","Hold","fishes","tryToGrabFishes","Y","caught","returnToSurface","_this3","removeTweens","wait","linear","reachSurface","_this4","hasNewFish","indexOf","release","_this5","Ow","injure","drop","_this6","collectFish","_this7","_get","prototype","hasHitAPuffer","hitEnemy","caughtFishMult","value","freeze","Death","spritesheet","_game","Sprite","_direction","x","_isIgnoringCollision","_ignoreCollisionTimer","container","addChild","parent","removeChild","IGNORE_COLLISION","artificialReg","arguments","undefined","reg","regX","regY","Bounds","Width","Height","bounds","StageWidth","extents","StageHeight","HIT","Right","Left","lastX","getBounds","Top","Bottom","Fish","Peeper_Spritesheet","_isCaught","_isReturning","Slow","_naturalY","Panic","hitTest","disable","abs","isNeg","IsIgnoringCollision","testStageBounds","DirectionX","startIgnoreCollision","Fast","Puffer","Puffer_Spritesheet","_cooldown","_currentCooldown","Angry","cat","Recover","Special_1","Persephone","Persephone_Spritesheet","SPEC_ANIMATION","Special","Fish_1","_isOnMainPage","_resetAttentionSpan","isOnMainPage","floor","random","_attnSpanDuration","_desiredX","_desiredY","_isNeg","Game_1","document","getElementById","fileLocation","fetch","then","blob","json","_worldsData","index","flatten","concat","apply","worlds","currentLevel","getLevelIndexByData","world","level","_sheetsTotal","_sheetsLoaded","_percentage","_totalAssetsLoaded","_totalAssets","src","stage","reset","_preloadManager","LoadQueue","Sound","registerPlugins","WebAudioPlugin","HTMLAudioPlugin","FlashAudioPlugin","alternateExtensions","installPlugin","_onLoaded","_onComplete","_onError","data","setMaxConnections","loadManifest","ASSETS_LOADED","emitErrorEvent","dispatchEvent","AssetsLoadedEvent","AssetsFailedEvent","parseFloat","getItems","toFixed","AssetsUpdatedEvent","name","sheet","item","Types","JAVASCRIPT","window","id","_SpriteSheet","complete","_loadedSheet","ev","remove","IMAGE","Images","Bitmap","emitUpdatedEvent","removeAllEventListeners","setInterval","emitLoadedEvent","Event","ASSETS_FAILED","worldsData","_levelsProgress","map","unlocked","completed","_specialsProgress","special","collected","unlocks","_readCookieData","worldIndex","levelIndex","nextLevel","nextWorld","saveCookieData","ProgressData","cookie","JSON","stringify","_getCookie","parse","levels","specials","cname","ca","decodeURIComponent","split","charAt","substring","Screen_1","key","screen","_screensLookup","tempScreen","Screen","resolve","promises","_currentScreen","Container","alpha","destroy","_callee2","_context2","all","create","enable","Container_1","_isFail","bg","Catfish_End","_container","_buttonsContainer","LAYOUT_OPTIONS","ColumnLeftBottom","addMany","btnTryAgain","btnNextLevel","btnMainMenu","_completeSpr","_failSpr","CurrentLevelData","getNextLevel","intermediary","queueNextScreen","visible","keys","TutorialCreator_1","ObjectPool_1","Persephone_1","Puffer_1","Cat_1","GameScore_1","_fishes","_puffers","_remainingFish","createPoolObject","POOL","CAT","FISH","_i","PUFFERFISH","PERSEPHONE","_cat","checkout","_staticContainer","BG_Spritesheet","_fishContainer","_pufferContainer","_winContainer","_gameScore","GameScore","_tutorialCreator","TutorialCreator","_pauseLogic","hitObjects","getObjectsUnderPoint","fish","puff","killedFish","splice","win","changeCurrentScore","totalFish","combos","time","elasticOut","levelIndices","getIndexData","completeLevel","collectSpecial","checkoutSprites","_winBanner","Shape","graphics","beginFill","drawRect","cache","_winText","generateBitmapText","TypographyWhite","mouseEnabled","flip","setNaturalY","puffer","tutorials","queueTutorials","background","gotoAndStop","showScore","showTimer","duration","showFishRemain","showRemainingFish","startHUD","releaseAllObjects","normalizedTime","min","grab","removeAllChildren","_text","screenKey","evt","setTimeout","clearTimeout","_bg","endFill","_textContainer","_txtSprite","scale","LevelSelectDisplay_1","_swipeContainer","Catfish_Main","_mainContainer","_logo","_mainButtonsContainer","btnNewGame","btnOptions","btnLevelSelect","btnExit","_fancyFish","_optionsContainer","txtOptions","Typography","btnClearData","Buttons","ClearData","_clearedContainer","add","_levelSelectDisplay","LevelSelectDisplay","_collectedContainer","_collectibleFish","_swipeSpeed","_initialSwipePos","circOut","bounceOut","cubicIn","cubicInOut","clearInterval","stageX","stageY","_dragTimer","_onMain","_onNewGame","_onOptions","_onLevelSelect","_onExit","_onFish","listenToClearData","CLEAR_DATA","_onClearData","_onDragStart","_onDragEnd","collFish","filter","d","toLowerCase","setMainPage","loop","sineInOut","off","stopListenToClearData","removeAllTweens","_textSpritesheet","SpriteSheet","images","frames","animations","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","Z","b","g","h","j","k","l","m","q","s","v","w","z","0","2","3","4","5","6","7","8","9",".",",","'","\"","?","!","$","img","createElement","onload","text","textEl","_tutorialQueue","_youOverlay","Tutorial_Spritesheet","_fishOverlay","_pufferOverlay","_manyOverlay","_pauseOverlay","_specialOverlay","First","You","Many","Pause","t0","KEY","_runYou","_transition","_runFish","unpauseGameLogic","abrupt","_runPuffer","_runSpecial","nextScreen","_currentOverlay","_callee3","_context4","_callee4","_context5","catStart","pauseGameLogic","_backgrounds","Main","UI","Logo","Entities","BG","BGTop","Wave","_graphics","Timer","ScoreHUD_Spritesheet","Score","FishRemain","_buttons","NewGame","ButtonHelper","Options","LevelSelect","Exit","Fishbowl","LevelSelectBG","Menu_Level_Select","LevelEmpty","LevelComplete","LevelSpecialEmpty","LevelSpecialComplete","_setupBTNClearData","cursor","_canClearData","_btnDataDown","_btnDataComplete","_btnDataUp","details","color","textObj","BitmapText","_levelButtons","_background","Backgrounds","_levelsContainer","_levelTextContainer","LevelText","rebuild","btn","_onLevelClick","_onLevelHover","_onLevelUnhover","_levelsData","sprite","clone","reduce","acc","target","_getDataByIndex","Layout_1","layout","_sprites","_layout","Layout","direction","alignment","crossAlignment","spacing","MAKE_VERTICAL_CENTER","updateLayout","buildLayout","_toConsumableArray","sprites","_layout2","_layout3","ColumnLeftTop","VERTICAL","START","ColumnLeftCenter","CENTER","END","ColumnCenterTop","ColumnCenterCenter","ColumnCenterBottom","ColumnRightTop","ColumnRightCenter","ColumnRightBottom","_parent","_items","_alignment","_crossAlignment","_spacing","addToParent","_len","items","Array","_key","totalHeight","_item","_i2","_item2","_i3","_i4","HORIZONTAL","_useTimer","_useFishRemain","_useScore","_timerContainer","timerSprite","Graphics","_timerTextContainer","_fishRemainContainer","fishRemainSprite","_fishRemainTextContainer","_scoreContainer","scoreSprite","_scoreTextContainer"],"mappings":"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GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/* ************************************************* */\r\n/*                      LOGGING                      */\r\n/* ************************************************* */\r\nexport class Logging {\r\n    static success(message:string):void {\r\n        console.log(`%c ${message}`, 'color:seagreen; font-size:1.1em; font-weight:bold; border-left: solid 3px seagreen;')    ;\r\n    }\r\n\r\n    static message(message:string):void {\r\n        console.log(`%c ${message}`, 'color:#1E265C; font-size:1.1em; font-weight:bold; border-left: solid 3px #1E265C;');\r\n    }\r\n\r\n    static error(message:string):void {\r\n        console.log(`%c ${message}`, 'color:red; font-size:1.1em; border-left: solid 3px red;');\r\n    }\r\n}","import { LoadManager } from \"./managers/LoadManager\";\r\nimport { ProgressManager } from \"./managers/ProgressManager\";\r\nimport { ScreenManager } from \"./managers/ScreenManager\";\r\nimport { SplashScreen } from \"./screens/SplashScreen\";\r\nimport { MenuScreen } from \"./screens/MenuScreen\";\r\nimport { GameScreen } from \"./screens/GameScreen\";\r\nimport { EndScreen } from \"./screens/EndScreen\";\r\nimport { Logging } from \"./Functions\";\r\nimport { Sprites } from \"./ui/Sprites\";\r\nimport { IntermediaryScreen } from \"./screens/IntermediaryScreen\";\r\nimport { DataManager, LevelData } from \"./managers/DataManager\";\r\n\r\nexport interface ICurrentScore {\r\n    totalFish: number;\r\n    time: number;\r\n    combos: number;\r\n}\r\n\r\n\r\nexport class Game {\r\n    private _canvas:HTMLCanvasElement;\r\n    private _stage:createjs.StageGL;\r\n    private _scaling:number;\r\n\r\n    private _lastGameTime:number;\r\n\r\n    private _currentLevel:LevelData;\r\n    private _currentScore:ICurrentScore;\r\n\r\n    constructor(canvasDiv:HTMLCanvasElement) {\r\n\r\n        this._canvas = canvasDiv;\r\n        this._canvas.width = Game.WIDTH;\r\n        this._canvas.height = Game.HEIGHT;\r\n\r\n        this._lastGameTime = -1;\r\n\r\n        //set the scaling\r\n        this._scaling = Game.HEIGHT / 1024;\r\n\r\n        //start loading game assets\r\n        new Promise(async(res, rej) => {\r\n            //create the stage\r\n            console.log(\"Readying stage!\");\r\n            this._stage = new createjs.StageGL(this._canvas, { antialias: true });\r\n            // this._stage = new createjs.StageGL(this._canvas);\r\n            (this._stage as any).setClearColor(\"#000000\");\r\n            this._stage.enableMouseOver(10);\r\n            this._stage.update();\r\n\r\n            // this._stage.scaleX = this._stage.scaleY = 0.8;\r\n\r\n            console.log(this._stage, this._canvas);\r\n\r\n            //load the splash screen\r\n            ScreenManager.registerScreen(\"splash\", new SplashScreen(this));\r\n            ScreenManager.setCurrentScreen(\"splash\", this._stage);\r\n\r\n            const splash = ScreenManager.getScreenByKey(\"splash\") as SplashScreen;\r\n\r\n            //listen to asset updates\r\n            (this._stage as any).addEventListener(LoadManager.ASSETS_UPDATED, (e) => {\r\n                console.log(LoadManager.Percentage);\r\n                //update percent\r\n                splash.Text = Math.ceil(LoadManager.Percentage * 100).toString();\r\n            });\r\n            //load assets\r\n            await LoadManager.loadAssets(\"assets/manifest.json\", this._stage)\r\n                .catch(err => {\r\n                    console.warn(\"Error loading assets:\", err);\r\n                });\r\n\r\n            Logging.success(\"Assets Loaded Successfully!\");\r\n\r\n            //load level data\r\n            await DataManager.loadWorldsData(\"assets/data/levels.json\")\r\n                .catch(err => {\r\n                    Logging.error(err);\r\n                    return;\r\n                });\r\n            //load progress data\r\n            await ProgressManager.loadWorldsData(DataManager.WorldsData);\r\n\r\n            //set the current screen\r\n            //game test, load desired level patch -- if autoloading to game screen\r\n            this.changeCurrentLevel(DataManager.getLevelDataByIndex(0));\r\n\r\n            Logging.success(\"Level Data Loaded Successfully!\");\r\n\r\n            //setup createjs.Sprites\r\n            await Sprites.setup();\r\n\r\n            //build the screens\r\n            ScreenManager.registerScreen(\"menu\", new MenuScreen(this));\r\n            ScreenManager.registerScreen(\"game\", new GameScreen(this));\r\n            ScreenManager.registerScreen(\"end\", new EndScreen(this));\r\n            ScreenManager.registerScreen(\"intermediary\", new IntermediaryScreen(this));\r\n            \r\n\r\n            ScreenManager.setCurrentScreen(\"menu\", this._stage);\r\n            // ScreenManager.setCurrentScreen(\"game\", this._stage);\r\n            // ScreenManager.setCurrentScreen(\"end\", this._stage);\r\n\r\n            //setup the game loop\r\n            createjs.Ticker.framerate = Game.FRAME_RATE;\r\n            createjs.Ticker.on(\"tick\", this.update, this);\r\n\r\n            res();\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public changeCurrentLevel(levelData:LevelData) {\r\n        this._currentLevel = levelData;\r\n    }\r\n\r\n    public changeCurrentScore(currentScore:ICurrentScore) {\r\n        this._currentScore = currentScore;\r\n    }\r\n\r\n\r\n\r\n    //recursive sizing\r\n    private _scaleChildren(children) {\r\n\r\n\r\n        if(children != null) {\r\n            for(let i = 0; i < children.length; i++) {\r\n                const ch = children[i];\r\n                ch.scaleX = ch.scaleY = this._scaling;\r\n                if(ch.children != null && ch.scaleX != null) this._scaleChildren(ch);\r\n            }\r\n        }\r\n\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    public update(e:any) {\r\n\r\n        const gameTime = (this._lastGameTime != -1) ? createjs.Ticker.getMeasuredFPS() - this._lastGameTime : 1;\r\n        this._lastGameTime = createjs.Ticker.getMeasuredFPS();\r\n\r\n        //update the screen\r\n        if(ScreenManager.CurrentScreen != null) ScreenManager.CurrentScreen.update(gameTime);\r\n\r\n        //scale all children\r\n        // this._scaleChildren(this._stage.children);\r\n\r\n        //update the stage\r\n        this._stage.update();\r\n    }\r\n\r\n\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get FRAME_RATE() { return 30; }\r\n    // public static get WIDTH() { return Game.HEIGHT * 0.5625; } //desired size\r\n    // public static get HEIGHT() { return Math.min(document.body.clientHeight, 1024); }\r\n\r\n    public static get WIDTH() { return 576; }\r\n    public static get HEIGHT() { return 1024; }\r\n\r\n    public get StageWidth() { return this._canvas.width; } //actual size\r\n    public get StageHeight() { return this._canvas.height; }\r\n\r\n    public get Stage() { return this._stage; }\r\n    public get Scaling() { return this._scaling; }\r\n\r\n    public get CurrentLevelData() { return this._currentLevel; }\r\n    public get CurrentScoreData() { return this._currentScore; }\r\n\r\n\r\n\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n\r\n\r\n}","import { Logging } from \"./Functions\";\r\nimport { Entity } from \"./entities/Entity\";\r\n\r\nexport interface IPoolObject {\r\n    type:string;\r\n    obj:Entity,\r\n    active:boolean;\r\n}\r\n\r\nexport class ObjectPool {\r\n    private static _pool:IPoolObject[];\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Creates a pool object. */\r\n    public static createPoolObject(obj:Entity, type:string) {\r\n        const poolObj = {\r\n            type,\r\n            obj,\r\n            active: false\r\n        };\r\n        ObjectPool.Pool.push(poolObj);\r\n        return poolObj;\r\n    }\r\n\r\n    /**Checks out a pool object.  Use POOL global function to access. */\r\n    public static checkout(type:string) {\r\n        const poolObj = ObjectPool._getObjectByType(type);\r\n        if(poolObj != null) {\r\n            poolObj.active = true;\r\n            return poolObj.obj;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**Returns an object to the pool. */\r\n    public static return(obj:Entity) {\r\n        const poolObj = ObjectPool._getObjectByObj(obj);\r\n        if(poolObj != null) {\r\n            poolObj.active = false;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**Returns all objects to pool. */\r\n    public static releaseAllObjects() {\r\n        ObjectPool._pool.forEach(p => {\r\n            ObjectPool.return(p.obj);\r\n        });\r\n    }\r\n\r\n\r\n    public static _getObjectByType(type) {\r\n        const poolObj = ObjectPool._pool.find((o => o.type == type && !o.active));\r\n        if(poolObj == null) Logging.error(\"Object not found in pool, or pool is exhausted.  Return some objects.\");\r\n        return poolObj\r\n    }\r\n    public static _getObjectByObj(obj) {\r\n        return ObjectPool._pool.find((o => o.obj == obj));\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get Pool() { \r\n        if(ObjectPool._pool == null) ObjectPool._pool = [];\r\n        return ObjectPool._pool;\r\n    }\r\n}","import { Game } from \"../Game\";\r\nimport { Entity } from \"./Entity\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { IEnableable } from \"../Interfaces\";\r\nimport { Logging } from \"../Functions\";\r\nimport { GameScreen } from \"../screens/GameScreen\";\r\nimport { Fish } from \"./Fish\";\r\n\r\nexport class Cat extends Entity implements IEnableable {\r\n    private _gameScreen:GameScreen;\r\n    private _speed:number;\r\n    private _fishCaughtMultiplier:number; //this will be the rate at which the cat slows down when rising per fish\r\n\r\n    private _catYTween:createjs.Tween;\r\n    private _caughtFish:Fish[];\r\n\r\n    private _isGrabbing:boolean;\r\n    private _isRising:boolean;\r\n    private _isInjured:boolean;\r\n    private _hasReachedSurface:boolean;\r\n\r\n    constructor(game:Game, gameScreen:GameScreen) {\r\n        super(game, LoadManager.Spritesheets.Kitty_Spritesheet);\r\n        this._gameScreen = gameScreen;\r\n        \r\n        this._speed = 3;\r\n        this._fishCaughtMultiplier = 0.05;\r\n\r\n        this._caughtFish = [];\r\n        this._isGrabbing = false;\r\n        this._isRising = false;\r\n        this._isInjured = false;\r\n        this._hasReachedSurface = true;\r\n\r\n        this._sprite.gotoAndPlay(Cat.ANIMATION.Idle);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    enable() {\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n    }\r\n\r\n\r\n    /***************/\r\n    /*   ACTIONS   */\r\n    /***************/\r\n    public grab() {\r\n        //if the game is paused, we shall not grab\r\n        if(this._gameScreen.IsGamelogicPaused) return;\r\n\r\n        //cannot grab if we are not at surface\r\n        if(!this._hasReachedSurface) return;\r\n\r\n        this._isGrabbing = true;\r\n        this._hasReachedSurface = false;\r\n\r\n        //move to x position\r\n        this.X = this._gameScreen.Game.Stage.mouseX;\r\n\r\n        //grab to y position\r\n        const speed = (this._gameScreen.Game.Stage.mouseY / 2) * this.Speed;\r\n        this._catYTween = createjs.Tween\r\n            .get(this._sprite)\r\n            .to({ y:this._gameScreen.Game.Stage.mouseY }, speed, createjs.Ease.circIn)\r\n            .call(() => {\r\n                //once the grab is done, turn off flag\r\n                this._isGrabbing = false;\r\n\r\n                 //play animations\r\n                this._sprite.gotoAndPlay(Cat.ANIMATION.Grab);\r\n                //listen for animation to finish\r\n                (this._sprite as any).on(\"animationend\", () => {\r\n                    this._sprite.gotoAndPlay(Cat.ANIMATION.Hold);\r\n                }, true);\r\n\r\n                //try to grab a fish\r\n                const fishes = this._gameScreen.tryToGrabFishes(this.X , this.Y);\r\n\r\n                //see if a fish was grabbed\r\n                if(fishes.length > 0) this.caught(fishes);\r\n                else this.returnToSurface();\r\n            });\r\n\r\n    }\r\n\r\n    /**\r\n     * Called to return cat to surface.\r\n     */\r\n    public returnToSurface() {\r\n        this._sprite.gotoAndPlay(Cat.ANIMATION.Idle);\r\n\r\n        //remove any lingering tweens\r\n        createjs.Tween.removeTweens(this._sprite);\r\n        const speed = (this.Y / 2) * this.Speed;\r\n        this._catYTween = createjs.Tween.get(this._sprite)\r\n            .wait(150)\r\n            .to({y:20}, speed, createjs.Ease.linear)\r\n            .call(() => {\r\n                //once the surface has been reached, allow x movement again\r\n                this.reachSurface();\r\n            });\r\n    }\r\n\r\n    public caught(fishes:Fish[]) {\r\n        if(fishes.length <= 0) return;\r\n        this._isRising = true;  \r\n        \r\n        let hasNewFish = false;\r\n\r\n        fishes.forEach(f => {\r\n            if(this._caughtFish.indexOf(f) != -1) return;\r\n            hasNewFish = true;\r\n            //grab the fish\r\n            f.catch();\r\n\r\n            //add fish to caught array\r\n            this._caughtFish.push(f);\r\n\r\n            //control the fish\r\n            f.Y = this.Y;\r\n        });\r\n\r\n        if(!hasNewFish) return;\r\n        \r\n        //if we grabbed a fish...\r\n        //go back up... slowly\r\n        createjs.Tween.removeTweens(this._sprite);\r\n        const speed = this.Y * this.Speed;\r\n        this._catYTween = createjs.Tween.get(this._sprite)\r\n            .wait(250)\r\n            .to({y:-20}, speed, createjs.Ease.linear)\r\n            .call(() => {\r\n                //once the surface has been reached, allow x movement again\r\n                this.reachSurface();\r\n                this._isRising = false;\r\n            });\r\n\r\n    }\r\n    public drop() {\r\n        //release the fish\r\n        this._caughtFish.forEach(f => f.release());\r\n        this._caughtFish = [];\r\n    }\r\n\r\n    /**Called when hit by an enemy. */\r\n    public injure() {\r\n        this._isInjured = true;\r\n        //start hurt animation\r\n        //end any current tweening\r\n        createjs.Tween.removeTweens(this._sprite);\r\n        this._sprite.gotoAndPlay(Cat.ANIMATION.Ow);\r\n        this._catYTween = createjs.Tween.get(this._sprite)\r\n            .wait(15)\r\n            .to({y:20}, 500, createjs.Ease.linear)\r\n            .call(() => {\r\n                //once the surface has been reached, allow x movement again\r\n                this.reachSurface();\r\n                this._sprite.gotoAndPlay(Cat.ANIMATION.Idle);\r\n            });\r\n    }\r\n\r\n    /**Called when the cat tickles an enemy. */\r\n    public hitEnemy() {\r\n        this.injure();\r\n        this.drop();\r\n    }\r\n\r\n    public reachSurface() {\r\n        //if we have a fish, send to main logic\r\n        if(this._caughtFish != null) {\r\n            this._caughtFish.forEach(f => {\r\n                this._gameScreen.collectFish(f);\r\n            });\r\n            this._caughtFish = [];\r\n        }\r\n\r\n        //set flags\r\n        this._hasReachedSurface = true;\r\n        this._isInjured = false;\r\n        this._isRising = false;\r\n        this._isGrabbing = false;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    update(gameTime:number) {\r\n        //if our game logic is paused, no FISHING\r\n        if(this._gameScreen.IsGamelogicPaused) return;\r\n\r\n        super.update(gameTime);\r\n\r\n\r\n        //if we are rising, attempt to catch more fish\r\n        if(this._isRising && !this._isInjured) {\r\n            //try to grab a fish\r\n            const fishes = this._gameScreen.tryToGrabFishes(this.X , this.Y);\r\n            //see if a fish was grabbed\r\n            if(fishes.length > 0)\r\n                this.caught(fishes);\r\n        }\r\n\r\n        //test puffer damage\r\n        if(this._isRising || this._isGrabbing) {\r\n            //don't test again if injured\r\n            if(!this._isInjured) {\r\n                //test for puffer hit\r\n                const hasHitPuffer = this._gameScreen.hasHitAPuffer(this.X, this.Y);\r\n                if(hasHitPuffer) {\r\n                    this.hitEnemy();\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        //drag fish with us if we have any\r\n        if(this._caughtFish != null) {\r\n            this._caughtFish.forEach(f => {\r\n                f.Y = this.Y - 20;\r\n            });\r\n        }\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get GRAB_RANGE() { return 120; }\r\n    public static get ANIMATION() {\r\n        return Object.freeze({\r\n            \"Idle\" : \"kittyIdle\",\r\n            \"Death\" : \"kittyIdle\",\r\n            \"Grab\" : \"kittyIdle\",\r\n            \"Hold\" : \"kittyIdle\",\r\n            \"Ow\" : \"kittyIdle\"\r\n        });\r\n    }\r\n    // public static get ANIMATION() {\r\n    //     return Object.freeze({\r\n    //         \"Idle\" : \"cat_idle\",\r\n    //         \"Death\" : \"cat_death\",\r\n    //         \"Grab\" : \"cat_grab\",\r\n    //         \"Hold\" : \"cat_grab_hold\",\r\n    //         \"Ow\" : \"cat_ow\"\r\n    //     });\r\n    // }\r\n    public get Speed() { \r\n        const caughtFishMult = ((this._caughtFish.length > 0) ? 1 + (this._caughtFish.length + this._fishCaughtMultiplier) : 1);\r\n        console.log(caughtFishMult);\r\n\r\n        return caughtFishMult * this._speed;\r\n    }\r\n    public set Speed(value:number) { this._speed = value; }\r\n}","import { ICreateable, IUpdateable } from \"../Interfaces\";\r\nimport { Game } from \"../Game\";\r\n\r\nexport class Entity implements ICreateable<Entity>, IUpdateable {\r\n    private _game:Game;\r\n    protected _name:string;\r\n    protected _sprite:createjs.Sprite;\r\n    protected _direction:{ x:number, y:number };\r\n\r\n    private _isIgnoringCollision:boolean;\r\n    private _ignoreCollisionTimer:number;\r\n\r\n    constructor(game:Game, spritesheet:createjs.SpriteSheet) {\r\n        this._game = game;\r\n        this._sprite = new createjs.Sprite(spritesheet);\r\n        this._direction = { x:1, y:1 };\r\n\r\n        this._isIgnoringCollision = false;\r\n        this._ignoreCollisionTimer = 0;\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public create(container:createjs.Container):Entity {\r\n\r\n        //move to main container\r\n        if(container == null)\r\n            this._game.Stage.addChild(this._sprite);\r\n        else\r\n            container.addChild(this._sprite);\r\n        return this;\r\n    }\r\n\r\n    public destroy():Entity {\r\n        if(this._sprite == null || this._sprite.parent == null) return null;\r\n\r\n        //remove from main container\r\n        this._sprite.parent.removeChild(this._sprite);\r\n\r\n        return this;\r\n    }\r\n\r\n    public update(gameTime:number) {\r\n\r\n         //listen for collision ignore\r\n        if(this._isIgnoringCollision) {\r\n            this._ignoreCollisionTimer++;\r\n\r\n            if(this._ignoreCollisionTimer > Entity.IGNORE_COLLISION)\r\n                this._isIgnoringCollision = false;\r\n        }\r\n    }\r\n\r\n    protected startIgnoreCollision() {\r\n        this._isIgnoringCollision = true\r\n    }\r\n\r\n    protected testStageBounds(artificialReg:{x:number, y:number} = null) {\r\n        let reg = { x:this._sprite.regX, y:this._sprite.regY };\r\n        if(artificialReg != null) {\r\n            reg = {\r\n                x: (this._direction.x > 0) ? this.Bounds.Width * artificialReg.x : (this.Bounds.Width * (1 - artificialReg.x)),\r\n                y: (this._direction.y > 0) ? this.Bounds.Height * artificialReg.y : (this.Bounds.Height * (1 - artificialReg.y))\r\n            }\r\n        }\r\n        // const bounds = { width:this._game.StageWidth, height: this._game.StageHeight };\r\n        const bounds = { width:this._game.StageWidth, height: this._game.StageHeight };\r\n        const extents = {   \r\n            x:(this._direction.x > 0) ? (this.Bounds.Width - reg.x) : -reg.x, \r\n            y:(this._direction.y > 0) ? (this.Bounds.Height - reg.y) : -reg.y \r\n        };\r\n\r\n        //test walls\r\n        if((this.X + extents.x) > bounds.width) return Entity.HIT.Right;\r\n        else if(this.X + extents.x < 0) return Entity.HIT.Left;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get IGNORE_COLLISION() { return 20; }\r\n    public static get HIT() { return Object.freeze({Top:0, Right:1, Bottom:2, Left:3}); }\r\n\r\n    protected get Game():Game { return this._game; }\r\n\r\n    public get Sprite() { return this._sprite; }\r\n    public get Parent() { return this._sprite.parent; }\r\n\r\n    public get X() { return this._sprite.x; }\r\n    public set X(value) { this._sprite.x = value; }\r\n    public get Y() { return this._sprite.y; }\r\n    public set Y(value) { this._sprite.y = value; }\r\n\r\n    public set DirectionX(value) { \r\n        const lastX = this._direction.x;\r\n        this._direction.x = value; \r\n        //flip sprite if our direction has changed\r\n        if(this._direction.x != lastX) this._sprite.scaleX *= -1;\r\n    }\r\n    public get DirectionX() { return this._direction.x; }\r\n\r\n    public get Bounds() { \r\n        let bounds = this._sprite.getBounds();\r\n        return  { Width:bounds.width, Height:bounds.height };\r\n    }\r\n\r\n    public get IsIgnoringCollision() { return this._isIgnoringCollision; }\r\n}","import { Game } from \"../Game\";\r\nimport { Entity } from \"./Entity\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { IEnableable } from \"../Interfaces\";\r\nimport { Logging } from \"../Functions\";\r\n\r\nexport class Fish extends Entity implements IEnableable {\r\n    private _speed:number;\r\n    private _naturalY:number;\r\n\r\n    private _isCaught:boolean;\r\n    private _isReturning:boolean;\r\n\r\n    constructor(game:Game, spritesheet?:createjs.SpriteSheet) {\r\n        super(game, spritesheet || LoadManager.Spritesheets.Peeper_Spritesheet);\r\n        this._speed = 1;\r\n\r\n        this._isCaught = false;\r\n        this._isReturning = false;\r\n\r\n        this._sprite.gotoAndPlay(Fish.ANIMATION.Slow);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    \r\n\r\n\r\n    /***************/\r\n    /*   ACTIONS   */\r\n    /***************/\r\n    public setNaturalY() {\r\n        this._naturalY = this.Y;\r\n    }\r\n\r\n    public catch() {\r\n        if(this._isCaught) return;\r\n        \r\n        Logging.message(\"Fish was grabbed!\");\r\n        this._isCaught = true;\r\n\r\n        this._sprite.gotoAndPlay(Fish.ANIMATION.Panic);\r\n    }\r\n\r\n    public release() {\r\n        this._isCaught = false;\r\n        //return to natural y position\r\n        this._isReturning = true;\r\n    }\r\n\r\n\r\n    /**Test to see if global position hits sprite. */\r\n    public testHit(x:number, y:number):boolean {\r\n        return this._sprite.hitTest(x, y);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    destroy() {\r\n        //reset flags\r\n        this._isCaught = false;\r\n        //reset animations\r\n        this._sprite.gotoAndPlay(Fish.ANIMATION.Slow);\r\n\r\n        this.disable();\r\n        return super.destroy();\r\n    }\r\n\r\n    update(gameTime:number) {\r\n        super.update(gameTime);\r\n\r\n        //move the fishy\r\n        if(!this._isCaught)\r\n            // this.X += this._speed * gameTime * this._direction.x;\r\n            this.X += this._speed * this._direction.x;\r\n        //--if returning, swim to natural y\r\n        if(this._isReturning) {\r\n            //if we are still far away, swim!\r\n            if(Math.abs(this.Y - this._naturalY) > 30) {\r\n                const isNeg = this.Y > this._naturalY;\r\n                this.Y += (isNeg) ? -10 : 10;\r\n            }\r\n            else {\r\n                this._isReturning = false;\r\n                this._sprite.gotoAndPlay(Fish.ANIMATION.Slow);\r\n            }\r\n        }\r\n\r\n        //test collision\r\n        if(!this.IsIgnoringCollision) {\r\n\r\n            //if fish hits the edge, flip direction\r\n            const hit = this.testStageBounds({x:0.5, y:0.5});\r\n            switch(hit) {\r\n                case Entity.HIT.Right:\r\n                    this.DirectionX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X -= 5 - this.Bounds.Width;\r\n                    break;\r\n                case Entity.HIT.Left:\r\n                    this.DirectionX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X += 5 - this.Bounds.Width;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    enable() {\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get ANIMATION() {\r\n        return Object.freeze({\r\n            \"Slow\" : \"fishIdle\",\r\n            \"Fast\" : \"fishIdle\",\r\n            \"Panic\" : \"fishPanic\"\r\n        });\r\n    }\r\n    public get Speed() { return this._speed; }\r\n    public set Speed(value:number) { this._speed = value; }\r\n}","import { Game } from \"../Game\";\r\nimport { Entity } from \"./Entity\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { IEnableable } from \"../Interfaces\";\r\nimport { Logging } from \"../Functions\";\r\nimport { Cat } from \"./Cat\";\r\n\r\nexport class Puffer extends Entity implements IEnableable {\r\n    public get Type() { return \"Puffer\"; }\r\n\r\n    private _speed:number;\r\n    private _cooldown:number = 40;\r\n    private _currentCooldown:number = 0;\r\n\r\n    private _isCaught:boolean;\r\n\r\n    constructor(game:Game) {\r\n        super(game, LoadManager.Spritesheets.Puffer_Spritesheet);\r\n        this._speed = 1;\r\n\r\n        this._isCaught = false;\r\n\r\n        this._sprite.gotoAndPlay(Puffer.ANIMATION.Idle);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    \r\n\r\n\r\n    /***************/\r\n    /*   ACTIONS   */\r\n    /***************/\r\n    public puff() {\r\n        this._sprite.gotoAndPlay(Puffer.ANIMATION.Angry);\r\n        //start cooldown\r\n        this._currentCooldown = this._cooldown;\r\n    }\r\n\r\n\r\n    /**Test to see if global position hits sprite. */\r\n    public testHit(x:number, y:number, cat:Cat):boolean {\r\n        return (x >= this.X - cat.Bounds.Width && x <= this.X + this.Bounds.Width \r\n            && y >= this.Y - cat.Bounds.Height && y <= this.Y + this.Bounds.Height) ;\r\n        // return this._sprite.hitTest(x, y);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    destroy() {\r\n        //reset flags\r\n        this._isCaught = false;\r\n        //reset animations\r\n        this._sprite.gotoAndPlay(Puffer.ANIMATION.Idle);\r\n\r\n        this.disable();\r\n        return super.destroy();\r\n    }\r\n\r\n    update(gameTime:number) {\r\n        super.update(gameTime);\r\n\r\n        //move the fishy\r\n        if(!this._isCaught)\r\n            this.X += this._speed * gameTime * this._direction.x;\r\n\r\n        //do cooldown\r\n        if(this._currentCooldown >= 0) {\r\n            this._currentCooldown--;\r\n            if(this._currentCooldown == 0) {\r\n                //reset animations\r\n                this._sprite.gotoAndPlay(Puffer.ANIMATION.Recover);\r\n            }\r\n        }\r\n\r\n        //test collision\r\n        if(!this.IsIgnoringCollision) {\r\n\r\n            //if fish hits the edge, flip direction\r\n            const hit = this.testStageBounds({x:0.5, y:0.5});\r\n            switch(hit) {\r\n                case Entity.HIT.Right:\r\n                    this._direction.x *= -1;\r\n                    this._sprite.scaleX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X -= 5 - this.Bounds.Width;\r\n                    break;\r\n                case Entity.HIT.Left:\r\n                    this._direction.x *= -1;\r\n                    this._sprite.scaleX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X += 5 - this.Bounds.Width;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    enable() {\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get ANIMATION() {\r\n        return Object.freeze({\r\n            \"Idle\" : \"pufferIdle\",\r\n            \"Angry\" : \"pufferAngry\",\r\n            \"Recover\" : \"pufferRecover\"\r\n        });\r\n    }\r\n    public get Speed() { return this._speed; }\r\n    public set Speed(value:number) { this._speed = value; }\r\n}","import { LoadManager } from \"../../managers/LoadManager\";\r\nimport { Special } from \"./Special\";\r\nimport { Game } from \"../../Game\";\r\n\r\nexport class Persephone extends Special {\r\n\r\n    constructor(game:Game) {\r\n        super(game, LoadManager.Spritesheets.Persephone_Spritesheet);\r\n        this._sprite.gotoAndPlay(Persephone.SPEC_ANIMATION.Idle);\r\n    }\r\n\r\n\r\n    public static get SPEC_ANIMATION() {\r\n        return Object.freeze({\r\n            \"Idle\" : \"persIdle\"\r\n        });\r\n    }\r\n\r\n}","import { Fish } from \"../Fish\";\r\nimport { Game } from \"../../Game\";\r\n\r\nexport abstract class Special extends Fish {\r\n    private _isOnMainPage:boolean;\r\n    private _desiredX:number;\r\n    private _desiredY:number;\r\n    private _attnSpanDuration:number; //how long before fish wants to do something else\r\n\r\n    constructor(game:Game, spritesheet:createjs.SpriteSheet) {\r\n        super(game, spritesheet);\r\n        this._isOnMainPage = false;\r\n\r\n        this._resetAttentionSpan();\r\n    }\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public setMainPage(isOnMainPage) {\r\n        this._isOnMainPage = isOnMainPage;\r\n        //randomly place on the page\r\n        this.X = Math.floor(Math.random() * (576 - this.Sprite.getBounds().width));\r\n        this.Y = Math.floor(Math.random() * (1024 - this.Sprite.getBounds().height));\r\n        // this.X = Math.floor(Math.random() * (window.innerWidth - this.Sprite.getBounds().width));\r\n        // this.Y = Math.floor(Math.random() * (window.innerHeight - this.Sprite.getBounds().height));\r\n\r\n        //set reg to center\r\n        this.Sprite.regX = this.Sprite.getBounds().width / 2;\r\n    }\r\n\r\n    private _resetAttentionSpan() {\r\n        this._attnSpanDuration = Math.random() * 100 + 100;\r\n        this._desiredX = Math.floor(Math.random() * (576 - this.Sprite.getBounds().width));\r\n        this._desiredY = Math.floor(Math.random() * (1024 - this.Sprite.getBounds().height));\r\n        // this._desiredX = Math.floor(Math.random() * (window.innerWidth - this.Sprite.getBounds().width));\r\n        // this._desiredY = Math.floor(Math.random() * (window.innerHeight - this.Sprite.getBounds().height));\r\n\r\n        //do a flip?\r\n        if(this.DirectionX > 0 && this._desiredX < this.X)  this.DirectionX *= -1;\r\n        if(this.DirectionX < 0 && this._desiredX > this.X)  this.DirectionX *= -1;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /**Extend update for main menu logic. */\r\n    public update(gameTime:number) {\r\n\r\n        //listen for main page logic\r\n        if(this._isOnMainPage) {\r\n            //move to random y pos every once in a while\r\n            if(this._attnSpanDuration <= 0) this._resetAttentionSpan();\r\n            else this._attnSpanDuration--;\r\n\r\n            //float toward X\r\n            if(Math.abs(this.X - this._desiredX) > 60) {\r\n                const isNeg = this.X > this._desiredX;\r\n                this.X += (isNeg) ? -this.Speed : this.Speed;\r\n            }\r\n            //float toward y\r\n            if(Math.abs(this.Y - this._desiredY) > 30) {\r\n                const isNeg = this.Y > this._desiredY;\r\n                this.Y += (isNeg) ? -this.Speed : this.Speed;\r\n            }\r\n        }\r\n        else super.update(gameTime);\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n\r\n\r\n\r\n\r\n}","import { Game } from \"./Game\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    const game = new Game(document.getElementById(\"game-canvas\") as HTMLCanvasElement);\r\n});","import { Screen } from \"../screens/Screen\";\r\n\r\nexport interface WorldsData {\r\n    worlds:LevelData[];\r\n}\r\n\r\nexport interface LevelData {\r\n    name:string;\r\n    tutorials?:string[];\r\n    background?:string;\r\n    data:any[];\r\n    duration?:number;\r\n    showScore?:boolean;\r\n    showRemainingFish?:boolean;\r\n    special?:boolean;\r\n    unlocks?:string; // name of unlock fish\r\n}\r\n\r\nexport class DataManager {\r\n    private static _worldsData:WorldsData;\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Loads in the worlds data! */\r\n    public static loadWorldsData(fileLocation:string) {\r\n        return new Promise<WorldsData>(async(res, rej) => {\r\n            await fetch(fileLocation)\r\n                .then(blob => blob.json())\r\n                .then(json => {\r\n                    this._worldsData = json;\r\n                    res(this._worldsData);\r\n                })\r\n                .catch(err => {\r\n                    rej(\"Could not load world data! \" + err);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**Returns the level data received by the given index. */\r\n    public static getLevelDataByIndex(index:number) {\r\n        //flatten level data, and get data\r\n        let flatten = [].concat.apply([], DataManager._worldsData.worlds);\r\n        if(index < flatten.length)\r\n            return flatten[index];\r\n        return null;\r\n    }\r\n\r\n    /**Inverse of getLevelDataByIndex.\r\n     * @see getLevelDataByIndex . */\r\n    public static getLevelIndexByData(levelData:LevelData) {\r\n        //flatten level data, and get data\r\n        let flatten = [].concat.apply([], DataManager._worldsData.worlds);\r\n        return flatten.indexOf(levelData);\r\n    }\r\n\r\n    /**Gets the next level data or returns null if there is no next level. */\r\n    public static getNextLevel(currentLevel:number | LevelData) {\r\n        let index = currentLevel as number;\r\n        if(currentLevel as LevelData != null) index = this.getLevelIndexByData(currentLevel as LevelData);\r\n\r\n        //get the next index\r\n        return this.getLevelDataByIndex(index + 1);\r\n    }\r\n\r\n    /**Gets the world and level index of the given level. */\r\n    public static getIndexData(levelData:LevelData) {\r\n        //test each world and look for us\r\n        for(let i = 0; i < DataManager._worldsData.worlds.length; i++) {\r\n            const world = DataManager._worldsData.worlds[i];\r\n            for(let n = 0; n < (world as any).length; n++) {\r\n                if(world[n] == levelData) return { world:i, level:n };\r\n            }            \r\n        }\r\n\r\n        return { world:-1, level:-1 };\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get WorldsData():WorldsData { return DataManager._worldsData; }\r\n    public static get FlatWorldData() { return [].concat.apply([], DataManager._worldsData.worlds); }\r\n}","export class LoadManager {\r\n    public static get ASSETS_LOADED():string { return \"onAssetsLoaded\"; }\r\n    public static get ASSETS_FAILED():string { return \"onAssetsFailed\"; }\r\n    public static get ASSETS_UPDATED():string { return \"onAssetsUpdated\"; }\r\n\r\n    public static Spritesheets:{ [key:string]:createjs.SpriteSheet } = {};\r\n    public static Images:{ [key:string]:createjs.Bitmap } = {};\r\n\r\n    private static _stage:createjs.StageGL;\r\n    private static _preloadManager:createjs.LoadQueue;\r\n    private static _sheetsTotal:number = 0;\r\n    private static _sheetsLoaded:number = 0;\r\n\r\n    private static _percentage:number = 0;\r\n    private static _totalAssetsLoaded:number = 0;\r\n    private static _totalAssets:number = 0;\r\n\r\n    private static AssetsLoadedEvent:any = new (createjs as any).Event(LoadManager.ASSETS_LOADED, false, true);\r\n    private static AssetsFailedEvent:any = new (createjs as any).Event(LoadManager.ASSETS_FAILED, false, true);\r\n    private static AssetsUpdatedEvent:any = new (createjs as any).Event(LoadManager.ASSETS_UPDATED, false, true);\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public static reset() {\r\n        LoadManager._sheetsTotal = 0;\r\n        LoadManager._sheetsLoaded = 0;\r\n\r\n        LoadManager._percentage = 0;\r\n        LoadManager._totalAssetsLoaded = 0;\r\n        LoadManager._totalAssets = 0;\r\n    }\r\n\r\n    public static loadAssets(src:string, stage:createjs.StageGL) {\r\n        LoadManager.reset();\r\n        LoadManager._stage = stage;\r\n\r\n        return new Promise(async(res, rej) => {\r\n            LoadManager._preloadManager = new createjs.LoadQueue();\r\n\r\n            //setup sound controllers\r\n            createjs.Sound.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin, createjs.FlashAudioPlugin]);\r\n            createjs.Sound.alternateExtensions = [\"mp3\",\"wav\"];\r\n            LoadManager._preloadManager.installPlugin(createjs.Sound);\r\n\r\n            //setup listeners\r\n            (LoadManager._preloadManager as any).on(\"fileload\", LoadManager._onLoaded, LoadManager);\r\n            (LoadManager._preloadManager as any).on(\"complete\", LoadManager._onComplete, LoadManager);\r\n            (LoadManager._preloadManager as any).on(\"error\", LoadManager._onError, LoadManager);\r\n\r\n            //get the manifest\r\n            fetch(src)\r\n                .then(blob => blob.json())\r\n                .then(data => {\r\n                    //load the manifest\r\n                    LoadManager._preloadManager.setMaxConnections(1);\r\n                    LoadManager._preloadManager.loadManifest(data);\r\n\r\n                    (LoadManager._stage as any).addEventListener(LoadManager.ASSETS_LOADED, () => {\r\n                        res();\r\n                    });\r\n                })\r\n                .catch(() => {\r\n                    LoadManager.emitErrorEvent();\r\n                    rej(\"Could not load assets!\");\r\n                });\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    public static emitLoadedEvent() {\r\n        if(LoadManager._stage != null) (LoadManager._stage as any).dispatchEvent(LoadManager.AssetsLoadedEvent);\r\n    }\r\n    public static emitErrorEvent() {\r\n        if(LoadManager._stage != null) (LoadManager._stage as any).dispatchEvent(LoadManager.AssetsFailedEvent);\r\n    }\r\n    public static emitUpdatedEvent() {\r\n        LoadManager._percentage = parseFloat((LoadManager._preloadManager.getItems(true).length / LoadManager._preloadManager.getItems(false).length).toFixed(2));\r\n        if(LoadManager._stage != null) (LoadManager._stage as any).dispatchEvent(LoadManager.AssetsUpdatedEvent);\r\n    }\r\n\r\n\r\n    private static _loadedSheet(name:string, sheet:createjs.SpriteSheet) {\r\n        LoadManager.Spritesheets[name] = sheet;\r\n\r\n        LoadManager._sheetsLoaded++;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    private static _onLoaded(e) {\r\n\r\n        console.log(\"asset loaded: \" + e.item.src + \" type: \" + e.item.type);\r\n\r\n        switch(e.item.type) {\r\n            case (createjs as any).Types.JAVASCRIPT: {\r\n                //load the spritesheet\r\n                LoadManager._sheetsTotal++;\r\n                \r\n                const sheet = (window[e.item.id] as any)._SpriteSheet;\r\n\r\n                // listen for spritesheet to load\r\n                if(!sheet.complete) {\r\n                    sheet.on(\"complete\", (ev:any) => {\r\n                        LoadManager._loadedSheet(e.item.id, sheet);\r\n                        ev.remove();\r\n                    })\r\n                }\r\n                else LoadManager._loadedSheet(e.item.id, sheet);\r\n                break\r\n            }\r\n            case (createjs as any).Types.IMAGE: {\r\n                //build the bitmap\r\n                LoadManager.Images[e.item.id] = new createjs.Bitmap(e.item.src);\r\n            }\r\n        }\r\n\r\n\r\n\r\n        //update event\r\n        LoadManager.emitUpdatedEvent();\r\n    }\r\n\r\n    private static _onComplete(e) {\r\n        //remove all preLoadManager events\r\n        (LoadManager._preloadManager as any).removeAllEventListeners();\r\n        \r\n        //make sure all spritesheets are loaded\r\n        if(LoadManager._sheetsLoaded < LoadManager._sheetsTotal) {\r\n            const loadInterval = setInterval((ev:any) => {\r\n                //see if they are loaded\r\n                if(LoadManager._sheetsLoaded >= LoadManager._sheetsTotal) {\r\n                    e.remove();\r\n                    // window.clearInterval(loadInterval);\r\n                    LoadManager.emitLoadedEvent();\r\n                }\r\n            }, 100)\r\n        }\r\n        else LoadManager.emitLoadedEvent();\r\n    }\r\n\r\n    private static _onError(e) {\r\n        LoadManager.emitErrorEvent();\r\n    }\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get Percentage():number { return LoadManager._percentage; }\r\n    \r\n\r\n\r\n\r\n}","import { WorldsData, LevelData } from \"./DataManager\";\r\nimport { Logging } from \"../Functions\";\r\n\r\nexport interface IProgressLevel {\r\n    unlocked: boolean;\r\n    completed: boolean;\r\n}\r\n\r\nexport interface IProgressSpecial {\r\n    collected: boolean;\r\n    unlocks: string;\r\n}\r\n\r\n/**Handles progress made while playing the game. */\r\nexport class ProgressManager {\r\n\r\n    private static _worldsData:WorldsData;\r\n    private static _levelsProgress:IProgressLevel[];\r\n    private static _specialsProgress:IProgressSpecial[];\r\n    \r\n    /*--------------- METHODS ------------------------*/\r\n    /**Loads in the worlds data so it can parse the progress data. */\r\n    public static loadWorldsData(worldsData:WorldsData) {\r\n        ProgressManager._worldsData = worldsData;\r\n\r\n        //build data for world set\r\n\r\n        console.log(worldsData);\r\n\r\n        ProgressManager._levelsProgress = worldsData.worlds.map(world => {\r\n            return [].concat.apply([], world as any)\r\n                .map(level => {\r\n                    return { unlocked: false, completed: false };\r\n                });\r\n        });\r\n        ProgressManager._specialsProgress = worldsData.worlds.map(world => {\r\n            return [].concat.apply([], world as any)\r\n                .map(level => {\r\n                    if(level.special) return { collected: false, unlocks:level.unlocks };\r\n                    return null;\r\n                });\r\n        });\r\n\r\n        //unlock level 1\r\n        ProgressManager._levelsProgress[0][0].unlocked = true;\r\n\r\n        console.log(\"PROGRESS\", ProgressManager._levelsProgress, ProgressManager._specialsProgress);\r\n\r\n        //read cookie data\r\n        ProgressManager._readCookieData();\r\n\r\n        //for TESTING\r\n        // ProgressManager.unlockAll();\r\n    }\r\n\r\n    /**Mark level as complete. Also saves data. */\r\n    public static completeLevel(worldIndex:number, levelIndex:number) {\r\n        //set to complete!\r\n        const level = ProgressManager._levelsProgress[worldIndex][levelIndex];\r\n        if(level == null) return;\r\n        level.completed = true;\r\n\r\n        //if there is a next level, unlock it\r\n        //test for next in this world\r\n        const nextLevel = ProgressManager._levelsProgress[worldIndex][levelIndex+1];\r\n        if(nextLevel != null) {\r\n            nextLevel.unlocked = true;\r\n        }\r\n        else {\r\n            const nextWorld = ProgressManager._levelsProgress[worldIndex+1][0];\r\n            if(nextWorld != null) nextWorld.unlocked = true;\r\n        }\r\n\r\n        //save cookie data\r\n        ProgressManager.saveCookieData();\r\n    }\r\n\r\n    /**Well look at you, you dirty little cheater. :) */\r\n    public static unlockAll() {\r\n\r\n        Logging.message(\"You're a dirty little cheater!\");\r\n\r\n        ProgressManager._levelsProgress = ProgressManager._worldsData.worlds.map(world => {\r\n            return [].concat.apply([], world as any)\r\n                .map(level => {\r\n                    return { unlocked: true, completed: false };\r\n                });\r\n        });\r\n        ProgressManager._specialsProgress = ProgressManager._worldsData.worlds.map(world => {\r\n            return [].concat.apply([], world as any)\r\n                .map(level => {\r\n                    if(level.special) return { collected: true, unlocks:level.unlocks };\r\n                    return null;\r\n                });\r\n        });\r\n\r\n    }\r\n\r\n    /**Mark special as collected.  Also saves data. */\r\n    public static collectSpecial(worldIndex:number, levelIndex:number) {\r\n        //set to collected!\r\n        const level = ProgressManager._specialsProgress[worldIndex][levelIndex];\r\n        if(level == null) return;\r\n        level.collected = true;\r\n\r\n        //save cookie data\r\n        ProgressManager.saveCookieData();\r\n    }\r\n\r\n    /**Saves the progress data to a cookie or two. */\r\n    public static saveCookieData() {\r\n        console.log(\"MY NEW SAVE DATA\", ProgressManager.ProgressData);\r\n\r\n        document.cookie = `progData=${JSON.stringify(ProgressManager.ProgressData)};path=/`;\r\n    }\r\n\r\n    /**Reads cookie data and fills in progress data. */\r\n    private static _readCookieData() {\r\n        //look for cookie\r\n        const cookie = ProgressManager._getCookie(\"progData\");\r\n        if(cookie != null && cookie != '') {\r\n            //read the cookie\r\n            const data = JSON.parse(cookie);\r\n            ProgressManager._levelsProgress = data.levels;\r\n            ProgressManager._specialsProgress = data.specials;\r\n        }\r\n    }\r\n\r\n\r\n    /*https://www.w3schools.com/js/js_cookies.asp*/\r\n    private static _getCookie(cname) {\r\n        var name = cname + \"=\";\r\n        var decodedCookie = decodeURIComponent(document.cookie);\r\n        var ca = decodedCookie.split(';');\r\n        for(var i = 0; i <ca.length; i++) {\r\n            var c = ca[i];\r\n            while (c.charAt(0) == ' ') {\r\n            c = c.substring(1);\r\n            }\r\n            if (c.indexOf(name) == 0) {\r\n            return c.substring(name.length, c.length);\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get ProgressData() {\r\n        return {\r\n            levels : ProgressManager._levelsProgress,\r\n            specials : ProgressManager._specialsProgress\r\n        };\r\n    }\r\n}","import { Screen } from \"../screens/Screen\";\r\n\r\nexport class ScreenManager {\r\n    private static _screensLookup:{ [key:string]:Screen } = { };\r\n    private static _currentScreen:Screen = null;\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Registers a screen into the Screen Manager.  Uses a key to associate it. */\r\n    public static registerScreen(key:string, screen:Screen):void {\r\n        //if we don't have this screen, add it\r\n        if(ScreenManager._screensLookup[key] == null)\r\n            ScreenManager._screensLookup[key] = screen;\r\n    }\r\n\r\n    /**Unregisters a screen from the Screen Manager. */\r\n    public static unregisterScreen(key:string):boolean {\r\n        if(ScreenManager._screensLookup[key] == null) return false;\r\n\r\n        ScreenManager._screensLookup[key] = null;\r\n        delete ScreenManager._screensLookup[key];\r\n        return true;\r\n    }\r\n\r\n    /**Sets the current screen.  Can be done with the screen itself or an associative key. */\r\n    public static setCurrentScreen(screen:string | Screen, stage:createjs.StageGL):Promise<void> {\r\n        let tempScreen = null;\r\n        if(screen instanceof Screen) tempScreen = screen;\r\n        else tempScreen = ScreenManager._screensLookup[screen];\r\n\r\n        //if we did not find a screen, do not follow through\r\n        if(tempScreen == null) return Promise.resolve();\r\n\r\n        let promises = [];\r\n        //if we have a previous screen, wait for it to fade out\r\n        if(ScreenManager._currentScreen != null)\r\n        promises.push(\r\n            new Promise(async(res) => {\r\n                //fade out\r\n                createjs.Tween\r\n                    .get(ScreenManager._currentScreen.Container)\r\n                    .to({ alpha:0 }, 500, createjs.Ease.linear)\r\n                    .call(() => {\r\n                        ScreenManager._currentScreen.destroy();\r\n                        ScreenManager._currentScreen.disable();\r\n                        res();\r\n                    });\r\n            })\r\n        );\r\n\r\n\r\n        //wait for certain actions to finish\r\n        return new Promise(async(res) => {\r\n            //wait for promises to finish\r\n            await Promise.all(promises);\r\n\r\n            //now add in the new one\r\n            ScreenManager._currentScreen = tempScreen;\r\n            ScreenManager._currentScreen.create(stage);\r\n            ScreenManager._currentScreen.Container.alpha = 0;\r\n            ScreenManager._currentScreen.disable(); //disable until ready\r\n            console.log(\"FADE IN\")\r\n            //fade in\r\n            createjs.Tween\r\n                .get(ScreenManager._currentScreen.Container)\r\n                .to({ alpha:1 }, 1200, createjs.Ease.linear)\r\n                .call(() => {\r\n                    console.log(\"DONE\");\r\n                    ScreenManager._currentScreen.enable();\r\n                    res();\r\n                });\r\n\r\n        });\r\n    }\r\n\r\n    public static getScreenByKey(key:string):Screen {\r\n        return ScreenManager._screensLookup[key];\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get AllScreens() { return ScreenManager._screensLookup; }\r\n    public static get CurrentScreen() { return ScreenManager._currentScreen; }\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Container } from \"../ui/display/Container\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { Game } from \"../Game\";\r\nimport { DataManager } from \"../managers/DataManager\";\r\nimport { IntermediaryScreen } from \"./IntermediaryScreen\";\r\nimport { Logging } from \"../Functions\";\r\n\r\nexport class EndScreen extends Screen {\r\n    private _game:Game;\r\n    private _buttonsContainer:Container;\r\n\r\n    private _completeSpr:createjs.DisplayObject;\r\n    private _failSpr:createjs.DisplayObject;\r\n\r\n    //flags\r\n    private _isFail:boolean;\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n\r\n        this._game = game;\r\n        this._isFail = false;\r\n\r\n        //layout stuff\r\n        const bg = new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"bg\");\r\n        this._container.addChild(bg);\r\n\r\n        this._buttonsContainer = new Container(Container.LAYOUT_OPTIONS.ColumnLeftBottom);\r\n        this._buttonsContainer.addMany({\r\n            btnTryAgain : new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"btnTryAgain\"),\r\n            btnNextLevel : new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"btnNextLevel\"),\r\n            btnMainMenu : new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"btnMainMenu\"),\r\n        });\r\n        this._container.addChild(this._buttonsContainer.Container);\r\n\r\n        //--conditional text\r\n        this._completeSpr = new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"complete\");\r\n        this._failSpr = new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"failure\");\r\n        this._completeSpr.x = this._game.StageWidth / 2 - (this._completeSpr.getBounds().width / 2);\r\n        this._completeSpr.y = 220;\r\n        this._failSpr.x = this._game.StageWidth / 2 - (this._failSpr.getBounds().width / 2);\r\n        this._failSpr.y = this._game.StageHeight * 0.45;\r\n        this._container.addChild(this._completeSpr);\r\n        this._container.addChild(this._failSpr);\r\n\r\n        \r\n        \r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    create(stage:createjs.StageGL):Screen {\r\n        \r\n        \r\n        // //for testing\r\n        // (this._container as any).on(\"click\", (e) => {\r\n        //     ScreenManager.setCurrentScreen(\"menu\", stage);\r\n        // }, this, true);       \r\n        \r\n\r\n        return super.create(stage);\r\n    }\r\n\r\n\r\n    enable() {\r\n        super.enable();\r\n\r\n        //try again\r\n        (this._buttonsContainer.Sprites[\"btnTryAgain\"] as any).on(\"click\", () => {\r\n            //restart this level\r\n            this._game.changeCurrentLevel(this._game.CurrentLevelData);\r\n            ScreenManager.setCurrentScreen(\"game\", this._game.Stage);\r\n        }, this, true);\r\n        //next level\r\n        (this._buttonsContainer.Sprites[\"btnNextLevel\"] as any).on(\"click\", () => {\r\n            //find the next level\r\n            const nextLevel = DataManager.getNextLevel(this._game.CurrentLevelData);\r\n            //if there is no next level, go back to menu\r\n            if(nextLevel == null) {\r\n                //go to main menu\r\n                ScreenManager.setCurrentScreen(\"menu\", this._game.Stage);\r\n                return;\r\n            }\r\n\r\n            Logging.error(\"WHERE AM I? \" + nextLevel.name);\r\n            this._game.changeCurrentLevel(nextLevel);\r\n            //go to intermediary screen\r\n            const intermediary = ScreenManager.getScreenByKey(\"intermediary\") as IntermediaryScreen;\r\n            new Promise(async(res) => {\r\n                intermediary.Text = nextLevel.name;\r\n                await ScreenManager.setCurrentScreen(intermediary, this._game.Stage);\r\n                intermediary.queueNextScreen(\"game\", 1000);\r\n\r\n                res();\r\n            });\r\n        }, this, true);\r\n        //main menu\r\n        (this._buttonsContainer.Sprites[\"btnMainMenu\"] as any).on(\"click\", () => {\r\n            //go to main menu\r\n            ScreenManager.setCurrentScreen(\"menu\", this._game.Stage);\r\n        }, this, true);\r\n    }\r\n\r\n    disable() {\r\n        //toggle fail/success\r\n        this._completeSpr.visible = !this._isFail;\r\n        this._failSpr.visible = this._isFail;\r\n\r\n        Object.keys(this._buttonsContainer.Sprites).forEach(key => this._buttonsContainer.Sprites[key].removeAllEventListeners());\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n}","import { TutorialCreator } from \"./TutorialCreator\";\r\nimport { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { ObjectPool } from \"../ObjectPool\";\r\nimport { Fish } from \"../entities/Fish\";\r\nimport { Persephone } from \"../entities/specials/Persephone\";\r\nimport { Puffer } from \"../entities/Puffer\";\r\nimport { Cat } from \"../entities/Cat\";\r\nimport { Game } from \"../Game\";\r\nimport { Container } from \"../ui/display/Container\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { Logging } from \"../Functions\";\r\nimport { LevelData, DataManager } from \"../managers/DataManager\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { GameScore } from \"../ui/partials/GameScore\";\r\nimport { ProgressManager } from \"../managers/ProgressManager\";\r\n\r\nexport class GameScreen extends Screen {\r\n    private _game:Game;\r\n\r\n    //create containers\r\n    private _staticContainer:Container;\r\n    private _fishContainer:createjs.Container;\r\n    private _pufferContainer:createjs.Container;\r\n\r\n    private _winContainer:createjs.Container;\r\n    private _winBanner:createjs.Shape;\r\n    private _winText:createjs.BitmapText;\r\n\r\n    private _gameScore:GameScore;\r\n    private _tutorialCreator:TutorialCreator;\r\n\r\n    private _cat:Cat;\r\n    private _fishes:Fish[];\r\n    private _puffers:Puffer[];\r\n\r\n    private _remainingFish:number;\r\n\r\n    private _pauseLogic:Boolean;\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n        this._game = game;\r\n        this._fishes = [];\r\n        this._puffers = [];\r\n        this._remainingFish = -1;\r\n\r\n        //create object pool\r\n        ObjectPool.createPoolObject(new Cat(this._game, this), POOL.CAT)\r\n        for(let i = 0; i < 120; i++) {\r\n            ObjectPool.createPoolObject(new Fish(this._game), POOL.FISH);\r\n        }\r\n        for(let i = 0; i < 30; i++) {\r\n            ObjectPool.createPoolObject(new Puffer(this._game), POOL.PUFFERFISH)\r\n        }\r\n        ObjectPool.createPoolObject(new Persephone(this._game), POOL.PERSEPHONE);\r\n\r\n\r\n        //pool out static kitty\r\n        this._cat = (ObjectPool.checkout(POOL.CAT) as Cat);\r\n        this._cat.X = 290;\r\n        this._cat.Y = 70;\r\n\r\n        //create containers\r\n        this._staticContainer = new Container();\r\n        this._staticContainer.addMany({\r\n            bg : new createjs.Sprite(LoadManager.Spritesheets.BG_Spritesheet, \"bg1\")\r\n        });\r\n\r\n        this._fishContainer = new createjs.Container();\r\n        this._pufferContainer = new createjs.Container();\r\n\r\n        this._winContainer = new createjs.Container();\r\n\r\n        this._gameScore = new GameScore(this._game);\r\n        this._tutorialCreator = new TutorialCreator(this._game, this);\r\n\r\n        this._pauseLogic = false;\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n\r\n    /**Attempts to grab a fish.  Returns any fish that are touching the global position. */\r\n    public tryToGrabFishes(x:number, y:number):Fish[] {\r\n        let fishes = [];\r\n\r\n\r\n        const hitObjects = this._container.getObjectsUnderPoint(x, y, 0);\r\n        for(let i = 0; i < this._fishes.length; i++) {\r\n            const fish = this._fishes[i];\r\n            if(hitObjects.indexOf(fish.Sprite) != -1) {\r\n                fishes.push(fish);\r\n            }\r\n        }\r\n\r\n        return fishes;\r\n\r\n    }\r\n\r\n    /**Tests to see if we hit a puffer. */\r\n    public hasHitAPuffer(x:number, y:number):Boolean {\r\n        // console.log(\"TESTING PUFF\");\r\n\r\n        let hasHitPuffer = false;\r\n        const hitObjects = this._container.getObjectsUnderPoint(x, y, 0);\r\n        for(let i = 0; i < this._puffers.length; i++) {\r\n            if(hitObjects.indexOf(this._puffers[i].Sprite) != -1) {\r\n                console.log (\"I HIT A PUFF\");\r\n                this._puffers[i].puff();\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public collectFish(fish:Fish) {\r\n        //get fish\r\n        Logging.success(\"GOT FISH!\");\r\n\r\n        const killedFish = fish.destroy();\r\n\r\n        //decrement fish counter -- make sure we didn't make an error\r\n        if(killedFish != null) {\r\n            this._remainingFish--;\r\n            this._fishes.splice(this._fishes.indexOf(killedFish as Fish), 1);\r\n\r\n            //if all our fish are gone, end the game!\r\n            if(this._remainingFish <= 0) {\r\n                //win game!\r\n                Logging.success(\"GAME IS OVER!\");\r\n                //call win\r\n                this.win();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public win() {\r\n        //disable controls\r\n        this.disable();\r\n        //set the score\r\n        this._game.changeCurrentScore({\r\n            totalFish: this._fishes.length,\r\n            combos: 10,\r\n            time: 100\r\n        });\r\n        \r\n        //show win banner\r\n        createjs.Tween.get(this._winContainer)\r\n            .to({y:this._game.StageHeight / 2 - 25}, 600, createjs.Ease.elasticOut)\r\n            .wait(2000)\r\n            .call(() => {\r\n                //transition to end screen\r\n                ScreenManager.setCurrentScreen(\"end\", this._game.Stage);\r\n                // ScreenManager.setCurrentScreen(\"menu\", this._game.Stage);\r\n\r\n                //save this data\r\n                const levelIndices = DataManager.getIndexData(this._game.CurrentLevelData);\r\n                //mark level as complete\r\n                ProgressManager.completeLevel(levelIndices.world, levelIndices.level);\r\n                //try to mark special as collected\r\n                ProgressManager.collectSpecial(levelIndices.world, levelIndices.level);\r\n\r\n                //reset game data\r\n                this.reset();\r\n            });\r\n    }\r\n\r\n    public pauseGameLogic() {\r\n        this._pauseLogic = true;\r\n    }\r\n\r\n    public unpauseGameLogic() {\r\n        this._pauseLogic = false;\r\n    }\r\n\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n        super.create(stage);\r\n        //add stuff\r\n        this._staticContainer.checkoutSprites();\r\n        this._staticContainer.Sprites.bg.y = 0;\r\n        this._container.addChild(this._staticContainer.Container);\r\n\r\n        this._container.addChild(this._fishContainer);\r\n        this._container.addChild(this._pufferContainer);\r\n\r\n        //add conditional text\r\n        this._winBanner = new createjs.Shape();\r\n        this._winBanner.graphics.beginFill(\"black\");\r\n        this._winBanner.graphics.drawRect(0, 0, this._game.StageWidth, 50);\r\n        this._winBanner.cache(0, 0, this._game.StageWidth, 50);\r\n        this._winContainer.addChild(this._winBanner);\r\n        this._winText = Sprites.generateBitmapText(\"Win!\", LoadManager.Spritesheets.TypographyWhite);\r\n        this._winContainer.addChild(this._winText);\r\n        this._winText.x = (this._game.StageWidth / 2) - (this._winText.getBounds().width / 2);\r\n\r\n        this._container.addChild(this._winContainer);\r\n        this._winContainer. y = this._game.StageHeight + 50;\r\n        this._winContainer.mouseEnabled = false;\r\n\r\n        \r\n        this._cat.create(this._container);\r\n\r\n\r\n        //testing\r\n        // const puffer = new createjs.Sprite(LoadManager.Spritesheets.Puffer_Spritesheet, \"pufferIdle\");\r\n        // puffer.x = 100;\r\n        // puffer.y = 200;\r\n        // (puffer as any).on(\"click\", () => {\r\n        //     puffer.gotoAndPlay(\"pufferAngry\")\r\n        // })\r\n        // this._container.addChild(puffer);\r\n\r\n\r\n        //add level data if it exists\r\n        // this.reset();\r\n        // this.destroy();\r\n        if(this._game.CurrentLevelData != null) {\r\n            //load in critters\r\n            for(let i = 0; i < this._game.CurrentLevelData.data.length; i++) {\r\n                const data = this._game.CurrentLevelData.data[i];\r\n                switch(data.id) {\r\n                    case POOL.PERSEPHONE:\r\n                    case POOL.FISH:\r\n                        const fish = (ObjectPool.checkout(data.id) as Fish);\r\n                        fish.create(this._fishContainer);\r\n                        if(data.speed != null) fish.Speed = data.speed; //set variables\r\n                        if(data.x != null) fish.X = data.x;\r\n                        if(data.y != null) fish.Y = data.y;\r\n                        if(data.flip != null && data.flip) fish.DirectionX = -1;\r\n                        fish.setNaturalY();\r\n                        this._fishes.push(fish);\r\n                        break;\r\n                    case POOL.PUFFERFISH:\r\n                        const puffer = (ObjectPool.checkout(POOL.PUFFERFISH) as Puffer);\r\n                        puffer.create(this._pufferContainer);\r\n                        if(data.speed != null) puffer.Speed = data.speed; //set variables\r\n                        if(data.x != null) puffer.X = data.x;\r\n                        if(data.y != null) puffer.Y = data.y;\r\n                        if(data.flip != null && data.flip) puffer.DirectionX = -1;\r\n                        this._puffers.push(puffer);\r\n                }      \r\n            }\r\n\r\n            //set fish total\r\n            this._remainingFish = this._fishes.length;\r\n            // console.log(\"FISHIE NUM?\", this._remainingFish, this._fishContainer.children.length);\r\n        }\r\n        //get the level tutorials\r\n        if(this._game.CurrentLevelData.tutorials != null) {\r\n            this._tutorialCreator.queueTutorials(this._game.CurrentLevelData.tutorials);\r\n        }\r\n        //get the level background\r\n        if(this._game.CurrentLevelData.background != null) {\r\n            (this._staticContainer.Sprites[\"bg\"] as createjs.Sprite).gotoAndStop(this._game.CurrentLevelData.background);\r\n        }\r\n        else {\r\n            (this._staticContainer.Sprites[\"bg\"] as createjs.Sprite).gotoAndStop(\"bg1\");\r\n        }\r\n\r\n\r\n        //add the score\r\n        // this._gameScore.Container.y = this._game.StageHeight - 40;\r\n        // this._container.addChild(this._gameScore.Container);\r\n\r\n\r\n        //update the game HUD for this round\r\n        const levelData = this._game.CurrentLevelData;\r\n        console.log(this._game.CurrentLevelData);\r\n        const showScore = (levelData.showScore != null && !levelData.showScore) ? false : true;\r\n        const showTimer = (levelData.duration != null);\r\n        const showFishRemain = (levelData.showRemainingFish != null && !levelData.showRemainingFish) ? false : true;\r\n        this._gameScore.startHUD(showScore, showFishRemain, showTimer);\r\n\r\n        return null;\r\n    }\r\n\r\n    public destroy() {\r\n\r\n        this._cat.destroy();\r\n        this._fishes.forEach(f => {\r\n            f.destroy();\r\n        });\r\n        this._puffers.forEach(f => {\r\n            f.destroy();\r\n        });\r\n\r\n        ObjectPool.releaseAllObjects();\r\n\r\n        this.reset();\r\n\r\n        return super.destroy();\r\n    }\r\n\r\n    public update(gameTime:number) {\r\n        //if our logic is paused, do not do game loop\r\n        if(this._pauseLogic) return;\r\n\r\n        const normalizedTime = Math.min(1, gameTime) + 0.5;\r\n\r\n        //update entities\r\n        this._fishes.forEach(fish => {\r\n            fish.update(normalizedTime);\r\n        });\r\n        this._puffers.forEach(puffer => {\r\n            puffer.update(normalizedTime);\r\n        });\r\n\r\n        this._cat.update(normalizedTime);\r\n\r\n        //update the score\r\n        this._gameScore.update(gameTime);\r\n\r\n        super.update(gameTime);\r\n    }\r\n\r\n    public enable() {\r\n        (this._container as any).on(\"click\", this._cat.grab, this._cat);\r\n    }\r\n\r\n    public disable() {\r\n        (this._container as any).removeAllEventListeners();\r\n    }\r\n\r\n    public reset() {\r\n        this._cat.X = 290;\r\n        this._fishes.forEach(f => { ObjectPool.return(f); });\r\n        this._puffers.forEach(f => { ObjectPool.return(f); });\r\n\r\n        ObjectPool.releaseAllObjects();\r\n\r\n        this._fishContainer.removeAllChildren();\r\n        this._pufferContainer.removeAllChildren();\r\n\r\n        this._fishes = [];\r\n        this._puffers = [];\r\n\r\n\r\n        super.reset();\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Game() { return this._game; }\r\n    public get Cat() { return this._cat; }\r\n    public get Fishes() { return this._fishes; }\r\n    public get IsGamelogicPaused() { return this._pauseLogic; }\r\n}\r\n\r\n\r\n\r\nexport class POOL { \r\n    static get CAT() { return \"cat\"; }\r\n    static get FISH() { return \"fish\"; }\r\n    static get PUFFERFISH() { return \"puffer\"; }\r\n    static get PERSEPHONE() { return \"persephone\"; }\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { Game } from \"../Game\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\n\r\nexport class IntermediaryScreen extends Screen {\r\n    private _game:Game;\r\n    private _bg:createjs.Shape;\r\n    private _textContainer:createjs.Container;\r\n    private _txtSprite:createjs.DisplayObject;\r\n\r\n    private _text:string;\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n        this._game = game;\r\n\r\n        this._text = \"\";\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Chooses the screen to load in after the intermediary. */\r\n    public queueNextScreen(screenKey:string, duration:number=3000) {\r\n        const evt = window.setTimeout(() => {\r\n            //load the screen\r\n            ScreenManager.setCurrentScreen(screenKey, this._game.Stage);\r\n            //clear the timeout\r\n            window.clearTimeout(evt);\r\n        }, duration);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n        //add stuff\r\n        this._bg = new createjs.Shape();\r\n        this._bg.graphics.beginFill(\"#191919\");\r\n        this._bg.graphics.drawRect(0, 0, this._game.StageWidth, this._game.StageHeight);\r\n        this._bg.graphics.endFill();\r\n        this._bg.cache(0, 0, this._game.StageWidth, this._game.StageHeight);\r\n        this._container.addChild(this._bg);\r\n\r\n        this._textContainer = new createjs.Container();\r\n        this._container.addChild(this._textContainer);\r\n\r\n        if(this._text != \"\") {\r\n            //create the text\r\n            this._txtSprite = Sprites.generateBitmapText(this._text, LoadManager.Spritesheets.TypographyWhite);\r\n            (this._txtSprite as any).scale = 0.6;\r\n            //load into container\r\n            this._textContainer.addChild(this._txtSprite);\r\n    \r\n            //put container at bottom\r\n            this._textContainer.x = (this._game.StageWidth / 2) - ((this._txtSprite.getBounds().width / 2) * 0.6);\r\n            this._textContainer.y = (this._game.StageHeight / 2) - (this._txtSprite.getBounds().height / 2);\r\n        }\r\n\r\n        return super.create(stage);\r\n    }\r\n\r\n    public destroy() {\r\n        this._textContainer.removeAllChildren();\r\n\r\n        return super.destroy();\r\n    }\r\n\r\n    public enable() {\r\n        super.enable();\r\n    }\r\n\r\n    public disable() {\r\n        super.disable();\r\n\r\n        this.reset();\r\n    }\r\n\r\n    public reset() {\r\n        this.Text = \"\";\r\n        super.reset();\r\n    }\r\n\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public set Text(value:string) {\r\n        this._text = value;\r\n    }\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { Layout } from \"../ui/display/Layout\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { Container } from \"../ui/display/Container\";\r\nimport { Logging } from \"../Functions\";\r\nimport { Game } from \"../Game\";\r\nimport { LevelSelectDisplay } from \"../ui/custom/LevelSelectDisplay\";\r\nimport { IntermediaryScreen } from \"./IntermediaryScreen\";\r\nimport { GameScreen, POOL } from \"./GameScreen\";\r\nimport { DataManager } from \"../managers/DataManager\";\r\nimport { Special } from \"../entities/specials/Special\";\r\nimport { Persephone } from \"../entities/specials/Persephone\";\r\nimport { ProgressManager } from \"../managers/ProgressManager\";\r\nimport { InstanceLoader } from \"../Interfaces\";\r\n\r\nexport class MenuScreen extends Screen {\r\n    private _game:Game;\r\n    //containers\r\n    private _swipeContainer:createjs.Container;\r\n    private _staticContainer:Container;\r\n    // private _mainContainer:Container;\r\n    private _mainContainer:createjs.Container;\r\n    private _clearedContainer:Container;\r\n    private _optionsContainer:Container;\r\n    private _collectedContainer:createjs.Container;\r\n\r\n    private _mainButtonsContainer:Container;\r\n    private _logo:createjs.DisplayObject;\r\n    private _fancyFish:createjs.Sprite;\r\n\r\n    //custom containers\r\n    private _levelSelectDisplay:LevelSelectDisplay;\r\n\r\n    //properties\r\n    private _swipeSpeed:number;\r\n    private _currentScreen:string;\r\n    private _initialSwipePos:{x:number, y:number};\r\n    private _dragTimer:any;\r\n\r\n    //collectibles\r\n    private _collectibleFish:Special[];\r\n\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n\r\n        this._game = game;\r\n\r\n        //setup swipe container -- holds all moving sprites\r\n        this._swipeContainer = new createjs.Container();\r\n\r\n        //setup static container\r\n        this._staticContainer = new Container();\r\n        const bg = new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"bg\");\r\n\r\n        this._staticContainer.addMany({\r\n            bg\r\n        });\r\n\r\n        //setup main container\r\n        this._mainContainer = new createjs.Container();\r\n        this._logo = new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"logo\");\r\n        this._logo.x = this._game.StageWidth - this._logo.getBounds().width - 20;\r\n        this._logo.y = this._game.StageHeight * 0.4;\r\n        this._mainContainer.addChild(this._logo);\r\n        this._mainButtonsContainer = new Container(Container.LAYOUT_OPTIONS.ColumnLeftBottom);\r\n        this._mainButtonsContainer.addMany({\r\n            btnNewGame : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnNewGame\"),\r\n            btnOptions : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnOptions\"),\r\n            btnLevelSelect : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnLevelSelect\"),\r\n            btnExit : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnExit\"),\r\n        });\r\n        this._mainContainer.addChild(this._mainButtonsContainer.Container);\r\n        this._fancyFish = new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"fancyFish\");\r\n        this._fancyFish.x = this._game.StageWidth - this._fancyFish.getBounds().width - 20;\r\n        this._fancyFish.y = this._game.StageHeight - this._fancyFish.getBounds().height - 20;\r\n        this._mainContainer.addChild(this._fancyFish);\r\n        this._fancyFish.visible = false;\r\n\r\n        //setup options container\r\n        this._optionsContainer = new Container();\r\n        this._optionsContainer.addMany({\r\n            txtOptions : Sprites.generateBitmapText(\"Options\", LoadManager.Spritesheets.Typography),\r\n            btnClearData : Sprites.Buttons.ClearData\r\n        });\r\n        this._optionsContainer.Container.x -= this._game.StageWidth;\r\n\r\n        //setup cleared container\r\n        this._clearedContainer = new Container();\r\n        this._clearedContainer.add(\"txtCleared\", Sprites.generateBitmapText(\"Data successfully cleared!\", LoadManager.Spritesheets.Typography));\r\n        this._clearedContainer.Container.x -= this._game.StageWidth;\r\n        this._clearedContainer.Container.y -= this._game.StageHeight;\r\n\r\n        this._levelSelectDisplay = new LevelSelectDisplay(game);\r\n        this._levelSelectDisplay.Container.x += this._game.StageWidth;\r\n\r\n        //setup collected container\r\n        this._collectedContainer = new createjs.Container;\r\n        this._collectedContainer.y += this._game.StageHeight;\r\n\r\n\r\n        this._collectibleFish = [];\r\n\r\n\r\n        //setup properties\r\n        this._swipeSpeed = 800;\r\n        this._currentScreen = \"main\";\r\n        this._initialSwipePos = { x:-1, y:-1 };        \r\n\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    private _onNewGame() {\r\n        Logging.message(\"Go to new game!\");\r\n        \r\n        const data = DataManager.getLevelDataByIndex(0);\r\n        this._game.changeCurrentLevel(data);\r\n        \r\n        const intermediary = ScreenManager.getScreenByKey(\"intermediary\") as IntermediaryScreen;\r\n        new Promise(async(res) => {\r\n            intermediary.Text = data.name;\r\n            await ScreenManager.setCurrentScreen(intermediary, this.Stage);\r\n            intermediary.queueNextScreen(\"game\");\r\n\r\n            res();\r\n        });\r\n    }\r\n    private _onOptions() {\r\n        //go to options!\r\n        Logging.message(\"Go to options!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:this._game.StageWidth}, this._swipeSpeed, createjs.Ease.circOut);\r\n        this._currentScreen = \"options\";\r\n    }\r\n    private _onLevelSelect() {\r\n        Logging.message(\"Go to level select!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:-this._game.StageWidth}, this._swipeSpeed, createjs.Ease.circOut);\r\n        this._currentScreen = \"levelSelect\";\r\n    }\r\n    private _onFish() {\r\n        Logging.message(\"Go to fish!\");\r\n        createjs.Tween.get(this._swipeContainer).to({y:-this._game.StageHeight}, this._swipeSpeed, createjs.Ease.circOut);\r\n        this._currentScreen = \"fish\";\r\n    }\r\n    private _onExit() {\r\n        Logging.message(\"Go to exit!\");\r\n    }\r\n\r\n    private _onMain() {\r\n        Logging.message(\"Go to main!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:0, y:0}, this._swipeSpeed, createjs.Ease.bounceOut);\r\n        this._currentScreen = \"main\";\r\n    }\r\n\r\n    private _onClearData() {\r\n        Logging.success(\"Cleared data!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:this._game.StageWidth, y:this._game.StageHeight}, this._swipeSpeed, createjs.Ease.cubicIn);\r\n        // this._currentScreen = \"cleared\"\r\n        let e = window.setTimeout(() => {\r\n            createjs.Tween.get(this._swipeContainer).to({x:this._game.StageWidth, y:0}, this._swipeSpeed, createjs.Ease.cubicInOut);\r\n            window.clearInterval(e);\r\n            this._currentScreen = \"options\";\r\n        }, 2000);\r\n    }\r\n\r\n    private _onDragStart(e) {\r\n\r\n        this._initialSwipePos = { x:e.stageX, y:e.stageY };\r\n\r\n        //reset drag timer if not null\r\n        if(this._dragTimer != null) window.clearTimeout(this._dragTimer);\r\n        this._dragTimer = setTimeout(() => {\r\n            this._initialSwipePos = { x:-1, y:-1 };\r\n            this._dragTimer = null;\r\n        }, 500);\r\n    }\r\n    private _onDragEnd(e) {\r\n        if(this._initialSwipePos.x != -1 || this._initialSwipePos.y != -1) {\r\n            //find the direction\r\n            if((this._initialSwipePos.x - e.stageX) > 20) {\r\n                if(this._currentScreen == \"options\")\r\n                    this._onMain();\r\n            }\r\n            else if((this._initialSwipePos.x - e.stageX) < -20) {\r\n                if(this._currentScreen == \"levelSelect\")\r\n                    this._onMain();\r\n            }\r\n            else if((this._initialSwipePos.y - e.stageY) < -20) {\r\n                if(this._currentScreen == \"fish\")\r\n                    this._onMain();\r\n            }\r\n        }\r\n    }\r\n\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n\r\n        //add in the containers\r\n        this._staticContainer.Sprites.bg.y = 0;\r\n        this._container.addChild(this._staticContainer.Container);\r\n        this._container.addChild(this._swipeContainer);\r\n        this._swipeContainer.addChild(this._mainContainer);\r\n        this._swipeContainer.addChild(this._optionsContainer.Container);\r\n        this._swipeContainer.addChild(this._clearedContainer.Container);\r\n        this._swipeContainer.addChild(this._collectedContainer);\r\n\r\n        \r\n        this._swipeContainer.addChild(this._levelSelectDisplay.Container);\r\n\r\n        return super.create(stage);\r\n    }\r\n\r\n    public enable() {\r\n        console.log(\"LOAD IN MENU ACTIONS\");\r\n        super.enable();\r\n        //listen to events\r\n        (this._mainButtonsContainer.Sprites.btnNewGame as any).on(\"click\", this._onNewGame, this, true);\r\n        (this._mainButtonsContainer.Sprites.btnOptions as any).on(\"click\", this._onOptions, this);\r\n        (this._mainButtonsContainer.Sprites.btnLevelSelect as any).on(\"click\", this._onLevelSelect, this);\r\n        (this._mainButtonsContainer.Sprites.btnExit as any).on(\"click\", this._onExit, this);\r\n\r\n        (this._fancyFish as any).on(\"click\", this._onFish, this);\r\n\r\n        Sprites.listenToClearData();\r\n        (this._optionsContainer.Sprites.btnClearData as any).on(Sprites.CLEAR_DATA, this._onClearData, this);\r\n\r\n        //listen for swipes\r\n        (this._staticContainer.Sprites.bg as any).on(\"mousedown\", this._onDragStart, this);\r\n        (this._staticContainer.Sprites.bg as any).on(\"click\", this._onDragEnd, this);\r\n\r\n        // this._mainButtonsContainer.Sprites.btnOptions.on(\"click\", () => console.log(\"HELLO I CLIC\"));\r\n\r\n        this._levelSelectDisplay.enable();\r\n\r\n        //testing -- add fakey collectible fish\r\n        //get any collected fish CLASS names\r\n        console.log(\"MY PROGRESS DATA AT NOw\", ProgressManager.ProgressData)\r\n        const collFish = [].concat.apply([], ProgressManager.ProgressData.specials).filter(d => d != null && d.collected).map(d => d.unlocks);\r\n\r\n        \r\n        collFish.forEach(f => {\r\n            switch(f.toLowerCase()) {\r\n                case POOL.PERSEPHONE:\r\n                    this._collectibleFish.push(new Persephone(this._game));\r\n                    break;\r\n            }\r\n        });\r\n            \r\n        console.log(collFish);\r\n\r\n        //add the fish to the container\r\n        this._collectibleFish.forEach(f => {\r\n            f.setMainPage(true);\r\n            f.create(this._collectedContainer);\r\n            f.Speed = Math.random() * 3 + 3;\r\n        });\r\n\r\n        //if we don't have any collectible fish, hide the fish button\r\n        if(collFish.length <= 0) {\r\n            this._fancyFish.visible = false;\r\n        }\r\n        else {\r\n            this._fancyFish.visible = true;\r\n            this._fancyFish.alpha = 0;\r\n\r\n            createjs.Tween\r\n            .get(this._fancyFish)\r\n            .to({ alpha:1 }, 500, createjs.Ease.circIn);\r\n        }\r\n\r\n        console.log(\"SPECIAL FISHIES?\", this._collectibleFish);\r\n\r\n\r\n\r\n        //rock the fish\r\n        createjs.Tween\r\n            // @ts-ignore\r\n            .get(this._fancyFish, { loop:true })\r\n            .to({ y:this._fancyFish.y-30 }, 3000, createjs.Ease.sineInOut)\r\n            .to({ y:this._fancyFish.y }, 3000, createjs.Ease.sineInOut);\r\n\r\n        //rock the logo\r\n        createjs.Tween\r\n            // @ts-ignore\r\n            .get(this._logo, { loop:true })\r\n            .wait(1200)\r\n            .to({ y:this._logo.y-15 }, 4500, createjs.Ease.sineInOut)\r\n            .to({ y:this._logo.y }, 4800, createjs.Ease.sineInOut);\r\n    }\r\n\r\n    public disable() {\r\n        super.disable();\r\n        //stop listen to events\r\n        (this._mainButtonsContainer.Sprites.btnNewGame as any).off(\"click\", this._onNewGame);\r\n        (this._mainButtonsContainer.Sprites.btnOptions as any).off(\"click\", this._onOptions);\r\n        (this._mainButtonsContainer.Sprites.btnLevelSelect as any).off(\"click\", this._onLevelSelect);\r\n        (this._mainButtonsContainer.Sprites.btnExit as any).off(\"click\", this._onExit);\r\n\r\n        this._fancyFish.removeAllEventListeners();\r\n\r\n        Sprites.stopListenToClearData();\r\n        (this._optionsContainer.Sprites.btnClearData as any).off(Sprites.CLEAR_DATA, this._onClearData);\r\n\r\n        //stop listen for swipes\r\n        (this._staticContainer.Sprites.bg as any).off(\"mousedown\", this._onDragStart);\r\n        (this._staticContainer.Sprites.bg as any).off(\"click\", this._onDragEnd);\r\n\r\n\r\n        this._mainButtonsContainer.Sprites.btnNewGame.removeAllEventListeners();\r\n        this._mainButtonsContainer.Sprites.btnOptions.removeAllEventListeners();\r\n        this._mainButtonsContainer.Sprites.btnLevelSelect.removeAllEventListeners();\r\n        this._mainButtonsContainer.Sprites.btnExit.removeAllEventListeners();\r\n        this._staticContainer.Sprites.bg.removeAllEventListeners();\r\n\r\n\r\n        this._levelSelectDisplay.disable();\r\n\r\n        this.reset();\r\n\r\n\r\n        createjs.Tween.removeAllTweens();\r\n    }\r\n\r\n    public reset() {\r\n        //reset the position of the swipe container\r\n        this._swipeContainer.x = 0;\r\n        this._swipeContainer.y = 0;\r\n\r\n        super.reset();\r\n    }\r\n\r\n    public update(gameTime:number) {\r\n        this._collectibleFish.forEach(f => f.update(gameTime));\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n}","import { IUpdateable, ICreateable, IEnableable } from \"../Interfaces\";\r\n\r\nexport class Screen implements ICreateable<Screen>, IUpdateable, IEnableable {\r\n    private _stage:createjs.StageGL;\r\n    protected _container:createjs.Container;\r\n\r\n    constructor() {\r\n        this._container = new createjs.Container();\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Updates the screen. */\r\n    public update(gameTime:number) {\r\n\r\n    }\r\n\r\n    /**Creates the screen and adds to the stage. */\r\n    public create(stage:createjs.StageGL):Screen {\r\n        this._stage = stage;\r\n        //add to the stage\r\n        this._stage.addChild(this._container);\r\n\r\n        \r\n        return this;\r\n    }\r\n\r\n    /**Destroys the screen and removes from the stage. */\r\n    public destroy():Screen {\r\n\r\n        //remove from the stage\r\n        this._stage.removeChild(this._container);\r\n\r\n        return this;\r\n    }\r\n\r\n    public enable() {\r\n\r\n    }\r\n\r\n    public disable() {\r\n        \r\n    }\r\n\r\n    public reset() {\r\n        \r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container():createjs.Container { return this._container; }\r\n    protected get Stage():createjs.StageGL { return this._stage; }\r\n\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Game } from \"../Game\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\n\r\nexport class SplashScreen extends Screen {\r\n    private _game:Game;\r\n    private _textContainer:createjs.Container;\r\n\r\n    private _textSpritesheet;\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n        this._game = game;\r\n\r\n\r\n        this._textSpritesheet = new createjs.SpriteSheet({images: [\"assets/spritesheets/typography_white.png\"], frames: [[0,329,27,44,0,0,0],[89,47,21,44,0,0,0],[63,47,23,44,0,0,0],[32,141,24,44,0,0,0],[89,94,21,44,0,0,0],[110,141,20,44,0,0,0],[34,94,26,44,0,0,0],[0,188,28,44,0,0,0],[152,282,14,44,0,0,0],[158,94,16,44,0,0,0],[59,141,24,44,0,0,0],[136,94,19,44,0,0,0],[0,47,32,44,0,0,0],[0,141,29,44,0,0,0],[0,235,28,44,0,0,0],[86,141,21,44,0,0,0],[0,282,28,44,0,0,0],[63,94,23,44,0,0,0],[156,141,17,44,0,0,0],[81,235,21,44,0,0,0],[30,329,27,44,0,0,0],[66,0,24,44,0,0,0],[0,0,35,44,0,0,0],[31,188,23,44,0,0,0],[31,235,22,44,0,0,0],[57,188,23,44,0,0,0],[108,329,18,44,0,0,0],[60,329,21,44,0,0,0],[159,47,17,44,0,0,0],[118,0,20,44,0,0,0],[129,329,18,44,0,0,0],[169,282,14,44,0,0,0],[113,47,20,44,0,0,0],[84,329,21,44,0,0,0],[171,329,12,44,0,0,0],[186,282,12,44,0,0,0],[113,94,20,44,0,0,0],[191,188,12,44,0,0,0],[0,94,31,44,0,0,0],[56,235,22,44,0,0,0],[60,282,22,44,0,0,0],[108,188,20,44,0,0,0],[85,282,20,44,0,0,0],[177,94,15,44,0,0,0],[184,0,15,44,0,0,0],[179,47,15,44,0,0,0],[31,282,22,44,0,0,0],[131,282,18,44,0,0,0],[38,0,25,44,0,0,0],[150,329,18,44,0,0,0],[108,282,20,44,0,0,0],[152,235,18,44,0,0,0],[35,47,25,44,0,0,0],[153,188,16,44,0,0,0],[83,188,22,44,0,0,0],[131,188,19,44,0,0,0],[93,0,22,44,0,0,0],[129,235,20,44,0,0,0],[133,141,20,44,0,0,0],[141,0,20,44,0,0,0],[105,235,21,44,0,0,0],[136,47,20,44,0,0,0],[194,141,12,44,0,0,0],[195,94,12,44,0,0,0],[197,47,12,44,0,0,0],[172,188,16,44,0,0,0],[176,141,15,44,0,0,0],[173,235,14,44,0,0,0],[164,0,17,44,0,0,0]],  animations: {A:[0,0, true], B:[1,1, true], C:[2,2, true], D:[3,3, true], E:[4,4, true], F:[5,5, true], G:[6,6, true], H:[7,7, true], I:[8,8, true], J:[9,9, true], K:[10,10, true], L:[11,11, true], M:[12,12, true], N:[13,13, true], O:[14,14, true], P:[15,15, true], Q:[16,16, true], R:[17,17, true], S:[18,18, true], T:[19,19, true], U:[20,20, true], V:[21,21, true], W:[22,22, true], X:[23,23, true], Y:[24,24, true], Z:[25,25, true], a:[26,26, true], b:[27,27, true], c:[28,28, true], d:[29,29, true], e:[30,30, true], f:[31,31, true], g:[32,32, true], h:[33,33, true], i:[34,34, true], j:[35,35, true], k:[36,36, true], l:[37,37, true], m:[38,38, true], n:[39,39, true], o:[40,40, true], p:[41,41, true], q:[42,42, true], r:[43,43, true], s:[44,44, true], t:[45,45, true], u:[46,46, true], v:[47,47, true], w:[48,48, true], x:[49,49, true], y:[50,50, true], z:[51,51, true], 0:[52,52, true], 1:[53,53, true], 2:[54,54, true], 3:[55,55, true], 4:[56,56, true], 5:[57,57, true], 6:[58,58, true], 7:[59,59, true], 8:[60,60, true], 9:[61,61, true], \".\":[62,62, true], \",\":[63,63, true], \"'\":[64,64, true], \"\\\"\":[65,65, true], \"?\":[66,66, true], \"!\":[67,67, true], \"$\":[68,68, true]}});\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n        //add stuff\r\n        //load the image\r\n        const img = document.createElement(\"img\");\r\n        img.onload = (e) => {\r\n            const splash = new createjs.Bitmap(img);\r\n            this._container.addChild(splash);\r\n\r\n            super.create(stage);\r\n        }\r\n        img.src = \"assets/images/splash.png\";\r\n\r\n\r\n        this._textContainer = new createjs.Container();\r\n        this._container.addChild(this._textContainer);\r\n\r\n        this.Text = \"0\";\r\n\r\n        stage.update();\r\n\r\n\r\n\r\n        return this;\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public set Text(text:string) {\r\n        this._textContainer.removeAllChildren();\r\n        //add text\r\n        const textEl = Sprites.generateBitmapText(text, this._textSpritesheet);\r\n        this._textContainer.addChild(textEl);\r\n        this._container.addChild(this._textContainer);\r\n\r\n        this._game.Stage.update();\r\n    }\r\n}","import { LoadManager } from \"../managers/LoadManager\";\r\nimport { Game } from \"../Game\";\r\nimport { GameScreen } from \"./GameScreen\";\r\n\r\n/**This class creates the tutorial items.  This class will control the game and game screen when being used. */\r\nexport class TutorialCreator {\r\n    public static get KEY() {\r\n        return {\r\n            \"First\" : \"first\",\r\n            \"You\" : \"you\",\r\n            \"Fish\" : \"fish\",\r\n            \"Puffer\" : \"puffer\",\r\n            \"Many\" : \"many\",\r\n            \"Pause\" : \"pause\",\r\n            \"Special\" : \"special\"\r\n        }\r\n    };\r\n\r\n    private _game:Game;\r\n    private _gameScreen:GameScreen;\r\n\r\n\r\n    //tutorial overlays\r\n    private _youOverlay:createjs.Sprite;\r\n    private _fishOverlay:createjs.Sprite;\r\n    private _pufferOverlay:createjs.Sprite;\r\n    private _manyOverlay:createjs.Sprite;\r\n    private _pauseOverlay:createjs.Sprite;\r\n    private _specialOverlay:createjs.Sprite;\r\n\r\n    private _currentOverlay:createjs.Sprite;\r\n    private _tutorialQueue:string[];\r\n\r\n    constructor(game:Game, gameScreen:GameScreen) {\r\n        this._game = game;\r\n        this._gameScreen = gameScreen;\r\n\r\n        this._tutorialQueue = [];\r\n\r\n        //build all the required screens\r\n        this._youOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"you\");\r\n        this._fishOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"fish\");\r\n        this._pufferOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"puffer\");\r\n        this._manyOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"many\");\r\n        this._pauseOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"pause\");\r\n        this._specialOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"special\");\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public async queueTutorials(keys:string[]) {\r\n\r\n        for(let i = 0; i < keys.length; i++) {\r\n            const key = keys[i];\r\n\r\n            await new Promise(async(res, rej) => {\r\n\r\n                console.log(\"NUM\", i);\r\n\r\n                switch(key) {\r\n                    //first will play multiple screens\r\n                    case TutorialCreator.KEY.First :\r\n                        await this._runYou();\r\n                        await this._transition(this._fishOverlay);\r\n                        await this._runFish();\r\n                        await this._transition(null);\r\n                        this._gameScreen.unpauseGameLogic();\r\n                        res();\r\n                        break;\r\n                    case TutorialCreator.KEY.You :\r\n                        await this._runYou();\r\n                        await this._transition(null);\r\n                        this._gameScreen.unpauseGameLogic();\r\n                        res();\r\n                        break;\r\n                    case TutorialCreator.KEY.Fish :\r\n                        await this._runFish();\r\n                        await this._transition(null);\r\n                        this._gameScreen.unpauseGameLogic();\r\n                        res();\r\n                        break;\r\n                    case TutorialCreator.KEY.Puffer :\r\n                        await this._runPuffer();\r\n                        await this._transition(null);\r\n                        this._gameScreen.unpauseGameLogic();\r\n                        res();\r\n                        break;\r\n                    case TutorialCreator.KEY.Special :\r\n                        await this._runSpecial();\r\n                        await this._transition(null);\r\n                        this._gameScreen.unpauseGameLogic();\r\n                        res();\r\n                        break;\r\n\r\n                }\r\n\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    private async _transition(nextScreen) {\r\n        let promises = [];\r\n        //if we have a current screen, wait for it to fade out\r\n        if(this._currentOverlay != null) {\r\n            promises.push(\r\n                new Promise(async(res) => {\r\n                    //fade out\r\n                    createjs.Tween\r\n                        .get(this._currentOverlay)\r\n                        .to({ alpha:0 }, 500, createjs.Ease.linear)\r\n                        .call(() => {\r\n                            this._gameScreen.Container.removeChild(this._currentOverlay);\r\n                            res();\r\n                        });\r\n                })\r\n            );\r\n        }\r\n\r\n        //wait for certain actions to finish\r\n        return new Promise(async(res) => {\r\n            //wait for promises to finish\r\n            await Promise.all(promises);\r\n\r\n            //if we are transitioning to null, just end us\r\n            if(nextScreen == null) {\r\n                this._currentOverlay.alpha = 1;\r\n                res();\r\n                return;\r\n            }\r\n\r\n            this._currentOverlay.alpha = 1;\r\n\r\n            //now add in the new one\r\n            this._currentOverlay = nextScreen;\r\n            this._gameScreen.Container.addChild(this._currentOverlay);\r\n            this._currentOverlay.alpha = 0;\r\n\r\n            //fade in\r\n            createjs.Tween\r\n                .get(this._currentOverlay)\r\n                .to({ alpha:1 }, 500, createjs.Ease.linear)\r\n                .call(() => {\r\n                    res();\r\n                });\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    private async _runYou() {\r\n\r\n        return new Promise((res, rej) => {\r\n            this._currentOverlay = this._youOverlay;\r\n\r\n            const catStart = this._gameScreen.Cat.Y;\r\n            //move the cat hand\r\n            \r\n            this._gameScreen.Cat.Y = 80;\r\n            //pause the game\r\n            this._gameScreen.pauseGameLogic();\r\n            //overlay screen\r\n            this._gameScreen.Container.addChild(this._youOverlay);\r\n            //listen for screen click\r\n            (this._game.Stage).on(\"pressup\", () => { \r\n                //put cat paw back to start Y\r\n                this._gameScreen.Cat.Y = catStart;\r\n                res();\r\n            }, true, true);\r\n\r\n        });\r\n        \r\n    }\r\n\r\n    private async _runFish() {\r\n\r\n        return new Promise((res, rej) => {\r\n            this._currentOverlay = this._fishOverlay;\r\n            //pause the game\r\n            this._gameScreen.pauseGameLogic();\r\n            //overlay screen\r\n            this._gameScreen.Container.addChild(this._fishOverlay);\r\n            //listen for screen click\r\n            (this._game.Stage).on(\"pressup\", () => { \r\n                res();\r\n            }, true, true);\r\n        });\r\n\r\n    }\r\n\r\n    private async _runPuffer() {\r\n\r\n        return new Promise((res, rej) => {\r\n            this._currentOverlay = this._pufferOverlay;\r\n            //pause the game\r\n            this._gameScreen.pauseGameLogic();\r\n            //overlay screen\r\n            this._gameScreen.Container.addChild(this._pufferOverlay);\r\n            //listen for screen click\r\n            (this._game.Stage).on(\"pressup\", () => { \r\n                res();\r\n            }, true, true);\r\n        });\r\n\r\n    }\r\n\r\n    private async _runSpecial() {\r\n\r\n        return new Promise((res, rej) => {\r\n            this._currentOverlay = this._specialOverlay;\r\n            //pause the game\r\n            this._gameScreen.pauseGameLogic();\r\n            //overlay screen\r\n            this._gameScreen.Container.addChild(this._specialOverlay);\r\n            //listen for screen click\r\n            (this._game.Stage).on(\"pressup\", () => { \r\n                res();\r\n            }, true, true);\r\n        });\r\n\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n}","import { LoadManager } from \"../managers/LoadManager\";\r\n\r\n/**Used to gain access to in-game sprites. */\r\nexport class Sprites {\r\n    public static CLEAR_DATA:string = \"onClearData\";\r\n\r\n    private static _backgrounds:{ [key:string]:createjs.DisplayObject } = { };\r\n    private static _buttons:{ [key:string]:createjs.DisplayObject } = { };\r\n\r\n    private static _graphics:{ [key:string]:createjs.DisplayObject } = { };\r\n\r\n    private static _spritesheets:createjs.SpriteSheet[];\r\n\r\n    private static _canClearData:boolean = false;\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public static setup() {\r\n        return new Promise((res, rej) => {\r\n            // Sprites.spritesheets = spritesheets\r\n            //setup all the sprites\r\n            /* ------- STATIC ------- */\r\n            Sprites._backgrounds.Main = new createjs.Sprite(LoadManager.Spritesheets.UI); // Static BG\r\n            (Sprites._backgrounds.Main as createjs.Sprite).gotoAndStop(\"bg_main_static\");\r\n\r\n            Sprites._backgrounds.Logo = new createjs.Sprite(LoadManager.Spritesheets.Entities); // LOGO\r\n            (Sprites._backgrounds.Logo as createjs.Sprite).gotoAndStop(\"icon_title\");\r\n\r\n            Sprites._backgrounds.BG = LoadManager.Images.BG; // Redux\r\n            Sprites._backgrounds.BGTop = LoadManager.Images.BGTop;\r\n\r\n\r\n            /* ------- ANIMATED ------- */\r\n            Sprites._backgrounds.Wave = new createjs.Sprite(LoadManager.Spritesheets.UI); // Animated BG\r\n            (Sprites._backgrounds.Wave as createjs.Sprite).gotoAndPlay(\"bg_main\");\r\n\r\n\r\n            /* ------- GRAPHICS ------ */\r\n            Sprites._graphics.Timer = new createjs.Sprite(LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n            (Sprites._graphics.Timer as createjs.Sprite).gotoAndPlay(\"sprTime\");\r\n            Sprites._graphics.Score = new createjs.Sprite(LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n            (Sprites._graphics.Score as createjs.Sprite).gotoAndPlay(\"sprScore\");\r\n            Sprites._graphics.FishRemain = new createjs.Sprite(LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n            (Sprites._graphics.FishRemain as createjs.Sprite).gotoAndPlay(\"sprFish\");\r\n            \r\n            /* ------- BUTTONS ------- */\r\n            Sprites._buttons.NewGame = new createjs.Sprite(LoadManager.Spritesheets.Entities); // New Game\r\n            (Sprites._buttons.NewGame as createjs.Sprite).gotoAndStop(\"btn_new_game\");\r\n            new createjs.ButtonHelper(Sprites._buttons.NewGame as createjs.Sprite, \"btn_new_game\", \"btn_new_game_hover\", \"btn_new_game_hover\");\r\n\r\n\r\n            Sprites._buttons.Options = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Options\r\n            (Sprites._buttons.Options as createjs.Sprite).gotoAndStop(\"btn_new_game\");\r\n            new createjs.ButtonHelper(Sprites._buttons.Options as createjs.Sprite, \"btn_options\", \"btn_options_hover\", \"btn_options_hover\");\r\n\r\n            Sprites._buttons.LevelSelect = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Select\r\n            (Sprites._buttons.LevelSelect as createjs.Sprite).gotoAndStop(\"btn_select\");\r\n            new createjs.ButtonHelper(Sprites._buttons.LevelSelect as createjs.Sprite, \"btn_select\", \"btn_select_hover\", \"btn_select_hover\");\r\n\r\n            Sprites._buttons.Exit = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Exit\r\n            (Sprites._buttons.Exit as createjs.Sprite).gotoAndStop(\"btn_select\");\r\n            new createjs.ButtonHelper(Sprites._buttons.Exit as createjs.Sprite, \"btn_exit\", \"btn_exit_hover\", \"btn_exit_hover\");\r\n\r\n            Sprites._buttons.Fishbowl = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Fishbowl\r\n            (Sprites._buttons.Fishbowl as createjs.Sprite).gotoAndStop(\"btn_select\");\r\n            new createjs.ButtonHelper(Sprites._buttons.Fishbowl as createjs.Sprite, \"icon_fishbowl\", \"icon_fishbowl_hover\", \"icon_fishbowl_hover\", true);\r\n\r\n\r\n            /* ------- MENU ------- */\r\n            Sprites._backgrounds.LevelSelectBG = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Select BG\r\n            (Sprites._backgrounds.LevelSelectBG as createjs.Sprite).gotoAndStop(\"static_bg\");\r\n            Sprites._buttons.LevelEmpty = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Empty Button\r\n            (Sprites._buttons.LevelEmpty as createjs.Sprite).gotoAndStop(\"level_empty\");\r\n            Sprites._buttons.LevelComplete = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Complete Button\r\n            (Sprites._buttons.LevelComplete as createjs.Sprite).gotoAndStop(\"level_complete\");\r\n            Sprites._buttons.LevelSpecialEmpty = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Special Empty Button\r\n            (Sprites._buttons.LevelSpecialEmpty as createjs.Sprite).gotoAndStop(\"level_special_empty\");\r\n            Sprites._buttons.LevelSpecialComplete = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Special Complete Button\r\n            (Sprites._buttons.LevelSpecialComplete as createjs.Sprite).gotoAndStop(\"level_special_complete\");\r\n\r\n\r\n            /* ------- COMPLEX ------- */\r\n            Sprites._setupBTNClearData();\r\n\r\n            res();\r\n        });\r\n    }\r\n\r\n    // /* --- Complex createjs.Sprite Setup --- */\r\n    private static _setupBTNClearData() {\r\n        Sprites._buttons.ClearData = new createjs.Sprite(LoadManager.Spritesheets.UI); // BTN Clear Data\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndStop(\"btn_clear_data\");\r\n        (Sprites._buttons.ClearData as createjs.Sprite).cursor = \"pointer\";\r\n        Sprites._canClearData = false;\r\n    }\r\n    public static listenToClearData() {\r\n        //listen\r\n        (Sprites._buttons.ClearData as any).on(\"mousedown\", Sprites._btnDataDown);\r\n        (Sprites._buttons.ClearData as any).on(\"animationend\", Sprites._btnDataComplete);\r\n        (Sprites._buttons.ClearData as any).on(\"click\", Sprites._btnDataUp);\r\n    }\r\n    public static stopListenToClearData() {\r\n        //listen\r\n        (Sprites._buttons.ClearData as any).off(\"mousedown\", Sprites._btnDataDown);\r\n        (Sprites._buttons.ClearData as any).off(\"animationend\", Sprites._btnDataComplete);\r\n        (Sprites._buttons.ClearData as any).off(\"click\", Sprites._btnDataUp);\r\n    }\r\n\r\n    private static _btnDataDown(e) {\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndPlay(\"btn_clear_data_progress\");\r\n        Sprites._canClearData = true;\r\n    }\r\n    private static _btnDataUp(e) {\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndStop(\"btn_clear_data\");\r\n        Sprites._canClearData = false;\r\n    }\r\n    private static _btnDataComplete(e) {\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndStop(\"btn_clear_data\");\r\n        //dispatch event to button\r\n        if(Sprites._canClearData) {\r\n            (Sprites._buttons.ClearData as createjs.Sprite).dispatchEvent(new Event(Sprites.CLEAR_DATA));\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**A helper function to generate and cache text for the StageGL object. */\r\n    public static generateText(text, details = \"20px Arial\", color = \"#FFFEEE\") {\r\n        const textObj = new createjs.Text(text, details, color)\r\n        textObj.cache(0, 0, textObj.getBounds().width, textObj.getBounds().height);\r\n        return textObj;\r\n    }\r\n\r\n    public static generateBitmapText(text, spritesheet) {\r\n        const textObj = new createjs.BitmapText(text, spritesheet);\r\n        return textObj;\r\n    }\r\n\r\n\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get Backgrounds() { return Sprites._backgrounds; }\r\n    public static get Buttons() { return Sprites._buttons; }\r\n    public static get Graphics() { return Sprites._graphics; }\r\n\r\n    // static get BG() { return Sprites._bg }\r\n    // static get Logo() { return Sprites._logo }\r\n    // static get AnimBG() { return Sprites._animBg }\r\n    // static get GameBG() { return Sprites._gameBG }\r\n    // static get GameBGTop() { return Sprites._gameBGTop }\r\n    // //buttons\r\n    // static get BTN_New_Game() { return Sprites._btnNewGame }\r\n    // static get BTN_Options() { return Sprites._btnOptions }\r\n    // static get BTN_Select() { return Sprites._btnSelect }\r\n    // static get BTN_Exit() { return Sprites._btnExit }\r\n    // static get BTN_Fishbowl() { return Sprites._btnFishbowl }\r\n    // static get BTN_ClearData() { return Sprites._btnClearData }\r\n\r\n\r\n    // static get CLEAR_DATA() { return \"onClearData\" }\r\n}","import { Sprites } from \"../Sprites\";\r\nimport { LoadManager } from \"../../managers/LoadManager\";\r\nimport { ProgressManager } from \"../../managers/ProgressManager\";\r\nimport { Game } from \"../../Game\";\r\nimport { IEnableable } from \"../../Interfaces\";\r\nimport { GameScreen } from \"../../screens/GameScreen\";\r\nimport { DataManager } from \"../../managers/DataManager\";\r\nimport { ScreenManager } from \"../../managers/ScreenManager\";\r\nimport { IntermediaryScreen } from \"../../screens/IntermediaryScreen\";\r\n\r\n\r\nexport class LevelSelectDisplay implements IEnableable {\r\n    private _game:Game;\r\n\r\n    private _container:createjs.Container;\r\n    private _background:createjs.Sprite;\r\n    private _levelsContainer:createjs.Container;\r\n    private _levelTextContainer:createjs.Container;\r\n\r\n    private _levelsData:any;\r\n\r\n    private _levelButtons:createjs.Sprite[];\r\n\r\n    constructor(game:Game) {\r\n        this._game = game;\r\n        this._levelButtons = [];\r\n\r\n        //build the required components for the level select display\r\n        this._container = new createjs.Container();\r\n        this._background = Sprites.Backgrounds.LevelSelectBG as createjs.Sprite;\r\n        this._background.x = (game.StageWidth / 2) - (this._background.getBounds().width / 2);\r\n        this._background.y = 80;\r\n\r\n        this._levelsContainer = new createjs.Container();\r\n        this._container.addChild(this._background);\r\n        let text = Sprites.generateBitmapText(\"Level Select\", LoadManager.Spritesheets.Typography);\r\n        text.x = (game.StageWidth / 2) - (text.getBounds().width / 2);\r\n        text.y = 30;\r\n        this._container.addChild(text);\r\n\r\n\r\n        //setup display text\r\n        this._levelTextContainer = new createjs.Container();\r\n        this._container.addChild(this._levelTextContainer);\r\n\r\n        this.LevelText = \"\";\r\n\r\n\r\n\r\n        this.rebuild();\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public enable() {\r\n        this.rebuild();\r\n        this._levelButtons.forEach(btn => {\r\n            btn.on(\"click\", this._onLevelClick, this);\r\n            btn.on(\"mouseover\", this._onLevelHover, this);\r\n            btn.on(\"mouseout\", this._onLevelUnhover, this);\r\n        });\r\n    }\r\n\r\n    public disable() {\r\n        this._levelButtons.forEach(btn => {\r\n            btn.removeAllEventListeners();\r\n        });\r\n    }\r\n\r\n    public rebuild() {\r\n        //rebuild all buttons\r\n        this._levelButtons.forEach(ch => {\r\n            this._container.removeChild(ch);\r\n            ch.removeAllEventListeners();\r\n            ch = null;\r\n        });\r\n        this._levelButtons = [];\r\n        this._levelsContainer.removeAllChildren();\r\n\r\n        //build levels data\r\n        this._levelsData = DataManager.WorldsData.worlds.map((world, i) => {\r\n            return [].concat.apply([], world as any)\r\n            .map((level, n) => {\r\n                let special = ProgressManager.ProgressData.specials[i][n];\r\n\r\n                let obj = level;\r\n                obj.unlocked = ProgressManager.ProgressData.levels[i][n].unlocked;\r\n                obj.completed = ProgressManager.ProgressData.levels[i][n].completed;\r\n                obj.special = (special != null);\r\n\r\n                return obj;\r\n            })\r\n        });\r\n\r\n        console.log(\"LEVEL DISPLAY DATA\", this._levelsData);\r\n\r\n\r\n\r\n        //build the level icons\r\n        for(let r = 0; r < this._levelsData.length; r++) {\r\n            //iterate through levels\r\n            for(let i = 0; i < this._levelsData[r].length; i++) {\r\n                const levelData = this._levelsData[r][i];\r\n                console.log(\"LEVEL\", levelData);\r\n                //decide the sprite\r\n                let sprite = Sprites.Buttons.LevelEmpty.clone();\r\n                if(levelData.special != null && levelData.special) sprite = Sprites.Buttons.LevelSpecialEmpty.clone();\r\n                // //completed\r\n                if(levelData.completed) {\r\n                    sprite = Sprites.Buttons.LevelComplete.clone();\r\n                    if(levelData.special != null && levelData.special) sprite = Sprites.Buttons.LevelSpecialComplete;\r\n                }\r\n                //locked\r\n                if(!levelData.unlocked) {\r\n                    sprite.alpha = 0.25;\r\n                }\r\n                else {\r\n                    sprite.alpha = 1;\r\n                     //extras\r\n                    sprite.cursor = \"pointer\";\r\n                }\r\n\r\n                //place\r\n                sprite.x = 60 * i;\r\n                sprite.y = 50 * r;\r\n                //add\r\n                this._levelsContainer.addChild(sprite);\r\n                //to array\r\n                this._levelButtons.push(sprite as createjs.Sprite);\r\n            }\r\n        };\r\n\r\n        this._levelsContainer.x = (this._game.StageWidth / 2) - (this._levelsContainer.getBounds().width / 2);\r\n        this._levelsContainer.y = 100;\r\n        this._container.addChild(this._levelsContainer);\r\n    }\r\n\r\n\r\n    /**Returns level data from the given index. */\r\n    private _getDataByIndex(index:number) {\r\n        //flatten level data, and get data\r\n        let flatten = this._levelsData.reduce((acc, next) => acc.concat(next));\r\n        return flatten[index];\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    private _onLevelClick(e) {\r\n         //get button index\r\n        let index = this._levelButtons.indexOf(e.target);\r\n\r\n        if(index == -1) return;\r\n\r\n        \r\n        //set the level index\r\n        const data = DataManager.getLevelDataByIndex(index);\r\n        if(data == null) return;\r\n        if(!data.unlocked) return;\r\n\r\n        //make sure this level is UNLOCKED\r\n        console.log(\"MY LEVEL DATA\", data);\r\n        this._game.changeCurrentLevel(data);\r\n        //go to intermediary screen\r\n        const intermediary = ScreenManager.getScreenByKey(\"intermediary\") as IntermediaryScreen;\r\n        new Promise(async(res) => {\r\n            intermediary.Text = data.name;\r\n            await ScreenManager.setCurrentScreen(intermediary, this._game.Stage);\r\n            intermediary.queueNextScreen(\"game\", 1000);\r\n\r\n            res();\r\n        });\r\n    }\r\n\r\n    private _onLevelHover(e) {\r\n        //find the button data\r\n        //get button index\r\n        let index = this._levelButtons.indexOf(e.target);\r\n        \r\n        if(index != -1) {\r\n            const data = this._getDataByIndex(index);\r\n            if(data != null) {\r\n                if(data.unlocked)\r\n                    this.LevelText = data.name;\r\n            }\r\n        }\r\n\r\n    }\r\n    private _onLevelUnhover(e) {\r\n        this.LevelText = \"\";\r\n    }\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container() { return this._container; }\r\n    public set LevelText(value:string) {\r\n        if(value == \"\") {\r\n            this._levelTextContainer.removeAllChildren();\r\n            return;\r\n        }\r\n        //create the text\r\n        const text = Sprites.generateBitmapText(value, LoadManager.Spritesheets.TypographyWhite);\r\n        (text as any).scale = 0.6;\r\n        //load into container\r\n        this._levelTextContainer.removeAllChildren();\r\n        this._levelTextContainer.addChild(text);\r\n\r\n        //put container at bottom\r\n        this._levelTextContainer.x = (this._game.StageWidth / 2) - ((text.getBounds().width / 2) * 0.6);\r\n        this._levelTextContainer.y = this._game.StageHeight - 30;\r\n    }\r\n}","import { Layout } from \"./Layout\";\r\n\r\n/**Uses custom classes and the createjs library to help easily build up ui interfaces with DisplayObjects. */\r\nexport class Container {\r\n    private _sprites:{ [key:string]:createjs.DisplayObject };\r\n    private _container:createjs.Container;\r\n    private _layout:Layout;\r\n\r\n    constructor(layout:{ direction:string, alignment:string, crossAlignment:string, spacing:number } = null) {\r\n        this._sprites = { };\r\n        this._container = new createjs.Container();\r\n        this._layout = (layout != null) ? new Layout(this._container, layout.direction, layout.alignment, layout.crossAlignment, layout.spacing)  : Layout.MAKE_VERTICAL_CENTER(this._container);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public add(key:string, sprite:createjs.DisplayObject, updateLayout:boolean=true):boolean {\r\n        if(this._sprites[key] != null) return false;\r\n        this._sprites[key] = sprite.clone();\r\n\r\n        if(updateLayout) this._layout.buildLayout(true, ...Object.keys(this._sprites).map(k => this._sprites[k]));\r\n        return true;\r\n    }\r\n\r\n    public addMany(sprites:{ [key:string]:createjs.DisplayObject }) {\r\n        Object.keys(sprites).forEach(k => {\r\n            this.add(k, sprites[k], false);\r\n        });\r\n\r\n        this._layout.buildLayout(true, ...Object.keys(this._sprites).map(k => this._sprites[k]));\r\n    }\r\n\r\n    public changeLayout(layout:Layout) {\r\n        this._layout = layout;\r\n    }\r\n\r\n    /**In case of wandering or reusable sprites, call them back to this layout! */\r\n    public checkoutSprites() {\r\n        this._layout.buildLayout(true, ...Object.keys(this._sprites).map(k => this._sprites[k]));\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container():createjs.Container { return this._container; }\r\n    public get Sprites() { return this._sprites; }\r\n\r\n    public static get LAYOUT_OPTIONS() {\r\n        return {\r\n            //column layouts\r\n            //-- left aligned\r\n            \"ColumnLeftTop\" : {direction:Layout.VERTICAL, alignment:Layout.START, crossAlignment:Layout.START, spacing:5},\r\n            \"ColumnLeftCenter\" : {direction:Layout.VERTICAL, alignment:Layout.START, crossAlignment:Layout.CENTER, spacing:5},\r\n            \"ColumnLeftBottom\" : {direction:Layout.VERTICAL, alignment:Layout.START, crossAlignment:Layout.END, spacing:5},\r\n            //-- center aligned\r\n            \"ColumnCenterTop\" : {direction:Layout.VERTICAL, alignment:Layout.CENTER, crossAlignment:Layout.START, spacing:5},\r\n            \"ColumnCenterCenter\" : {direction:Layout.VERTICAL, alignment:Layout.CENTER, crossAlignment:Layout.CENTER, spacing:5},\r\n            \"ColumnCenterBottom\" : {direction:Layout.VERTICAL, alignment:Layout.CENTER, crossAlignment:Layout.END, spacing:5},\r\n            //-- right aligned\r\n            \"ColumnRightTop\" : {direction:Layout.VERTICAL, alignment:Layout.END, crossAlignment:Layout.START, spacing:5},\r\n            \"ColumnRightCenter\" : {direction:Layout.VERTICAL, alignment:Layout.END, crossAlignment:Layout.CENTER, spacing:5},\r\n            \"ColumnRightBottom\" : {direction:Layout.VERTICAL, alignment:Layout.END, crossAlignment:Layout.END, spacing:5}\r\n        };\r\n    }\r\n}","import { Game } from \"../../Game\";\r\n\r\n/**Used to layout createjs display objects. */\r\nexport class Layout {\r\n    //justify content\r\n    public static HORIZONTAL:string = \"horizontal\";\r\n    public static VERTICAL:string = \"vertical\";\r\n    //align items\r\n    public static START:string = \"start\";\r\n    public static END:string = \"end\";\r\n    public static CENTER:string = \"center\";\r\n\r\n    private _parent:createjs.Container;\r\n    private _items:createjs.DisplayObject[];\r\n\r\n    private _direction:string;\r\n    private _alignment:string;\r\n    private _crossAlignment:string;\r\n    private _spacing:number;\r\n\r\n    constructor(parent:createjs.Container, direction:string, alignment:string, crossAlignment:string, spacing:number = 5) {\r\n        this._parent = parent;\r\n        this._items = [];\r\n\r\n        this._direction = direction;\r\n        this._alignment = alignment;\r\n        this._crossAlignment = crossAlignment;\r\n        this._spacing = spacing;\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public buildLayout(addToParent:boolean=true, ...items:createjs.DisplayObject[]) {\r\n        if(items.length <= 0) return;\r\n\r\n        this._items = items;\r\n\r\n        if(addToParent) {\r\n            this._parent.removeAllChildren();\r\n        }\r\n        \r\n\r\n        if(this._direction == Layout.VERTICAL) {\r\n            let totalHeight = 0;\r\n            //ALIGNMENT\r\n            switch(this._alignment) {\r\n                case Layout.START : {\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        item.x = 0;\r\n                        item.y = totalHeight;\r\n                        totalHeight += item.getBounds().height + this._spacing;\r\n                        if(addToParent) this._parent.addChild(item);\r\n                    }\r\n                    break;\r\n                }\r\n                case Layout.CENTER : {\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        item.x = (Game.WIDTH / 2) - (item.getBounds().width / 2);\r\n                        item.y = totalHeight;\r\n                        totalHeight += item.getBounds().height + this._spacing;\r\n                        if(addToParent) this._parent.addChild(item);\r\n                    }\r\n                    break;\r\n                }\r\n                case Layout.END : {\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        item.x = Game.WIDTH - item.getBounds().width;\r\n                        item.y = totalHeight;\r\n                        totalHeight += item.getBounds().height + this._spacing;\r\n                        if(addToParent) this._parent.addChild(item);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n\r\n            //CROSS ALIGNMENT\r\n            //handle vertical alignment\r\n            switch(this._crossAlignment) {\r\n                case Layout.START : {\r\n                    break;\r\n                }\r\n                case Layout.CENTER : {\r\n                    totalHeight += items[items.length-1].getBounds().height;\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        //decipher desired center\r\n                        item.y += (Game.HEIGHT / 2) - (totalHeight / 2);\r\n                    }\r\n                    break;\r\n                }\r\n                case Layout.END :  {\r\n                    totalHeight += items[items.length-1].getBounds().height;\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        //decipher desired center\r\n                        item.y += Game.HEIGHT - totalHeight;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n\r\n        }\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    \r\n    /*--------------- HELPER FUNCTIONS ---------------*/\r\n    public static MAKE_VERTICAL_CENTER(container:createjs.Container) { return new Layout(container, Layout.VERTICAL, Layout.CENTER, Layout.CENTER, 5); }\r\n    public static MAKE_VERTICAL_START(container:createjs.Container) { return new Layout(container, Layout.VERTICAL, Layout.CENTER, Layout.START, 5); }\r\n\r\n}","import { Game } from \"../../Game\";\r\nimport { Sprites } from \"../Sprites\";\r\nimport { LoadManager } from \"../../managers/LoadManager\";\r\n\r\n/**Creates a display container for the game screen. */\r\nexport class GameScore {\r\n    private _game:Game;\r\n    private _container:createjs.Container;\r\n    private _bg:createjs.Shape;\r\n    private _txtTimer:createjs.DisplayObject;\r\n\r\n    private _timerContainer:createjs.Container;\r\n    private _timerTextContainer:createjs.Container;\r\n    private _fishRemainContainer:createjs.Container;\r\n    private _fishRemainTextContainer:createjs.Container;\r\n    private _scoreContainer:createjs.Container;\r\n    private _scoreTextContainer:createjs.Container;\r\n\r\n    //game conditions\r\n    private _useTimer:boolean = false;\r\n    private _useFishRemain:boolean = true;\r\n    private _useScore:boolean = true;\r\n\r\n    constructor(game:Game) {\r\n        this._game = game;\r\n        //create the initial objects\r\n        this._container = new createjs.Container();\r\n        this._bg = new createjs.Shape();\r\n        this._bg.graphics.beginFill(\"#000000\");\r\n        this._bg.graphics.drawRect(0, 0, this._game.StageWidth, 40);\r\n        this._bg.graphics.endFill();\r\n        this._bg.cache(0, 0, this._game.StageWidth, 40);\r\n        this._container.addChild(this._bg);\r\n\r\n        //create the container objects\r\n        //timer\r\n        this._timerContainer = new createjs.Container();\r\n        this._timerContainer.x += 10;\r\n        const timerSprite = Sprites.Graphics.Timer.clone();\r\n        this._timerContainer.addChild(timerSprite);\r\n        this._timerTextContainer = new createjs.Container();\r\n        this._timerTextContainer.y += 8;\r\n        this._timerTextContainer.x += Sprites.Graphics.Timer.getBounds().width + 10;\r\n        this._timerContainer.addChild(this._timerTextContainer);\r\n        this._container.addChild(this._timerContainer);\r\n\r\n        //fish remain\r\n        this._fishRemainContainer = new createjs.Container();\r\n        const fishRemainSprite = Sprites.Graphics.FishRemain.clone();\r\n        this._fishRemainContainer.addChild(fishRemainSprite);\r\n        this._fishRemainTextContainer = new createjs.Container();\r\n        this._fishRemainTextContainer.y += 8;\r\n        this._fishRemainTextContainer.x += Sprites.Graphics.FishRemain.getBounds().width + 10;\r\n        this._fishRemainContainer.addChild(this._fishRemainTextContainer);\r\n        this._container.addChild(this._fishRemainContainer);\r\n\r\n        //score\r\n        this._scoreContainer = new createjs.Container();\r\n        this._scoreContainer.x = this._game.StageWidth - Sprites.Graphics.Score.getBounds().width - 40;\r\n        const scoreSprite = Sprites.Graphics.Score.clone();\r\n        this._scoreContainer.addChild(scoreSprite);\r\n        this._scoreTextContainer = new createjs.Container();\r\n        this._scoreTextContainer.y += 8;\r\n        this._scoreTextContainer.x += Sprites.Graphics.Score.getBounds().width + 10;\r\n        this._scoreContainer.addChild(this._scoreTextContainer);\r\n        this._container.addChild(this._scoreContainer);\r\n        \r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public startHUD(showScore:boolean, showFishRemain:boolean, showTimer:boolean) {\r\n        this._useScore = showScore;\r\n        this._useFishRemain = showFishRemain;\r\n        this._useTimer = showTimer;\r\n\r\n        console.log(\"SHOW ME THE SCORE, REMAIN, TIMER\", showScore, showFishRemain, showTimer);\r\n\r\n        if(this._useScore) this._container.addChild(this._scoreContainer);\r\n        else this._container.removeChild(this._scoreContainer);\r\n\r\n        if(this._useFishRemain) this._container.addChild(this._fishRemainContainer);\r\n        else this._container.removeChild(this._fishRemainContainer);\r\n\r\n        if(this._useTimer) this._container.addChild(this._timerContainer);\r\n        else this._container.removeChild(this._timerContainer);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public update(gameTime:number) {\r\n        \r\n        // //get the game timer\r\n        // let timer = gameTime;\r\n        // this._timerTextContainer.removeAllChildren();\r\n        // let timerCont = Sprites.generateBitmapText(this._game.CurrentLevelData.currentTime.toString(), LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n        // this._timerTextContainer.addChild(timerCont);\r\n\r\n        // //get the fish remain score\r\n        // let fishRemain = gameTime;\r\n        // this._fishRemainTextContainer.removeAllChildren();\r\n        // let fishRemainCont = Sprites.generateBitmapText(this._game.CurrentLevelData.remainingFish.toString(), LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n        // this._fishRemainTextContainer.addChild(fishRemainCont);\r\n        // this._fishRemainContainer.x = (this._game.StageWidth / 2) - (this._fishRemainContainer.getBounds().width / 2);\r\n\r\n        // //get the score\r\n        // let score = gameTime;\r\n        // this._scoreTextContainer.removeAllChildren();\r\n        // let scoreCont = Sprites.generateBitmapText(this._game.CurrentLevelData.score.toString(), LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n        // this._scoreTextContainer.addChild(scoreCont);\r\n        // this._scoreContainer.x = this._game.StageWidth - this._scoreContainer.getBounds().width - 40;\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container() { return this._container; }\r\n\r\n}"]}