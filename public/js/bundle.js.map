{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/Functions.ts","src/Game.ts","src/ObjectPool.ts","src/entities/Cat.ts","src/entities/Entity.ts","src/entities/Fish.ts","src/main.ts","src/managers/DataManager.ts","src/managers/LoadManager.ts","src/managers/ScreenManager.ts","src/screens/EndScreen.ts","src/screens/GameScreen.ts","src/screens/IntermediaryScreen.ts","src/screens/MenuScreen.ts","src/screens/Screen.ts","src/screens/SplashScreen.ts","src/ui/Sprites.ts","src/ui/custom/LevelSelectDisplay.ts","src/ui/display/Container.ts","src/ui/display/Layout.ts","src/ui/partials/GameScore.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Logging","message","console","log","_message","LoadManager_1","ScreenManager_1","SplashScreen_1","MenuScreen_1","GameScreen_1","EndScreen_1","Functions_1","Sprites_1","IntermediaryScreen_1","DataManager_1","Game","canvasDiv","_this","this","_classCallCheck","_canvas","width","WIDTH","height","HEIGHT","_lastGameTime","_scaling","Promise","res","rej","__awaiter","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","_stage","createjs","StageGL","antialias","setClearColor","enableMouseOver","update","addEventListener","LoadManager","ASSETS_UPDATED","Percentage","loadAssets","catch","err","warn","success","DataManager","loadWorldsData","error","changeCurrentLevel","getLevelDataByIndex","Sprites","setup","ScreenManager","registerScreen","SplashScreen","MenuScreen","GameScreen","EndScreen","IntermediaryScreen","setCurrentScreen","Ticker","framerate","FRAME_RATE","on","stop","levelData","_currentLevel","currentScore","_currentScore","gameTime","getMeasuredFPS","CurrentScreen","Math","min","document","body","clientHeight","ObjectPool","obj","type","poolObj","active","Pool","push","_getObjectByType","_getObjectByObj","_pool","find","Entity_1","Cat","gameScreen","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","Spritesheets","Kitty_Spritesheet","_speed","_fishCaughtMultiplier","_caughtFish","_isGrabbing","_isRising","_hasReachedSurface","_sprite","gotoAndPlay","ANIMATION","Idle","Entity","_this2","X","Stage","mouseX","Speed","speed","mouseY","_catYTween","Tween","get","to","y","Ease","circIn","Grab","Hold","fishes","tryToGrabFishes","Y","caught","returnToSurface","_this3","removeTweens","wait","linear","reachSurface","_this4","hasNewFish","forEach","indexOf","enemy","_this5","Ow","_this6","collectFish","_this7","_get","prototype","caughtFishMult","value","freeze","Death","spritesheet","_gameScreen","Sprite","_direction","x","_isIgnoringCollision","_ignoreCollisionTimer","container","addChild","parent","removeChild","IGNORE_COLLISION","artificialReg","arguments","undefined","reg","regX","regY","Bounds","Width","Height","bounds","StageWidth","extents","StageHeight","HIT","Right","Left","lastX","scaleX","getBounds","Top","Bottom","Fish","Peeper_Spritesheet","_isCaught","Slow","_naturalY","Panic","hitTest","disable","IsIgnoringCollision","testStageBounds","startIgnoreCollision","Fast","Game_1","getElementById","fileLocation","fetch","then","blob","json","_worldsData","index","concat","apply","worlds","_sheetsTotal","_sheetsLoaded","_percentage","_totalAssetsLoaded","_totalAssets","src","stage","reset","_preloadManager","LoadQueue","Sound","registerPlugins","WebAudioPlugin","HTMLAudioPlugin","FlashAudioPlugin","alternateExtensions","installPlugin","_onLoaded","_onComplete","_onError","data","setMaxConnections","loadManifest","ASSETS_LOADED","emitErrorEvent","dispatchEvent","AssetsLoadedEvent","AssetsFailedEvent","parseFloat","getItems","toFixed","AssetsUpdatedEvent","name","sheet","item","Types","JAVASCRIPT","window","id","_SpriteSheet","complete","_loadedSheet","ev","remove","IMAGE","Images","Bitmap","emitUpdatedEvent","removeAllEventListeners","setInterval","emitLoadedEvent","Event","ASSETS_FAILED","Screen_1","key","screen","_screensLookup","tempScreen","Screen","resolve","promises","_currentScreen","Container","alpha","destroy","_callee2","_context2","all","create","enable","Container_1","game","_game","_isFail","bg","Catfish_End","_container","_buttonsContainer","LAYOUT_OPTIONS","ColumnLeftBottom","addMany","btnTryAgain","btnNextLevel","btnMainMenu","_highScoreSpr","_completeSpr","_failSpr","_scoreContainer","ColumnCenterCenter","fishRemain","time","combos","line","_fishRemainContainer","_timeContainer","_combosContainer","scoreX","changeCurrentScore","totalFish","CurrentLevelData","showFishRemain","showRemainingFish","showScore","showTime","duration","_game$CurrentScoreDat","CurrentScoreData","txtFishRemain","generateBitmapText","toString","TypographyWhite","txtTime","txtCombos","removeAllChildren","visible","ObjectPool_1","Fish_1","Cat_1","GameScore_1","_fishes","_remainingFish","createPoolObject","POOL","CAT","FISH","_cat","checkout","_staticContainer","BG_Spritesheet","_fishContainer","_winContainer","_gameScore","GameScore","fish","localPos","globalToLocal","testHit","win","elasticOut","checkoutSprites","_winBanner","Shape","graphics","beginFill","drawRect","cache","_winText","mouseEnabled","flip","DirectionX","setNaturalY","showTimer","startHUD","normalizedTime","grab","_text","screenKey","evt","setTimeout","clearTimeout","_bg","endFill","_textContainer","_txtSprite","scale","Text","LevelSelectDisplay_1","_swipeContainer","Catfish_Main","_mainContainer","_logo","_mainButtonsContainer","btnNewGame","btnOptions","btnLevelSelect","btnExit","_fancyFish","_optionsContainer","txtOptions","Typography","btnClearData","Buttons","ClearData","_clearedContainer","add","_levelSelectDisplay","LevelSelectDisplay","_swipeSpeed","_initialSwipePos","intermediary","getScreenByKey","queueNextScreen","circOut","bounceOut","cubicIn","cubicInOut","clearInterval","stageX","stageY","_dragTimer","_onMain","_onNewGame","_onOptions","_onLevelSelect","_onExit","listenToClearData","CLEAR_DATA","_onClearData","_onDragStart","_onDragEnd","loop","sineInOut","off","stopListenToClearData","removeAllTweens","_splash","_backgrounds","Main","UI","gotoAndStop","Logo","Entities","BG","BGTop","Wave","_graphics","Timer","ScoreHUD_Spritesheet","Score","FishRemain","_buttons","NewGame","ButtonHelper","Options","LevelSelect","Exit","Fishbowl","LevelSelectBG","Menu_Level_Select","LevelEmpty","LevelComplete","LevelSpecialEmpty","LevelSpecialComplete","_setupBTNClearData","cursor","_canClearData","_btnDataDown","_btnDataComplete","_btnDataUp","text","details","color","textObj","BitmapText","_levelButtons","_background","Backgrounds","_levelsContainer","_levelTextContainer","LevelText","_levelsData","unlocked","special","sprite","clone","btn","_onLevelClick","_onLevelHover","_onLevelUnhover","reduce","acc","target","_getDataByIndex","Layout_1","layout","_sprites","_layout","Layout","direction","alignment","crossAlignment","spacing","MAKE_VERTICAL_CENTER","updateLayout","buildLayout","_toConsumableArray","keys","map","k","sprites","_layout2","_layout3","ColumnLeftTop","VERTICAL","START","ColumnLeftCenter","CENTER","END","ColumnCenterTop","ColumnCenterBottom","ColumnRightTop","ColumnRightCenter","ColumnRightBottom","_parent","_items","_alignment","_crossAlignment","_spacing","addToParent","_len","items","Array","_key","totalHeight","_i","_item","_i2","_item2","_i3","_i4","HORIZONTAL","_useTimer","_useFishRemain","_useScore","_timerContainer","timerSprite","Graphics","_timerTextContainer","fishRemainSprite","_fishRemainTextContainer","scoreSprite","_scoreTextContainer"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/* ************************************************* */\r\n/*                      LOGGING                      */\r\n/* ************************************************* */\r\nexport class Logging {\r\n    static success(message:string):void {\r\n        console.log(`%c ${message}`, 'color:seagreen; font-size:1.1em; font-weight:bold; border-left: solid 3px seagreen;')    ;\r\n    }\r\n\r\n    static message(message:string):void {\r\n        console.log(`%c ${message}`, 'color:#1E265C; font-size:1.1em; font-weight:bold; border-left: solid 3px #1E265C;');\r\n    }\r\n\r\n    static error(message:string):void {\r\n        console.log(`%c ${message}`, 'color:red; font-size:1.1em; border-left: solid 3px red;');\r\n    }\r\n}","import { LoadManager } from \"./managers/LoadManager\";\r\nimport { ScreenManager } from \"./managers/ScreenManager\";\r\nimport { SplashScreen } from \"./screens/SplashScreen\";\r\nimport { MenuScreen } from \"./screens/MenuScreen\";\r\nimport { GameScreen } from \"./screens/GameScreen\";\r\nimport { EndScreen } from \"./screens/EndScreen\";\r\nimport { Logging } from \"./Functions\";\r\nimport { Sprites } from \"./ui/Sprites\";\r\nimport { IntermediaryScreen } from \"./screens/IntermediaryScreen\";\r\nimport { DataManager, LevelData } from \"./managers/DataManager\";\r\n\r\nexport interface ICurrentScore {\r\n    totalFish: number;\r\n    time: number;\r\n    combos: number;\r\n}\r\n\r\n\r\nexport class Game {\r\n    private _canvas:HTMLCanvasElement;\r\n    private _stage:createjs.StageGL;\r\n    private _scaling:number;\r\n\r\n    private _lastGameTime:number;\r\n\r\n    private _currentLevel:LevelData;\r\n    private _currentScore:ICurrentScore;\r\n\r\n    constructor(canvasDiv:HTMLCanvasElement) {\r\n\r\n        this._canvas = canvasDiv;\r\n        this._canvas.width = Game.WIDTH;\r\n        this._canvas.height = Game.HEIGHT;\r\n\r\n        this._lastGameTime = -1;\r\n\r\n        //set the scaling\r\n        this._scaling = Game.HEIGHT / 1024;\r\n\r\n        //start loading game assets\r\n        new Promise(async(res, rej) => {\r\n            //create the stage\r\n            console.log(\"Readying stage!\");\r\n            this._stage = new createjs.StageGL(this._canvas, { antialias: true });\r\n            (this._stage as any).setClearColor(\"#000000\");\r\n            this._stage.enableMouseOver(10);\r\n            this._stage.update();\r\n\r\n            // this._stage.scaleX = this._stage.scaleY = 0.8;\r\n\r\n            console.log(this._stage, this._canvas);\r\n\r\n            //listen to asset updates\r\n            (this._stage as any).addEventListener(LoadManager.ASSETS_UPDATED, (e) => {\r\n                console.log(LoadManager.Percentage);\r\n            });\r\n            //load assets\r\n            await LoadManager.loadAssets(\"assets/manifest.json\", this._stage)\r\n                .catch(err => {\r\n                    console.warn(\"Error loading assets:\", err);\r\n                });\r\n\r\n            Logging.success(\"Assets Loaded Successfully!\");\r\n\r\n            //load level data\r\n            await DataManager.loadWorldsData(\"assets/data/levels.json\")\r\n                .catch(err => {\r\n                    Logging.error(err);\r\n                    return;\r\n                });\r\n\r\n            //set the current screen\r\n            //game test, load desired level patch -- if autoloading to game screen\r\n            this.changeCurrentLevel(DataManager.getLevelDataByIndex(1));\r\n\r\n            Logging.success(\"Level Data Loaded Successfully!\");\r\n\r\n            //setup createjs.Sprites\r\n            await Sprites.setup();\r\n\r\n            //build the screens\r\n            ScreenManager.registerScreen(\"splash\", new SplashScreen());\r\n            ScreenManager.registerScreen(\"menu\", new MenuScreen(this));\r\n            ScreenManager.registerScreen(\"game\", new GameScreen(this));\r\n            ScreenManager.registerScreen(\"end\", new EndScreen(this));\r\n            ScreenManager.registerScreen(\"intermediary\", new IntermediaryScreen(this));\r\n            \r\n\r\n            ScreenManager.setCurrentScreen(\"game\", this._stage);\r\n            // ScreenManager.setCurrentScreen(\"end\", this._stage);\r\n\r\n            //setup the game loop\r\n            createjs.Ticker.framerate = Game.FRAME_RATE;\r\n            createjs.Ticker.on(\"tick\", this.update, this);\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public changeCurrentLevel(levelData:LevelData) {\r\n        this._currentLevel = levelData;\r\n    }\r\n\r\n    public changeCurrentScore(currentScore:ICurrentScore) {\r\n        this._currentScore = currentScore;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    public update(e:any) {\r\n\r\n        const gameTime = (this._lastGameTime != -1) ? createjs.Ticker.getMeasuredFPS() - this._lastGameTime : 1;\r\n        this._lastGameTime = createjs.Ticker.getMeasuredFPS();\r\n\r\n        //update the screen\r\n        if(ScreenManager.CurrentScreen != null) ScreenManager.CurrentScreen.update(gameTime);\r\n\r\n        //update the stage\r\n        this._stage.update();\r\n    }\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get FRAME_RATE() { return 30; }\r\n    public static get WIDTH() { return Game.HEIGHT * 0.5625; } //desired size\r\n    public static get HEIGHT() { return Math.min(document.body.clientHeight, 1024); }\r\n\r\n    public get StageWidth() { return this._canvas.width; } //actual size\r\n    public get StageHeight() { return this._canvas.height; }\r\n\r\n    public get Stage() { return this._stage; }\r\n    public get Scaling() { return this._scaling; }\r\n\r\n    public get CurrentLevelData() { return this._currentLevel; }\r\n    public get CurrentScoreData() { return this._currentScore; }\r\n\r\n\r\n\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n\r\n\r\n}","import { Logging } from \"./Functions\";\r\nimport { Entity } from \"./entities/Entity\";\r\n\r\nexport interface IPoolObject {\r\n    type:string;\r\n    obj:Entity,\r\n    active:boolean;\r\n}\r\n\r\nexport class ObjectPool {\r\n    private static _pool:IPoolObject[];\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Creates a pool object. */\r\n    public static createPoolObject(obj:Entity, type:string) {\r\n        const poolObj = {\r\n            type,\r\n            obj,\r\n            active: false\r\n        };\r\n        ObjectPool.Pool.push(poolObj);\r\n        return poolObj;\r\n    }\r\n\r\n    /**Checks out a pool object.  Use POOL global function to access. */\r\n    public static checkout(type:string) {\r\n        const poolObj = ObjectPool._getObjectByType(type);\r\n        if(poolObj != null) {\r\n            poolObj.active = true;\r\n            return poolObj.obj;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**Returns an object to the pool. */\r\n    public static return(obj:Entity) {\r\n        const poolObj = ObjectPool._getObjectByObj(obj);\r\n        if(poolObj != null) {\r\n            poolObj.active = false;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    public static _getObjectByType(type) {\r\n        const poolObj = ObjectPool._pool.find((o => o.type == type && !o.active));\r\n        if(poolObj == null) Logging.error(\"Object not found in pool, or pool is exhausted.  Return some objects.\");\r\n        return poolObj\r\n    }\r\n    public static _getObjectByObj(obj) {\r\n        return ObjectPool._pool.find((o => o.obj == obj));\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get Pool() { \r\n        if(ObjectPool._pool == null) ObjectPool._pool = [];\r\n        return ObjectPool._pool;\r\n    }\r\n}","import { Game } from \"../Game\";\r\nimport { Entity } from \"./Entity\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { IEnableable } from \"../Interfaces\";\r\nimport { Logging } from \"../Functions\";\r\nimport { GameScreen } from \"../screens/GameScreen\";\r\nimport { Fish } from \"./Fish\";\r\n\r\nexport class Cat extends Entity implements IEnableable {\r\n    private _speed:number;\r\n    private _fishCaughtMultiplier:number; //this will be the rate at which the cat slows down when rising per fish\r\n\r\n    private _catYTween:createjs.Tween;\r\n    private _caughtFish:Fish[];\r\n\r\n    private _isGrabbing:boolean;\r\n    private _isRising:boolean;\r\n    private _hasReachedSurface:boolean;\r\n\r\n    constructor(gameScreen:GameScreen) {\r\n        super(gameScreen, LoadManager.Spritesheets.Kitty_Spritesheet);\r\n        // super(gameScreen, LoadManager.Spritesheets.Cat_Spritesheet);\r\n        this._speed = 3;\r\n        this._fishCaughtMultiplier = 0.05;\r\n\r\n        this._caughtFish = [];\r\n        this._isGrabbing = false;\r\n        this._isRising = false;\r\n        this._hasReachedSurface = true;\r\n\r\n        this._sprite.gotoAndPlay(Cat.ANIMATION.Idle);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    enable() {\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n    }\r\n\r\n\r\n    /***************/\r\n    /*   ACTIONS   */\r\n    /***************/\r\n    public grab() {\r\n        //cannot grab if we are not at surface\r\n        if(!this._hasReachedSurface) return;\r\n\r\n        this._isGrabbing = true;\r\n        this._hasReachedSurface = false;\r\n\r\n        //move to x position\r\n        this.X = this.GameScreen.Game.Stage.mouseX;\r\n\r\n\r\n        console.log(\"START SPEED:\", this.Speed);\r\n\r\n        //grab to y position\r\n        const speed = (this.GameScreen.Game.Stage.mouseY / 2) * this.Speed;\r\n        this._catYTween = createjs.Tween\r\n            .get(this._sprite)\r\n            .to({ y:this.GameScreen.Game.Stage.mouseY }, speed, createjs.Ease.circIn)\r\n            .call(() => {\r\n                //once the grab is done, turn off flag\r\n                this._isGrabbing = false;\r\n\r\n                 //play animations\r\n                this._sprite.gotoAndPlay(Cat.ANIMATION.Grab);\r\n                //listen for animation to finish\r\n                (this._sprite as any).on(\"animationend\", () => {\r\n                    this._sprite.gotoAndPlay(Cat.ANIMATION.Hold);\r\n                }, true);\r\n\r\n                //try to grab a fish\r\n                const fishes = this.GameScreen.tryToGrabFishes(this.X , this.Y);\r\n                //see if a fish was grabbed\r\n                if(fishes.length > 0) this.caught(fishes);\r\n                else this.returnToSurface();\r\n            });\r\n\r\n    }\r\n\r\n    /**\r\n     * Called to return cat to surface.\r\n     */\r\n    public returnToSurface() {\r\n        this._sprite.gotoAndPlay(Cat.ANIMATION.Idle);\r\n\r\n        //remove any lingering tweens\r\n        createjs.Tween.removeTweens(this._sprite);\r\n        const speed = (this.Y / 2) * this.Speed;\r\n        this._catYTween = createjs.Tween.get(this._sprite)\r\n            .wait(150)\r\n            .to({y:20}, speed, createjs.Ease.linear)\r\n            .call(() => {\r\n                //once the surface has been reached, allow x movement again\r\n                this.reachSurface();\r\n            });\r\n    }\r\n\r\n    public caught(fishes:Fish[]) {\r\n        console.log(\"I CAUGHT\");\r\n        if(fishes.length <= 0) return;\r\n        this._isRising = true;  \r\n        \r\n        let hasNewFish = false;\r\n\r\n        fishes.forEach(f => {\r\n            if(this._caughtFish.indexOf(f) != -1) return;\r\n            hasNewFish = true;\r\n            //grab the fish\r\n            f.catch();\r\n\r\n            //add fish to caught array\r\n            this._caughtFish.push(f);\r\n\r\n            //control the fish\r\n            f.Y = this.Y;\r\n        });\r\n        \r\n        console.log(\"I WAS CAUGHT, NOW RISING\");\r\n        console.log(\"FISH CAUGHT SPEED:\", this.Speed);\r\n\r\n        if(!hasNewFish) return;\r\n        \r\n        //if we grabbed a fish...\r\n        //go back up... slowly\r\n        createjs.Tween.removeTweens(this._sprite);\r\n        const speed = this.Y * this.Speed;\r\n        this._catYTween = createjs.Tween.get(this._sprite)\r\n            .wait(250)\r\n            .to({y:-20}, speed, createjs.Ease.linear)\r\n            .call(() => {\r\n                //once the surface has been reached, allow x movement again\r\n                this.reachSurface();\r\n                this._isRising = false;\r\n            });\r\n\r\n    }\r\n    public drop() {\r\n        //release the fish\r\n        // this._caughtFish.dropped();\r\n        this._caughtFish = [];\r\n        //return quickly\r\n        this.returnToSurface();\r\n    }\r\n\r\n    /**Called when hit by an enemy. */\r\n    public injure(enemy) {\r\n        //start hurt animation\r\n        //end any current tweening\r\n        createjs.Tween.removeTweens(this._sprite);\r\n        this._sprite.gotoAndPlay(Cat.ANIMATION.Ow);\r\n        this._catYTween = createjs.Tween.get(this._sprite)\r\n            .wait(30)\r\n            .to({y:20}, 1000, createjs.Ease.linear)\r\n            .call(() => {\r\n                //once the surface has been reached, allow x movement again\r\n                this.reachSurface();\r\n                this._sprite.gotoAndPlay(Cat.ANIMATION.Idle);\r\n            });\r\n    }\r\n\r\n    public reachSurface() {\r\n        //if we have a fish, send to main logic\r\n        if(this._caughtFish != null) {\r\n            this._caughtFish.forEach(f => {\r\n                this.GameScreen.collectFish(f);\r\n            });\r\n            this._caughtFish = [];\r\n        }\r\n\r\n        this._hasReachedSurface = true;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    update(gameTime:number) {\r\n        super.update(gameTime);\r\n\r\n\r\n        //if we are rising, attempt to catch more fish\r\n        if(this._isRising) {\r\n            console.log(\"TRY TO GRAB\");\r\n            //try to grab a fish\r\n            const fishes = this.GameScreen.tryToGrabFishes(this.X , this.Y);\r\n            //see if a fish was grabbed\r\n            if(fishes.length > 0)\r\n                this.caught(fishes);\r\n        }\r\n\r\n        //drag fish with us if we have any\r\n        if(this._caughtFish != null) {\r\n            this._caughtFish.forEach(f => {\r\n                f.Y = this.Y - 20;\r\n            });\r\n        }\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get GRAB_RANGE() { return 120; }\r\n    public static get ANIMATION() {\r\n        return Object.freeze({\r\n            \"Idle\" : \"kittyIdle\",\r\n            \"Death\" : \"kittyIdle\",\r\n            \"Grab\" : \"kittyIdle\",\r\n            \"Hold\" : \"kittyIdle\",\r\n            \"Ow\" : \"kittyIdle\"\r\n        });\r\n    }\r\n    // public static get ANIMATION() {\r\n    //     return Object.freeze({\r\n    //         \"Idle\" : \"cat_idle\",\r\n    //         \"Death\" : \"cat_death\",\r\n    //         \"Grab\" : \"cat_grab\",\r\n    //         \"Hold\" : \"cat_grab_hold\",\r\n    //         \"Ow\" : \"cat_ow\"\r\n    //     });\r\n    // }\r\n    public get Speed() { \r\n        const caughtFishMult = ((this._caughtFish.length > 0) ? 1 + (this._caughtFish.length + this._fishCaughtMultiplier) : 1);\r\n        console.log(caughtFishMult);\r\n\r\n        return caughtFishMult * this._speed;\r\n    }\r\n    public set Speed(value:number) { this._speed = value; }\r\n}","import { ICreateable, IUpdateable } from \"../Interfaces\";\r\nimport { GameScreen } from \"../screens/GameScreen\";\r\nimport { Game } from \"../Game\";\r\n\r\nexport class Entity implements ICreateable<Entity>, IUpdateable {\r\n    private _gameScreen:GameScreen;\r\n    protected _name:string;\r\n    protected _sprite:createjs.Sprite;\r\n    protected _direction:{ x:number, y:number };\r\n    private _scaling:number;\r\n\r\n    private _isIgnoringCollision:boolean;\r\n    private _ignoreCollisionTimer:number;\r\n\r\n    constructor(gameScreen:GameScreen, spritesheet:createjs.SpriteSheet) {\r\n        this._gameScreen = gameScreen;\r\n        this._sprite = new createjs.Sprite(spritesheet);\r\n        this._direction = { x:1, y:1 };\r\n\r\n        this._isIgnoringCollision = false;\r\n        this._ignoreCollisionTimer = 0;\r\n\r\n        //get the game scale\r\n        // this._scaling = this._gameScreen.Game.Scaling;\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public create(container:createjs.Container):Entity {\r\n        // (this._sprite as any).scale = this._scaling;\r\n        //move to main container\r\n        if(container == null)\r\n            this._gameScreen.Game.Stage.addChild(this._sprite);\r\n        else\r\n            container.addChild(this._sprite);\r\n        return this;\r\n    }\r\n\r\n    public destroy():Entity {\r\n        if(this._sprite == null || this._sprite.parent == null) return null;\r\n\r\n        //remove from main container\r\n        this._sprite.parent.removeChild(this._sprite);\r\n\r\n        return this;\r\n    }\r\n\r\n    public update(gameTime:number) {\r\n\r\n         //listen for collision ignore\r\n        if(this._isIgnoringCollision) {\r\n            this._ignoreCollisionTimer++;\r\n\r\n            if(this._ignoreCollisionTimer > Entity.IGNORE_COLLISION)\r\n                this._isIgnoringCollision = false;\r\n        }\r\n    }\r\n\r\n    protected startIgnoreCollision() {\r\n        this._isIgnoringCollision = true\r\n    }\r\n\r\n    protected testStageBounds(artificialReg:{x:number, y:number} = null) {\r\n        let reg = { x:this._sprite.regX, y:this._sprite.regY };\r\n        if(artificialReg != null) {\r\n            reg = {\r\n                x: (this._direction.x > 0) ? this.Bounds.Width * artificialReg.x : (this.Bounds.Width * (1 - artificialReg.x)),\r\n                y: (this._direction.y > 0) ? this.Bounds.Height * artificialReg.y : (this.Bounds.Height * (1 - artificialReg.y))\r\n            }\r\n        }\r\n        // const bounds = { width:this._game.StageWidth, height: this._game.StageHeight };\r\n        const bounds = { width:this._gameScreen.Game.StageWidth, height: this._gameScreen.Game.StageHeight };\r\n        const extents = {   \r\n            x:(this._direction.x > 0) ? (this.Bounds.Width - reg.x) : -reg.x, \r\n            y:(this._direction.y > 0) ? (this.Bounds.Height - reg.y) : -reg.y \r\n        };\r\n\r\n        //test walls\r\n        if((this.X + extents.x) > bounds.width) return Entity.HIT.Right;\r\n        else if(this.X + extents.x < 0) return Entity.HIT.Left;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get IGNORE_COLLISION() { return 20; }\r\n    public static get HIT() { return Object.freeze({Top:0, Right:1, Bottom:2, Left:3}); }\r\n\r\n    protected get GameScreen() { return this._gameScreen; }\r\n\r\n    public get Sprite() { return this._sprite; }\r\n    public get Parent() { return this._sprite.parent; }\r\n\r\n    public get X() { return this._sprite.x; }\r\n    public set X(value) { this._sprite.x = value; }\r\n    public get Y() { return this._sprite.y; }\r\n    public set Y(value) { this._sprite.y = value; }\r\n\r\n    public set DirectionX(value) { \r\n        const lastX = this._direction.x;\r\n        this._direction.x = value; \r\n        //flip sprite if our direction has changed\r\n        if(this._direction.x != lastX) this._sprite.scaleX *= -1;\r\n    }\r\n\r\n    public get Bounds() { \r\n        let bounds = this._sprite.getBounds();\r\n        return  { Width:bounds.width, Height:bounds.height };\r\n    }\r\n\r\n    public get IsIgnoringCollision() { return this._isIgnoringCollision; }\r\n}","import { Game } from \"../Game\";\r\nimport { Entity } from \"./Entity\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { IEnableable } from \"../Interfaces\";\r\nimport { Logging } from \"../Functions\";\r\nimport { GameScreen } from \"../screens/GameScreen\";\r\n\r\nexport class Fish extends Entity implements IEnableable {\r\n    private _speed:number;\r\n    private _naturalY:number;\r\n\r\n    private _isCaught:boolean;\r\n\r\n    constructor(gameScreen:GameScreen) {\r\n        super(gameScreen, LoadManager.Spritesheets.Peeper_Spritesheet);\r\n        this._speed = 1;\r\n\r\n        this._isCaught = false;\r\n\r\n        this._sprite.gotoAndPlay(Fish.ANIMATION.Slow);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    \r\n\r\n\r\n    /***************/\r\n    /*   ACTIONS   */\r\n    /***************/\r\n    public setNaturalY() {\r\n        this._naturalY = this.Y;\r\n    }\r\n\r\n    public catch() {\r\n        if(this._isCaught) return;\r\n        \r\n        Logging.message(\"Fish was grabbed!\");\r\n        this._isCaught = true;\r\n\r\n        this._sprite.gotoAndPlay(Fish.ANIMATION.Panic);\r\n    }\r\n\r\n\r\n    /**Test to see if global position hits sprite. */\r\n    public testHit(x:number, y:number):boolean {\r\n        return this._sprite.hitTest(x, y);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    destroy() {\r\n        this.disable();\r\n        return super.destroy();\r\n    }\r\n\r\n    update(gameTime:number) {\r\n        super.update(gameTime);\r\n\r\n        //move the fishy\r\n        if(!this._isCaught)\r\n            this.X += this._speed * gameTime * this._direction.x;\r\n\r\n        //test collision\r\n        if(!this.IsIgnoringCollision) {\r\n\r\n            //if fish hits the edge, flip direction\r\n            const hit = this.testStageBounds({x:0.5, y:0.5});\r\n            switch(hit) {\r\n                case Entity.HIT.Right:\r\n                    this._direction.x *= -1;\r\n                    this._sprite.scaleX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X -= 5 - this.Bounds.Width;\r\n                    break;\r\n                case Entity.HIT.Left:\r\n                    this._direction.x *= -1;\r\n                    this._sprite.scaleX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X += 5 - this.Bounds.Width;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    enable() {\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get ANIMATION() {\r\n        return Object.freeze({\r\n            \"Slow\" : \"fishIdle\",\r\n            \"Fast\" : \"fishIdle\",\r\n            \"Panic\" : \"fishPanic\"\r\n        });\r\n    }\r\n    public get Speed() { return this._speed; }\r\n    public set Speed(value:number) { this._speed = value; }\r\n}","import { Game } from \"./Game\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    const game = new Game(document.getElementById(\"game-canvas\") as HTMLCanvasElement);\r\n});","import { Screen } from \"../screens/Screen\";\r\n\r\nexport interface WorldsData {\r\n    worlds:LevelData[];\r\n}\r\n\r\nexport interface LevelData {\r\n    name:string;\r\n    data:any[];\r\n    duration?:number;\r\n    showScore?:boolean;\r\n    showRemainingFish?:boolean;\r\n}\r\n\r\nexport class DataManager {\r\n    private static _worldsData:WorldsData;\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Loads in the worlds data! */\r\n    public static loadWorldsData(fileLocation:string) {\r\n        return new Promise<WorldsData>(async(res, rej) => {\r\n            await fetch(fileLocation)\r\n                .then(blob => blob.json())\r\n                .then(json => {\r\n                    this._worldsData = json;\r\n                    res(this._worldsData);\r\n                })\r\n                .catch(err => {\r\n                    rej(\"Could not load world data! \" + err);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**Returns the level data received by the given index. */\r\n    public static getLevelDataByIndex(index:number) {\r\n        //flatten level data, and get data\r\n        let flatten = [].concat.apply([], DataManager._worldsData.worlds);\r\n        return flatten[index];\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get WorldsData():WorldsData { return DataManager._worldsData; }\r\n}","export class LoadManager {\r\n    public static get ASSETS_LOADED():string { return \"onAssetsLoaded\"; }\r\n    public static get ASSETS_FAILED():string { return \"onAssetsFailed\"; }\r\n    public static get ASSETS_UPDATED():string { return \"onAssetsUpdated\"; }\r\n\r\n    public static Spritesheets:{ [key:string]:createjs.SpriteSheet } = {};\r\n    public static Images:{ [key:string]:createjs.Bitmap } = {};\r\n\r\n    private static _stage:createjs.StageGL;\r\n    private static _preloadManager:createjs.LoadQueue;\r\n    private static _sheetsTotal:number = 0;\r\n    private static _sheetsLoaded:number = 0;\r\n\r\n    private static _percentage:number = 0;\r\n    private static _totalAssetsLoaded:number = 0;\r\n    private static _totalAssets:number = 0;\r\n\r\n    private static AssetsLoadedEvent:any = new (createjs as any).Event(LoadManager.ASSETS_LOADED, false, true);\r\n    private static AssetsFailedEvent:any = new (createjs as any).Event(LoadManager.ASSETS_FAILED, false, true);\r\n    private static AssetsUpdatedEvent:any = new (createjs as any).Event(LoadManager.ASSETS_UPDATED, false, true);\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public static reset() {\r\n        LoadManager._sheetsTotal = 0;\r\n        LoadManager._sheetsLoaded = 0;\r\n\r\n        LoadManager._percentage = 0;\r\n        LoadManager._totalAssetsLoaded = 0;\r\n        LoadManager._totalAssets = 0;\r\n    }\r\n\r\n    public static loadAssets(src:string, stage:createjs.StageGL) {\r\n        LoadManager.reset();\r\n        LoadManager._stage = stage;\r\n\r\n        return new Promise(async(res, rej) => {\r\n            LoadManager._preloadManager = new createjs.LoadQueue();\r\n\r\n            //setup sound controllers\r\n            createjs.Sound.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin, createjs.FlashAudioPlugin]);\r\n            createjs.Sound.alternateExtensions = [\"mp3\",\"wav\"];\r\n            LoadManager._preloadManager.installPlugin(createjs.Sound);\r\n\r\n            //setup listeners\r\n            (LoadManager._preloadManager as any).on(\"fileload\", LoadManager._onLoaded, LoadManager);\r\n            (LoadManager._preloadManager as any).on(\"complete\", LoadManager._onComplete, LoadManager);\r\n            (LoadManager._preloadManager as any).on(\"error\", LoadManager._onError, LoadManager);\r\n\r\n            //get the manifest\r\n            fetch(src)\r\n                .then(blob => blob.json())\r\n                .then(data => {\r\n                    //load the manifest\r\n                    LoadManager._preloadManager.setMaxConnections(1);\r\n                    LoadManager._preloadManager.loadManifest(data);\r\n\r\n                    (LoadManager._stage as any).addEventListener(LoadManager.ASSETS_LOADED, () => {\r\n                        res();\r\n                    });\r\n                })\r\n                .catch(() => {\r\n                    LoadManager.emitErrorEvent();\r\n                    rej(\"Could not load assets!\");\r\n                });\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    public static emitLoadedEvent() {\r\n        if(LoadManager._stage != null) (LoadManager._stage as any).dispatchEvent(LoadManager.AssetsLoadedEvent);\r\n    }\r\n    public static emitErrorEvent() {\r\n        if(LoadManager._stage != null) (LoadManager._stage as any).dispatchEvent(LoadManager.AssetsFailedEvent);\r\n    }\r\n    public static emitUpdatedEvent() {\r\n        LoadManager._percentage = parseFloat((LoadManager._preloadManager.getItems(true).length / LoadManager._preloadManager.getItems(false).length).toFixed(2));\r\n        if(LoadManager._stage != null) (LoadManager._stage as any).dispatchEvent(LoadManager.AssetsUpdatedEvent);\r\n    }\r\n\r\n\r\n    private static _loadedSheet(name:string, sheet:createjs.SpriteSheet) {\r\n        LoadManager.Spritesheets[name] = sheet;\r\n\r\n        LoadManager._sheetsLoaded++;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    private static _onLoaded(e) {\r\n\r\n        console.log(\"asset loaded: \" + e.item.src + \" type: \" + e.item.type);\r\n\r\n        switch(e.item.type) {\r\n            case (createjs as any).Types.JAVASCRIPT: {\r\n                //load the spritesheet\r\n                LoadManager._sheetsTotal++;\r\n                \r\n                const sheet = (window[e.item.id] as any)._SpriteSheet;\r\n\r\n                // listen for spritesheet to load\r\n                if(!sheet.complete) {\r\n                    sheet.on(\"complete\", (ev:any) => {\r\n                        LoadManager._loadedSheet(e.item.id, sheet);\r\n                        ev.remove();\r\n                    })\r\n                }\r\n                else LoadManager._loadedSheet(e.item.id, sheet);\r\n                break\r\n            }\r\n            case (createjs as any).Types.IMAGE: {\r\n                //build the bitmap\r\n                LoadManager.Images[e.item.id] = new createjs.Bitmap(e.item.src);\r\n            }\r\n        }\r\n\r\n\r\n\r\n        //update event\r\n        LoadManager.emitUpdatedEvent();\r\n    }\r\n\r\n    private static _onComplete(e) {\r\n        //remove all preLoadManager events\r\n        (LoadManager._preloadManager as any).removeAllEventListeners();\r\n        \r\n        //make sure all spritesheets are loaded\r\n        if(LoadManager._sheetsLoaded < LoadManager._sheetsTotal) {\r\n            const loadInterval = setInterval((ev:any) => {\r\n                //see if they are loaded\r\n                if(LoadManager._sheetsLoaded >= LoadManager._sheetsTotal) {\r\n                    e.remove();\r\n                    // window.clearInterval(loadInterval);\r\n                    LoadManager.emitLoadedEvent();\r\n                }\r\n            }, 100)\r\n        }\r\n        else LoadManager.emitLoadedEvent();\r\n    }\r\n\r\n    private static _onError(e) {\r\n        LoadManager.emitErrorEvent();\r\n    }\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get Percentage():number { return LoadManager._percentage; }\r\n    \r\n\r\n\r\n\r\n}","import { Screen } from \"../screens/Screen\";\r\n\r\nexport class ScreenManager {\r\n    private static _screensLookup:{ [key:string]:Screen } = { };\r\n    private static _currentScreen:Screen = null;\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Registers a screen into the Screen Manager.  Uses a key to associate it. */\r\n    public static registerScreen(key:string, screen:Screen):void {\r\n        //if we don't have this screen, add it\r\n        if(ScreenManager._screensLookup[key] == null)\r\n            ScreenManager._screensLookup[key] = screen;\r\n    }\r\n\r\n    /**Unregisters a screen from the Screen Manager. */\r\n    public static unregisterScreen(key:string):boolean {\r\n        if(ScreenManager._screensLookup[key] == null) return false;\r\n\r\n        ScreenManager._screensLookup[key] = null;\r\n        delete ScreenManager._screensLookup[key];\r\n        return true;\r\n    }\r\n\r\n    /**Sets the current screen.  Can be done with the screen itself or an associative key. */\r\n    public static setCurrentScreen(screen:string | Screen, stage:createjs.StageGL):Promise<void> {\r\n        let tempScreen = null;\r\n        if(screen instanceof Screen) tempScreen = screen;\r\n        else tempScreen = ScreenManager._screensLookup[screen];\r\n\r\n        //if we did not find a screen, do not follow through\r\n        if(tempScreen == null) return Promise.resolve();\r\n\r\n        let promises = [];\r\n        //if we have a previous screen, wait for it to fade out\r\n        if(ScreenManager._currentScreen != null)\r\n        promises.push(\r\n            new Promise(async(res) => {\r\n                //fade out\r\n                createjs.Tween\r\n                    .get(ScreenManager._currentScreen.Container)\r\n                    .to({ alpha:0 }, 500, createjs.Ease.linear)\r\n                    .call(() => {\r\n                        ScreenManager._currentScreen.destroy();\r\n                        ScreenManager._currentScreen.disable();\r\n                        res();\r\n                    });\r\n            })\r\n        );\r\n\r\n\r\n        //wait for certain actions to finish\r\n        return new Promise(async(res) => {\r\n            //wait for promises to finish\r\n            await Promise.all(promises);\r\n\r\n            //now add in the new one\r\n            ScreenManager._currentScreen = tempScreen;\r\n            ScreenManager._currentScreen.create(stage);\r\n            ScreenManager._currentScreen.Container.alpha = 0;\r\n            ScreenManager._currentScreen.disable(); //disable until ready\r\n            console.log(\"FADE IN\")\r\n            //fade in\r\n            createjs.Tween\r\n                .get(ScreenManager._currentScreen.Container)\r\n                .to({ alpha:1 }, 1200, createjs.Ease.linear)\r\n                .call(() => {\r\n                    console.log(\"DONE\");\r\n                    ScreenManager._currentScreen.enable();\r\n                    res();\r\n                });\r\n\r\n        });\r\n    }\r\n\r\n    public static getScreenByKey(key:string):Screen {\r\n        return ScreenManager._screensLookup[key];\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get AllScreens() { return ScreenManager._screensLookup; }\r\n    public static get CurrentScreen() { return ScreenManager._currentScreen; }\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Container } from \"../ui/display/Container\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { Game } from \"../Game\";\r\n\r\nexport class EndScreen extends Screen {\r\n    private _game:Game;\r\n    private _splash:createjs.Shape;\r\n    private _buttonsContainer:Container;\r\n\r\n    private _highScoreSpr:createjs.Sprite;\r\n    private _completeSpr:createjs.DisplayObject;\r\n    private _failSpr:createjs.DisplayObject;\r\n    private _scoreContainer:Container;\r\n\r\n    //scorebox holders\r\n    private _fishRemainContainer:createjs.Container;\r\n    private _timeContainer:createjs.Container;\r\n    private _combosContainer:createjs.Container;\r\n\r\n    //flags\r\n    private _isFail:boolean;\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n\r\n        this._game = game;\r\n        this._isFail = false;\r\n\r\n        //layout stuff\r\n        const bg = new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"bg\");\r\n        this._container.addChild(bg);\r\n\r\n        this._buttonsContainer = new Container(Container.LAYOUT_OPTIONS.ColumnLeftBottom);\r\n        this._buttonsContainer.addMany({\r\n            btnTryAgain : new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"btnTryAgain\"),\r\n            btnNextLevel : new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"btnNextLevel\"),\r\n            btnMainMenu : new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"btnMainMenu\"),\r\n        });\r\n        this._container.addChild(this._buttonsContainer.Container);\r\n\r\n        //conditionals\r\n        //--high score\r\n        this._highScoreSpr = new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"highScore\");\r\n        this._highScoreSpr.x = this._game.StageWidth / 2 - (this._highScoreSpr.getBounds().width / 2);\r\n        this._highScoreSpr.y = 60;\r\n        this._container.addChild(this._highScoreSpr);\r\n        //--conditional text\r\n        this._completeSpr = new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"complete\");\r\n        this._failSpr = new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"failure\");\r\n        this._completeSpr.x = this._game.StageWidth / 2 - (this._completeSpr.getBounds().width / 2);\r\n        this._completeSpr.y = 220;\r\n        this._failSpr.x = this._game.StageWidth / 2 - (this._failSpr.getBounds().width / 2);\r\n        this._failSpr.y = this._game.StageHeight * 0.45;\r\n        this._container.addChild(this._completeSpr);\r\n        this._container.addChild(this._failSpr);\r\n        //--score container\r\n        this._scoreContainer = new Container(Container.LAYOUT_OPTIONS.ColumnCenterCenter);\r\n        this._scoreContainer.addMany({\r\n            fishRemain: new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"fishRemain\"),\r\n            time: new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"time\"),\r\n            combos: new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"combos\"),\r\n            line: new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"line\")\r\n        });\r\n        const scoreX = 250;\r\n        this._scoreContainer.Sprites[\"fishRemain\"].x = scoreX - (this._scoreContainer.Sprites[\"fishRemain\"].getBounds().width);\r\n        this._scoreContainer.Sprites[\"time\"].x = scoreX - (this._scoreContainer.Sprites[\"time\"].getBounds().width);\r\n        this._scoreContainer.Sprites[\"combos\"].x = scoreX - (this._scoreContainer.Sprites[\"combos\"].getBounds().width);\r\n        this._scoreContainer.Sprites[\"line\"].x = this._game.StageWidth - this._scoreContainer.Sprites[\"line\"].getBounds().width - 30;\r\n        this._scoreContainer.Sprites[\"line\"].y += 15;\r\n        this._container.addChild(this._scoreContainer.Container);\r\n\r\n        //line them up\r\n        this._fishRemainContainer = new createjs.Container();\r\n        this._timeContainer = new createjs.Container();\r\n        this._combosContainer = new createjs.Container();\r\n        this._container.addChild(this._fishRemainContainer);\r\n        this._container.addChild(this._timeContainer);\r\n        this._container.addChild(this._combosContainer);\r\n\r\n        this._fishRemainContainer.x = scoreX + 20;\r\n        this._fishRemainContainer.y = this._scoreContainer.Sprites[\"fishRemain\"].y;\r\n        this._timeContainer.x = scoreX + 20;\r\n        this._timeContainer.y = this._scoreContainer.Sprites[\"time\"].y;\r\n        this._combosContainer.x = scoreX + 20;\r\n        this._combosContainer.y = this._scoreContainer.Sprites[\"combos\"].y;\r\n\r\n\r\n        // const peeper = new createjs.Sprite(LoadManager.Spritesheets.Kitty_Spritesheet);\r\n        // peeper.gotoAndPlay(\"kittyIdle\");\r\n        // this._container.addChild(peeper);\r\n\r\n        \r\n        \r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    create(stage:createjs.StageGL):Screen {\r\n        \r\n        \r\n        //for testing\r\n        (this._container as any).on(\"click\", (e) => {\r\n            ScreenManager.setCurrentScreen(\"menu\", stage);\r\n        }, this, true);       \r\n        \r\n\r\n        return super.create(stage);\r\n    }\r\n\r\n\r\n    enable() {\r\n        super.enable();\r\n\r\n        //fake score data\r\n        this._game.changeCurrentScore({ totalFish:10, time:150, combos:2 });\r\n\r\n        //toggle data based on current level stats\r\n        const levelData = this._game.CurrentLevelData;\r\n        //look for flags\r\n        const showFishRemain = (levelData.showRemainingFish != null && !levelData.showRemainingFish) ? false : true;\r\n        const showScore = (levelData.showScore != null && !levelData.showScore) ? false : true;\r\n        const showTime = (levelData.duration != null);\r\n\r\n\r\n        //layout score data\r\n        const { totalFish, time, combos } = this._game.CurrentScoreData;\r\n        const txtFishRemain = Sprites.generateBitmapText((showFishRemain) ? totalFish.toString() : \"-\", LoadManager.Spritesheets.TypographyWhite);\r\n        this._fishRemainContainer.addChild(txtFishRemain);\r\n        const txtTime = Sprites.generateBitmapText((showTime) ? time.toString() : \"-\", LoadManager.Spritesheets.TypographyWhite);\r\n        this._timeContainer.addChild(txtTime);\r\n        const txtCombos = Sprites.generateBitmapText((showScore) ? combos.toString() : \"-\", LoadManager.Spritesheets.TypographyWhite);\r\n        this._combosContainer.addChild(txtCombos);\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n        //kill score containers\r\n        this._fishRemainContainer.removeAllChildren();\r\n        this._timeContainer.removeAllChildren();\r\n        this._combosContainer.removeAllChildren();\r\n\r\n        //toggle fail/success\r\n        this._completeSpr.visible = !this._isFail;\r\n        this._failSpr.visible = this._isFail;\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { ObjectPool } from \"../ObjectPool\";\r\nimport { Fish } from \"../entities/Fish\";\r\nimport { Cat } from \"../entities/Cat\";\r\nimport { Game } from \"../Game\";\r\nimport { Container } from \"../ui/display/Container\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { Logging } from \"../Functions\";\r\nimport { LevelData } from \"../managers/DataManager\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { GameScore } from \"../ui/partials/GameScore\";\r\n\r\nexport class GameScreen extends Screen {\r\n    private _game:Game;\r\n\r\n    //create containers\r\n    private _staticContainer:Container;\r\n    private _fishContainer:createjs.Container;\r\n\r\n    private _winContainer:createjs.Container;\r\n    private _winBanner:createjs.Shape;\r\n    private _winText:createjs.BitmapText;\r\n\r\n    private _gameScore:GameScore;\r\n\r\n    private _cat:Cat;\r\n    private _fishes:Fish[];\r\n\r\n    private _remainingFish:number;\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n        this._game = game;\r\n        this._fishes = [];\r\n        this._remainingFish = -1;\r\n\r\n        //create object pool\r\n        ObjectPool.createPoolObject(new Cat(this), POOL.CAT)\r\n        for(let i = 0; i < 120; i++) {\r\n            ObjectPool.createPoolObject(new Fish(this), POOL.FISH);\r\n        }\r\n        // for(let i = 0; i < 30; i++) {\r\n        //     ObjectPool.createPoolObject(new Puffer(this._game), POOL.PUFFERFISH)\r\n        // }\r\n\r\n\r\n        //pool out static kitty\r\n        this._cat = (ObjectPool.checkout(POOL.CAT) as Cat);\r\n\r\n        //create containers\r\n        this._staticContainer = new Container();\r\n        this._staticContainer.addMany({\r\n            bg : new createjs.Sprite(LoadManager.Spritesheets.BG_Spritesheet, \"bg1\")\r\n        });\r\n\r\n        this._fishContainer = new createjs.Container();\r\n\r\n        this._winContainer = new createjs.Container();\r\n\r\n        this._gameScore = new GameScore(this._game);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n\r\n    /**Attempts to grab a fish.  Returns any fish that are touching the global position. */\r\n    public tryToGrabFishes(x:number, y:number):Fish[] {\r\n        let fishes = [];\r\n\r\n        //see if any fish is grabbable at these coords and return if so\r\n        //for each fish, test the distance and return if close\r\n        for(let i = 0; i < this._fishes.length; i++) {\r\n            const fish = this._fishes[i];\r\n\r\n            const localPos = fish.Sprite.globalToLocal(x, y);\r\n            const hitFish = fish.testHit(localPos.x, localPos.y);\r\n\r\n            if(hitFish) {\r\n                fishes.push(fish);\r\n            }\r\n        }\r\n        //if no fish was caught, return null\r\n        return fishes;\r\n    }\r\n\r\n    public collectFish(fish:Fish) {\r\n        //get fish\r\n        Logging.success(\"GOT FISH!\");\r\n\r\n        const killedFish = fish.destroy();\r\n\r\n        //decrement fish counter -- make sure we didn't make an error\r\n        if(killedFish != null) {\r\n            this._remainingFish--;\r\n\r\n            //if all our fish are gone, end the game!\r\n            if(this._remainingFish <= 0) {\r\n                //win game!\r\n                Logging.success(\"GAME IS OVER!\");\r\n                //call win\r\n                this.win();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public win() {\r\n        //disable controls\r\n        this.disable();\r\n        //set the score\r\n        this._game.changeCurrentScore({\r\n            totalFish: this._fishes.length,\r\n            combos: 10,\r\n            time: 100\r\n        });\r\n        \r\n        //show win banner\r\n        createjs.Tween.get(this._winContainer)\r\n            .to({y:this._game.StageHeight / 2 - 25}, 600, createjs.Ease.elasticOut)\r\n            .wait(2000)\r\n            .call(() => {\r\n                //transition to end screen\r\n                ScreenManager.setCurrentScreen(\"end\", this._game.Stage);\r\n                // ScreenManager.setCurrentScreen(\"menu\", this._game.Stage);\r\n            });\r\n    }\r\n\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n        super.create(stage);\r\n        //add stuff\r\n        this._staticContainer.checkoutSprites();\r\n        this._staticContainer.Sprites.bg.y = 0;\r\n        this._container.addChild(this._staticContainer.Container);\r\n\r\n        this._container.addChild(this._fishContainer);\r\n\r\n        //add conditional text\r\n        this._winBanner = new createjs.Shape();\r\n        this._winBanner.graphics.beginFill(\"black\");\r\n        this._winBanner.graphics.drawRect(0, 0, this._game.StageWidth, 50);\r\n        this._winBanner.cache(0, 0, this._game.StageWidth, 50);\r\n        this._winContainer.addChild(this._winBanner);\r\n        this._winText = Sprites.generateBitmapText(\"Win!\", LoadManager.Spritesheets.TypographyWhite);\r\n        this._winContainer.addChild(this._winText);\r\n        this._winText.x = (this._game.StageWidth / 2) - (this._winText.getBounds().width / 2);\r\n\r\n        this._container.addChild(this._winContainer);\r\n        this._winContainer. y = this._game.StageHeight + 50;\r\n        this._winContainer.mouseEnabled = false;\r\n\r\n        \r\n        this._cat.create(this._container);\r\n\r\n\r\n        //add level data if it exists\r\n        if(this._game.CurrentLevelData != null) {\r\n            //load in critters\r\n            for(let i = 0; i < this._game.CurrentLevelData.data.length; i++) {\r\n                const data = this._game.CurrentLevelData.data[i];\r\n                switch(data.id) {\r\n                    case POOL.FISH:\r\n                        const fish = (ObjectPool.checkout(POOL.FISH) as Fish);\r\n                        fish.create(this._fishContainer);\r\n                        if(data.speed != null) fish.Speed = data.speed; //set variables\r\n                        if(data.x != null) fish.X = data.x;\r\n                        if(data.y != null) fish.Y = data.y;\r\n                        if(data.flip != null && data.flip) fish.DirectionX = -1;\r\n                        fish.setNaturalY();\r\n                        this._fishes.push(fish);\r\n                        break;\r\n                }      \r\n            }\r\n\r\n            //set fish total\r\n            this._remainingFish = this._fishes.length;\r\n        }\r\n\r\n\r\n        //add the score\r\n        this._gameScore.Container.y = this._game.StageHeight - 40;\r\n        this._container.addChild(this._gameScore.Container);\r\n\r\n        //update the game HUD for this round\r\n        const levelData = this._game.CurrentLevelData;\r\n        console.log(this._game.CurrentLevelData);\r\n        const showScore = (levelData.showScore != null && !levelData.showScore) ? false : true;\r\n        const showTimer = (levelData.duration != null);\r\n        const showFishRemain = (levelData.showRemainingFish != null && !levelData.showRemainingFish) ? false : true;\r\n        this._gameScore.startHUD(showScore, showFishRemain, showTimer);\r\n\r\n        return null;\r\n    }\r\n\r\n    public destroy() {\r\n        this._cat.destroy();\r\n        this._fishes.forEach(f => f.destroy());\r\n        this._fishContainer.removeAllChildren();\r\n\r\n        this._fishes = [];\r\n\r\n        return super.destroy();\r\n    }\r\n\r\n    public update(gameTime:number) {\r\n        const normalizedTime = Math.min(1, gameTime) + 0.5;\r\n\r\n        //update entities\r\n        this._fishes.forEach(fish => {\r\n            fish.update(normalizedTime);\r\n        });\r\n\r\n        this._cat.update(normalizedTime);\r\n\r\n        //update the score\r\n        this._gameScore.update(gameTime);\r\n\r\n        super.update(gameTime);\r\n    }\r\n\r\n    public enable() {\r\n        (this._container as any).on(\"click\", this._cat.grab, this._cat);\r\n    }\r\n\r\n    public disable() {\r\n        (this._container as any).removeAllEventListeners();\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Game() { return this._game; }\r\n}\r\n\r\n\r\n\r\nexport class POOL { \r\n    static get CAT() { return \"cat\"; }\r\n    static get FISH() { return \"fish\"; }\r\n    static get PUFFERFISH() { return \"puffer\"; }\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { Game } from \"../Game\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\n\r\nexport class IntermediaryScreen extends Screen {\r\n    private _game:Game;\r\n    private _bg:createjs.Shape;\r\n    private _textContainer:createjs.Container;\r\n    private _txtSprite:createjs.DisplayObject;\r\n\r\n    private _text:string;\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n        this._game = game;\r\n\r\n        this._text = \"\";\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Chooses the screen to load in after the intermediary. */\r\n    public queueNextScreen(screenKey:string, duration:number=3000) {\r\n        const evt = window.setTimeout(() => {\r\n            //load the screen\r\n            ScreenManager.setCurrentScreen(screenKey, this._game.Stage);\r\n            //clear the timeout\r\n            window.clearTimeout(evt);\r\n        }, duration);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n        //add stuff\r\n        this._bg = new createjs.Shape();\r\n        this._bg.graphics.beginFill(\"#191919\");\r\n        this._bg.graphics.drawRect(0, 0, this._game.StageWidth, this._game.StageHeight);\r\n        this._bg.graphics.endFill();\r\n        this._bg.cache(0, 0, this._game.StageWidth, this._game.StageHeight);\r\n        this._container.addChild(this._bg);\r\n\r\n        this._textContainer = new createjs.Container();\r\n        this._container.addChild(this._textContainer);\r\n\r\n        if(this._text != \"\") {\r\n            //create the text\r\n            this._txtSprite = Sprites.generateBitmapText(this._text, LoadManager.Spritesheets.TypographyWhite);\r\n            (this._txtSprite as any).scale = 0.6;\r\n            //load into container\r\n            this._textContainer.addChild(this._txtSprite);\r\n    \r\n            //put container at bottom\r\n            this._textContainer.x = (this._game.StageWidth / 2) - ((this._txtSprite.getBounds().width / 2) * 0.6);\r\n            this._textContainer.y = (this._game.StageHeight / 2) - (this._txtSprite.getBounds().height / 2);\r\n        }\r\n\r\n        return super.create(stage);\r\n    }\r\n\r\n    public destroy() {\r\n        this._textContainer.removeAllChildren();\r\n\r\n        return super.destroy();\r\n    }\r\n\r\n    public enable() {\r\n        super.enable();\r\n\r\n        //for testing\r\n        (this._container as any).on(\"click\", (e) => {\r\n            ScreenManager.setCurrentScreen(\"menu\", this.Stage);\r\n        }, this, true);\r\n    }\r\n\r\n    public disable() {\r\n        super.disable();\r\n\r\n        this.reset();\r\n    }\r\n\r\n    public reset() {\r\n        this.Text = \"\";\r\n        super.reset();\r\n    }\r\n\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public set Text(value:string) {\r\n        this._text = value;\r\n    }\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { Layout } from \"../ui/display/Layout\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { Container } from \"../ui/display/Container\";\r\nimport { Logging } from \"../Functions\";\r\nimport { Game } from \"../Game\";\r\nimport { LevelSelectDisplay } from \"../ui/custom/LevelSelectDisplay\";\r\nimport { IntermediaryScreen } from \"./IntermediaryScreen\";\r\nimport { GameScreen } from \"./GameScreen\";\r\nimport { DataManager } from \"../managers/DataManager\";\r\n\r\nexport class MenuScreen extends Screen {\r\n    private _game:Game;\r\n    //containers\r\n    private _swipeContainer:createjs.Container;\r\n    private _staticContainer:Container;\r\n    // private _mainContainer:Container;\r\n    private _mainContainer:createjs.Container;\r\n    private _clearedContainer:Container;\r\n    private _optionsContainer:Container;\r\n\r\n    private _mainButtonsContainer:Container;\r\n    private _logo:createjs.DisplayObject;\r\n    private _fancyFish:createjs.Sprite;\r\n\r\n    //custom containers\r\n    private _levelSelectDisplay:LevelSelectDisplay;\r\n\r\n    //properties\r\n    private _swipeSpeed:number;\r\n    private _currentScreen:string;\r\n    private _initialSwipePos:{x:number, y:number};\r\n    private _dragTimer:any;\r\n\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n\r\n        this._game = game;\r\n\r\n        //setup swipe container -- holds all moving sprites\r\n        this._swipeContainer = new createjs.Container();\r\n\r\n        //setup static container\r\n        this._staticContainer = new Container();\r\n        const bg = new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"bg\");\r\n\r\n        this._staticContainer.addMany({\r\n            bg\r\n        });\r\n\r\n        //setup main container\r\n        this._mainContainer = new createjs.Container();\r\n        this._logo = new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"logo\");\r\n        this._logo.x = this._game.StageWidth - this._logo.getBounds().width - 20;\r\n        this._logo.y = this._game.StageHeight * 0.4;\r\n        this._mainContainer.addChild(this._logo);\r\n        this._mainButtonsContainer = new Container(Container.LAYOUT_OPTIONS.ColumnLeftBottom);\r\n        this._mainButtonsContainer.addMany({\r\n            btnNewGame : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnNewGame\"),\r\n            btnOptions : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnOptions\"),\r\n            btnLevelSelect : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnLevelSelect\"),\r\n            btnExit : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnExit\"),\r\n        });\r\n        this._mainContainer.addChild(this._mainButtonsContainer.Container);\r\n        this._fancyFish = new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"fancyFish\");\r\n        this._fancyFish.x = this._game.StageWidth - this._fancyFish.getBounds().width - 20;\r\n        this._fancyFish.y = this._game.StageHeight - this._fancyFish.getBounds().height - 20;\r\n        this._mainContainer.addChild(this._fancyFish);\r\n        // this._mainContainer.addMany({\r\n        //     logo : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"logo\"),\r\n        //     fishbowl : Sprites.Buttons.Fishbowl,\r\n        //     btnNewGame : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnNewGame\"),\r\n        //     btnOptions : Sprites.Buttons.Options,\r\n        //     btnLevelSelect : Sprites.Buttons.LevelSelect,\r\n        //     btnExit : Sprites.Buttons.Exit\r\n        // });\r\n\r\n        //setup options container\r\n        this._optionsContainer = new Container();\r\n        this._optionsContainer.addMany({\r\n            txtOptions : Sprites.generateBitmapText(\"Options\", LoadManager.Spritesheets.Typography),\r\n            btnClearData : Sprites.Buttons.ClearData\r\n        });\r\n        this._optionsContainer.Container.x -= this._game.StageWidth;\r\n\r\n        //setup cleared container\r\n        this._clearedContainer = new Container();\r\n        this._clearedContainer.add(\"txtCleared\", Sprites.generateBitmapText(\"Data successfully cleared!\", LoadManager.Spritesheets.Typography));\r\n        this._clearedContainer.Container.x -= this._game.StageWidth;\r\n        this._clearedContainer.Container.y -= this._game.StageHeight;\r\n\r\n        this._levelSelectDisplay = new LevelSelectDisplay(game);\r\n        this._levelSelectDisplay.Container.x += this._game.StageWidth;\r\n\r\n\r\n        //setup properties\r\n        this._swipeSpeed = 800;\r\n        this._currentScreen = \"main\";\r\n        this._initialSwipePos = { x:-1, y:-1 };\r\n\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    private _onNewGame() {\r\n        Logging.message(\"Go to new game!\");\r\n        \r\n        const data = DataManager.getLevelDataByIndex(0);\r\n        \r\n        const intermediary = ScreenManager.getScreenByKey(\"intermediary\") as IntermediaryScreen;\r\n        new Promise(async(res) => {\r\n            intermediary.Text = data.name;\r\n            await ScreenManager.setCurrentScreen(intermediary, this.Stage);\r\n            intermediary.queueNextScreen(\"game\");\r\n\r\n            res();\r\n        });\r\n    }\r\n    private _onOptions() {\r\n        //go to options!\r\n        Logging.message(\"Go to options!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:this._game.StageWidth}, this._swipeSpeed, createjs.Ease.circOut);\r\n        this._currentScreen = \"options\";\r\n    }\r\n    private _onLevelSelect() {\r\n        Logging.message(\"Go to level select!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:-this._game.StageWidth}, this._swipeSpeed, createjs.Ease.circOut);\r\n        this._currentScreen = \"levelSelect\";\r\n    }\r\n    private _onExit() {\r\n        Logging.message(\"Go to exit!\");\r\n    }\r\n\r\n    private _onMain() {\r\n        Logging.message(\"Go to main!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:0}, this._swipeSpeed, createjs.Ease.bounceOut);\r\n        this._currentScreen = \"main\";\r\n    }\r\n\r\n    private _onClearData() {\r\n        Logging.success(\"Cleared data!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:this._game.StageWidth, y:this._game.StageHeight}, this._swipeSpeed, createjs.Ease.cubicIn);\r\n        // this._currentScreen = \"cleared\"\r\n        let e = window.setTimeout(() => {\r\n            createjs.Tween.get(this._swipeContainer).to({x:this._game.StageWidth, y:0}, this._swipeSpeed, createjs.Ease.cubicInOut);\r\n            window.clearInterval(e);\r\n            this._currentScreen = \"options\";\r\n        }, 2000);\r\n    }\r\n\r\n    private _onDragStart(e) {\r\n\r\n        this._initialSwipePos = { x:e.stageX, y:e.stageY };\r\n\r\n        //reset drag timer if not null\r\n        if(this._dragTimer != null) window.clearTimeout(this._dragTimer);\r\n        this._dragTimer = setTimeout(() => {\r\n            this._initialSwipePos = { x:-1, y:-1 };\r\n            this._dragTimer = null;\r\n        }, 500);\r\n    }\r\n    private _onDragEnd(e) {\r\n        if(this._initialSwipePos.x != -1 || this._initialSwipePos.y != -1) {\r\n            //find the direction\r\n            if((this._initialSwipePos.x - e.stageX) > 20) {\r\n                if(this._currentScreen == \"options\")\r\n                    this._onMain();\r\n            }\r\n            else if((this._initialSwipePos.x - e.stageX) < -20) {\r\n                if(this._currentScreen == \"levelSelect\")\r\n                    this._onMain();\r\n            }\r\n        }\r\n    }\r\n\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n\r\n        //add in the containers\r\n        this._staticContainer.Sprites.bg.y = 0;\r\n        this._container.addChild(this._staticContainer.Container);\r\n        this._container.addChild(this._swipeContainer);\r\n        this._swipeContainer.addChild(this._mainContainer);\r\n        this._swipeContainer.addChild(this._optionsContainer.Container);\r\n        this._swipeContainer.addChild(this._clearedContainer.Container);\r\n        // this._swipeContainer.addChild(this._levelSelectContainer.Container);\r\n\r\n        \r\n        this._swipeContainer.addChild(this._levelSelectDisplay.Container);\r\n\r\n        return super.create(stage);\r\n    }\r\n\r\n    public enable() {\r\n        console.log(\"LOAD IN MENU ACTIONS\");\r\n        super.enable();\r\n        //listen to events\r\n        (this._mainButtonsContainer.Sprites.btnNewGame as any).on(\"click\", this._onNewGame, this, true);\r\n        (this._mainButtonsContainer.Sprites.btnOptions as any).on(\"click\", this._onOptions, this);\r\n        (this._mainButtonsContainer.Sprites.btnLevelSelect as any).on(\"click\", this._onLevelSelect, this);\r\n        (this._mainButtonsContainer.Sprites.btnExit as any).on(\"click\", this._onExit, this);\r\n\r\n        Sprites.listenToClearData();\r\n        (this._optionsContainer.Sprites.btnClearData as any).on(Sprites.CLEAR_DATA, this._onClearData, this);\r\n\r\n        //listen for swipes\r\n        (this._staticContainer.Sprites.bg as any).on(\"mousedown\", this._onDragStart, this);\r\n        (this._staticContainer.Sprites.bg as any).on(\"click\", this._onDragEnd, this);\r\n\r\n        // this._mainButtonsContainer.Sprites.btnOptions.on(\"click\", () => console.log(\"HELLO I CLIC\"));\r\n\r\n        this._levelSelectDisplay.enable();\r\n\r\n\r\n\r\n        //rock the fish\r\n        createjs.Tween\r\n            // @ts-ignore\r\n            .get(this._fancyFish, { loop:true })\r\n            .to({ y:this._fancyFish.y-30 }, 3000, createjs.Ease.sineInOut)\r\n            .to({ y:this._fancyFish.y }, 3000, createjs.Ease.sineInOut);\r\n\r\n        //rock the logo\r\n        createjs.Tween\r\n            // @ts-ignore\r\n            .get(this._logo, { loop:true })\r\n            .wait(1200)\r\n            .to({ y:this._logo.y-15 }, 4500, createjs.Ease.sineInOut)\r\n            .to({ y:this._logo.y }, 4800, createjs.Ease.sineInOut);\r\n    }\r\n\r\n    public disable() {\r\n        super.disable();\r\n        //stop listen to events\r\n        (this._mainButtonsContainer.Sprites.btnNewGame as any).off(\"click\", this._onNewGame);\r\n        (this._mainButtonsContainer.Sprites.btnOptions as any).off(\"click\", this._onOptions);\r\n        (this._mainButtonsContainer.Sprites.btnLevelSelect as any).off(\"click\", this._onLevelSelect);\r\n        (this._mainButtonsContainer.Sprites.btnExit as any).off(\"click\", this._onExit);\r\n\r\n        Sprites.stopListenToClearData();\r\n        (this._optionsContainer.Sprites.btnClearData as any).off(Sprites.CLEAR_DATA, this._onClearData);\r\n\r\n        //stop listen for swipes\r\n        (this._staticContainer.Sprites.bg as any).off(\"mousedown\", this._onDragStart);\r\n        (this._staticContainer.Sprites.bg as any).off(\"click\", this._onDragEnd);\r\n\r\n\r\n        this._levelSelectDisplay.disable();\r\n\r\n        this.reset();\r\n\r\n\r\n        createjs.Tween.removeAllTweens();\r\n    }\r\n\r\n    public reset() {\r\n        //reset the position of the swipe container\r\n        this._swipeContainer.x = 0;\r\n        this._swipeContainer.y = 0;\r\n\r\n        super.reset();\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n}","import { IUpdateable, ICreateable, IEnableable } from \"../Interfaces\";\r\n\r\nexport class Screen implements ICreateable<Screen>, IUpdateable, IEnableable {\r\n    private _stage:createjs.StageGL;\r\n    protected _container:createjs.Container;\r\n\r\n    constructor() {\r\n        this._container = new createjs.Container();\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Updates the screen. */\r\n    public update(gameTime:number) {\r\n\r\n    }\r\n\r\n    /**Creates the screen and adds to the stage. */\r\n    public create(stage:createjs.StageGL):Screen {\r\n        this._stage = stage;\r\n        //add to the stage\r\n        this._stage.addChild(this._container);\r\n\r\n        \r\n        return this;\r\n    }\r\n\r\n    /**Destroys the screen and removes from the stage. */\r\n    public destroy():Screen {\r\n\r\n        //remove from the stage\r\n        this._stage.removeChild(this._container);\r\n\r\n        return this;\r\n    }\r\n\r\n    public enable() {\r\n\r\n    }\r\n\r\n    public disable() {\r\n        \r\n    }\r\n\r\n    public reset() {\r\n        \r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container():createjs.Container { return this._container; }\r\n    protected get Stage():createjs.StageGL { return this._stage; }\r\n\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\n\r\nexport class SplashScreen extends Screen {\r\n    private _splash:createjs.Shape;\r\n    \r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n        //add stuff\r\n        this._splash = new createjs.Shape();\r\n        this._splash.graphics.beginFill(\"red\");\r\n        this._splash.graphics.drawRect(0, 0, 100, 100);\r\n        this._splash.graphics.endFill();\r\n        this._splash.cache(0, 0, 100, 100);\r\n        this._container.addChild(this._splash);\r\n        super.create(stage);\r\n\r\n        //for testing\r\n        (this._container as any).on(\"click\", (e) => {\r\n            ScreenManager.setCurrentScreen(\"menu\", stage);\r\n        }, this, true);\r\n\r\n        return this;\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n}","import { LoadManager } from \"../managers/LoadManager\";\r\n\r\n/**Used to gain access to in-game sprites. */\r\nexport class Sprites {\r\n    public static CLEAR_DATA:string = \"onClearData\";\r\n\r\n    private static _backgrounds:{ [key:string]:createjs.DisplayObject } = { };\r\n    private static _buttons:{ [key:string]:createjs.DisplayObject } = { };\r\n\r\n    private static _graphics:{ [key:string]:createjs.DisplayObject } = { };\r\n\r\n    private static _spritesheets:createjs.SpriteSheet[];\r\n\r\n    private static _canClearData:boolean = false;\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public static setup() {\r\n        return new Promise((res, rej) => {\r\n            // Sprites.spritesheets = spritesheets\r\n            //setup all the sprites\r\n            /* ------- STATIC ------- */\r\n            Sprites._backgrounds.Main = new createjs.Sprite(LoadManager.Spritesheets.UI); // Static BG\r\n            (Sprites._backgrounds.Main as createjs.Sprite).gotoAndStop(\"bg_main_static\");\r\n\r\n            Sprites._backgrounds.Logo = new createjs.Sprite(LoadManager.Spritesheets.Entities); // LOGO\r\n            (Sprites._backgrounds.Logo as createjs.Sprite).gotoAndStop(\"icon_title\");\r\n\r\n            Sprites._backgrounds.BG = LoadManager.Images.BG; // Redux\r\n            Sprites._backgrounds.BGTop = LoadManager.Images.BGTop;\r\n\r\n\r\n            /* ------- ANIMATED ------- */\r\n            Sprites._backgrounds.Wave = new createjs.Sprite(LoadManager.Spritesheets.UI); // Animated BG\r\n            (Sprites._backgrounds.Wave as createjs.Sprite).gotoAndPlay(\"bg_main\");\r\n\r\n\r\n            /* ------- GRAPHICS ------ */\r\n            Sprites._graphics.Timer = new createjs.Sprite(LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n            (Sprites._graphics.Timer as createjs.Sprite).gotoAndPlay(\"sprTime\");\r\n            Sprites._graphics.Score = new createjs.Sprite(LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n            (Sprites._graphics.Score as createjs.Sprite).gotoAndPlay(\"sprScore\");\r\n            Sprites._graphics.FishRemain = new createjs.Sprite(LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n            (Sprites._graphics.FishRemain as createjs.Sprite).gotoAndPlay(\"sprFish\");\r\n            \r\n            /* ------- BUTTONS ------- */\r\n            Sprites._buttons.NewGame = new createjs.Sprite(LoadManager.Spritesheets.Entities); // New Game\r\n            (Sprites._buttons.NewGame as createjs.Sprite).gotoAndStop(\"btn_new_game\");\r\n            new createjs.ButtonHelper(Sprites._buttons.NewGame as createjs.Sprite, \"btn_new_game\", \"btn_new_game_hover\", \"btn_new_game_hover\");\r\n\r\n\r\n            Sprites._buttons.Options = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Options\r\n            (Sprites._buttons.Options as createjs.Sprite).gotoAndStop(\"btn_new_game\");\r\n            new createjs.ButtonHelper(Sprites._buttons.Options as createjs.Sprite, \"btn_options\", \"btn_options_hover\", \"btn_options_hover\");\r\n\r\n            Sprites._buttons.LevelSelect = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Select\r\n            (Sprites._buttons.LevelSelect as createjs.Sprite).gotoAndStop(\"btn_select\");\r\n            new createjs.ButtonHelper(Sprites._buttons.LevelSelect as createjs.Sprite, \"btn_select\", \"btn_select_hover\", \"btn_select_hover\");\r\n\r\n            Sprites._buttons.Exit = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Exit\r\n            (Sprites._buttons.Exit as createjs.Sprite).gotoAndStop(\"btn_select\");\r\n            new createjs.ButtonHelper(Sprites._buttons.Exit as createjs.Sprite, \"btn_exit\", \"btn_exit_hover\", \"btn_exit_hover\");\r\n\r\n            Sprites._buttons.Fishbowl = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Fishbowl\r\n            (Sprites._buttons.Fishbowl as createjs.Sprite).gotoAndStop(\"btn_select\");\r\n            new createjs.ButtonHelper(Sprites._buttons.Fishbowl as createjs.Sprite, \"icon_fishbowl\", \"icon_fishbowl_hover\", \"icon_fishbowl_hover\", true);\r\n\r\n\r\n            /* ------- MENU ------- */\r\n            Sprites._backgrounds.LevelSelectBG = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Select BG\r\n            (Sprites._backgrounds.LevelSelectBG as createjs.Sprite).gotoAndStop(\"static_bg\");\r\n            Sprites._buttons.LevelEmpty = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Empty Button\r\n            (Sprites._buttons.LevelEmpty as createjs.Sprite).gotoAndStop(\"level_empty\");\r\n            Sprites._buttons.LevelComplete = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Complete Button\r\n            (Sprites._buttons.LevelComplete as createjs.Sprite).gotoAndStop(\"level_complete\");\r\n            Sprites._buttons.LevelSpecialEmpty = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Special Empty Button\r\n            (Sprites._buttons.LevelSpecialEmpty as createjs.Sprite).gotoAndStop(\"level_special_empty\");\r\n            Sprites._buttons.LevelSpecialComplete = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Special Complete Button\r\n            (Sprites._buttons.LevelSpecialComplete as createjs.Sprite).gotoAndStop(\"level_special_complete\");\r\n\r\n\r\n            /* ------- COMPLEX ------- */\r\n            Sprites._setupBTNClearData();\r\n\r\n            res();\r\n        });\r\n    }\r\n\r\n    // /* --- Complex createjs.Sprite Setup --- */\r\n    private static _setupBTNClearData() {\r\n        Sprites._buttons.ClearData = new createjs.Sprite(LoadManager.Spritesheets.UI); // BTN Clear Data\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndStop(\"btn_clear_data\");\r\n        (Sprites._buttons.ClearData as createjs.Sprite).cursor = \"pointer\";\r\n        Sprites._canClearData = false;\r\n    }\r\n    public static listenToClearData() {\r\n        //listen\r\n        (Sprites._buttons.ClearData as any).on(\"mousedown\", Sprites._btnDataDown);\r\n        (Sprites._buttons.ClearData as any).on(\"animationend\", Sprites._btnDataComplete);\r\n        (Sprites._buttons.ClearData as any).on(\"click\", Sprites._btnDataUp);\r\n    }\r\n    public static stopListenToClearData() {\r\n        //listen\r\n        (Sprites._buttons.ClearData as any).off(\"mousedown\", Sprites._btnDataDown);\r\n        (Sprites._buttons.ClearData as any).off(\"animationend\", Sprites._btnDataComplete);\r\n        (Sprites._buttons.ClearData as any).off(\"click\", Sprites._btnDataUp);\r\n    }\r\n\r\n    private static _btnDataDown(e) {\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndPlay(\"btn_clear_data_progress\");\r\n        Sprites._canClearData = true;\r\n    }\r\n    private static _btnDataUp(e) {\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndStop(\"btn_clear_data\");\r\n        Sprites._canClearData = false;\r\n    }\r\n    private static _btnDataComplete(e) {\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndStop(\"btn_clear_data\");\r\n        //dispatch event to button\r\n        if(Sprites._canClearData) {\r\n            (Sprites._buttons.ClearData as createjs.Sprite).dispatchEvent(new Event(Sprites.CLEAR_DATA));\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**A helper function to generate and cache text for the StageGL object. */\r\n    public static generateText(text, details = \"20px Arial\", color = \"#FFFEEE\") {\r\n        const textObj = new createjs.Text(text, details, color)\r\n        textObj.cache(0, 0, textObj.getBounds().width, textObj.getBounds().height);\r\n        return textObj;\r\n    }\r\n\r\n    public static generateBitmapText(text, spritesheet) {\r\n        const textObj = new createjs.BitmapText(text, spritesheet);\r\n        return textObj;\r\n    }\r\n\r\n\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get Backgrounds() { return Sprites._backgrounds; }\r\n    public static get Buttons() { return Sprites._buttons; }\r\n    public static get Graphics() { return Sprites._graphics; }\r\n\r\n    // static get BG() { return Sprites._bg }\r\n    // static get Logo() { return Sprites._logo }\r\n    // static get AnimBG() { return Sprites._animBg }\r\n    // static get GameBG() { return Sprites._gameBG }\r\n    // static get GameBGTop() { return Sprites._gameBGTop }\r\n    // //buttons\r\n    // static get BTN_New_Game() { return Sprites._btnNewGame }\r\n    // static get BTN_Options() { return Sprites._btnOptions }\r\n    // static get BTN_Select() { return Sprites._btnSelect }\r\n    // static get BTN_Exit() { return Sprites._btnExit }\r\n    // static get BTN_Fishbowl() { return Sprites._btnFishbowl }\r\n    // static get BTN_ClearData() { return Sprites._btnClearData }\r\n\r\n\r\n    // static get CLEAR_DATA() { return \"onClearData\" }\r\n}","import { Sprites } from \"../Sprites\";\r\nimport { LoadManager } from \"../../managers/LoadManager\";\r\nimport { Game } from \"../../Game\";\r\nimport { IEnableable } from \"../../Interfaces\";\r\nimport { GameScreen } from \"../../screens/GameScreen\";\r\nimport { DataManager } from \"../../managers/DataManager\";\r\nimport { ScreenManager } from \"../../managers/ScreenManager\";\r\nimport { IntermediaryScreen } from \"../../screens/IntermediaryScreen\";\r\n\r\n\r\nexport class LevelSelectDisplay implements IEnableable {\r\n    private _game:Game;\r\n\r\n    private _container:createjs.Container;\r\n    private _background:createjs.Sprite;\r\n    private _levelsContainer:createjs.Container;\r\n    private _levelTextContainer:createjs.Container;\r\n\r\n    private _levelsData:any;\r\n\r\n    private _levelButtons:createjs.Sprite[];\r\n\r\n    constructor(game:Game) {\r\n        this._game = game;\r\n        this._levelButtons = [];\r\n\r\n        //build the required components for the level select display\r\n        this._container = new createjs.Container();\r\n        this._background = Sprites.Backgrounds.LevelSelectBG as createjs.Sprite;\r\n        this._background.x = (game.StageWidth / 2) - (this._background.getBounds().width / 2);\r\n        this._background.y = 80;\r\n\r\n        this._levelsContainer = new createjs.Container();\r\n        this._container.addChild(this._background);\r\n        let text = Sprites.generateBitmapText(\"Level Select\", LoadManager.Spritesheets.Typography);\r\n        text.x = (game.StageWidth / 2) - (text.getBounds().width / 2);\r\n        text.y = 30;\r\n        this._container.addChild(text);\r\n\r\n\r\n        //setup display text\r\n        this._levelTextContainer = new createjs.Container();\r\n        this._container.addChild(this._levelTextContainer);\r\n\r\n        this.LevelText = \"Hello World!\";\r\n\r\n\r\n        //spoof some level data\r\n        this._levelsData = [\r\n            [\r\n                { name: \"Welcome to the pond!\", complete:true, unlocked:true, data:[0, 0, 0, 0, 0, 0, 0] },\r\n                { name: \"A new adventure!\", complete:true, unlocked:true, data:[0, 0, 0, 0, 0, 0, 0] },\r\n                { name: \"Learn to aim!\", complete:false, unlocked:true, data:[0, 0, 0, 0, 0, 0, 0] },\r\n                { name: \"Persephone!\", special:true, complete:false, unlocked:false, data:[0, 0, 0, 0, 0, 0, 0] },\r\n            ],\r\n            [\r\n                { name: \"In deep water!\", complete:false, unlocked:false, data:[0, 0, 0, 0, 0, 0, 0] },\r\n                { name: \"An ocean of fish!\", complete:false, unlocked:false, data:[0, 0, 0, 0, 0, 0, 0] },\r\n                { name: \"Barnacles ahoy!\", complete:false, unlocked:false, data:[0, 0, 0, 0, 0, 0, 0] },\r\n                { name: \"Owen!\", special:true, complete:false, unlocked:false, data:[0, 0, 0, 0, 0, 0, 0] },\r\n            ]\r\n        ];\r\n\r\n\r\n        //build the level icons\r\n        for(let r = 0; r < this._levelsData.length; r++) {\r\n            //iterate through levels\r\n            for(let i = 0; i < this._levelsData[r].length; i++) {\r\n                const levelData = this._levelsData[r][i];\r\n                console.log(\"LEVEL\", levelData);\r\n                //decide the sprite\r\n                let sprite = Sprites.Buttons.LevelEmpty.clone();\r\n                if(levelData.special != null && levelData.special) sprite = Sprites.Buttons.LevelSpecialEmpty.clone();\r\n                // //completed\r\n                if(levelData.complete) {\r\n                    sprite = Sprites.Buttons.LevelComplete.clone();\r\n                    if(levelData.special != null && levelData.special) sprite = Sprites.Buttons.LevelSpecialComplete;\r\n                }\r\n                //locked\r\n                if(!levelData.unlocked) {\r\n                    sprite.alpha = 0.25;\r\n                }\r\n                else {\r\n                    sprite.alpha = 1;\r\n                     //extras\r\n                    sprite.cursor = \"pointer\";\r\n                }\r\n\r\n                //place\r\n                sprite.x = 60 * i;\r\n                sprite.y = 50 * r;\r\n                //add\r\n                this._levelsContainer.addChild(sprite);\r\n                //to array\r\n                this._levelButtons.push(sprite as createjs.Sprite);\r\n            }\r\n        };\r\n\r\n        this._levelsContainer.x = (game.StageWidth / 2) - (this._levelsContainer.getBounds().width / 2);\r\n        this._levelsContainer.y = 100;\r\n        this._container.addChild(this._levelsContainer);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public enable() {\r\n        this._levelButtons.forEach(btn => {\r\n            btn.on(\"click\", this._onLevelClick, this);\r\n            btn.on(\"mouseover\", this._onLevelHover, this);\r\n            btn.on(\"mouseout\", this._onLevelUnhover, this);\r\n        });\r\n    }\r\n\r\n    public disable() {\r\n        this._levelButtons.forEach(btn => {\r\n            btn.removeAllEventListeners();\r\n        });\r\n    }\r\n\r\n\r\n    /**Returns level data from the given index. */\r\n    private _getDataByIndex(index:number) {\r\n        //flatten level data, and get data\r\n        let flatten = this._levelsData.reduce((acc, next) => acc.concat(next));\r\n        return flatten[index];\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    private _onLevelClick(e) {\r\n         //get button index\r\n        let index = this._levelButtons.indexOf(e.target);\r\n\r\n        if(index == -1) return;\r\n\r\n        //set the level index\r\n        const data = DataManager.getLevelDataByIndex(index);\r\n        console.log(\"MY LEVEL DATA\", data);\r\n        this._game.changeCurrentLevel(data);\r\n        //go to intermediary screen\r\n        const intermediary = ScreenManager.getScreenByKey(\"intermediary\") as IntermediaryScreen;\r\n        new Promise(async(res) => {\r\n            intermediary.Text = data.name;\r\n            await ScreenManager.setCurrentScreen(intermediary, this._game.Stage);\r\n            intermediary.queueNextScreen(\"game\", 1000);\r\n\r\n            res();\r\n        });\r\n    }\r\n\r\n    private _onLevelHover(e) {\r\n        //find the button data\r\n        //get button index\r\n        let index = this._levelButtons.indexOf(e.target);\r\n        \r\n        if(index != -1) {\r\n            const data = this._getDataByIndex(index);\r\n            if(data != null) {\r\n                if(data.unlocked)\r\n                    this.LevelText = data.name;\r\n            }\r\n        }\r\n\r\n    }\r\n    private _onLevelUnhover(e) {\r\n        this.LevelText = \"\";\r\n    }\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container() { return this._container; }\r\n    public set LevelText(value:string) {\r\n        if(value == \"\") {\r\n            this._levelTextContainer.removeAllChildren();\r\n            return;\r\n        }\r\n        //create the text\r\n        const text = Sprites.generateBitmapText(value, LoadManager.Spritesheets.TypographyWhite);\r\n        (text as any).scale = 0.6;\r\n        //load into container\r\n        this._levelTextContainer.removeAllChildren();\r\n        this._levelTextContainer.addChild(text);\r\n\r\n        //put container at bottom\r\n        this._levelTextContainer.x = (this._game.StageWidth / 2) - ((text.getBounds().width / 2) * 0.6);\r\n        this._levelTextContainer.y = this._game.StageHeight - 30;\r\n    }\r\n}","import { Layout } from \"./Layout\";\r\n\r\n/**Uses custom classes and the createjs library to help easily build up ui interfaces with DisplayObjects. */\r\nexport class Container {\r\n    private _sprites:{ [key:string]:createjs.DisplayObject };\r\n    private _container:createjs.Container;\r\n    private _layout:Layout;\r\n\r\n    constructor(layout:{ direction:string, alignment:string, crossAlignment:string, spacing:number } = null) {\r\n        this._sprites = { };\r\n        this._container = new createjs.Container();\r\n        this._layout = (layout != null) ? new Layout(this._container, layout.direction, layout.alignment, layout.crossAlignment, layout.spacing)  : Layout.MAKE_VERTICAL_CENTER(this._container);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public add(key:string, sprite:createjs.DisplayObject, updateLayout:boolean=true):boolean {\r\n        if(this._sprites[key] != null) return false;\r\n        this._sprites[key] = sprite.clone();\r\n\r\n        if(updateLayout) this._layout.buildLayout(true, ...Object.keys(this._sprites).map(k => this._sprites[k]));\r\n        return true;\r\n    }\r\n\r\n    public addMany(sprites:{ [key:string]:createjs.DisplayObject }) {\r\n        Object.keys(sprites).forEach(k => {\r\n            this.add(k, sprites[k], false);\r\n        });\r\n\r\n        this._layout.buildLayout(true, ...Object.keys(this._sprites).map(k => this._sprites[k]));\r\n    }\r\n\r\n    public changeLayout(layout:Layout) {\r\n        this._layout = layout;\r\n    }\r\n\r\n    /**In case of wandering or reusable sprites, call them back to this layout! */\r\n    public checkoutSprites() {\r\n        this._layout.buildLayout(true, ...Object.keys(this._sprites).map(k => this._sprites[k]));\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container():createjs.Container { return this._container; }\r\n    public get Sprites() { return this._sprites; }\r\n\r\n    public static get LAYOUT_OPTIONS() {\r\n        return {\r\n            //column layouts\r\n            //-- left aligned\r\n            \"ColumnLeftTop\" : {direction:Layout.VERTICAL, alignment:Layout.START, crossAlignment:Layout.START, spacing:5},\r\n            \"ColumnLeftCenter\" : {direction:Layout.VERTICAL, alignment:Layout.START, crossAlignment:Layout.CENTER, spacing:5},\r\n            \"ColumnLeftBottom\" : {direction:Layout.VERTICAL, alignment:Layout.START, crossAlignment:Layout.END, spacing:5},\r\n            //-- center aligned\r\n            \"ColumnCenterTop\" : {direction:Layout.VERTICAL, alignment:Layout.CENTER, crossAlignment:Layout.START, spacing:5},\r\n            \"ColumnCenterCenter\" : {direction:Layout.VERTICAL, alignment:Layout.CENTER, crossAlignment:Layout.CENTER, spacing:5},\r\n            \"ColumnCenterBottom\" : {direction:Layout.VERTICAL, alignment:Layout.CENTER, crossAlignment:Layout.END, spacing:5},\r\n            //-- right aligned\r\n            \"ColumnRightTop\" : {direction:Layout.VERTICAL, alignment:Layout.END, crossAlignment:Layout.START, spacing:5},\r\n            \"ColumnRightCenter\" : {direction:Layout.VERTICAL, alignment:Layout.END, crossAlignment:Layout.CENTER, spacing:5},\r\n            \"ColumnRightBottom\" : {direction:Layout.VERTICAL, alignment:Layout.END, crossAlignment:Layout.END, spacing:5}\r\n        };\r\n    }\r\n}","import { Game } from \"../../Game\";\r\n\r\n/**Used to layout createjs display objects. */\r\nexport class Layout {\r\n    //justify content\r\n    public static HORIZONTAL:string = \"horizontal\";\r\n    public static VERTICAL:string = \"vertical\";\r\n    //align items\r\n    public static START:string = \"start\";\r\n    public static END:string = \"end\";\r\n    public static CENTER:string = \"center\";\r\n\r\n    private _parent:createjs.Container;\r\n    private _items:createjs.DisplayObject[];\r\n\r\n    private _direction:string;\r\n    private _alignment:string;\r\n    private _crossAlignment:string;\r\n    private _spacing:number;\r\n\r\n    constructor(parent:createjs.Container, direction:string, alignment:string, crossAlignment:string, spacing:number = 5) {\r\n        this._parent = parent;\r\n        this._items = [];\r\n\r\n        this._direction = direction;\r\n        this._alignment = alignment;\r\n        this._crossAlignment = crossAlignment;\r\n        this._spacing = spacing;\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public buildLayout(addToParent:boolean=true, ...items:createjs.DisplayObject[]) {\r\n        if(items.length <= 0) return;\r\n\r\n        this._items = items;\r\n\r\n        if(addToParent) {\r\n            this._parent.removeAllChildren();\r\n        }\r\n        \r\n\r\n        if(this._direction == Layout.VERTICAL) {\r\n            let totalHeight = 0;\r\n            //ALIGNMENT\r\n            switch(this._alignment) {\r\n                case Layout.START : {\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        item.x = 0;\r\n                        item.y = totalHeight;\r\n                        totalHeight += item.getBounds().height + this._spacing;\r\n                        if(addToParent) this._parent.addChild(item);\r\n                    }\r\n                    break;\r\n                }\r\n                case Layout.CENTER : {\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        item.x = (Game.WIDTH / 2) - (item.getBounds().width / 2);\r\n                        item.y = totalHeight;\r\n                        totalHeight += item.getBounds().height + this._spacing;\r\n                        if(addToParent) this._parent.addChild(item);\r\n                    }\r\n                    break;\r\n                }\r\n                case Layout.END : {\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        item.x = Game.WIDTH - item.getBounds().width;\r\n                        item.y = totalHeight;\r\n                        totalHeight += item.getBounds().height + this._spacing;\r\n                        if(addToParent) this._parent.addChild(item);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n\r\n            //CROSS ALIGNMENT\r\n            //handle vertical alignment\r\n            switch(this._crossAlignment) {\r\n                case Layout.START : {\r\n                    break;\r\n                }\r\n                case Layout.CENTER : {\r\n                    totalHeight += items[items.length-1].getBounds().height;\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        //decipher desired center\r\n                        item.y += (Game.HEIGHT / 2) - (totalHeight / 2);\r\n                    }\r\n                    break;\r\n                }\r\n                case Layout.END :  {\r\n                    totalHeight += items[items.length-1].getBounds().height;\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        //decipher desired center\r\n                        item.y += Game.HEIGHT - totalHeight;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n\r\n        }\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    \r\n    /*--------------- HELPER FUNCTIONS ---------------*/\r\n    public static MAKE_VERTICAL_CENTER(container:createjs.Container) { return new Layout(container, Layout.VERTICAL, Layout.CENTER, Layout.CENTER, 5); }\r\n    public static MAKE_VERTICAL_START(container:createjs.Container) { return new Layout(container, Layout.VERTICAL, Layout.CENTER, Layout.START, 5); }\r\n\r\n}","import { Game } from \"../../Game\";\r\nimport { Sprites } from \"../Sprites\";\r\nimport { LoadManager } from \"../../managers/LoadManager\";\r\n\r\n/**Creates a display container for the game screen. */\r\nexport class GameScore {\r\n    private _game:Game;\r\n    private _container:createjs.Container;\r\n    private _bg:createjs.Shape;\r\n    private _txtTimer:createjs.DisplayObject;\r\n\r\n    private _timerContainer:createjs.Container;\r\n    private _timerTextContainer:createjs.Container;\r\n    private _fishRemainContainer:createjs.Container;\r\n    private _fishRemainTextContainer:createjs.Container;\r\n    private _scoreContainer:createjs.Container;\r\n    private _scoreTextContainer:createjs.Container;\r\n\r\n    //game conditions\r\n    private _useTimer:boolean = false;\r\n    private _useFishRemain:boolean = true;\r\n    private _useScore:boolean = true;\r\n\r\n    constructor(game:Game) {\r\n        this._game = game;\r\n        //create the initial objects\r\n        this._container = new createjs.Container();\r\n        this._bg = new createjs.Shape();\r\n        this._bg.graphics.beginFill(\"#000000\");\r\n        this._bg.graphics.drawRect(0, 0, this._game.StageWidth, 40);\r\n        this._bg.graphics.endFill();\r\n        this._bg.cache(0, 0, this._game.StageWidth, 40);\r\n        this._container.addChild(this._bg);\r\n\r\n        //create the container objects\r\n        //timer\r\n        this._timerContainer = new createjs.Container();\r\n        this._timerContainer.x += 10;\r\n        const timerSprite = Sprites.Graphics.Timer.clone();\r\n        this._timerContainer.addChild(timerSprite);\r\n        this._timerTextContainer = new createjs.Container();\r\n        this._timerTextContainer.y += 8;\r\n        this._timerTextContainer.x += Sprites.Graphics.Timer.getBounds().width + 10;\r\n        this._timerContainer.addChild(this._timerTextContainer);\r\n        this._container.addChild(this._timerContainer);\r\n\r\n        //fish remain\r\n        this._fishRemainContainer = new createjs.Container();\r\n        const fishRemainSprite = Sprites.Graphics.FishRemain.clone();\r\n        this._fishRemainContainer.addChild(fishRemainSprite);\r\n        this._fishRemainTextContainer = new createjs.Container();\r\n        this._fishRemainTextContainer.y += 8;\r\n        this._fishRemainTextContainer.x += Sprites.Graphics.FishRemain.getBounds().width + 10;\r\n        this._fishRemainContainer.addChild(this._fishRemainTextContainer);\r\n        this._container.addChild(this._fishRemainContainer);\r\n\r\n        //score\r\n        this._scoreContainer = new createjs.Container();\r\n        this._scoreContainer.x = this._game.StageWidth - Sprites.Graphics.Score.getBounds().width - 40;\r\n        const scoreSprite = Sprites.Graphics.Score.clone();\r\n        this._scoreContainer.addChild(scoreSprite);\r\n        this._scoreTextContainer = new createjs.Container();\r\n        this._scoreTextContainer.y += 8;\r\n        this._scoreTextContainer.x += Sprites.Graphics.Score.getBounds().width + 10;\r\n        this._scoreContainer.addChild(this._scoreTextContainer);\r\n        this._container.addChild(this._scoreContainer);\r\n        \r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public startHUD(showScore:boolean, showFishRemain:boolean, showTimer:boolean) {\r\n        this._useScore = showScore;\r\n        this._useFishRemain = showFishRemain;\r\n        this._useTimer = showTimer;\r\n\r\n        console.log(\"SHOW ME THE SCORE, REMAIN, TIMER\", showScore, showFishRemain, showTimer);\r\n\r\n        if(this._useScore) this._container.addChild(this._scoreContainer);\r\n        else this._container.removeChild(this._scoreContainer);\r\n\r\n        if(this._useFishRemain) this._container.addChild(this._fishRemainContainer);\r\n        else this._container.removeChild(this._fishRemainContainer);\r\n\r\n        if(this._useTimer) this._container.addChild(this._timerContainer);\r\n        else this._container.removeChild(this._timerContainer);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public update(gameTime:number) {\r\n        \r\n        // //get the game timer\r\n        // let timer = gameTime;\r\n        // this._timerTextContainer.removeAllChildren();\r\n        // let timerCont = Sprites.generateBitmapText(this._game.CurrentLevelData.currentTime.toString(), LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n        // this._timerTextContainer.addChild(timerCont);\r\n\r\n        // //get the fish remain score\r\n        // let fishRemain = gameTime;\r\n        // this._fishRemainTextContainer.removeAllChildren();\r\n        // let fishRemainCont = Sprites.generateBitmapText(this._game.CurrentLevelData.remainingFish.toString(), LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n        // this._fishRemainTextContainer.addChild(fishRemainCont);\r\n        // this._fishRemainContainer.x = (this._game.StageWidth / 2) - (this._fishRemainContainer.getBounds().width / 2);\r\n\r\n        // //get the score\r\n        // let score = gameTime;\r\n        // this._scoreTextContainer.removeAllChildren();\r\n        // let scoreCont = Sprites.generateBitmapText(this._game.CurrentLevelData.score.toString(), LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n        // this._scoreTextContainer.addChild(scoreCont);\r\n        // this._scoreContainer.x = this._game.StageWidth - this._scoreContainer.getBounds().width - 40;\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container() { return this._container; }\r\n\r\n}"]}