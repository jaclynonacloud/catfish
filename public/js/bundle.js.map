{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/Functions.ts","src/Game.ts","src/ObjectPool.ts","src/entities/Cat.ts","src/entities/Entity.ts","src/entities/Fish.ts","src/main.ts","src/managers/DataManager.ts","src/managers/LoadManager.ts","src/managers/ScreenManager.ts","src/screens/EndScreen.ts","src/screens/GameScreen.ts","src/screens/IntermediaryScreen.ts","src/screens/MenuScreen.ts","src/screens/Screen.ts","src/screens/SplashScreen.ts","src/ui/Sprites.ts","src/ui/custom/LevelSelectDisplay.ts","src/ui/display/Container.ts","src/ui/display/Layout.ts","src/ui/partials/GameScore.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Logging","message","console","log","_message","LoadManager_1","ScreenManager_1","SplashScreen_1","MenuScreen_1","GameScreen_1","EndScreen_1","Functions_1","Sprites_1","IntermediaryScreen_1","DataManager_1","Game","canvasDiv","_this","this","_classCallCheck","_canvas","width","WIDTH","height","HEIGHT","_lastGameTime","_scaling","Promise","res","rej","__awaiter","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","_stage","createjs","StageGL","antialias","setClearColor","enableMouseOver","update","addEventListener","LoadManager","ASSETS_UPDATED","Percentage","loadAssets","catch","err","warn","success","DataManager","loadWorldsData","error","changeCurrentLevel","getLevelDataByIndex","Sprites","setup","ScreenManager","registerScreen","SplashScreen","MenuScreen","GameScreen","EndScreen","IntermediaryScreen","setCurrentScreen","Ticker","framerate","FRAME_RATE","on","stop","levelData","_currentLevel","meta","currentTime","remainingFish","data","score","gameTime","getMeasuredFPS","CurrentScreen","Math","min","document","body","clientHeight","ObjectPool","obj","type","poolObj","active","Pool","push","_getObjectByType","_getObjectByObj","_pool","find","Entity_1","Cat","gameScreen","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","Spritesheets","Cat_Spritesheet","_speed","_fishCaughtMultiplier","_caughtFish","_isGrabbing","_isRising","_hasReachedSurface","_sprite","gotoAndPlay","ANIMATION","Idle","Entity","_this2","X","Stage","mouseX","Speed","speed","mouseY","_catYTween","Tween","get","to","y","Ease","circIn","Grab","Hold","fishes","tryToGrabFishes","Y","caught","returnToSurface","_this3","removeTweens","wait","linear","reachSurface","_this4","hasNewFish","forEach","indexOf","enemy","_this5","Ow","_this6","collectFish","_this7","_get","prototype","caughtFishMult","value","freeze","Death","spritesheet","_gameScreen","Sprite","_direction","x","_isIgnoringCollision","_ignoreCollisionTimer","Scaling","container","scale","addChild","parent","removeChild","IGNORE_COLLISION","artificialReg","arguments","undefined","reg","regX","regY","Bounds","Width","Height","bounds","StageWidth","extents","StageHeight","HIT","Right","Left","lastX","scaleX","getBounds","Top","Bottom","Fish","Fish_Spritesheet","_isCaught","Slow","_naturalY","Panic","hitTest","disable","IsIgnoringCollision","testStageBounds","startIgnoreCollision","Fast","Game_1","getElementById","fileLocation","fetch","then","blob","json","_worldsData","index","concat","apply","worlds","_sheetsTotal","_sheetsLoaded","_percentage","_totalAssetsLoaded","_totalAssets","src","stage","reset","_preloadManager","LoadQueue","Sound","registerPlugins","WebAudioPlugin","HTMLAudioPlugin","FlashAudioPlugin","alternateExtensions","installPlugin","_onLoaded","_onComplete","_onError","setMaxConnections","loadManifest","ASSETS_LOADED","emitErrorEvent","dispatchEvent","AssetsLoadedEvent","AssetsFailedEvent","parseFloat","getItems","toFixed","AssetsUpdatedEvent","name","sheet","item","Types","JAVASCRIPT","window","id","_SpriteSheet","complete","_loadedSheet","ev","remove","IMAGE","Images","Bitmap","emitUpdatedEvent","removeAllEventListeners","setInterval","emitLoadedEvent","Event","ASSETS_FAILED","Screen_1","key","screen","_screensLookup","tempScreen","Screen","resolve","promises","_currentScreen","Container","alpha","destroy","_callee2","_context2","all","create","enable","Container_1","game","_game","bg","Catfish_End","_container","_buttonsContainer","LAYOUT_OPTIONS","ColumnLeftBottom","addMany","btnTryAgain","btnNextLevel","btnMainMenu","_highScoreSpr","_completeSpr","_failSpr","_scoreContainer","ColumnCenterCenter","fishRemain","time","combos","line","ObjectPool_1","Fish_1","Cat_1","GameScore_1","_fishes","CurrentLevelData","createPoolObject","POOL","CAT","FISH","_cat","checkout","_staticContainer","Backgrounds","BG","_fishContainer","_winContainer","_gameScore","GameScore","fish","localPos","globalToLocal","testHit","win","elasticOut","checkoutSprites","_winBanner","Shape","graphics","beginFill","drawRect","cache","_winText","generateBitmapText","TypographyWhite","mouseEnabled","flip","DirectionX","setNaturalY","showScore","showTimer","duration","showFishRemain","showRemainingFish","startHUD","removeAllChildren","normalizedTime","grab","_text","screenKey","evt","setTimeout","clearTimeout","_bg","endFill","_textContainer","_txtSprite","Text","LevelSelectDisplay_1","_swipeContainer","Catfish_Main","_mainContainer","_logo","_mainButtonsContainer","btnNewGame","btnOptions","btnLevelSelect","btnExit","_fancyFish","_optionsContainer","txtOptions","Typography","btnClearData","Buttons","ClearData","_clearedContainer","add","_levelSelectDisplay","LevelSelectDisplay","_swipeSpeed","_initialSwipePos","intermediary","getScreenByKey","queueNextScreen","circOut","bounceOut","cubicIn","cubicInOut","clearInterval","stageX","stageY","_dragTimer","_onMain","_onNewGame","_onOptions","_onLevelSelect","_onExit","listenToClearData","CLEAR_DATA","_onClearData","_onDragStart","_onDragEnd","loop","sineInOut","off","stopListenToClearData","removeAllTweens","_splash","_backgrounds","Main","UI","gotoAndStop","Logo","Entities","BGTop","Wave","_graphics","Timer","ScoreHUD_Spritesheet","Score","FishRemain","_buttons","NewGame","ButtonHelper","Options","LevelSelect","Exit","Fishbowl","LevelSelectBG","Menu_Level_Select","LevelEmpty","LevelComplete","LevelSpecialEmpty","LevelSpecialComplete","_setupBTNClearData","cursor","_canClearData","_btnDataDown","_btnDataComplete","_btnDataUp","text","details","color","textObj","BitmapText","_levelButtons","_background","_levelsContainer","_levelTextContainer","LevelText","_levelsData","unlocked","special","sprite","clone","btn","_onLevelClick","_onLevelHover","_onLevelUnhover","reduce","acc","target","_getDataByIndex","Layout_1","layout","_sprites","_layout","Layout","direction","alignment","crossAlignment","spacing","MAKE_VERTICAL_CENTER","updateLayout","buildLayout","_toConsumableArray","keys","map","k","sprites","_layout2","_layout3","ColumnLeftTop","VERTICAL","START","ColumnLeftCenter","CENTER","END","ColumnCenterTop","ColumnCenterBottom","ColumnRightTop","ColumnRightCenter","ColumnRightBottom","_parent","_items","_alignment","_crossAlignment","_spacing","addToParent","_len","items","Array","_key","totalHeight","_i","_item","_i2","_item2","_i3","_i4","HORIZONTAL","_useTimer","_useFishRemain","_useScore","_timerContainer","timerSprite","Graphics","_timerTextContainer","_fishRemainContainer","fishRemainSprite","_fishRemainTextContainer","scoreSprite","_scoreTextContainer","timerCont","toString","fishRemainCont","scoreCont"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/* ************************************************* */\r\n/*                      LOGGING                      */\r\n/* ************************************************* */\r\nexport class Logging {\r\n    static success(message:string):void {\r\n        console.log(`%c ${message}`, 'color:seagreen; font-size:1.1em; font-weight:bold; border-left: solid 3px seagreen;')    ;\r\n    }\r\n\r\n    static message(message:string):void {\r\n        console.log(`%c ${message}`, 'color:#1E265C; font-size:1.1em; font-weight:bold; border-left: solid 3px #1E265C;');\r\n    }\r\n\r\n    static error(message:string):void {\r\n        console.log(`%c ${message}`, 'color:red; font-size:1.1em; border-left: solid 3px red;');\r\n    }\r\n}","import { LoadManager } from \"./managers/LoadManager\";\r\nimport { ScreenManager } from \"./managers/ScreenManager\";\r\nimport { SplashScreen } from \"./screens/SplashScreen\";\r\nimport { MenuScreen } from \"./screens/MenuScreen\";\r\nimport { GameScreen } from \"./screens/GameScreen\";\r\nimport { EndScreen } from \"./screens/EndScreen\";\r\nimport { Logging } from \"./Functions\";\r\nimport { Sprites } from \"./ui/Sprites\";\r\nimport { IntermediaryScreen } from \"./screens/IntermediaryScreen\";\r\nimport { DataManager, LevelData } from \"./managers/DataManager\";\r\n\r\nexport interface CurrentLevelData {\r\n    meta:LevelData;\r\n    remainingFish:number;\r\n    currentTime:number;\r\n    score:number;\r\n}\r\n\r\n\r\nexport class Game {\r\n    private _canvas:HTMLCanvasElement;\r\n    private _stage:createjs.StageGL;\r\n    private _scaling:number;\r\n\r\n    private _lastGameTime:number;\r\n\r\n    private _currentLevel:CurrentLevelData;\r\n\r\n    constructor(canvasDiv:HTMLCanvasElement) {\r\n\r\n        this._canvas = canvasDiv;\r\n        this._canvas.width = Game.WIDTH;\r\n        this._canvas.height = Game.HEIGHT;\r\n\r\n        this._lastGameTime = -1;\r\n\r\n        //set the scaling\r\n        this._scaling = Game.HEIGHT / 1024;\r\n\r\n        //start loading game assets\r\n        new Promise(async(res, rej) => {\r\n            //create the stage\r\n            console.log(\"Readying stage!\");\r\n            this._stage = new createjs.StageGL(this._canvas, { antialias: true });\r\n            (this._stage as any).setClearColor(\"#000000\");\r\n            this._stage.enableMouseOver(10);\r\n            this._stage.update();\r\n\r\n            // this._stage.scaleX = this._stage.scaleY = 0.8;\r\n\r\n            console.log(this._stage, this._canvas);\r\n\r\n            //listen to asset updates\r\n            (this._stage as any).addEventListener(LoadManager.ASSETS_UPDATED, (e) => {\r\n                console.log(LoadManager.Percentage);\r\n            });\r\n            //load assets\r\n            await LoadManager.loadAssets(\"assets/manifest.json\", this._stage)\r\n                .catch(err => {\r\n                    console.warn(\"Error loading assets:\", err);\r\n                });\r\n\r\n            Logging.success(\"Assets Loaded Successfully!\");\r\n\r\n            //load level data\r\n            await DataManager.loadWorldsData(\"assets/data/levels.json\")\r\n                .catch(err => {\r\n                    Logging.error(err);\r\n                    return;\r\n                });\r\n\r\n            //set the current screen\r\n            //game test, load desired level patch -- if autoloading to game screen\r\n            this.changeCurrentLevel(DataManager.getLevelDataByIndex(1));\r\n\r\n            Logging.success(\"Level Data Loaded Successfully!\");\r\n\r\n            //setup createjs.Sprites\r\n            await Sprites.setup();\r\n\r\n            //build the screens\r\n            ScreenManager.registerScreen(\"splash\", new SplashScreen());\r\n            ScreenManager.registerScreen(\"menu\", new MenuScreen(this));\r\n            ScreenManager.registerScreen(\"game\", new GameScreen(this));\r\n            ScreenManager.registerScreen(\"end\", new EndScreen(this));\r\n            ScreenManager.registerScreen(\"intermediary\", new IntermediaryScreen(this));\r\n            \r\n\r\n            ScreenManager.setCurrentScreen(\"end\", this._stage);\r\n\r\n            //setup the game loop\r\n            createjs.Ticker.framerate = Game.FRAME_RATE;\r\n            createjs.Ticker.on(\"tick\", this.update, this);\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public changeCurrentLevel(levelData:LevelData) {\r\n        this._currentLevel = {\r\n            meta : levelData,\r\n            currentTime : 0,\r\n            remainingFish : levelData.data.length,\r\n            score : 0\r\n        };\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    public update(e:any) {\r\n\r\n        const gameTime = (this._lastGameTime != -1) ? createjs.Ticker.getMeasuredFPS() - this._lastGameTime : 1;\r\n        this._lastGameTime = createjs.Ticker.getMeasuredFPS();\r\n\r\n        //update the screen\r\n        if(ScreenManager.CurrentScreen != null) ScreenManager.CurrentScreen.update(gameTime);\r\n\r\n        //update the stage\r\n        this._stage.update();\r\n    }\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get FRAME_RATE() { return 30; }\r\n    // public static get WIDTH() { return 411; } //desired size\r\n    // public static get HEIGHT() { return 731; }\r\n    // public static get WIDTH() { return document.body.clientHeight * 0.56; } //desired size\r\n    // public static get HEIGHT() { return document.body.clientHeight; }\r\n    public static get WIDTH() { return Game.HEIGHT * 0.5625; } //desired size\r\n    public static get HEIGHT() { return Math.min(document.body.clientHeight, 1024); }\r\n\r\n    public get StageWidth() { return this._canvas.width; } //actual size\r\n    public get StageHeight() { return this._canvas.height; }\r\n\r\n    public get Stage() { return this._stage; }\r\n    public get Scaling() { return this._scaling; }\r\n\r\n    public get CurrentLevelData() { return this._currentLevel; }\r\n\r\n\r\n\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n\r\n\r\n}","import { Logging } from \"./Functions\";\r\nimport { Entity } from \"./entities/Entity\";\r\n\r\nexport interface IPoolObject {\r\n    type:string;\r\n    obj:Entity,\r\n    active:boolean;\r\n}\r\n\r\nexport class ObjectPool {\r\n    private static _pool:IPoolObject[];\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Creates a pool object. */\r\n    public static createPoolObject(obj:Entity, type:string) {\r\n        const poolObj = {\r\n            type,\r\n            obj,\r\n            active: false\r\n        };\r\n        ObjectPool.Pool.push(poolObj);\r\n        return poolObj;\r\n    }\r\n\r\n    /**Checks out a pool object.  Use POOL global function to access. */\r\n    public static checkout(type:string) {\r\n        const poolObj = ObjectPool._getObjectByType(type);\r\n        if(poolObj != null) {\r\n            poolObj.active = true;\r\n            return poolObj.obj;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**Returns an object to the pool. */\r\n    public static return(obj:Entity) {\r\n        const poolObj = ObjectPool._getObjectByObj(obj);\r\n        if(poolObj != null) {\r\n            poolObj.active = false;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    public static _getObjectByType(type) {\r\n        const poolObj = ObjectPool._pool.find((o => o.type == type && !o.active));\r\n        if(poolObj == null) Logging.error(\"Object not found in pool, or pool is exhausted.  Return some objects.\");\r\n        return poolObj\r\n    }\r\n    public static _getObjectByObj(obj) {\r\n        return ObjectPool._pool.find((o => o.obj == obj));\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get Pool() { \r\n        if(ObjectPool._pool == null) ObjectPool._pool = [];\r\n        return ObjectPool._pool;\r\n    }\r\n}","import { Game } from \"../Game\";\r\nimport { Entity } from \"./Entity\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { IEnableable } from \"../Interfaces\";\r\nimport { Logging } from \"../Functions\";\r\nimport { GameScreen } from \"../screens/GameScreen\";\r\nimport { Fish } from \"./Fish\";\r\n\r\nexport class Cat extends Entity implements IEnableable {\r\n    private _speed:number;\r\n    private _fishCaughtMultiplier:number; //this will be the rate at which the cat slows down when rising per fish\r\n\r\n    private _catYTween:createjs.Tween;\r\n    private _caughtFish:Fish[];\r\n\r\n    private _isGrabbing:boolean;\r\n    private _isRising:boolean;\r\n    private _hasReachedSurface:boolean;\r\n\r\n    constructor(gameScreen:GameScreen) {\r\n        super(gameScreen, LoadManager.Spritesheets.Cat_Spritesheet);\r\n        this._speed = 3;\r\n        this._fishCaughtMultiplier = 0.05;\r\n\r\n        this._caughtFish = [];\r\n        this._isGrabbing = false;\r\n        this._isRising = false;\r\n        this._hasReachedSurface = true;\r\n\r\n        this._sprite.gotoAndPlay(Cat.ANIMATION.Idle);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    enable() {\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n    }\r\n\r\n\r\n    /***************/\r\n    /*   ACTIONS   */\r\n    /***************/\r\n    public grab() {\r\n        //cannot grab if we are not at surface\r\n        if(!this._hasReachedSurface) return;\r\n\r\n        this._isGrabbing = true;\r\n        this._hasReachedSurface = false;\r\n\r\n        //move to x position\r\n        this.X = this.GameScreen.Game.Stage.mouseX;\r\n\r\n\r\n        console.log(\"START SPEED:\", this.Speed);\r\n\r\n        //grab to y position\r\n        const speed = (this.GameScreen.Game.Stage.mouseY / 2) * this.Speed;\r\n        this._catYTween = createjs.Tween\r\n            .get(this._sprite)\r\n            .to({ y:this.GameScreen.Game.Stage.mouseY }, speed, createjs.Ease.circIn)\r\n            .call(() => {\r\n                //once the grab is done, turn off flag\r\n                this._isGrabbing = false;\r\n\r\n                 //play animations\r\n                this._sprite.gotoAndPlay(Cat.ANIMATION.Grab);\r\n                //listen for animation to finish\r\n                (this._sprite as any).on(\"animationend\", () => {\r\n                    this._sprite.gotoAndPlay(Cat.ANIMATION.Hold);\r\n                }, true);\r\n\r\n                //try to grab a fish\r\n                const fishes = this.GameScreen.tryToGrabFishes(this.X , this.Y);\r\n                //see if a fish was grabbed\r\n                if(fishes.length > 0) this.caught(fishes);\r\n                else this.returnToSurface();\r\n            });\r\n\r\n    }\r\n\r\n    /**\r\n     * Called to return cat to surface.\r\n     */\r\n    public returnToSurface() {\r\n        this._sprite.gotoAndPlay(Cat.ANIMATION.Idle);\r\n\r\n        //remove any lingering tweens\r\n        createjs.Tween.removeTweens(this._sprite);\r\n        const speed = (this.Y / 2) * this.Speed;\r\n        this._catYTween = createjs.Tween.get(this._sprite)\r\n            .wait(150)\r\n            .to({y:20}, speed, createjs.Ease.linear)\r\n            .call(() => {\r\n                //once the surface has been reached, allow x movement again\r\n                this.reachSurface();\r\n            });\r\n    }\r\n\r\n    public caught(fishes:Fish[]) {\r\n        console.log(\"I CAUGHT\");\r\n        if(fishes.length <= 0) return;\r\n        this._isRising = true;  \r\n        \r\n        let hasNewFish = false;\r\n\r\n        fishes.forEach(f => {\r\n            if(this._caughtFish.indexOf(f) != -1) return;\r\n            hasNewFish = true;\r\n            //grab the fish\r\n            f.catch();\r\n\r\n            //add fish to caught array\r\n            this._caughtFish.push(f);\r\n\r\n            //control the fish\r\n            f.Y = this.Y;\r\n        });\r\n        \r\n        console.log(\"I WAS CAUGHT, NOW RISING\");\r\n        console.log(\"FISH CAUGHT SPEED:\", this.Speed);\r\n\r\n        if(!hasNewFish) return;\r\n        \r\n        //if we grabbed a fish...\r\n        //go back up... slowly\r\n        createjs.Tween.removeTweens(this._sprite);\r\n        const speed = this.Y * this.Speed;\r\n        this._catYTween = createjs.Tween.get(this._sprite)\r\n            .wait(250)\r\n            .to({y:-20}, speed, createjs.Ease.linear)\r\n            .call(() => {\r\n                //once the surface has been reached, allow x movement again\r\n                this.reachSurface();\r\n                this._isRising = false;\r\n            });\r\n\r\n    }\r\n    public drop() {\r\n        //release the fish\r\n        // this._caughtFish.dropped();\r\n        this._caughtFish = [];\r\n        //return quickly\r\n        this.returnToSurface();\r\n    }\r\n\r\n    /**Called when hit by an enemy. */\r\n    public injure(enemy) {\r\n        //start hurt animation\r\n        //end any current tweening\r\n        createjs.Tween.removeTweens(this._sprite);\r\n        this._sprite.gotoAndPlay(Cat.ANIMATION.Ow);\r\n        this._catYTween = createjs.Tween.get(this._sprite)\r\n            .wait(30)\r\n            .to({y:20}, 1000, createjs.Ease.linear)\r\n            .call(() => {\r\n                //once the surface has been reached, allow x movement again\r\n                this.reachSurface();\r\n                this._sprite.gotoAndPlay(Cat.ANIMATION.Idle);\r\n            });\r\n    }\r\n\r\n    public reachSurface() {\r\n        //if we have a fish, send to main logic\r\n        if(this._caughtFish != null) {\r\n            this._caughtFish.forEach(f => {\r\n                this.GameScreen.collectFish(f);\r\n            });\r\n            this._caughtFish = [];\r\n        }\r\n\r\n        this._hasReachedSurface = true;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    update(gameTime:number) {\r\n        super.update(gameTime);\r\n\r\n\r\n        //if we are rising, attempt to catch more fish\r\n        if(this._isRising) {\r\n            console.log(\"TRY TO GRAB\");\r\n            //try to grab a fish\r\n            const fishes = this.GameScreen.tryToGrabFishes(this.X , this.Y);\r\n            //see if a fish was grabbed\r\n            if(fishes.length > 0)\r\n                this.caught(fishes);\r\n        }\r\n\r\n        //drag fish with us if we have any\r\n        if(this._caughtFish != null) {\r\n            this._caughtFish.forEach(f => {\r\n                f.Y = this.Y - 20;\r\n            });\r\n        }\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get GRAB_RANGE() { return 120; }\r\n    public static get ANIMATION() {\r\n        return Object.freeze({\r\n            \"Idle\" : \"cat_idle\",\r\n            \"Death\" : \"cat_death\",\r\n            \"Grab\" : \"cat_grab\",\r\n            \"Hold\" : \"cat_grab_hold\",\r\n            \"Ow\" : \"cat_ow\"\r\n        });\r\n    }\r\n    public get Speed() { \r\n        const caughtFishMult = ((this._caughtFish.length > 0) ? 1 + (this._caughtFish.length + this._fishCaughtMultiplier) : 1);\r\n        console.log(caughtFishMult);\r\n\r\n        return caughtFishMult * this._speed;\r\n    }\r\n    public set Speed(value:number) { this._speed = value; }\r\n}","import { ICreateable, IUpdateable } from \"../Interfaces\";\r\nimport { GameScreen } from \"../screens/GameScreen\";\r\nimport { Game } from \"../Game\";\r\n\r\nexport class Entity implements ICreateable<Entity>, IUpdateable {\r\n    private _gameScreen:GameScreen;\r\n    protected _name:string;\r\n    protected _sprite:createjs.Sprite;\r\n    protected _direction:{ x:number, y:number };\r\n    private _scaling:number;\r\n\r\n    private _isIgnoringCollision:boolean;\r\n    private _ignoreCollisionTimer:number;\r\n\r\n    constructor(gameScreen:GameScreen, spritesheet:createjs.SpriteSheet) {\r\n        this._gameScreen = gameScreen;\r\n        this._sprite = new createjs.Sprite(spritesheet);\r\n        this._direction = { x:1, y:1 };\r\n\r\n        this._isIgnoringCollision = false;\r\n        this._ignoreCollisionTimer = 0;\r\n\r\n        //get the game scale\r\n        this._scaling = this._gameScreen.Game.Scaling;\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public create(container:createjs.Container):Entity {\r\n        (this._sprite as any).scale = this._scaling;\r\n        //move to main container\r\n        if(container == null)\r\n            this._gameScreen.Game.Stage.addChild(this._sprite);\r\n        else\r\n            container.addChild(this._sprite);\r\n        return this;\r\n    }\r\n\r\n    public destroy():Entity {\r\n        if(this._sprite == null || this._sprite.parent == null) return null;\r\n\r\n        //remove from main container\r\n        this._sprite.parent.removeChild(this._sprite);\r\n\r\n        return this;\r\n    }\r\n\r\n    public update(gameTime:number) {\r\n\r\n         //listen for collision ignore\r\n        if(this._isIgnoringCollision) {\r\n            this._ignoreCollisionTimer++;\r\n\r\n            if(this._ignoreCollisionTimer > Entity.IGNORE_COLLISION)\r\n                this._isIgnoringCollision = false;\r\n        }\r\n    }\r\n\r\n    protected startIgnoreCollision() {\r\n        this._isIgnoringCollision = true\r\n    }\r\n\r\n    protected testStageBounds(artificialReg:{x:number, y:number} = null) {\r\n        let reg = { x:this._sprite.regX, y:this._sprite.regY };\r\n        if(artificialReg != null) {\r\n            reg = {\r\n                x: (this._direction.x > 0) ? this.Bounds.Width * artificialReg.x : (this.Bounds.Width * (1 - artificialReg.x)),\r\n                y: (this._direction.y > 0) ? this.Bounds.Height * artificialReg.y : (this.Bounds.Height * (1 - artificialReg.y))\r\n            }\r\n        }\r\n        // const bounds = { width:this._game.StageWidth, height: this._game.StageHeight };\r\n        const bounds = { width:this._gameScreen.Game.StageWidth, height: this._gameScreen.Game.StageHeight };\r\n        const extents = {   \r\n            x:(this._direction.x > 0) ? (this.Bounds.Width - reg.x) : -reg.x, \r\n            y:(this._direction.y > 0) ? (this.Bounds.Height - reg.y) : -reg.y \r\n        };\r\n\r\n        //test walls\r\n        if((this.X + extents.x) > bounds.width) return Entity.HIT.Right;\r\n        else if(this.X + extents.x < 0) return Entity.HIT.Left;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get IGNORE_COLLISION() { return 20; }\r\n    public static get HIT() { return Object.freeze({Top:0, Right:1, Bottom:2, Left:3}); }\r\n\r\n    protected get GameScreen() { return this._gameScreen; }\r\n\r\n    public get Sprite() { return this._sprite; }\r\n    public get Parent() { return this._sprite.parent; }\r\n\r\n    public get X() { return this._sprite.x; }\r\n    public set X(value) { this._sprite.x = value; }\r\n    public get Y() { return this._sprite.y; }\r\n    public set Y(value) { this._sprite.y = value; }\r\n\r\n    public set DirectionX(value) { \r\n        const lastX = this._direction.x;\r\n        this._direction.x = value; \r\n        //flip sprite if our direction has changed\r\n        if(this._direction.x != lastX) this._sprite.scaleX *= -1;\r\n    }\r\n\r\n    public get Bounds() { \r\n        let bounds = this._sprite.getBounds();\r\n        return  { Width:bounds.width, Height:bounds.height };\r\n    }\r\n\r\n    public get IsIgnoringCollision() { return this._isIgnoringCollision; }\r\n}","import { Game } from \"../Game\";\r\nimport { Entity } from \"./Entity\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { IEnableable } from \"../Interfaces\";\r\nimport { Logging } from \"../Functions\";\r\nimport { GameScreen } from \"../screens/GameScreen\";\r\n\r\nexport class Fish extends Entity implements IEnableable {\r\n    private _speed:number;\r\n    private _naturalY:number;\r\n\r\n    private _isCaught:boolean;\r\n\r\n    constructor(gameScreen:GameScreen) {\r\n        super(gameScreen, LoadManager.Spritesheets.Fish_Spritesheet);\r\n        this._speed = 1;\r\n\r\n        this._isCaught = false;\r\n\r\n        this._sprite.gotoAndPlay(Fish.ANIMATION.Slow);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    \r\n\r\n\r\n    /***************/\r\n    /*   ACTIONS   */\r\n    /***************/\r\n    public setNaturalY() {\r\n        this._naturalY = this.Y;\r\n    }\r\n\r\n    public catch() {\r\n        if(this._isCaught) return;\r\n        \r\n        Logging.message(\"Fish was grabbed!\");\r\n        this._isCaught = true;\r\n\r\n        this._sprite.gotoAndPlay(Fish.ANIMATION.Panic);\r\n    }\r\n\r\n\r\n    /**Test to see if global position hits sprite. */\r\n    public testHit(x:number, y:number):boolean {\r\n        return this._sprite.hitTest(x, y);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    destroy() {\r\n        this.disable();\r\n        return super.destroy();\r\n    }\r\n\r\n    update(gameTime:number) {\r\n        super.update(gameTime);\r\n\r\n        //move the fishy\r\n        if(!this._isCaught)\r\n            this.X += this._speed * gameTime * this._direction.x;\r\n\r\n        //test collision\r\n        if(!this.IsIgnoringCollision) {\r\n\r\n            //if fish hits the edge, flip direction\r\n            const hit = this.testStageBounds({x:0.5, y:0.5});\r\n            switch(hit) {\r\n                case Entity.HIT.Right:\r\n                    this._direction.x *= -1;\r\n                    this._sprite.scaleX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X -= 5 - this.Bounds.Width;\r\n                    break;\r\n                case Entity.HIT.Left:\r\n                    this._direction.x *= -1;\r\n                    this._sprite.scaleX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X += 5 - this.Bounds.Width;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    enable() {\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get ANIMATION() {\r\n        return Object.freeze({\r\n            \"Slow\" : \"fish_swim_slow\",\r\n            \"Fast\" : \"fish_swim_fast\",\r\n            \"Panic\" : \"fish_swim_panic\"\r\n        });\r\n    }\r\n    public get Speed() { return this._speed; }\r\n    public set Speed(value:number) { this._speed = value; }\r\n}","import { Game } from \"./Game\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    const game = new Game(document.getElementById(\"game-canvas\") as HTMLCanvasElement);\r\n});","import { Screen } from \"../screens/Screen\";\r\n\r\nexport interface WorldsData {\r\n    worlds:LevelData[];\r\n}\r\n\r\nexport interface LevelData {\r\n    name:string;\r\n    data:any[];\r\n    duration?:number;\r\n    showScore?:boolean;\r\n    showRemainingFish?:boolean;\r\n}\r\n\r\nexport class DataManager {\r\n    private static _worldsData:WorldsData;\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Loads in the worlds data! */\r\n    public static loadWorldsData(fileLocation:string) {\r\n        return new Promise<WorldsData>(async(res, rej) => {\r\n            await fetch(fileLocation)\r\n                .then(blob => blob.json())\r\n                .then(json => {\r\n                    this._worldsData = json;\r\n                    res(this._worldsData);\r\n                })\r\n                .catch(err => {\r\n                    rej(\"Could not load world data! \" + err);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**Returns the level data received by the given index. */\r\n    public static getLevelDataByIndex(index:number) {\r\n        //flatten level data, and get data\r\n        let flatten = [].concat.apply([], DataManager._worldsData.worlds);\r\n        return flatten[index];\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get WorldsData():WorldsData { return DataManager._worldsData; }\r\n}","export class LoadManager {\r\n    public static get ASSETS_LOADED():string { return \"onAssetsLoaded\"; }\r\n    public static get ASSETS_FAILED():string { return \"onAssetsFailed\"; }\r\n    public static get ASSETS_UPDATED():string { return \"onAssetsUpdated\"; }\r\n\r\n    public static Spritesheets:{ [key:string]:createjs.SpriteSheet } = {};\r\n    public static Images:{ [key:string]:createjs.Bitmap } = {};\r\n\r\n    private static _stage:createjs.StageGL;\r\n    private static _preloadManager:createjs.LoadQueue;\r\n    private static _sheetsTotal:number = 0;\r\n    private static _sheetsLoaded:number = 0;\r\n\r\n    private static _percentage:number = 0;\r\n    private static _totalAssetsLoaded:number = 0;\r\n    private static _totalAssets:number = 0;\r\n\r\n    private static AssetsLoadedEvent:any = new (createjs as any).Event(LoadManager.ASSETS_LOADED, false, true);\r\n    private static AssetsFailedEvent:any = new (createjs as any).Event(LoadManager.ASSETS_FAILED, false, true);\r\n    private static AssetsUpdatedEvent:any = new (createjs as any).Event(LoadManager.ASSETS_UPDATED, false, true);\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public static reset() {\r\n        LoadManager._sheetsTotal = 0;\r\n        LoadManager._sheetsLoaded = 0;\r\n\r\n        LoadManager._percentage = 0;\r\n        LoadManager._totalAssetsLoaded = 0;\r\n        LoadManager._totalAssets = 0;\r\n    }\r\n\r\n    public static loadAssets(src:string, stage:createjs.StageGL) {\r\n        LoadManager.reset();\r\n        LoadManager._stage = stage;\r\n\r\n        return new Promise(async(res, rej) => {\r\n            LoadManager._preloadManager = new createjs.LoadQueue();\r\n\r\n            //setup sound controllers\r\n            createjs.Sound.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin, createjs.FlashAudioPlugin]);\r\n            createjs.Sound.alternateExtensions = [\"mp3\",\"wav\"];\r\n            LoadManager._preloadManager.installPlugin(createjs.Sound);\r\n\r\n            //setup listeners\r\n            (LoadManager._preloadManager as any).on(\"fileload\", LoadManager._onLoaded, LoadManager);\r\n            (LoadManager._preloadManager as any).on(\"complete\", LoadManager._onComplete, LoadManager);\r\n            (LoadManager._preloadManager as any).on(\"error\", LoadManager._onError, LoadManager);\r\n\r\n            //get the manifest\r\n            fetch(src)\r\n                .then(blob => blob.json())\r\n                .then(data => {\r\n                    //load the manifest\r\n                    LoadManager._preloadManager.setMaxConnections(1);\r\n                    LoadManager._preloadManager.loadManifest(data);\r\n\r\n                    (LoadManager._stage as any).addEventListener(LoadManager.ASSETS_LOADED, () => {\r\n                        res();\r\n                    });\r\n                })\r\n                .catch(() => {\r\n                    LoadManager.emitErrorEvent();\r\n                    rej(\"Could not load assets!\");\r\n                });\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    public static emitLoadedEvent() {\r\n        if(LoadManager._stage != null) (LoadManager._stage as any).dispatchEvent(LoadManager.AssetsLoadedEvent);\r\n    }\r\n    public static emitErrorEvent() {\r\n        if(LoadManager._stage != null) (LoadManager._stage as any).dispatchEvent(LoadManager.AssetsFailedEvent);\r\n    }\r\n    public static emitUpdatedEvent() {\r\n        LoadManager._percentage = parseFloat((LoadManager._preloadManager.getItems(true).length / LoadManager._preloadManager.getItems(false).length).toFixed(2));\r\n        if(LoadManager._stage != null) (LoadManager._stage as any).dispatchEvent(LoadManager.AssetsUpdatedEvent);\r\n    }\r\n\r\n\r\n    private static _loadedSheet(name:string, sheet:createjs.SpriteSheet) {\r\n        LoadManager.Spritesheets[name] = sheet;\r\n\r\n        LoadManager._sheetsLoaded++;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    private static _onLoaded(e) {\r\n\r\n        console.log(\"asset loaded: \" + e.item.src + \" type: \" + e.item.type);\r\n\r\n        switch(e.item.type) {\r\n            case (createjs as any).Types.JAVASCRIPT: {\r\n                //load the spritesheet\r\n                LoadManager._sheetsTotal++;\r\n                \r\n                const sheet = (window[e.item.id] as any)._SpriteSheet;\r\n\r\n                // listen for spritesheet to load\r\n                if(!sheet.complete) {\r\n                    sheet.on(\"complete\", (ev:any) => {\r\n                        LoadManager._loadedSheet(e.item.id, sheet);\r\n                        ev.remove();\r\n                    })\r\n                }\r\n                else LoadManager._loadedSheet(e.item.id, sheet);\r\n                break\r\n            }\r\n            case (createjs as any).Types.IMAGE: {\r\n                //build the bitmap\r\n                LoadManager.Images[e.item.id] = new createjs.Bitmap(e.item.src);\r\n            }\r\n        }\r\n\r\n\r\n\r\n        //update event\r\n        LoadManager.emitUpdatedEvent();\r\n    }\r\n\r\n    private static _onComplete(e) {\r\n        //remove all preLoadManager events\r\n        (LoadManager._preloadManager as any).removeAllEventListeners();\r\n        \r\n        //make sure all spritesheets are loaded\r\n        if(LoadManager._sheetsLoaded < LoadManager._sheetsTotal) {\r\n            const loadInterval = setInterval((ev:any) => {\r\n                //see if they are loaded\r\n                if(LoadManager._sheetsLoaded >= LoadManager._sheetsTotal) {\r\n                    e.remove();\r\n                    // window.clearInterval(loadInterval);\r\n                    LoadManager.emitLoadedEvent();\r\n                }\r\n            }, 100)\r\n        }\r\n        else LoadManager.emitLoadedEvent();\r\n    }\r\n\r\n    private static _onError(e) {\r\n        LoadManager.emitErrorEvent();\r\n    }\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get Percentage():number { return LoadManager._percentage; }\r\n    \r\n\r\n\r\n\r\n}","import { Screen } from \"../screens/Screen\";\r\n\r\nexport class ScreenManager {\r\n    private static _screensLookup:{ [key:string]:Screen } = { };\r\n    private static _currentScreen:Screen = null;\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Registers a screen into the Screen Manager.  Uses a key to associate it. */\r\n    public static registerScreen(key:string, screen:Screen):void {\r\n        //if we don't have this screen, add it\r\n        if(ScreenManager._screensLookup[key] == null)\r\n            ScreenManager._screensLookup[key] = screen;\r\n    }\r\n\r\n    /**Unregisters a screen from the Screen Manager. */\r\n    public static unregisterScreen(key:string):boolean {\r\n        if(ScreenManager._screensLookup[key] == null) return false;\r\n\r\n        ScreenManager._screensLookup[key] = null;\r\n        delete ScreenManager._screensLookup[key];\r\n        return true;\r\n    }\r\n\r\n    /**Sets the current screen.  Can be done with the screen itself or an associative key. */\r\n    public static setCurrentScreen(screen:string | Screen, stage:createjs.StageGL):Promise<void> {\r\n        let tempScreen = null;\r\n        if(screen instanceof Screen) tempScreen = screen;\r\n        else tempScreen = ScreenManager._screensLookup[screen];\r\n\r\n        //if we did not find a screen, do not follow through\r\n        if(tempScreen == null) return Promise.resolve();\r\n\r\n        let promises = [];\r\n        //if we have a previous screen, wait for it to fade out\r\n        if(ScreenManager._currentScreen != null)\r\n        promises.push(\r\n            new Promise(async(res) => {\r\n                //fade out\r\n                createjs.Tween\r\n                    .get(ScreenManager._currentScreen.Container)\r\n                    .to({ alpha:0 }, 500, createjs.Ease.linear)\r\n                    .call(() => {\r\n                        ScreenManager._currentScreen.destroy();\r\n                        ScreenManager._currentScreen.disable();\r\n                        res();\r\n                    });\r\n            })\r\n        );\r\n\r\n\r\n        //wait for certain actions to finish\r\n        return new Promise(async(res) => {\r\n            //wait for promises to finish\r\n            await Promise.all(promises);\r\n\r\n            //now add in the new one\r\n            ScreenManager._currentScreen = tempScreen;\r\n            ScreenManager._currentScreen.create(stage);\r\n            ScreenManager._currentScreen.Container.alpha = 0;\r\n            ScreenManager._currentScreen.disable(); //disable until ready\r\n            console.log(\"FADE IN\")\r\n            //fade in\r\n            createjs.Tween\r\n                .get(ScreenManager._currentScreen.Container)\r\n                .to({ alpha:1 }, 1200, createjs.Ease.linear)\r\n                .call(() => {\r\n                    console.log(\"DONE\");\r\n                    ScreenManager._currentScreen.enable();\r\n                    res();\r\n                });\r\n\r\n        });\r\n    }\r\n\r\n    public static getScreenByKey(key:string):Screen {\r\n        return ScreenManager._screensLookup[key];\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get AllScreens() { return ScreenManager._screensLookup; }\r\n    public static get CurrentScreen() { return ScreenManager._currentScreen; }\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Container } from \"../ui/display/Container\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { Game } from \"../Game\";\r\n\r\nexport class EndScreen extends Screen {\r\n    private _game:Game;\r\n    private _splash:createjs.Shape;\r\n    private _buttonsContainer:Container;\r\n\r\n    private _highScoreSpr:createjs.Sprite;\r\n    private _completeSpr:createjs.DisplayObject;\r\n    private _failSpr:createjs.DisplayObject;\r\n    private _scoreContainer:Container;\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n\r\n        this._game = game;\r\n\r\n\r\n        //layout stuff\r\n        const bg = new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"bg\");\r\n        this._container.addChild(bg);\r\n\r\n        this._buttonsContainer = new Container(Container.LAYOUT_OPTIONS.ColumnLeftBottom);\r\n        this._buttonsContainer.addMany({\r\n            btnTryAgain : new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"btnTryAgain\"),\r\n            btnNextLevel : new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"btnNextLevel\"),\r\n            btnMainMenu : new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"btnMainMenu\"),\r\n        });\r\n        this._container.addChild(this._buttonsContainer.Container);\r\n\r\n        //conditionals\r\n        //--high score\r\n        this._highScoreSpr = new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"highScore\");\r\n        this._highScoreSpr.x = this._game.StageWidth / 2 - (this._highScoreSpr.getBounds().width / 2);\r\n        this._highScoreSpr.y = 60;\r\n        this._container.addChild(this._highScoreSpr);\r\n        //--conditional text\r\n        this._completeSpr = new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"complete\");\r\n        this._failSpr = new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"failure\");\r\n        this._completeSpr.x = this._game.StageWidth / 2 - (this._completeSpr.getBounds().width / 2);\r\n        this._completeSpr.y = 220;\r\n        this._failSpr.x = this._game.StageWidth / 2 - (this._failSpr.getBounds().width / 2);\r\n        this._failSpr.y = this._game.StageHeight * 0.45;\r\n        this._container.addChild(this._completeSpr);\r\n        this._container.addChild(this._failSpr);\r\n        //--score container\r\n        this._scoreContainer = new Container(Container.LAYOUT_OPTIONS.ColumnCenterCenter);\r\n        this._scoreContainer.addMany({\r\n            fishRemain: new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"fishRemain\"),\r\n            time: new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"time\"),\r\n            combos: new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"combos\"),\r\n            line: new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"line\")\r\n        });\r\n        const scoreX = 250;\r\n        this._scoreContainer.Sprites[\"fishRemain\"].x = scoreX - (this._scoreContainer.Sprites[\"fishRemain\"].getBounds().width);\r\n        this._scoreContainer.Sprites[\"time\"].x = scoreX - (this._scoreContainer.Sprites[\"time\"].getBounds().width);\r\n        this._scoreContainer.Sprites[\"combos\"].x = scoreX - (this._scoreContainer.Sprites[\"combos\"].getBounds().width);\r\n        this._scoreContainer.Sprites[\"line\"].x = this._game.StageWidth - this._scoreContainer.Sprites[\"line\"].getBounds().width - 30;\r\n        this._container.addChild(this._scoreContainer.Container);\r\n        \r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    create(stage:createjs.StageGL):Screen {\r\n        \r\n        \r\n        //for testing\r\n        (this._container as any).on(\"click\", (e) => {\r\n            ScreenManager.setCurrentScreen(\"menu\", stage);\r\n        }, this, true);\r\n        \r\n\r\n        return super.create(stage);\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { ObjectPool } from \"../ObjectPool\";\r\nimport { Fish } from \"../entities/Fish\";\r\nimport { Cat } from \"../entities/Cat\";\r\nimport { Game } from \"../Game\";\r\nimport { Container } from \"../ui/display/Container\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { Logging } from \"../Functions\";\r\nimport { LevelData } from \"../managers/DataManager\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { GameScore } from \"../ui/partials/GameScore\";\r\n\r\nexport class GameScreen extends Screen {\r\n    private _game:Game;\r\n\r\n    //create containers\r\n    private _staticContainer:Container;\r\n    private _fishContainer:createjs.Container;\r\n\r\n    private _winContainer:createjs.Container;\r\n    private _winBanner:createjs.Shape;\r\n    private _winText:createjs.BitmapText;\r\n\r\n    private _gameScore:GameScore;\r\n\r\n    private _cat:Cat;\r\n    private _fishes:Fish[];\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n        this._game = game;\r\n        this._fishes = [];\r\n        this._game.CurrentLevelData.remainingFish = -1;\r\n\r\n        //create object pool\r\n        ObjectPool.createPoolObject(new Cat(this), POOL.CAT)\r\n        for(let i = 0; i < 120; i++) {\r\n            ObjectPool.createPoolObject(new Fish(this), POOL.FISH);\r\n        }\r\n        // for(let i = 0; i < 30; i++) {\r\n        //     ObjectPool.createPoolObject(new Puffer(this._game), POOL.PUFFERFISH)\r\n        // }\r\n\r\n\r\n        //pool out static kitty\r\n        this._cat = (ObjectPool.checkout(POOL.CAT) as Cat);\r\n\r\n        //create containers\r\n        this._staticContainer = new Container();\r\n        this._staticContainer.addMany({\r\n            bg : Sprites.Backgrounds.BG\r\n        });\r\n\r\n        this._fishContainer = new createjs.Container();\r\n\r\n        this._winContainer = new createjs.Container();\r\n\r\n        this._gameScore = new GameScore(this._game);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n\r\n    /**Attempts to grab a fish.  Returns any fish that are touching the global position. */\r\n    public tryToGrabFishes(x:number, y:number):Fish[] {\r\n        let fishes = [];\r\n\r\n        //see if any fish is grabbable at these coords and return if so\r\n        //for each fish, test the distance and return if close\r\n        for(let i = 0; i < this._fishes.length; i++) {\r\n            const fish = this._fishes[i];\r\n\r\n            const localPos = fish.Sprite.globalToLocal(x, y);\r\n            const hitFish = fish.testHit(localPos.x, localPos.y);\r\n\r\n            if(hitFish) {\r\n                fishes.push(fish);\r\n            }\r\n        }\r\n        //if no fish was caught, return null\r\n        return fishes;\r\n    }\r\n\r\n    public collectFish(fish:Fish) {\r\n        //get fish\r\n        Logging.success(\"GOT FISH!\");\r\n\r\n        const killedFish = fish.destroy();\r\n\r\n        //decrement fish counter -- make sure we didn't make an error\r\n        if(killedFish != null) {\r\n            this._game.CurrentLevelData.remainingFish--;\r\n\r\n            //if all our fish are gone, end the game!\r\n            if(this._game.CurrentLevelData.remainingFish <= 0) {\r\n                //win game!\r\n                Logging.success(\"GAME IS OVER!\");\r\n                this.win();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public win() {\r\n        this.disable();\r\n        //show win banner\r\n        createjs.Tween.get(this._winContainer)\r\n            .to({y:this._game.StageHeight / 2 - 25}, 600, createjs.Ease.elasticOut)\r\n            .wait(2000)\r\n            .call(() => {\r\n                //transition to end screen\r\n                ScreenManager.setCurrentScreen(\"end\", this._game.Stage);\r\n                // ScreenManager.setCurrentScreen(\"menu\", this._game.Stage);\r\n            });\r\n    }\r\n\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n        super.create(stage);\r\n        //add stuff\r\n        this._staticContainer.checkoutSprites();\r\n        this._staticContainer.Sprites.bg.y = 0;\r\n        this._container.addChild(this._staticContainer.Container);\r\n\r\n        this._container.addChild(this._fishContainer);\r\n\r\n        //add conditional text\r\n        this._winBanner = new createjs.Shape();\r\n        this._winBanner.graphics.beginFill(\"black\");\r\n        this._winBanner.graphics.drawRect(0, 0, this._game.StageWidth, 50);\r\n        this._winBanner.cache(0, 0, this._game.StageWidth, 50);\r\n        this._winContainer.addChild(this._winBanner);\r\n        this._winText = Sprites.generateBitmapText(\"Win!\", LoadManager.Spritesheets.TypographyWhite);\r\n        this._winContainer.addChild(this._winText);\r\n        this._winText.x = (this._game.StageWidth / 2) - (this._winText.getBounds().width / 2);\r\n\r\n        this._container.addChild(this._winContainer);\r\n        this._winContainer. y = this._game.StageHeight + 50;\r\n        this._winContainer.mouseEnabled = false;\r\n\r\n        \r\n        this._cat.create(this._container);\r\n\r\n\r\n        //add level data if it exists\r\n        if(this._game.CurrentLevelData.meta != null) {\r\n            //load in critters\r\n            for(let i = 0; i < this._game.CurrentLevelData.meta.data.length; i++) {\r\n                const data = this._game.CurrentLevelData.meta.data[i];\r\n                switch(data.id) {\r\n                    case POOL.FISH:\r\n                        const fish = (ObjectPool.checkout(POOL.FISH) as Fish);\r\n                        fish.create(this._fishContainer);\r\n                        if(data.speed != null) fish.Speed = data.speed; //set variables\r\n                        if(data.x != null) fish.X = data.x;\r\n                        if(data.y != null) fish.Y = data.y;\r\n                        if(data.flip != null && data.flip) fish.DirectionX = -1;\r\n                        fish.setNaturalY();\r\n                        this._fishes.push(fish);\r\n                        break;\r\n                }      \r\n            }\r\n\r\n            //set fish total\r\n            this._game.CurrentLevelData.remainingFish = this._fishes.length;\r\n        }\r\n\r\n\r\n        //add the score\r\n        this._gameScore.Container.y = this._game.StageHeight - 40;\r\n        this._container.addChild(this._gameScore.Container);\r\n\r\n        //update the game HUD for this round\r\n        const levelData = this._game.CurrentLevelData.meta;\r\n        console.log(this._game.CurrentLevelData);\r\n        const showScore = (levelData.showScore != null && !levelData.showScore) ? false : true;\r\n        const showTimer = (levelData.duration != null);\r\n        const showFishRemain = (levelData.showRemainingFish != null && !levelData.showRemainingFish) ? false : true;\r\n        this._gameScore.startHUD(showScore, showFishRemain, showTimer);\r\n\r\n        return null;\r\n    }\r\n\r\n    public destroy() {\r\n        this._cat.destroy();\r\n        this._fishes.forEach(f => f.destroy());\r\n        this._fishContainer.removeAllChildren();\r\n\r\n        this._fishes = [];\r\n\r\n        return super.destroy();\r\n    }\r\n\r\n    public update(gameTime:number) {\r\n        const normalizedTime = Math.min(1, gameTime) + 0.5;\r\n\r\n        //update entities\r\n        this._fishes.forEach(fish => {\r\n            fish.update(normalizedTime);\r\n        });\r\n\r\n        this._cat.update(normalizedTime);\r\n\r\n        //update the score\r\n        this._gameScore.update(gameTime);\r\n\r\n        super.update(gameTime);\r\n    }\r\n\r\n    public enable() {\r\n        (this._container as any).on(\"click\", this._cat.grab, this._cat);\r\n    }\r\n\r\n    public disable() {\r\n        (this._container as any).removeAllEventListeners();\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Game() { return this._game; }\r\n}\r\n\r\n\r\n\r\nexport class POOL { \r\n    static get CAT() { return \"cat\"; }\r\n    static get FISH() { return \"fish\"; }\r\n    static get PUFFERFISH() { return \"puffer\"; }\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { Game } from \"../Game\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\n\r\nexport class IntermediaryScreen extends Screen {\r\n    private _game:Game;\r\n    private _bg:createjs.Shape;\r\n    private _textContainer:createjs.Container;\r\n    private _txtSprite:createjs.DisplayObject;\r\n\r\n    private _text:string;\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n        this._game = game;\r\n\r\n        this._text = \"\";\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Chooses the screen to load in after the intermediary. */\r\n    public queueNextScreen(screenKey:string, duration:number=3000) {\r\n        const evt = window.setTimeout(() => {\r\n            //load the screen\r\n            ScreenManager.setCurrentScreen(screenKey, this._game.Stage);\r\n            //clear the timeout\r\n            window.clearTimeout(evt);\r\n        }, duration);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n        //add stuff\r\n        this._bg = new createjs.Shape();\r\n        this._bg.graphics.beginFill(\"#191919\");\r\n        this._bg.graphics.drawRect(0, 0, this._game.StageWidth, this._game.StageHeight);\r\n        this._bg.graphics.endFill();\r\n        this._bg.cache(0, 0, this._game.StageWidth, this._game.StageHeight);\r\n        this._container.addChild(this._bg);\r\n\r\n        this._textContainer = new createjs.Container();\r\n        this._container.addChild(this._textContainer);\r\n\r\n        if(this._text != \"\") {\r\n            //create the text\r\n            this._txtSprite = Sprites.generateBitmapText(this._text, LoadManager.Spritesheets.TypographyWhite);\r\n            (this._txtSprite as any).scale = 0.6;\r\n            //load into container\r\n            this._textContainer.addChild(this._txtSprite);\r\n    \r\n            //put container at bottom\r\n            this._textContainer.x = (this._game.StageWidth / 2) - ((this._txtSprite.getBounds().width / 2) * 0.6);\r\n            this._textContainer.y = (this._game.StageHeight / 2) - (this._txtSprite.getBounds().height / 2);\r\n        }\r\n\r\n        return super.create(stage);\r\n    }\r\n\r\n    public destroy() {\r\n        this._textContainer.removeAllChildren();\r\n\r\n        return super.destroy();\r\n    }\r\n\r\n    public enable() {\r\n        super.enable();\r\n\r\n        //for testing\r\n        (this._container as any).on(\"click\", (e) => {\r\n            ScreenManager.setCurrentScreen(\"menu\", this.Stage);\r\n        }, this, true);\r\n    }\r\n\r\n    public disable() {\r\n        super.disable();\r\n\r\n        this.reset();\r\n    }\r\n\r\n    public reset() {\r\n        this.Text = \"\";\r\n        super.reset();\r\n    }\r\n\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public set Text(value:string) {\r\n        this._text = value;\r\n    }\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { Layout } from \"../ui/display/Layout\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { Container } from \"../ui/display/Container\";\r\nimport { Logging } from \"../Functions\";\r\nimport { Game } from \"../Game\";\r\nimport { LevelSelectDisplay } from \"../ui/custom/LevelSelectDisplay\";\r\nimport { IntermediaryScreen } from \"./IntermediaryScreen\";\r\nimport { GameScreen } from \"./GameScreen\";\r\nimport { DataManager } from \"../managers/DataManager\";\r\n\r\nexport class MenuScreen extends Screen {\r\n    private _game:Game;\r\n    //containers\r\n    private _swipeContainer:createjs.Container;\r\n    private _staticContainer:Container;\r\n    // private _mainContainer:Container;\r\n    private _mainContainer:createjs.Container;\r\n    private _clearedContainer:Container;\r\n    private _optionsContainer:Container;\r\n\r\n    private _mainButtonsContainer:Container;\r\n    private _logo:createjs.DisplayObject;\r\n    private _fancyFish:createjs.Sprite;\r\n\r\n    //custom containers\r\n    private _levelSelectDisplay:LevelSelectDisplay;\r\n\r\n    //properties\r\n    private _swipeSpeed:number;\r\n    private _currentScreen:string;\r\n    private _initialSwipePos:{x:number, y:number};\r\n    private _dragTimer:any;\r\n\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n\r\n        this._game = game;\r\n\r\n        //setup swipe container -- holds all moving sprites\r\n        this._swipeContainer = new createjs.Container();\r\n\r\n        //setup static container\r\n        this._staticContainer = new Container();\r\n        const bg = new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"bg\");\r\n\r\n        this._staticContainer.addMany({\r\n            bg\r\n        });\r\n\r\n        //setup main container\r\n        this._mainContainer = new createjs.Container();\r\n        this._logo = new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"logo\");\r\n        this._logo.x = this._game.StageWidth - this._logo.getBounds().width - 20;\r\n        this._logo.y = this._game.StageHeight * 0.4;\r\n        this._mainContainer.addChild(this._logo);\r\n        this._mainButtonsContainer = new Container(Container.LAYOUT_OPTIONS.ColumnLeftBottom);\r\n        this._mainButtonsContainer.addMany({\r\n            btnNewGame : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnNewGame\"),\r\n            btnOptions : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnOptions\"),\r\n            btnLevelSelect : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnLevelSelect\"),\r\n            btnExit : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnExit\"),\r\n        });\r\n        this._mainContainer.addChild(this._mainButtonsContainer.Container);\r\n        this._fancyFish = new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"fancyFish\");\r\n        this._fancyFish.x = this._game.StageWidth - this._fancyFish.getBounds().width - 20;\r\n        this._fancyFish.y = this._game.StageHeight - this._fancyFish.getBounds().height - 20;\r\n        this._mainContainer.addChild(this._fancyFish);\r\n        // this._mainContainer.addMany({\r\n        //     logo : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"logo\"),\r\n        //     fishbowl : Sprites.Buttons.Fishbowl,\r\n        //     btnNewGame : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnNewGame\"),\r\n        //     btnOptions : Sprites.Buttons.Options,\r\n        //     btnLevelSelect : Sprites.Buttons.LevelSelect,\r\n        //     btnExit : Sprites.Buttons.Exit\r\n        // });\r\n\r\n        //setup options container\r\n        this._optionsContainer = new Container();\r\n        this._optionsContainer.addMany({\r\n            txtOptions : Sprites.generateBitmapText(\"Options\", LoadManager.Spritesheets.Typography),\r\n            btnClearData : Sprites.Buttons.ClearData\r\n        });\r\n        this._optionsContainer.Container.x -= this._game.StageWidth;\r\n\r\n        //setup cleared container\r\n        this._clearedContainer = new Container();\r\n        this._clearedContainer.add(\"txtCleared\", Sprites.generateBitmapText(\"Data successfully cleared!\", LoadManager.Spritesheets.Typography));\r\n        this._clearedContainer.Container.x -= this._game.StageWidth;\r\n        this._clearedContainer.Container.y -= this._game.StageHeight;\r\n\r\n        this._levelSelectDisplay = new LevelSelectDisplay(game);\r\n        this._levelSelectDisplay.Container.x += this._game.StageWidth;\r\n\r\n\r\n        //setup properties\r\n        this._swipeSpeed = 800;\r\n        this._currentScreen = \"main\";\r\n        this._initialSwipePos = { x:-1, y:-1 };\r\n\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    private _onNewGame() {\r\n        Logging.message(\"Go to new game!\");\r\n        \r\n        const data = DataManager.getLevelDataByIndex(0);\r\n        \r\n        const intermediary = ScreenManager.getScreenByKey(\"intermediary\") as IntermediaryScreen;\r\n        new Promise(async(res) => {\r\n            intermediary.Text = data.name;\r\n            await ScreenManager.setCurrentScreen(intermediary, this.Stage);\r\n            intermediary.queueNextScreen(\"game\");\r\n\r\n            res();\r\n        });\r\n    }\r\n    private _onOptions() {\r\n        //go to options!\r\n        Logging.message(\"Go to options!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:this._game.StageWidth}, this._swipeSpeed, createjs.Ease.circOut);\r\n        this._currentScreen = \"options\";\r\n    }\r\n    private _onLevelSelect() {\r\n        Logging.message(\"Go to level select!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:-this._game.StageWidth}, this._swipeSpeed, createjs.Ease.circOut);\r\n        this._currentScreen = \"levelSelect\";\r\n    }\r\n    private _onExit() {\r\n        Logging.message(\"Go to exit!\");\r\n    }\r\n\r\n    private _onMain() {\r\n        Logging.message(\"Go to main!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:0}, this._swipeSpeed, createjs.Ease.bounceOut);\r\n        this._currentScreen = \"main\";\r\n    }\r\n\r\n    private _onClearData() {\r\n        Logging.success(\"Cleared data!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:this._game.StageWidth, y:this._game.StageHeight}, this._swipeSpeed, createjs.Ease.cubicIn);\r\n        // this._currentScreen = \"cleared\"\r\n        let e = window.setTimeout(() => {\r\n            createjs.Tween.get(this._swipeContainer).to({x:this._game.StageWidth, y:0}, this._swipeSpeed, createjs.Ease.cubicInOut);\r\n            window.clearInterval(e);\r\n            this._currentScreen = \"options\";\r\n        }, 2000);\r\n    }\r\n\r\n    private _onDragStart(e) {\r\n\r\n        this._initialSwipePos = { x:e.stageX, y:e.stageY };\r\n\r\n        //reset drag timer if not null\r\n        if(this._dragTimer != null) window.clearTimeout(this._dragTimer);\r\n        this._dragTimer = setTimeout(() => {\r\n            this._initialSwipePos = { x:-1, y:-1 };\r\n            this._dragTimer = null;\r\n        }, 500);\r\n    }\r\n    private _onDragEnd(e) {\r\n        if(this._initialSwipePos.x != -1 || this._initialSwipePos.y != -1) {\r\n            //find the direction\r\n            if((this._initialSwipePos.x - e.stageX) > 20) {\r\n                if(this._currentScreen == \"options\")\r\n                    this._onMain();\r\n            }\r\n            else if((this._initialSwipePos.x - e.stageX) < -20) {\r\n                if(this._currentScreen == \"levelSelect\")\r\n                    this._onMain();\r\n            }\r\n        }\r\n    }\r\n\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n\r\n        //add in the containers\r\n        this._staticContainer.Sprites.bg.y = 0;\r\n        this._container.addChild(this._staticContainer.Container);\r\n        this._container.addChild(this._swipeContainer);\r\n        this._swipeContainer.addChild(this._mainContainer);\r\n        this._swipeContainer.addChild(this._optionsContainer.Container);\r\n        this._swipeContainer.addChild(this._clearedContainer.Container);\r\n        // this._swipeContainer.addChild(this._levelSelectContainer.Container);\r\n\r\n        \r\n        this._swipeContainer.addChild(this._levelSelectDisplay.Container);\r\n\r\n        return super.create(stage);\r\n    }\r\n\r\n    public enable() {\r\n        console.log(\"LOAD IN MENU ACTIONS\");\r\n        super.enable();\r\n        //listen to events\r\n        (this._mainButtonsContainer.Sprites.btnNewGame as any).on(\"click\", this._onNewGame, this, true);\r\n        (this._mainButtonsContainer.Sprites.btnOptions as any).on(\"click\", this._onOptions, this);\r\n        (this._mainButtonsContainer.Sprites.btnLevelSelect as any).on(\"click\", this._onLevelSelect, this);\r\n        (this._mainButtonsContainer.Sprites.btnExit as any).on(\"click\", this._onExit, this);\r\n\r\n        Sprites.listenToClearData();\r\n        (this._optionsContainer.Sprites.btnClearData as any).on(Sprites.CLEAR_DATA, this._onClearData, this);\r\n\r\n        //listen for swipes\r\n        (this._staticContainer.Sprites.bg as any).on(\"mousedown\", this._onDragStart, this);\r\n        (this._staticContainer.Sprites.bg as any).on(\"click\", this._onDragEnd, this);\r\n\r\n        // this._mainButtonsContainer.Sprites.btnOptions.on(\"click\", () => console.log(\"HELLO I CLIC\"));\r\n\r\n        this._levelSelectDisplay.enable();\r\n\r\n\r\n\r\n        //rock the fish\r\n        createjs.Tween\r\n            // @ts-ignore\r\n            .get(this._fancyFish, { loop:true })\r\n            .to({ y:this._fancyFish.y-30 }, 3000, createjs.Ease.sineInOut)\r\n            .to({ y:this._fancyFish.y }, 3000, createjs.Ease.sineInOut);\r\n\r\n        //rock the logo\r\n        createjs.Tween\r\n            // @ts-ignore\r\n            .get(this._logo, { loop:true })\r\n            .wait(1200)\r\n            .to({ y:this._logo.y-15 }, 4500, createjs.Ease.sineInOut)\r\n            .to({ y:this._logo.y }, 4800, createjs.Ease.sineInOut);\r\n    }\r\n\r\n    public disable() {\r\n        super.disable();\r\n        //stop listen to events\r\n        (this._mainButtonsContainer.Sprites.btnNewGame as any).off(\"click\", this._onNewGame);\r\n        (this._mainButtonsContainer.Sprites.btnOptions as any).off(\"click\", this._onOptions);\r\n        (this._mainButtonsContainer.Sprites.btnLevelSelect as any).off(\"click\", this._onLevelSelect);\r\n        (this._mainButtonsContainer.Sprites.btnExit as any).off(\"click\", this._onExit);\r\n\r\n        Sprites.stopListenToClearData();\r\n        (this._optionsContainer.Sprites.btnClearData as any).off(Sprites.CLEAR_DATA, this._onClearData);\r\n\r\n        //stop listen for swipes\r\n        (this._staticContainer.Sprites.bg as any).off(\"mousedown\", this._onDragStart);\r\n        (this._staticContainer.Sprites.bg as any).off(\"click\", this._onDragEnd);\r\n\r\n\r\n        this._levelSelectDisplay.disable();\r\n\r\n        this.reset();\r\n\r\n\r\n        createjs.Tween.removeAllTweens();\r\n    }\r\n\r\n    public reset() {\r\n        //reset the position of the swipe container\r\n        this._swipeContainer.x = 0;\r\n        this._swipeContainer.y = 0;\r\n\r\n        super.reset();\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n}","import { IUpdateable, ICreateable, IEnableable } from \"../Interfaces\";\r\n\r\nexport class Screen implements ICreateable<Screen>, IUpdateable, IEnableable {\r\n    private _stage:createjs.StageGL;\r\n    protected _container:createjs.Container;\r\n\r\n    constructor() {\r\n        this._container = new createjs.Container();\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Updates the screen. */\r\n    public update(gameTime:number) {\r\n\r\n    }\r\n\r\n    /**Creates the screen and adds to the stage. */\r\n    public create(stage:createjs.StageGL):Screen {\r\n        this._stage = stage;\r\n        //add to the stage\r\n        this._stage.addChild(this._container);\r\n\r\n        \r\n        return this;\r\n    }\r\n\r\n    /**Destroys the screen and removes from the stage. */\r\n    public destroy():Screen {\r\n\r\n        //remove from the stage\r\n        this._stage.removeChild(this._container);\r\n\r\n        return this;\r\n    }\r\n\r\n    public enable() {\r\n\r\n    }\r\n\r\n    public disable() {\r\n        \r\n    }\r\n\r\n    public reset() {\r\n        \r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container():createjs.Container { return this._container; }\r\n    protected get Stage():createjs.StageGL { return this._stage; }\r\n\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\n\r\nexport class SplashScreen extends Screen {\r\n    private _splash:createjs.Shape;\r\n    \r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n        //add stuff\r\n        this._splash = new createjs.Shape();\r\n        this._splash.graphics.beginFill(\"red\");\r\n        this._splash.graphics.drawRect(0, 0, 100, 100);\r\n        this._splash.graphics.endFill();\r\n        this._splash.cache(0, 0, 100, 100);\r\n        this._container.addChild(this._splash);\r\n        super.create(stage);\r\n\r\n        //for testing\r\n        (this._container as any).on(\"click\", (e) => {\r\n            ScreenManager.setCurrentScreen(\"menu\", stage);\r\n        }, this, true);\r\n\r\n        return this;\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n}","import { LoadManager } from \"../managers/LoadManager\";\r\n\r\n/**Used to gain access to in-game sprites. */\r\nexport class Sprites {\r\n    public static CLEAR_DATA:string = \"onClearData\";\r\n\r\n    private static _backgrounds:{ [key:string]:createjs.DisplayObject } = { };\r\n    private static _buttons:{ [key:string]:createjs.DisplayObject } = { };\r\n\r\n    private static _graphics:{ [key:string]:createjs.DisplayObject } = { };\r\n\r\n    private static _spritesheets:createjs.SpriteSheet[];\r\n\r\n    private static _canClearData:boolean = false;\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public static setup() {\r\n        return new Promise((res, rej) => {\r\n            // Sprites.spritesheets = spritesheets\r\n            //setup all the sprites\r\n            /* ------- STATIC ------- */\r\n            Sprites._backgrounds.Main = new createjs.Sprite(LoadManager.Spritesheets.UI); // Static BG\r\n            (Sprites._backgrounds.Main as createjs.Sprite).gotoAndStop(\"bg_main_static\");\r\n\r\n            Sprites._backgrounds.Logo = new createjs.Sprite(LoadManager.Spritesheets.Entities); // LOGO\r\n            (Sprites._backgrounds.Logo as createjs.Sprite).gotoAndStop(\"icon_title\");\r\n\r\n            Sprites._backgrounds.BG = LoadManager.Images.BG; // Redux\r\n            Sprites._backgrounds.BGTop = LoadManager.Images.BGTop;\r\n\r\n\r\n            /* ------- ANIMATED ------- */\r\n            Sprites._backgrounds.Wave = new createjs.Sprite(LoadManager.Spritesheets.UI); // Animated BG\r\n            (Sprites._backgrounds.Wave as createjs.Sprite).gotoAndPlay(\"bg_main\");\r\n\r\n\r\n            /* ------- GRAPHICS ------ */\r\n            Sprites._graphics.Timer = new createjs.Sprite(LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n            (Sprites._graphics.Timer as createjs.Sprite).gotoAndPlay(\"sprTime\");\r\n            Sprites._graphics.Score = new createjs.Sprite(LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n            (Sprites._graphics.Score as createjs.Sprite).gotoAndPlay(\"sprScore\");\r\n            Sprites._graphics.FishRemain = new createjs.Sprite(LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n            (Sprites._graphics.FishRemain as createjs.Sprite).gotoAndPlay(\"sprFish\");\r\n            \r\n            /* ------- BUTTONS ------- */\r\n            Sprites._buttons.NewGame = new createjs.Sprite(LoadManager.Spritesheets.Entities); // New Game\r\n            (Sprites._buttons.NewGame as createjs.Sprite).gotoAndStop(\"btn_new_game\");\r\n            new createjs.ButtonHelper(Sprites._buttons.NewGame as createjs.Sprite, \"btn_new_game\", \"btn_new_game_hover\", \"btn_new_game_hover\");\r\n\r\n\r\n            Sprites._buttons.Options = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Options\r\n            (Sprites._buttons.Options as createjs.Sprite).gotoAndStop(\"btn_new_game\");\r\n            new createjs.ButtonHelper(Sprites._buttons.Options as createjs.Sprite, \"btn_options\", \"btn_options_hover\", \"btn_options_hover\");\r\n\r\n            Sprites._buttons.LevelSelect = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Select\r\n            (Sprites._buttons.LevelSelect as createjs.Sprite).gotoAndStop(\"btn_select\");\r\n            new createjs.ButtonHelper(Sprites._buttons.LevelSelect as createjs.Sprite, \"btn_select\", \"btn_select_hover\", \"btn_select_hover\");\r\n\r\n            Sprites._buttons.Exit = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Exit\r\n            (Sprites._buttons.Exit as createjs.Sprite).gotoAndStop(\"btn_select\");\r\n            new createjs.ButtonHelper(Sprites._buttons.Exit as createjs.Sprite, \"btn_exit\", \"btn_exit_hover\", \"btn_exit_hover\");\r\n\r\n            Sprites._buttons.Fishbowl = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Fishbowl\r\n            (Sprites._buttons.Fishbowl as createjs.Sprite).gotoAndStop(\"btn_select\");\r\n            new createjs.ButtonHelper(Sprites._buttons.Fishbowl as createjs.Sprite, \"icon_fishbowl\", \"icon_fishbowl_hover\", \"icon_fishbowl_hover\", true);\r\n\r\n\r\n            /* ------- MENU ------- */\r\n            Sprites._backgrounds.LevelSelectBG = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Select BG\r\n            (Sprites._backgrounds.LevelSelectBG as createjs.Sprite).gotoAndStop(\"static_bg\");\r\n            Sprites._buttons.LevelEmpty = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Empty Button\r\n            (Sprites._buttons.LevelEmpty as createjs.Sprite).gotoAndStop(\"level_empty\");\r\n            Sprites._buttons.LevelComplete = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Complete Button\r\n            (Sprites._buttons.LevelComplete as createjs.Sprite).gotoAndStop(\"level_complete\");\r\n            Sprites._buttons.LevelSpecialEmpty = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Special Empty Button\r\n            (Sprites._buttons.LevelSpecialEmpty as createjs.Sprite).gotoAndStop(\"level_special_empty\");\r\n            Sprites._buttons.LevelSpecialComplete = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Special Complete Button\r\n            (Sprites._buttons.LevelSpecialComplete as createjs.Sprite).gotoAndStop(\"level_special_complete\");\r\n\r\n\r\n            /* ------- COMPLEX ------- */\r\n            Sprites._setupBTNClearData();\r\n\r\n            res();\r\n        });\r\n    }\r\n\r\n    // /* --- Complex createjs.Sprite Setup --- */\r\n    private static _setupBTNClearData() {\r\n        Sprites._buttons.ClearData = new createjs.Sprite(LoadManager.Spritesheets.UI); // BTN Clear Data\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndStop(\"btn_clear_data\");\r\n        (Sprites._buttons.ClearData as createjs.Sprite).cursor = \"pointer\";\r\n        Sprites._canClearData = false;\r\n    }\r\n    public static listenToClearData() {\r\n        //listen\r\n        (Sprites._buttons.ClearData as any).on(\"mousedown\", Sprites._btnDataDown);\r\n        (Sprites._buttons.ClearData as any).on(\"animationend\", Sprites._btnDataComplete);\r\n        (Sprites._buttons.ClearData as any).on(\"click\", Sprites._btnDataUp);\r\n    }\r\n    public static stopListenToClearData() {\r\n        //listen\r\n        (Sprites._buttons.ClearData as any).off(\"mousedown\", Sprites._btnDataDown);\r\n        (Sprites._buttons.ClearData as any).off(\"animationend\", Sprites._btnDataComplete);\r\n        (Sprites._buttons.ClearData as any).off(\"click\", Sprites._btnDataUp);\r\n    }\r\n\r\n    private static _btnDataDown(e) {\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndPlay(\"btn_clear_data_progress\");\r\n        Sprites._canClearData = true;\r\n    }\r\n    private static _btnDataUp(e) {\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndStop(\"btn_clear_data\");\r\n        Sprites._canClearData = false;\r\n    }\r\n    private static _btnDataComplete(e) {\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndStop(\"btn_clear_data\");\r\n        //dispatch event to button\r\n        if(Sprites._canClearData) {\r\n            (Sprites._buttons.ClearData as createjs.Sprite).dispatchEvent(new Event(Sprites.CLEAR_DATA));\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**A helper function to generate and cache text for the StageGL object. */\r\n    public static generateText(text, details = \"20px Arial\", color = \"#FFFEEE\") {\r\n        const textObj = new createjs.Text(text, details, color)\r\n        textObj.cache(0, 0, textObj.getBounds().width, textObj.getBounds().height);\r\n        return textObj;\r\n    }\r\n\r\n    public static generateBitmapText(text, spritesheet) {\r\n        const textObj = new createjs.BitmapText(text, spritesheet);\r\n        return textObj;\r\n    }\r\n\r\n\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get Backgrounds() { return Sprites._backgrounds; }\r\n    public static get Buttons() { return Sprites._buttons; }\r\n    public static get Graphics() { return Sprites._graphics; }\r\n\r\n    // static get BG() { return Sprites._bg }\r\n    // static get Logo() { return Sprites._logo }\r\n    // static get AnimBG() { return Sprites._animBg }\r\n    // static get GameBG() { return Sprites._gameBG }\r\n    // static get GameBGTop() { return Sprites._gameBGTop }\r\n    // //buttons\r\n    // static get BTN_New_Game() { return Sprites._btnNewGame }\r\n    // static get BTN_Options() { return Sprites._btnOptions }\r\n    // static get BTN_Select() { return Sprites._btnSelect }\r\n    // static get BTN_Exit() { return Sprites._btnExit }\r\n    // static get BTN_Fishbowl() { return Sprites._btnFishbowl }\r\n    // static get BTN_ClearData() { return Sprites._btnClearData }\r\n\r\n\r\n    // static get CLEAR_DATA() { return \"onClearData\" }\r\n}","import { Sprites } from \"../Sprites\";\r\nimport { LoadManager } from \"../../managers/LoadManager\";\r\nimport { Game } from \"../../Game\";\r\nimport { IEnableable } from \"../../Interfaces\";\r\nimport { GameScreen } from \"../../screens/GameScreen\";\r\nimport { DataManager } from \"../../managers/DataManager\";\r\nimport { ScreenManager } from \"../../managers/ScreenManager\";\r\nimport { IntermediaryScreen } from \"../../screens/IntermediaryScreen\";\r\n\r\n\r\nexport class LevelSelectDisplay implements IEnableable {\r\n    private _game:Game;\r\n\r\n    private _container:createjs.Container;\r\n    private _background:createjs.Sprite;\r\n    private _levelsContainer:createjs.Container;\r\n    private _levelTextContainer:createjs.Container;\r\n\r\n    private _levelsData:any;\r\n\r\n    private _levelButtons:createjs.Sprite[];\r\n\r\n    constructor(game:Game) {\r\n        this._game = game;\r\n        this._levelButtons = [];\r\n\r\n        //build the required components for the level select display\r\n        this._container = new createjs.Container();\r\n        this._background = Sprites.Backgrounds.LevelSelectBG as createjs.Sprite;\r\n        this._background.x = (game.StageWidth / 2) - (this._background.getBounds().width / 2);\r\n        this._background.y = 80;\r\n\r\n        this._levelsContainer = new createjs.Container();\r\n        this._container.addChild(this._background);\r\n        let text = Sprites.generateBitmapText(\"Level Select\", LoadManager.Spritesheets.Typography);\r\n        text.x = (game.StageWidth / 2) - (text.getBounds().width / 2);\r\n        text.y = 30;\r\n        this._container.addChild(text);\r\n\r\n\r\n        //setup display text\r\n        this._levelTextContainer = new createjs.Container();\r\n        this._container.addChild(this._levelTextContainer);\r\n\r\n        this.LevelText = \"Hello World!\";\r\n\r\n\r\n        //spoof some level data\r\n        this._levelsData = [\r\n            [\r\n                { name: \"Welcome to the pond!\", complete:true, unlocked:true, data:[0, 0, 0, 0, 0, 0, 0] },\r\n                { name: \"A new adventure!\", complete:true, unlocked:true, data:[0, 0, 0, 0, 0, 0, 0] },\r\n                { name: \"Learn to aim!\", complete:false, unlocked:true, data:[0, 0, 0, 0, 0, 0, 0] },\r\n                { name: \"Persephone!\", special:true, complete:false, unlocked:false, data:[0, 0, 0, 0, 0, 0, 0] },\r\n            ],\r\n            [\r\n                { name: \"In deep water!\", complete:false, unlocked:false, data:[0, 0, 0, 0, 0, 0, 0] },\r\n                { name: \"An ocean of fish!\", complete:false, unlocked:false, data:[0, 0, 0, 0, 0, 0, 0] },\r\n                { name: \"Barnacles ahoy!\", complete:false, unlocked:false, data:[0, 0, 0, 0, 0, 0, 0] },\r\n                { name: \"Owen!\", special:true, complete:false, unlocked:false, data:[0, 0, 0, 0, 0, 0, 0] },\r\n            ]\r\n        ];\r\n\r\n\r\n        //build the level icons\r\n        for(let r = 0; r < this._levelsData.length; r++) {\r\n            //iterate through levels\r\n            for(let i = 0; i < this._levelsData[r].length; i++) {\r\n                const levelData = this._levelsData[r][i];\r\n                console.log(\"LEVEL\", levelData);\r\n                //decide the sprite\r\n                let sprite = Sprites.Buttons.LevelEmpty.clone();\r\n                if(levelData.special != null && levelData.special) sprite = Sprites.Buttons.LevelSpecialEmpty.clone();\r\n                // //completed\r\n                if(levelData.complete) {\r\n                    sprite = Sprites.Buttons.LevelComplete.clone();\r\n                    if(levelData.special != null && levelData.special) sprite = Sprites.Buttons.LevelSpecialComplete;\r\n                }\r\n                //locked\r\n                if(!levelData.unlocked) {\r\n                    sprite.alpha = 0.25;\r\n                }\r\n                else {\r\n                    sprite.alpha = 1;\r\n                     //extras\r\n                    sprite.cursor = \"pointer\";\r\n                }\r\n\r\n                //place\r\n                sprite.x = 60 * i;\r\n                sprite.y = 50 * r;\r\n                //add\r\n                this._levelsContainer.addChild(sprite);\r\n                //to array\r\n                this._levelButtons.push(sprite as createjs.Sprite);\r\n            }\r\n        };\r\n\r\n        this._levelsContainer.x = (game.StageWidth / 2) - (this._levelsContainer.getBounds().width / 2);\r\n        this._levelsContainer.y = 100;\r\n        this._container.addChild(this._levelsContainer);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public enable() {\r\n        this._levelButtons.forEach(btn => {\r\n            btn.on(\"click\", this._onLevelClick, this);\r\n            btn.on(\"mouseover\", this._onLevelHover, this);\r\n            btn.on(\"mouseout\", this._onLevelUnhover, this);\r\n        });\r\n    }\r\n\r\n    public disable() {\r\n        this._levelButtons.forEach(btn => {\r\n            btn.removeAllEventListeners();\r\n        });\r\n    }\r\n\r\n\r\n    /**Returns level data from the given index. */\r\n    private _getDataByIndex(index:number) {\r\n        //flatten level data, and get data\r\n        let flatten = this._levelsData.reduce((acc, next) => acc.concat(next));\r\n        return flatten[index];\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    private _onLevelClick(e) {\r\n         //get button index\r\n        let index = this._levelButtons.indexOf(e.target);\r\n\r\n        if(index == -1) return;\r\n\r\n        //set the level index\r\n        const data = DataManager.getLevelDataByIndex(index);\r\n        console.log(\"MY LEVEL DATA\", data);\r\n        this._game.changeCurrentLevel(data);\r\n        //go to intermediary screen\r\n        const intermediary = ScreenManager.getScreenByKey(\"intermediary\") as IntermediaryScreen;\r\n        new Promise(async(res) => {\r\n            intermediary.Text = data.name;\r\n            await ScreenManager.setCurrentScreen(intermediary, this._game.Stage);\r\n            intermediary.queueNextScreen(\"game\", 1000);\r\n\r\n            res();\r\n        });\r\n    }\r\n\r\n    private _onLevelHover(e) {\r\n        //find the button data\r\n        //get button index\r\n        let index = this._levelButtons.indexOf(e.target);\r\n        \r\n        if(index != -1) {\r\n            const data = this._getDataByIndex(index);\r\n            if(data != null) {\r\n                if(data.unlocked)\r\n                    this.LevelText = data.name;\r\n            }\r\n        }\r\n\r\n    }\r\n    private _onLevelUnhover(e) {\r\n        this.LevelText = \"\";\r\n    }\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container() { return this._container; }\r\n    public set LevelText(value:string) {\r\n        if(value == \"\") {\r\n            this._levelTextContainer.removeAllChildren();\r\n            return;\r\n        }\r\n        //create the text\r\n        const text = Sprites.generateBitmapText(value, LoadManager.Spritesheets.TypographyWhite);\r\n        (text as any).scale = 0.6;\r\n        //load into container\r\n        this._levelTextContainer.removeAllChildren();\r\n        this._levelTextContainer.addChild(text);\r\n\r\n        //put container at bottom\r\n        this._levelTextContainer.x = (this._game.StageWidth / 2) - ((text.getBounds().width / 2) * 0.6);\r\n        this._levelTextContainer.y = this._game.StageHeight - 30;\r\n    }\r\n}","import { Layout } from \"./Layout\";\r\n\r\n/**Uses custom classes and the createjs library to help easily build up ui interfaces with DisplayObjects. */\r\nexport class Container {\r\n    private _sprites:{ [key:string]:createjs.DisplayObject };\r\n    private _container:createjs.Container;\r\n    private _layout:Layout;\r\n\r\n    constructor(layout:{ direction:string, alignment:string, crossAlignment:string, spacing:number } = null) {\r\n        this._sprites = { };\r\n        this._container = new createjs.Container();\r\n        this._layout = (layout != null) ? new Layout(this._container, layout.direction, layout.alignment, layout.crossAlignment, layout.spacing)  : Layout.MAKE_VERTICAL_CENTER(this._container);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public add(key:string, sprite:createjs.DisplayObject, updateLayout:boolean=true):boolean {\r\n        if(this._sprites[key] != null) return false;\r\n        this._sprites[key] = sprite.clone();\r\n\r\n        if(updateLayout) this._layout.buildLayout(true, ...Object.keys(this._sprites).map(k => this._sprites[k]));\r\n        return true;\r\n    }\r\n\r\n    public addMany(sprites:{ [key:string]:createjs.DisplayObject }) {\r\n        Object.keys(sprites).forEach(k => {\r\n            this.add(k, sprites[k], false);\r\n        });\r\n\r\n        this._layout.buildLayout(true, ...Object.keys(this._sprites).map(k => this._sprites[k]));\r\n    }\r\n\r\n    public changeLayout(layout:Layout) {\r\n        this._layout = layout;\r\n    }\r\n\r\n    /**In case of wandering or reusable sprites, call them back to this layout! */\r\n    public checkoutSprites() {\r\n        this._layout.buildLayout(true, ...Object.keys(this._sprites).map(k => this._sprites[k]));\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container():createjs.Container { return this._container; }\r\n    public get Sprites() { return this._sprites; }\r\n\r\n    public static get LAYOUT_OPTIONS() {\r\n        return {\r\n            //column layouts\r\n            //-- left aligned\r\n            \"ColumnLeftTop\" : {direction:Layout.VERTICAL, alignment:Layout.START, crossAlignment:Layout.START, spacing:5},\r\n            \"ColumnLeftCenter\" : {direction:Layout.VERTICAL, alignment:Layout.START, crossAlignment:Layout.CENTER, spacing:5},\r\n            \"ColumnLeftBottom\" : {direction:Layout.VERTICAL, alignment:Layout.START, crossAlignment:Layout.END, spacing:5},\r\n            //-- center aligned\r\n            \"ColumnCenterTop\" : {direction:Layout.VERTICAL, alignment:Layout.CENTER, crossAlignment:Layout.START, spacing:5},\r\n            \"ColumnCenterCenter\" : {direction:Layout.VERTICAL, alignment:Layout.CENTER, crossAlignment:Layout.CENTER, spacing:5},\r\n            \"ColumnCenterBottom\" : {direction:Layout.VERTICAL, alignment:Layout.CENTER, crossAlignment:Layout.END, spacing:5},\r\n            //-- right aligned\r\n            \"ColumnRightTop\" : {direction:Layout.VERTICAL, alignment:Layout.END, crossAlignment:Layout.START, spacing:5},\r\n            \"ColumnRightCenter\" : {direction:Layout.VERTICAL, alignment:Layout.END, crossAlignment:Layout.CENTER, spacing:5},\r\n            \"ColumnRightBottom\" : {direction:Layout.VERTICAL, alignment:Layout.END, crossAlignment:Layout.END, spacing:5}\r\n        };\r\n    }\r\n}","import { Game } from \"../../Game\";\r\n\r\n/**Used to layout createjs display objects. */\r\nexport class Layout {\r\n    //justify content\r\n    public static HORIZONTAL:string = \"horizontal\";\r\n    public static VERTICAL:string = \"vertical\";\r\n    //align items\r\n    public static START:string = \"start\";\r\n    public static END:string = \"end\";\r\n    public static CENTER:string = \"center\";\r\n\r\n    private _parent:createjs.Container;\r\n    private _items:createjs.DisplayObject[];\r\n\r\n    private _direction:string;\r\n    private _alignment:string;\r\n    private _crossAlignment:string;\r\n    private _spacing:number;\r\n\r\n    constructor(parent:createjs.Container, direction:string, alignment:string, crossAlignment:string, spacing:number = 5) {\r\n        this._parent = parent;\r\n        this._items = [];\r\n\r\n        this._direction = direction;\r\n        this._alignment = alignment;\r\n        this._crossAlignment = crossAlignment;\r\n        this._spacing = spacing;\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public buildLayout(addToParent:boolean=true, ...items:createjs.DisplayObject[]) {\r\n        if(items.length <= 0) return;\r\n\r\n        this._items = items;\r\n\r\n        if(addToParent) {\r\n            this._parent.removeAllChildren();\r\n        }\r\n        \r\n\r\n        if(this._direction == Layout.VERTICAL) {\r\n            let totalHeight = 0;\r\n            //ALIGNMENT\r\n            switch(this._alignment) {\r\n                case Layout.START : {\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        item.x = 0;\r\n                        item.y = totalHeight;\r\n                        totalHeight += item.getBounds().height + this._spacing;\r\n                        if(addToParent) this._parent.addChild(item);\r\n                    }\r\n                    break;\r\n                }\r\n                case Layout.CENTER : {\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        item.x = (Game.WIDTH / 2) - (item.getBounds().width / 2);\r\n                        item.y = totalHeight;\r\n                        totalHeight += item.getBounds().height + this._spacing;\r\n                        if(addToParent) this._parent.addChild(item);\r\n                    }\r\n                    break;\r\n                }\r\n                case Layout.END : {\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        item.x = Game.WIDTH - item.getBounds().width;\r\n                        item.y = totalHeight;\r\n                        totalHeight += item.getBounds().height + this._spacing;\r\n                        if(addToParent) this._parent.addChild(item);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n\r\n            //CROSS ALIGNMENT\r\n            //handle vertical alignment\r\n            switch(this._crossAlignment) {\r\n                case Layout.START : {\r\n                    break;\r\n                }\r\n                case Layout.CENTER : {\r\n                    totalHeight += items[items.length-1].getBounds().height;\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        //decipher desired center\r\n                        item.y += (Game.HEIGHT / 2) - (totalHeight / 2);\r\n                    }\r\n                    break;\r\n                }\r\n                case Layout.END :  {\r\n                    totalHeight += items[items.length-1].getBounds().height;\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        //decipher desired center\r\n                        item.y += Game.HEIGHT - totalHeight;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n\r\n        }\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    \r\n    /*--------------- HELPER FUNCTIONS ---------------*/\r\n    public static MAKE_VERTICAL_CENTER(container:createjs.Container) { return new Layout(container, Layout.VERTICAL, Layout.CENTER, Layout.CENTER, 5); }\r\n    public static MAKE_VERTICAL_START(container:createjs.Container) { return new Layout(container, Layout.VERTICAL, Layout.CENTER, Layout.START, 5); }\r\n\r\n}","import { Game } from \"../../Game\";\r\nimport { Sprites } from \"../Sprites\";\r\nimport { LoadManager } from \"../../managers/LoadManager\";\r\n\r\n/**Creates a display container for the game screen. */\r\nexport class GameScore {\r\n    private _game:Game;\r\n    private _container:createjs.Container;\r\n    private _bg:createjs.Shape;\r\n    private _txtTimer:createjs.DisplayObject;\r\n\r\n    private _timerContainer:createjs.Container;\r\n    private _timerTextContainer:createjs.Container;\r\n    private _fishRemainContainer:createjs.Container;\r\n    private _fishRemainTextContainer:createjs.Container;\r\n    private _scoreContainer:createjs.Container;\r\n    private _scoreTextContainer:createjs.Container;\r\n\r\n    //game conditions\r\n    private _useTimer:boolean = false;\r\n    private _useFishRemain:boolean = true;\r\n    private _useScore:boolean = true;\r\n\r\n    constructor(game:Game) {\r\n        this._game = game;\r\n        //create the initial objects\r\n        this._container = new createjs.Container();\r\n        this._bg = new createjs.Shape();\r\n        this._bg.graphics.beginFill(\"#000000\");\r\n        this._bg.graphics.drawRect(0, 0, this._game.StageWidth, 40);\r\n        this._bg.graphics.endFill();\r\n        this._bg.cache(0, 0, this._game.StageWidth, 40);\r\n        this._container.addChild(this._bg);\r\n\r\n        //create the container objects\r\n        //timer\r\n        this._timerContainer = new createjs.Container();\r\n        this._timerContainer.x += 10;\r\n        const timerSprite = Sprites.Graphics.Timer.clone();\r\n        this._timerContainer.addChild(timerSprite);\r\n        this._timerTextContainer = new createjs.Container();\r\n        this._timerTextContainer.y += 8;\r\n        this._timerTextContainer.x += Sprites.Graphics.Timer.getBounds().width + 10;\r\n        this._timerContainer.addChild(this._timerTextContainer);\r\n        this._container.addChild(this._timerContainer);\r\n\r\n        //fish remain\r\n        this._fishRemainContainer = new createjs.Container();\r\n        const fishRemainSprite = Sprites.Graphics.FishRemain.clone();\r\n        this._fishRemainContainer.addChild(fishRemainSprite);\r\n        this._fishRemainTextContainer = new createjs.Container();\r\n        this._fishRemainTextContainer.y += 8;\r\n        this._fishRemainTextContainer.x += Sprites.Graphics.FishRemain.getBounds().width + 10;\r\n        this._fishRemainContainer.addChild(this._fishRemainTextContainer);\r\n        this._container.addChild(this._fishRemainContainer);\r\n\r\n        //score\r\n        this._scoreContainer = new createjs.Container();\r\n        this._scoreContainer.x = this._game.StageWidth - Sprites.Graphics.Score.getBounds().width - 40;\r\n        const scoreSprite = Sprites.Graphics.Score.clone();\r\n        this._scoreContainer.addChild(scoreSprite);\r\n        this._scoreTextContainer = new createjs.Container();\r\n        this._scoreTextContainer.y += 8;\r\n        this._scoreTextContainer.x += Sprites.Graphics.Score.getBounds().width + 10;\r\n        this._scoreContainer.addChild(this._scoreTextContainer);\r\n        this._container.addChild(this._scoreContainer);\r\n        \r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public startHUD(showScore:boolean, showFishRemain:boolean, showTimer:boolean) {\r\n        this._useScore = showScore;\r\n        this._useFishRemain = showFishRemain;\r\n        this._useTimer = showTimer;\r\n\r\n        console.log(\"SHOW ME THE SCORE, REMAIN, TIMER\", showScore, showFishRemain, showTimer);\r\n\r\n        if(this._useScore) this._container.addChild(this._scoreContainer);\r\n        else this._container.removeChild(this._scoreContainer);\r\n\r\n        if(this._useFishRemain) this._container.addChild(this._fishRemainContainer);\r\n        else this._container.removeChild(this._fishRemainContainer);\r\n\r\n        if(this._useTimer) this._container.addChild(this._timerContainer);\r\n        else this._container.removeChild(this._timerContainer);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public update(gameTime:number) {\r\n        \r\n        //get the game timer\r\n        let timer = gameTime;\r\n        this._timerTextContainer.removeAllChildren();\r\n        let timerCont = Sprites.generateBitmapText(this._game.CurrentLevelData.currentTime.toString(), LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n        this._timerTextContainer.addChild(timerCont);\r\n\r\n        //get the fish remain score\r\n        let fishRemain = gameTime;\r\n        this._fishRemainTextContainer.removeAllChildren();\r\n        let fishRemainCont = Sprites.generateBitmapText(this._game.CurrentLevelData.remainingFish.toString(), LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n        this._fishRemainTextContainer.addChild(fishRemainCont);\r\n        this._fishRemainContainer.x = (this._game.StageWidth / 2) - (this._fishRemainContainer.getBounds().width / 2);\r\n\r\n        //get the score\r\n        let score = gameTime;\r\n        this._scoreTextContainer.removeAllChildren();\r\n        let scoreCont = Sprites.generateBitmapText(this._game.CurrentLevelData.score.toString(), LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n        this._scoreTextContainer.addChild(scoreCont);\r\n        this._scoreContainer.x = this._game.StageWidth - this._scoreContainer.getBounds().width - 40;\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container() { return this._container; }\r\n\r\n}"]}