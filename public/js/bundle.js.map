{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/Functions.ts","src/Game.ts","src/ObjectPool.ts","src/entities/Cat.ts","src/entities/Entity.ts","src/entities/Fish.ts","src/entities/Puffer.ts","src/entities/specials/Persephone.ts","src/main.ts","src/managers/DataManager.ts","src/managers/LoadManager.ts","src/managers/ProgressManager.ts","src/managers/ScreenManager.ts","src/screens/EndScreen.ts","src/screens/GameScreen.ts","src/screens/IntermediaryScreen.ts","src/screens/MenuScreen.ts","src/screens/Screen.ts","src/screens/SplashScreen.ts","src/screens/TutorialCreator.ts","src/ui/Sprites.ts","src/ui/custom/LevelSelectDisplay.ts","src/ui/display/Container.ts","src/ui/display/Layout.ts","src/ui/partials/GameScore.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Logging","message","console","log","_message","LoadManager_1","ProgressManager_1","ScreenManager_1","SplashScreen_1","MenuScreen_1","GameScreen_1","EndScreen_1","Functions_1","Sprites_1","IntermediaryScreen_1","DataManager_1","Game","canvasDiv","_this","this","_classCallCheck","_canvas","width","WIDTH","height","HEIGHT","_lastGameTime","_scaling","Promise","res","rej","__awaiter","regeneratorRuntime","mark","_callee","splash","wrap","_context","prev","next","_stage","createjs","StageGL","antialias","setClearColor","enableMouseOver","update","ScreenManager","registerScreen","SplashScreen","setCurrentScreen","getScreenByKey","addEventListener","LoadManager","ASSETS_UPDATED","Percentage","Text","Math","ceil","toString","loadAssets","catch","err","warn","success","DataManager","loadWorldsData","error","ProgressManager","WorldsData","changeCurrentLevel","getLevelDataByIndex","Sprites","setup","MenuScreen","GameScreen","EndScreen","IntermediaryScreen","Ticker","framerate","FRAME_RATE","on","stop","levelData","_currentLevel","currentScore","_currentScore","children","ch","scaleX","scaleY","_scaleChildren","gameTime","getMeasuredFPS","CurrentScreen","ObjectPool","obj","type","poolObj","active","Pool","push","_getObjectByType","_getObjectByObj","_pool","forEach","return","find","Entity_1","Cat","gameScreen","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","Spritesheets","Kitty_Spritesheet","_speed","_fishCaughtMultiplier","_caughtFish","_isGrabbing","_isRising","_isInjured","_hasReachedSurface","_sprite","gotoAndPlay","ANIMATION","Idle","Entity","_this2","IsGamelogicPaused","X","Stage","mouseX","speed","mouseY","Speed","_catYTween","Tween","get","to","y","Ease","circIn","Grab","Hold","fishes","tryToGrabFishes","Y","caught","returnToSurface","_this3","removeTweens","wait","linear","reachSurface","_this4","hasNewFish","indexOf","release","_this5","Ow","injure","drop","_this6","collectFish","_this7","_get","prototype","hasHitAPuffer","hitEnemy","caughtFishMult","value","freeze","Death","spritesheet","_gameScreen","Sprite","_direction","x","_isIgnoringCollision","_ignoreCollisionTimer","Scaling","container","addChild","parent","removeChild","IGNORE_COLLISION","artificialReg","arguments","undefined","reg","regX","regY","Bounds","Width","Height","bounds","StageWidth","extents","StageHeight","HIT","Right","Left","lastX","getBounds","Top","Bottom","Fish","Peeper_Spritesheet","_isCaught","_isReturning","Slow","_naturalY","Panic","hitTest","disable","abs","isNeg","IsIgnoringCollision","testStageBounds","startIgnoreCollision","Fast","Puffer","Puffer_Spritesheet","_cooldown","_currentCooldown","Angry","cat","Recover","Fish_1","Persephone","Persephone_Spritesheet","SPEC_ANIMATION","Game_1","document","getElementById","fileLocation","fetch","then","blob","json","_worldsData","index","flatten","concat","apply","worlds","currentLevel","getLevelIndexByData","_sheetsTotal","_sheetsLoaded","_percentage","_totalAssetsLoaded","_totalAssets","src","stage","reset","_preloadManager","LoadQueue","Sound","registerPlugins","WebAudioPlugin","HTMLAudioPlugin","FlashAudioPlugin","alternateExtensions","installPlugin","_onLoaded","_onComplete","_onError","data","setMaxConnections","loadManifest","ASSETS_LOADED","emitErrorEvent","dispatchEvent","AssetsLoadedEvent","AssetsFailedEvent","parseFloat","getItems","toFixed","AssetsUpdatedEvent","name","sheet","item","Types","JAVASCRIPT","window","id","_SpriteSheet","complete","_loadedSheet","ev","remove","IMAGE","Images","Bitmap","emitUpdatedEvent","removeAllEventListeners","setInterval","emitLoadedEvent","Event","ASSETS_FAILED","worldsData","_levelsProgress","map","world","level","unlocked","completed","_specialsProgress","special","collected","unlocks","_readCookieData","levels","specials","Screen_1","key","screen","_screensLookup","tempScreen","Screen","resolve","promises","_currentScreen","Container","alpha","destroy","_callee2","_context2","all","create","enable","Container_1","game","_game","_isFail","bg","Catfish_End","_container","_buttonsContainer","LAYOUT_OPTIONS","ColumnLeftBottom","addMany","btnTryAgain","btnNextLevel","btnMainMenu","_completeSpr","_failSpr","CurrentLevelData","nextLevel","getNextLevel","intermediary","queueNextScreen","visible","keys","TutorialCreator_1","ObjectPool_1","Persephone_1","Puffer_1","Cat_1","GameScore_1","_fishes","_puffers","_remainingFish","createPoolObject","POOL","CAT","FISH","_i","PUFFERFISH","PERSEPHONE","_cat","checkout","_staticContainer","BG_Spritesheet","_fishContainer","_pufferContainer","_winContainer","_gameScore","GameScore","_tutorialCreator","TutorialCreator","_pauseLogic","hitObjects","getObjectsUnderPoint","fish","puff","killedFish","splice","win","changeCurrentScore","totalFish","combos","time","elasticOut","checkoutSprites","_winBanner","Shape","graphics","beginFill","drawRect","cache","_winText","generateBitmapText","TypographyWhite","mouseEnabled","flip","DirectionX","setNaturalY","puffer","tutorials","queueTutorials","background","gotoAndStop","showScore","showTimer","duration","showFishRemain","showRemainingFish","startHUD","releaseAllObjects","normalizedTime","min","grab","removeAllChildren","_text","screenKey","evt","setTimeout","clearTimeout","_bg","endFill","_textContainer","_txtSprite","scale","LevelSelectDisplay_1","_swipeContainer","Catfish_Main","_mainContainer","_logo","_mainButtonsContainer","btnNewGame","btnOptions","btnLevelSelect","btnExit","_fancyFish","_optionsContainer","txtOptions","Typography","btnClearData","Buttons","ClearData","_clearedContainer","add","_levelSelectDisplay","LevelSelectDisplay","_swipeSpeed","_initialSwipePos","circOut","bounceOut","cubicIn","cubicInOut","clearInterval","stageX","stageY","_dragTimer","_onMain","_onNewGame","_onOptions","_onLevelSelect","_onExit","listenToClearData","CLEAR_DATA","_onClearData","_onDragStart","_onDragEnd","loop","sineInOut","off","stopListenToClearData","removeAllTweens","_textSpritesheet","SpriteSheet","images","frames","animations","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","Z","b","d","g","h","j","k","l","m","q","s","v","w","z","0","2","3","4","5","6","7","8","9",".",",","'","\"","?","!","$","img","createElement","onload","text","textEl","_tutorialQueue","_youOverlay","Tutorial_Spritesheet","_fishOverlay","_pufferOverlay","_manyOverlay","_pauseOverlay","_specialOverlay","First","You","Many","Pause","Special","t0","KEY","_runYou","_transition","_runFish","unpauseGameLogic","abrupt","_runPuffer","_runSpecial","nextScreen","_currentOverlay","_callee3","_context4","_callee4","_context5","catStart","pauseGameLogic","_backgrounds","Main","UI","Logo","Entities","BG","BGTop","Wave","_graphics","Timer","ScoreHUD_Spritesheet","Score","FishRemain","_buttons","NewGame","ButtonHelper","Options","LevelSelect","Exit","Fishbowl","LevelSelectBG","Menu_Level_Select","LevelEmpty","LevelComplete","LevelSpecialEmpty","LevelSpecialComplete","_setupBTNClearData","cursor","_canClearData","_btnDataDown","_btnDataComplete","_btnDataUp","details","color","textObj","BitmapText","_levelButtons","_background","Backgrounds","_levelsContainer","_levelTextContainer","LevelText","_levelsData","ProgressData","sprite","clone","btn","_onLevelClick","_onLevelHover","_onLevelUnhover","reduce","acc","target","_getDataByIndex","Layout_1","layout","_sprites","_layout","Layout","direction","alignment","crossAlignment","spacing","MAKE_VERTICAL_CENTER","updateLayout","buildLayout","_toConsumableArray","sprites","_layout2","_layout3","ColumnLeftTop","VERTICAL","START","ColumnLeftCenter","CENTER","END","ColumnCenterTop","ColumnCenterCenter","ColumnCenterBottom","ColumnRightTop","ColumnRightCenter","ColumnRightBottom","_parent","_items","_alignment","_crossAlignment","_spacing","addToParent","_len","items","Array","_key","totalHeight","_item","_i2","_item2","_i3","_i4","HORIZONTAL","_useTimer","_useFishRemain","_useScore","_timerContainer","timerSprite","Graphics","_timerTextContainer","_fishRemainContainer","fishRemainSprite","_fishRemainTextContainer","_scoreContainer","scoreSprite","_scoreTextContainer"],"mappings":"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AAG,EAAE,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,GAAG,EAAE,EAAE,IAAMC,WAAY,CAACC,EAAE,CAAC,EAAE,GAAG,GAAOC,EAAE,CAAC,EAAE,GAAG,GAAOC,EAAE,CAAC,EAAE,GAAG,GAAOC,EAAE,CAAC,EAAE,GAAG,GAAOC,EAAE,CAAC,EAAE,GAAG,GAAOC,EAAE,CAAC,EAAE,GAAG,GAAOC,EAAE,CAAC,EAAE,GAAG,GAAOC,EAAE,CAAC,EAAE,GAAG,GAAOC,EAAE,CAAC,EAAE,GAAG,GAAOC,EAAE,CAAC,EAAE,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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/* ************************************************* */\r\n/*                      LOGGING                      */\r\n/* ************************************************* */\r\nexport class Logging {\r\n    static success(message:string):void {\r\n        console.log(`%c ${message}`, 'color:seagreen; font-size:1.1em; font-weight:bold; border-left: solid 3px seagreen;')    ;\r\n    }\r\n\r\n    static message(message:string):void {\r\n        console.log(`%c ${message}`, 'color:#1E265C; font-size:1.1em; font-weight:bold; border-left: solid 3px #1E265C;');\r\n    }\r\n\r\n    static error(message:string):void {\r\n        console.log(`%c ${message}`, 'color:red; font-size:1.1em; border-left: solid 3px red;');\r\n    }\r\n}","import { LoadManager } from \"./managers/LoadManager\";\r\nimport { ProgressManager } from \"./managers/ProgressManager\";\r\nimport { ScreenManager } from \"./managers/ScreenManager\";\r\nimport { SplashScreen } from \"./screens/SplashScreen\";\r\nimport { MenuScreen } from \"./screens/MenuScreen\";\r\nimport { GameScreen } from \"./screens/GameScreen\";\r\nimport { EndScreen } from \"./screens/EndScreen\";\r\nimport { Logging } from \"./Functions\";\r\nimport { Sprites } from \"./ui/Sprites\";\r\nimport { IntermediaryScreen } from \"./screens/IntermediaryScreen\";\r\nimport { DataManager, LevelData } from \"./managers/DataManager\";\r\n\r\nexport interface ICurrentScore {\r\n    totalFish: number;\r\n    time: number;\r\n    combos: number;\r\n}\r\n\r\n\r\nexport class Game {\r\n    private _canvas:HTMLCanvasElement;\r\n    private _stage:createjs.StageGL;\r\n    private _scaling:number;\r\n\r\n    private _lastGameTime:number;\r\n\r\n    private _currentLevel:LevelData;\r\n    private _currentScore:ICurrentScore;\r\n\r\n    constructor(canvasDiv:HTMLCanvasElement) {\r\n\r\n        this._canvas = canvasDiv;\r\n        this._canvas.width = Game.WIDTH;\r\n        this._canvas.height = Game.HEIGHT;\r\n\r\n        this._lastGameTime = -1;\r\n\r\n        //set the scaling\r\n        this._scaling = Game.HEIGHT / 1024;\r\n\r\n        //start loading game assets\r\n        new Promise(async(res, rej) => {\r\n            //create the stage\r\n            console.log(\"Readying stage!\");\r\n            this._stage = new createjs.StageGL(this._canvas, { antialias: true });\r\n            // this._stage = new createjs.StageGL(this._canvas);\r\n            (this._stage as any).setClearColor(\"#000000\");\r\n            this._stage.enableMouseOver(10);\r\n            this._stage.update();\r\n\r\n            // this._stage.scaleX = this._stage.scaleY = 0.8;\r\n\r\n            console.log(this._stage, this._canvas);\r\n\r\n            //load the splash screen\r\n            ScreenManager.registerScreen(\"splash\", new SplashScreen(this));\r\n            ScreenManager.setCurrentScreen(\"splash\", this._stage);\r\n\r\n            const splash = ScreenManager.getScreenByKey(\"splash\") as SplashScreen;\r\n\r\n            //listen to asset updates\r\n            (this._stage as any).addEventListener(LoadManager.ASSETS_UPDATED, (e) => {\r\n                console.log(LoadManager.Percentage);\r\n                //update percent\r\n                splash.Text = Math.ceil(LoadManager.Percentage * 100).toString();\r\n            });\r\n            //load assets\r\n            await LoadManager.loadAssets(\"assets/manifest.json\", this._stage)\r\n                .catch(err => {\r\n                    console.warn(\"Error loading assets:\", err);\r\n                });\r\n\r\n            Logging.success(\"Assets Loaded Successfully!\");\r\n\r\n            //load level data\r\n            await DataManager.loadWorldsData(\"assets/data/levels.json\")\r\n                .catch(err => {\r\n                    Logging.error(err);\r\n                    return;\r\n                });\r\n            //load progress data\r\n            await ProgressManager.loadWorldsData(DataManager.WorldsData);\r\n\r\n            //set the current screen\r\n            //game test, load desired level patch -- if autoloading to game screen\r\n            this.changeCurrentLevel(DataManager.getLevelDataByIndex(4));\r\n\r\n            Logging.success(\"Level Data Loaded Successfully!\");\r\n\r\n            //setup createjs.Sprites\r\n            await Sprites.setup();\r\n\r\n            //build the screens\r\n            ScreenManager.registerScreen(\"menu\", new MenuScreen(this));\r\n            ScreenManager.registerScreen(\"game\", new GameScreen(this));\r\n            ScreenManager.registerScreen(\"end\", new EndScreen(this));\r\n            ScreenManager.registerScreen(\"intermediary\", new IntermediaryScreen(this));\r\n            \r\n\r\n            // ScreenManager.setCurrentScreen(\"menu\", this._stage);\r\n            ScreenManager.setCurrentScreen(\"game\", this._stage);\r\n            // ScreenManager.setCurrentScreen(\"end\", this._stage);\r\n\r\n            //setup the game loop\r\n            createjs.Ticker.framerate = Game.FRAME_RATE;\r\n            createjs.Ticker.on(\"tick\", this.update, this);\r\n\r\n            res();\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public changeCurrentLevel(levelData:LevelData) {\r\n        this._currentLevel = levelData;\r\n    }\r\n\r\n    public changeCurrentScore(currentScore:ICurrentScore) {\r\n        this._currentScore = currentScore;\r\n    }\r\n\r\n\r\n\r\n    //recursive sizing\r\n    private _scaleChildren(children) {\r\n\r\n\r\n        if(children != null) {\r\n            for(let i = 0; i < children.length; i++) {\r\n                const ch = children[i];\r\n                ch.scaleX = ch.scaleY = this._scaling;\r\n                if(ch.children != null && ch.scaleX != null) this._scaleChildren(ch);\r\n            }\r\n        }\r\n\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    public update(e:any) {\r\n\r\n        const gameTime = (this._lastGameTime != -1) ? createjs.Ticker.getMeasuredFPS() - this._lastGameTime : 1;\r\n        this._lastGameTime = createjs.Ticker.getMeasuredFPS();\r\n\r\n        //update the screen\r\n        if(ScreenManager.CurrentScreen != null) ScreenManager.CurrentScreen.update(gameTime);\r\n\r\n        //scale all children\r\n        // this._scaleChildren(this._stage.children);\r\n\r\n        //update the stage\r\n        this._stage.update();\r\n    }\r\n\r\n\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get FRAME_RATE() { return 30; }\r\n    // public static get WIDTH() { return Game.HEIGHT * 0.5625; } //desired size\r\n    // public static get HEIGHT() { return Math.min(document.body.clientHeight, 1024); }\r\n\r\n    public static get WIDTH() { return 576; }\r\n    public static get HEIGHT() { return 1024; }\r\n\r\n    public get StageWidth() { return this._canvas.width; } //actual size\r\n    public get StageHeight() { return this._canvas.height; }\r\n\r\n    public get Stage() { return this._stage; }\r\n    public get Scaling() { return this._scaling; }\r\n\r\n    public get CurrentLevelData() { return this._currentLevel; }\r\n    public get CurrentScoreData() { return this._currentScore; }\r\n\r\n\r\n\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n\r\n\r\n}","import { Logging } from \"./Functions\";\r\nimport { Entity } from \"./entities/Entity\";\r\n\r\nexport interface IPoolObject {\r\n    type:string;\r\n    obj:Entity,\r\n    active:boolean;\r\n}\r\n\r\nexport class ObjectPool {\r\n    private static _pool:IPoolObject[];\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Creates a pool object. */\r\n    public static createPoolObject(obj:Entity, type:string) {\r\n        const poolObj = {\r\n            type,\r\n            obj,\r\n            active: false\r\n        };\r\n        ObjectPool.Pool.push(poolObj);\r\n        return poolObj;\r\n    }\r\n\r\n    /**Checks out a pool object.  Use POOL global function to access. */\r\n    public static checkout(type:string) {\r\n        const poolObj = ObjectPool._getObjectByType(type);\r\n        if(poolObj != null) {\r\n            poolObj.active = true;\r\n            return poolObj.obj;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**Returns an object to the pool. */\r\n    public static return(obj:Entity) {\r\n        const poolObj = ObjectPool._getObjectByObj(obj);\r\n        if(poolObj != null) {\r\n            poolObj.active = false;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**Returns all objects to pool. */\r\n    public static releaseAllObjects() {\r\n        ObjectPool._pool.forEach(p => {\r\n            ObjectPool.return(p.obj);\r\n        });\r\n    }\r\n\r\n\r\n    public static _getObjectByType(type) {\r\n        const poolObj = ObjectPool._pool.find((o => o.type == type && !o.active));\r\n        if(poolObj == null) Logging.error(\"Object not found in pool, or pool is exhausted.  Return some objects.\");\r\n        return poolObj\r\n    }\r\n    public static _getObjectByObj(obj) {\r\n        return ObjectPool._pool.find((o => o.obj == obj));\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get Pool() { \r\n        if(ObjectPool._pool == null) ObjectPool._pool = [];\r\n        return ObjectPool._pool;\r\n    }\r\n}","import { Game } from \"../Game\";\r\nimport { Entity } from \"./Entity\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { IEnableable } from \"../Interfaces\";\r\nimport { Logging } from \"../Functions\";\r\nimport { GameScreen } from \"../screens/GameScreen\";\r\nimport { Fish } from \"./Fish\";\r\n\r\nexport class Cat extends Entity implements IEnableable {\r\n    private _speed:number;\r\n    private _fishCaughtMultiplier:number; //this will be the rate at which the cat slows down when rising per fish\r\n\r\n    private _catYTween:createjs.Tween;\r\n    private _caughtFish:Fish[];\r\n\r\n    private _isGrabbing:boolean;\r\n    private _isRising:boolean;\r\n    private _isInjured:boolean;\r\n    private _hasReachedSurface:boolean;\r\n\r\n    constructor(gameScreen:GameScreen) {\r\n        super(gameScreen, LoadManager.Spritesheets.Kitty_Spritesheet);\r\n        // super(gameScreen, LoadManager.Spritesheets.Cat_Spritesheet);\r\n        this._speed = 3;\r\n        this._fishCaughtMultiplier = 0.05;\r\n\r\n        this._caughtFish = [];\r\n        this._isGrabbing = false;\r\n        this._isRising = false;\r\n        this._isInjured = false;\r\n        this._hasReachedSurface = true;\r\n\r\n        this._sprite.gotoAndPlay(Cat.ANIMATION.Idle);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    enable() {\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n    }\r\n\r\n\r\n    /***************/\r\n    /*   ACTIONS   */\r\n    /***************/\r\n    public grab() {\r\n        //if the game is paused, we shall not grab\r\n        if(this.GameScreen.IsGamelogicPaused) return;\r\n\r\n        //cannot grab if we are not at surface\r\n        if(!this._hasReachedSurface) return;\r\n\r\n        this._isGrabbing = true;\r\n        this._hasReachedSurface = false;\r\n\r\n        //move to x position\r\n        this.X = this.GameScreen.Game.Stage.mouseX;\r\n\r\n        //grab to y position\r\n        const speed = (this.GameScreen.Game.Stage.mouseY / 2) * this.Speed;\r\n        this._catYTween = createjs.Tween\r\n            .get(this._sprite)\r\n            .to({ y:this.GameScreen.Game.Stage.mouseY }, speed, createjs.Ease.circIn)\r\n            .call(() => {\r\n                //once the grab is done, turn off flag\r\n                this._isGrabbing = false;\r\n\r\n                 //play animations\r\n                this._sprite.gotoAndPlay(Cat.ANIMATION.Grab);\r\n                //listen for animation to finish\r\n                (this._sprite as any).on(\"animationend\", () => {\r\n                    this._sprite.gotoAndPlay(Cat.ANIMATION.Hold);\r\n                }, true);\r\n\r\n                //try to grab a fish\r\n                const fishes = this.GameScreen.tryToGrabFishes(this.X , this.Y);\r\n\r\n                //see if a fish was grabbed\r\n                if(fishes.length > 0) this.caught(fishes);\r\n                else this.returnToSurface();\r\n            });\r\n\r\n    }\r\n\r\n    /**\r\n     * Called to return cat to surface.\r\n     */\r\n    public returnToSurface() {\r\n        this._sprite.gotoAndPlay(Cat.ANIMATION.Idle);\r\n\r\n        //remove any lingering tweens\r\n        createjs.Tween.removeTweens(this._sprite);\r\n        const speed = (this.Y / 2) * this.Speed;\r\n        this._catYTween = createjs.Tween.get(this._sprite)\r\n            .wait(150)\r\n            .to({y:20}, speed, createjs.Ease.linear)\r\n            .call(() => {\r\n                //once the surface has been reached, allow x movement again\r\n                this.reachSurface();\r\n            });\r\n    }\r\n\r\n    public caught(fishes:Fish[]) {\r\n        if(fishes.length <= 0) return;\r\n        this._isRising = true;  \r\n        \r\n        let hasNewFish = false;\r\n\r\n        fishes.forEach(f => {\r\n            if(this._caughtFish.indexOf(f) != -1) return;\r\n            hasNewFish = true;\r\n            //grab the fish\r\n            f.catch();\r\n\r\n            //add fish to caught array\r\n            this._caughtFish.push(f);\r\n\r\n            //control the fish\r\n            f.Y = this.Y;\r\n        });\r\n\r\n        if(!hasNewFish) return;\r\n        \r\n        //if we grabbed a fish...\r\n        //go back up... slowly\r\n        createjs.Tween.removeTweens(this._sprite);\r\n        const speed = this.Y * this.Speed;\r\n        this._catYTween = createjs.Tween.get(this._sprite)\r\n            .wait(250)\r\n            .to({y:-20}, speed, createjs.Ease.linear)\r\n            .call(() => {\r\n                //once the surface has been reached, allow x movement again\r\n                this.reachSurface();\r\n                this._isRising = false;\r\n            });\r\n\r\n    }\r\n    public drop() {\r\n        //release the fish\r\n        this._caughtFish.forEach(f => f.release());\r\n        this._caughtFish = [];\r\n    }\r\n\r\n    /**Called when hit by an enemy. */\r\n    public injure() {\r\n        this._isInjured = true;\r\n        //start hurt animation\r\n        //end any current tweening\r\n        createjs.Tween.removeTweens(this._sprite);\r\n        this._sprite.gotoAndPlay(Cat.ANIMATION.Ow);\r\n        this._catYTween = createjs.Tween.get(this._sprite)\r\n            .wait(15)\r\n            .to({y:20}, 500, createjs.Ease.linear)\r\n            .call(() => {\r\n                //once the surface has been reached, allow x movement again\r\n                this.reachSurface();\r\n                this._sprite.gotoAndPlay(Cat.ANIMATION.Idle);\r\n            });\r\n    }\r\n\r\n    /**Called when the cat tickles an enemy. */\r\n    public hitEnemy() {\r\n        this.injure();\r\n        this.drop();\r\n    }\r\n\r\n    public reachSurface() {\r\n        //if we have a fish, send to main logic\r\n        if(this._caughtFish != null) {\r\n            this._caughtFish.forEach(f => {\r\n                this.GameScreen.collectFish(f);\r\n            });\r\n            this._caughtFish = [];\r\n        }\r\n\r\n        //set flags\r\n        this._hasReachedSurface = true;\r\n        this._isInjured = false;\r\n        this._isRising = false;\r\n        this._isGrabbing = false;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    update(gameTime:number) {\r\n        //if our game logic is paused, no FISHING\r\n        if(this.GameScreen.IsGamelogicPaused) return;\r\n\r\n        super.update(gameTime);\r\n\r\n\r\n        //if we are rising, attempt to catch more fish\r\n        if(this._isRising && !this._isInjured) {\r\n            //try to grab a fish\r\n            const fishes = this.GameScreen.tryToGrabFishes(this.X , this.Y);\r\n            //see if a fish was grabbed\r\n            if(fishes.length > 0)\r\n                this.caught(fishes);\r\n        }\r\n\r\n        //test puffer damage\r\n        if(this._isRising || this._isGrabbing) {\r\n            //don't test again if injured\r\n            if(!this._isInjured) {\r\n                //test for puffer hit\r\n                const hasHitPuffer = this.GameScreen.hasHitAPuffer(this.X, this.Y);\r\n                if(hasHitPuffer) {\r\n                    this.hitEnemy();\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        //drag fish with us if we have any\r\n        if(this._caughtFish != null) {\r\n            this._caughtFish.forEach(f => {\r\n                f.Y = this.Y - 20;\r\n            });\r\n        }\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get GRAB_RANGE() { return 120; }\r\n    public static get ANIMATION() {\r\n        return Object.freeze({\r\n            \"Idle\" : \"kittyIdle\",\r\n            \"Death\" : \"kittyIdle\",\r\n            \"Grab\" : \"kittyIdle\",\r\n            \"Hold\" : \"kittyIdle\",\r\n            \"Ow\" : \"kittyIdle\"\r\n        });\r\n    }\r\n    // public static get ANIMATION() {\r\n    //     return Object.freeze({\r\n    //         \"Idle\" : \"cat_idle\",\r\n    //         \"Death\" : \"cat_death\",\r\n    //         \"Grab\" : \"cat_grab\",\r\n    //         \"Hold\" : \"cat_grab_hold\",\r\n    //         \"Ow\" : \"cat_ow\"\r\n    //     });\r\n    // }\r\n    public get Speed() { \r\n        const caughtFishMult = ((this._caughtFish.length > 0) ? 1 + (this._caughtFish.length + this._fishCaughtMultiplier) : 1);\r\n        console.log(caughtFishMult);\r\n\r\n        return caughtFishMult * this._speed;\r\n    }\r\n    public set Speed(value:number) { this._speed = value; }\r\n}","import { ICreateable, IUpdateable } from \"../Interfaces\";\r\nimport { GameScreen } from \"../screens/GameScreen\";\r\nimport { Game } from \"../Game\";\r\n\r\nexport class Entity implements ICreateable<Entity>, IUpdateable {\r\n    private _gameScreen:GameScreen;\r\n    protected _name:string;\r\n    protected _sprite:createjs.Sprite;\r\n    protected _direction:{ x:number, y:number };\r\n    private _scaling:number;\r\n\r\n    private _isIgnoringCollision:boolean;\r\n    private _ignoreCollisionTimer:number;\r\n\r\n    constructor(gameScreen:GameScreen, spritesheet:createjs.SpriteSheet) {\r\n        this._gameScreen = gameScreen;\r\n        this._sprite = new createjs.Sprite(spritesheet);\r\n        this._direction = { x:1, y:1 };\r\n\r\n        this._isIgnoringCollision = false;\r\n        this._ignoreCollisionTimer = 0;\r\n\r\n        //get the game scale\r\n        this._scaling = this._gameScreen.Game.Scaling;\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public create(container:createjs.Container):Entity {\r\n        // (this._sprite as any).scale = this._scaling;\r\n\r\n        //move to main container\r\n        if(container == null)\r\n            this._gameScreen.Game.Stage.addChild(this._sprite);\r\n        else\r\n            container.addChild(this._sprite);\r\n        return this;\r\n    }\r\n\r\n    public destroy():Entity {\r\n        if(this._sprite == null || this._sprite.parent == null) return null;\r\n\r\n        //remove from main container\r\n        this._sprite.parent.removeChild(this._sprite);\r\n\r\n        return this;\r\n    }\r\n\r\n    public update(gameTime:number) {\r\n\r\n         //listen for collision ignore\r\n        if(this._isIgnoringCollision) {\r\n            this._ignoreCollisionTimer++;\r\n\r\n            if(this._ignoreCollisionTimer > Entity.IGNORE_COLLISION)\r\n                this._isIgnoringCollision = false;\r\n        }\r\n    }\r\n\r\n    protected startIgnoreCollision() {\r\n        this._isIgnoringCollision = true\r\n    }\r\n\r\n    protected testStageBounds(artificialReg:{x:number, y:number} = null) {\r\n        let reg = { x:this._sprite.regX, y:this._sprite.regY };\r\n        if(artificialReg != null) {\r\n            reg = {\r\n                x: (this._direction.x > 0) ? this.Bounds.Width * artificialReg.x : (this.Bounds.Width * (1 - artificialReg.x)),\r\n                y: (this._direction.y > 0) ? this.Bounds.Height * artificialReg.y : (this.Bounds.Height * (1 - artificialReg.y))\r\n            }\r\n        }\r\n        // const bounds = { width:this._game.StageWidth, height: this._game.StageHeight };\r\n        const bounds = { width:this._gameScreen.Game.StageWidth, height: this._gameScreen.Game.StageHeight };\r\n        const extents = {   \r\n            x:(this._direction.x > 0) ? (this.Bounds.Width - reg.x) : -reg.x, \r\n            y:(this._direction.y > 0) ? (this.Bounds.Height - reg.y) : -reg.y \r\n        };\r\n\r\n        //test walls\r\n        if((this.X + extents.x) > bounds.width) return Entity.HIT.Right;\r\n        else if(this.X + extents.x < 0) return Entity.HIT.Left;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get IGNORE_COLLISION() { return 20; }\r\n    public static get HIT() { return Object.freeze({Top:0, Right:1, Bottom:2, Left:3}); }\r\n\r\n    protected get GameScreen() { return this._gameScreen; }\r\n\r\n    public get Sprite() { return this._sprite; }\r\n    public get Parent() { return this._sprite.parent; }\r\n\r\n    public get X() { return this._sprite.x; }\r\n    public set X(value) { this._sprite.x = value; }\r\n    public get Y() { return this._sprite.y; }\r\n    public set Y(value) { this._sprite.y = value; }\r\n\r\n    public set DirectionX(value) { \r\n        const lastX = this._direction.x;\r\n        this._direction.x = value; \r\n        //flip sprite if our direction has changed\r\n        if(this._direction.x != lastX) this._sprite.scaleX *= -1;\r\n    }\r\n\r\n    public get Bounds() { \r\n        let bounds = this._sprite.getBounds();\r\n        return  { Width:bounds.width, Height:bounds.height };\r\n    }\r\n\r\n    public get IsIgnoringCollision() { return this._isIgnoringCollision; }\r\n}","import { Game } from \"../Game\";\r\nimport { Entity } from \"./Entity\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { IEnableable } from \"../Interfaces\";\r\nimport { Logging } from \"../Functions\";\r\nimport { GameScreen } from \"../screens/GameScreen\";\r\n\r\nexport class Fish extends Entity implements IEnableable {\r\n    private _speed:number;\r\n    private _naturalY:number;\r\n\r\n    private _isCaught:boolean;\r\n    private _isReturning:boolean;\r\n\r\n    constructor(gameScreen:GameScreen, spritesheet?:createjs.SpriteSheet) {\r\n        super(gameScreen, spritesheet || LoadManager.Spritesheets.Peeper_Spritesheet);\r\n        this._speed = 1;\r\n\r\n        this._isCaught = false;\r\n        this._isReturning = false;\r\n\r\n        this._sprite.gotoAndPlay(Fish.ANIMATION.Slow);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    \r\n\r\n\r\n    /***************/\r\n    /*   ACTIONS   */\r\n    /***************/\r\n    public setNaturalY() {\r\n        this._naturalY = this.Y;\r\n    }\r\n\r\n    public catch() {\r\n        if(this._isCaught) return;\r\n        \r\n        Logging.message(\"Fish was grabbed!\");\r\n        this._isCaught = true;\r\n\r\n        this._sprite.gotoAndPlay(Fish.ANIMATION.Panic);\r\n    }\r\n\r\n    public release() {\r\n        this._isCaught = false;\r\n        //return to natural y position\r\n        this._isReturning = true;\r\n    }\r\n\r\n\r\n    /**Test to see if global position hits sprite. */\r\n    public testHit(x:number, y:number):boolean {\r\n        return this._sprite.hitTest(x, y);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    destroy() {\r\n        //reset flags\r\n        this._isCaught = false;\r\n        //reset animations\r\n        this._sprite.gotoAndPlay(Fish.ANIMATION.Slow);\r\n\r\n        this.disable();\r\n        return super.destroy();\r\n    }\r\n\r\n    update(gameTime:number) {\r\n        super.update(gameTime);\r\n\r\n        //move the fishy\r\n        if(!this._isCaught)\r\n            this.X += this._speed * gameTime * this._direction.x;\r\n        //--if returning, swim to natural y\r\n        if(this._isReturning) {\r\n            //if we are still far away, swim!\r\n            if(Math.abs(this.Y - this._naturalY) > 30) {\r\n                const isNeg = this.Y > this._naturalY;\r\n                this.Y += (isNeg) ? -10 : 10;\r\n            }\r\n            else {\r\n                this._isReturning = false;\r\n                this._sprite.gotoAndPlay(Fish.ANIMATION.Slow);\r\n            }\r\n        }\r\n\r\n        //test collision\r\n        if(!this.IsIgnoringCollision) {\r\n\r\n            //if fish hits the edge, flip direction\r\n            const hit = this.testStageBounds({x:0.5, y:0.5});\r\n            switch(hit) {\r\n                case Entity.HIT.Right:\r\n                    this._direction.x *= -1;\r\n                    this._sprite.scaleX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X -= 5 - this.Bounds.Width;\r\n                    break;\r\n                case Entity.HIT.Left:\r\n                    this._direction.x *= -1;\r\n                    this._sprite.scaleX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X += 5 - this.Bounds.Width;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    enable() {\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get ANIMATION() {\r\n        return Object.freeze({\r\n            \"Slow\" : \"fishIdle\",\r\n            \"Fast\" : \"fishIdle\",\r\n            \"Panic\" : \"fishPanic\"\r\n        });\r\n    }\r\n    public get Speed() { return this._speed; }\r\n    public set Speed(value:number) { this._speed = value; }\r\n}","import { Game } from \"../Game\";\r\nimport { Entity } from \"./Entity\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { IEnableable } from \"../Interfaces\";\r\nimport { Logging } from \"../Functions\";\r\nimport { GameScreen } from \"../screens/GameScreen\";\r\nimport { Cat } from \"./Cat\";\r\n\r\nexport class Puffer extends Entity implements IEnableable {\r\n    public get Type() { return \"Puffer\"; }\r\n    \r\n    private _speed:number;\r\n    private _cooldown:number = 40;\r\n    private _currentCooldown:number = 0;\r\n\r\n    private _isCaught:boolean;\r\n\r\n    constructor(gameScreen:GameScreen) {\r\n        super(gameScreen, LoadManager.Spritesheets.Puffer_Spritesheet);\r\n        this._speed = 1;\r\n\r\n        this._isCaught = false;\r\n\r\n        this._sprite.gotoAndPlay(Puffer.ANIMATION.Idle);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    \r\n\r\n\r\n    /***************/\r\n    /*   ACTIONS   */\r\n    /***************/\r\n    public puff() {\r\n        this._sprite.gotoAndPlay(Puffer.ANIMATION.Angry);\r\n        //start cooldown\r\n        this._currentCooldown = this._cooldown;\r\n    }\r\n\r\n\r\n    /**Test to see if global position hits sprite. */\r\n    public testHit(x:number, y:number, cat:Cat):boolean {\r\n        return (x >= this.X - cat.Bounds.Width && x <= this.X + this.Bounds.Width \r\n            && y >= this.Y - cat.Bounds.Height && y <= this.Y + this.Bounds.Height) ;\r\n        // return this._sprite.hitTest(x, y);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    destroy() {\r\n        //reset flags\r\n        this._isCaught = false;\r\n        //reset animations\r\n        this._sprite.gotoAndPlay(Puffer.ANIMATION.Idle);\r\n\r\n        this.disable();\r\n        return super.destroy();\r\n    }\r\n\r\n    update(gameTime:number) {\r\n        super.update(gameTime);\r\n\r\n        //move the fishy\r\n        if(!this._isCaught)\r\n            this.X += this._speed * gameTime * this._direction.x;\r\n\r\n        //do cooldown\r\n        if(this._currentCooldown >= 0) {\r\n            this._currentCooldown--;\r\n            if(this._currentCooldown == 0) {\r\n                //reset animations\r\n                this._sprite.gotoAndPlay(Puffer.ANIMATION.Recover);\r\n            }\r\n        }\r\n\r\n        //test collision\r\n        if(!this.IsIgnoringCollision) {\r\n\r\n            //if fish hits the edge, flip direction\r\n            const hit = this.testStageBounds({x:0.5, y:0.5});\r\n            switch(hit) {\r\n                case Entity.HIT.Right:\r\n                    this._direction.x *= -1;\r\n                    this._sprite.scaleX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X -= 5 - this.Bounds.Width;\r\n                    break;\r\n                case Entity.HIT.Left:\r\n                    this._direction.x *= -1;\r\n                    this._sprite.scaleX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X += 5 - this.Bounds.Width;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    enable() {\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get ANIMATION() {\r\n        return Object.freeze({\r\n            \"Idle\" : \"pufferIdle\",\r\n            \"Angry\" : \"pufferAngry\",\r\n            \"Recover\" : \"pufferRecover\"\r\n        });\r\n    }\r\n    public get Speed() { return this._speed; }\r\n    public set Speed(value:number) { this._speed = value; }\r\n}","import { LoadManager } from \"../../managers/LoadManager\";\r\nimport { Fish } from \"../Fish\";\r\nimport { GameScreen } from \"../../screens/GameScreen\";\r\n\r\nexport class Persephone extends Fish {\r\n\r\n    constructor(gameScreen:GameScreen) {\r\n        super(gameScreen, LoadManager.Spritesheets.Persephone_Spritesheet);\r\n        this._sprite.gotoAndPlay(Persephone.SPEC_ANIMATION.Idle);\r\n    }\r\n\r\n\r\n    public static get SPEC_ANIMATION() {\r\n        return Object.freeze({\r\n            \"Idle\" : \"persIdle\"\r\n        });\r\n    }\r\n\r\n}","import { Game } from \"./Game\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    const game = new Game(document.getElementById(\"game-canvas\") as HTMLCanvasElement);\r\n});","import { Screen } from \"../screens/Screen\";\r\n\r\nexport interface WorldsData {\r\n    worlds:LevelData[];\r\n}\r\n\r\nexport interface LevelData {\r\n    name:string;\r\n    tutorials?:string[];\r\n    background?:string;\r\n    data:any[];\r\n    duration?:number;\r\n    showScore?:boolean;\r\n    showRemainingFish?:boolean;\r\n    special?:boolean;\r\n    unlocks?:string; // name of unlock fish\r\n}\r\n\r\nexport class DataManager {\r\n    private static _worldsData:WorldsData;\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Loads in the worlds data! */\r\n    public static loadWorldsData(fileLocation:string) {\r\n        return new Promise<WorldsData>(async(res, rej) => {\r\n            await fetch(fileLocation)\r\n                .then(blob => blob.json())\r\n                .then(json => {\r\n                    this._worldsData = json;\r\n                    res(this._worldsData);\r\n                })\r\n                .catch(err => {\r\n                    rej(\"Could not load world data! \" + err);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**Returns the level data received by the given index. */\r\n    public static getLevelDataByIndex(index:number) {\r\n        //flatten level data, and get data\r\n        let flatten = [].concat.apply([], DataManager._worldsData.worlds);\r\n        if(index < flatten.length)\r\n            return flatten[index];\r\n        return null;\r\n    }\r\n\r\n    /**Inverse of getLevelDataByIndex.\r\n     * @see getLevelDataByIndex . */\r\n    public static getLevelIndexByData(levelData:LevelData) {\r\n        //flatten level data, and get data\r\n        let flatten = [].concat.apply([], DataManager._worldsData.worlds);\r\n        return flatten.indexOf(levelData);\r\n    }\r\n\r\n    /**Gets the next level data or returns null if there is no next level. */\r\n    public static getNextLevel(currentLevel:number | LevelData) {\r\n        let index = currentLevel as number;\r\n        if(currentLevel as LevelData != null) index = this.getLevelIndexByData(currentLevel as LevelData);\r\n\r\n        //get the next index\r\n        return this.getLevelDataByIndex(index + 1);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get WorldsData():WorldsData { return DataManager._worldsData; }\r\n    public static get FlatWorldData() { return [].concat.apply([], DataManager._worldsData.worlds); }\r\n}","export class LoadManager {\r\n    public static get ASSETS_LOADED():string { return \"onAssetsLoaded\"; }\r\n    public static get ASSETS_FAILED():string { return \"onAssetsFailed\"; }\r\n    public static get ASSETS_UPDATED():string { return \"onAssetsUpdated\"; }\r\n\r\n    public static Spritesheets:{ [key:string]:createjs.SpriteSheet } = {};\r\n    public static Images:{ [key:string]:createjs.Bitmap } = {};\r\n\r\n    private static _stage:createjs.StageGL;\r\n    private static _preloadManager:createjs.LoadQueue;\r\n    private static _sheetsTotal:number = 0;\r\n    private static _sheetsLoaded:number = 0;\r\n\r\n    private static _percentage:number = 0;\r\n    private static _totalAssetsLoaded:number = 0;\r\n    private static _totalAssets:number = 0;\r\n\r\n    private static AssetsLoadedEvent:any = new (createjs as any).Event(LoadManager.ASSETS_LOADED, false, true);\r\n    private static AssetsFailedEvent:any = new (createjs as any).Event(LoadManager.ASSETS_FAILED, false, true);\r\n    private static AssetsUpdatedEvent:any = new (createjs as any).Event(LoadManager.ASSETS_UPDATED, false, true);\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public static reset() {\r\n        LoadManager._sheetsTotal = 0;\r\n        LoadManager._sheetsLoaded = 0;\r\n\r\n        LoadManager._percentage = 0;\r\n        LoadManager._totalAssetsLoaded = 0;\r\n        LoadManager._totalAssets = 0;\r\n    }\r\n\r\n    public static loadAssets(src:string, stage:createjs.StageGL) {\r\n        LoadManager.reset();\r\n        LoadManager._stage = stage;\r\n\r\n        return new Promise(async(res, rej) => {\r\n            LoadManager._preloadManager = new createjs.LoadQueue();\r\n\r\n            //setup sound controllers\r\n            createjs.Sound.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin, createjs.FlashAudioPlugin]);\r\n            createjs.Sound.alternateExtensions = [\"mp3\",\"wav\"];\r\n            LoadManager._preloadManager.installPlugin(createjs.Sound);\r\n\r\n            //setup listeners\r\n            (LoadManager._preloadManager as any).on(\"fileload\", LoadManager._onLoaded, LoadManager);\r\n            (LoadManager._preloadManager as any).on(\"complete\", LoadManager._onComplete, LoadManager);\r\n            (LoadManager._preloadManager as any).on(\"error\", LoadManager._onError, LoadManager);\r\n\r\n            //get the manifest\r\n            fetch(src)\r\n                .then(blob => blob.json())\r\n                .then(data => {\r\n                    //load the manifest\r\n                    LoadManager._preloadManager.setMaxConnections(1);\r\n                    LoadManager._preloadManager.loadManifest(data);\r\n\r\n                    (LoadManager._stage as any).addEventListener(LoadManager.ASSETS_LOADED, () => {\r\n                        res();\r\n                    });\r\n                })\r\n                .catch(() => {\r\n                    LoadManager.emitErrorEvent();\r\n                    rej(\"Could not load assets!\");\r\n                });\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    public static emitLoadedEvent() {\r\n        if(LoadManager._stage != null) (LoadManager._stage as any).dispatchEvent(LoadManager.AssetsLoadedEvent);\r\n    }\r\n    public static emitErrorEvent() {\r\n        if(LoadManager._stage != null) (LoadManager._stage as any).dispatchEvent(LoadManager.AssetsFailedEvent);\r\n    }\r\n    public static emitUpdatedEvent() {\r\n        LoadManager._percentage = parseFloat((LoadManager._preloadManager.getItems(true).length / LoadManager._preloadManager.getItems(false).length).toFixed(2));\r\n        if(LoadManager._stage != null) (LoadManager._stage as any).dispatchEvent(LoadManager.AssetsUpdatedEvent);\r\n    }\r\n\r\n\r\n    private static _loadedSheet(name:string, sheet:createjs.SpriteSheet) {\r\n        LoadManager.Spritesheets[name] = sheet;\r\n\r\n        LoadManager._sheetsLoaded++;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    private static _onLoaded(e) {\r\n\r\n        console.log(\"asset loaded: \" + e.item.src + \" type: \" + e.item.type);\r\n\r\n        switch(e.item.type) {\r\n            case (createjs as any).Types.JAVASCRIPT: {\r\n                //load the spritesheet\r\n                LoadManager._sheetsTotal++;\r\n                \r\n                const sheet = (window[e.item.id] as any)._SpriteSheet;\r\n\r\n                // listen for spritesheet to load\r\n                if(!sheet.complete) {\r\n                    sheet.on(\"complete\", (ev:any) => {\r\n                        LoadManager._loadedSheet(e.item.id, sheet);\r\n                        ev.remove();\r\n                    })\r\n                }\r\n                else LoadManager._loadedSheet(e.item.id, sheet);\r\n                break\r\n            }\r\n            case (createjs as any).Types.IMAGE: {\r\n                //build the bitmap\r\n                LoadManager.Images[e.item.id] = new createjs.Bitmap(e.item.src);\r\n            }\r\n        }\r\n\r\n\r\n\r\n        //update event\r\n        LoadManager.emitUpdatedEvent();\r\n    }\r\n\r\n    private static _onComplete(e) {\r\n        //remove all preLoadManager events\r\n        (LoadManager._preloadManager as any).removeAllEventListeners();\r\n        \r\n        //make sure all spritesheets are loaded\r\n        if(LoadManager._sheetsLoaded < LoadManager._sheetsTotal) {\r\n            const loadInterval = setInterval((ev:any) => {\r\n                //see if they are loaded\r\n                if(LoadManager._sheetsLoaded >= LoadManager._sheetsTotal) {\r\n                    e.remove();\r\n                    // window.clearInterval(loadInterval);\r\n                    LoadManager.emitLoadedEvent();\r\n                }\r\n            }, 100)\r\n        }\r\n        else LoadManager.emitLoadedEvent();\r\n    }\r\n\r\n    private static _onError(e) {\r\n        LoadManager.emitErrorEvent();\r\n    }\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get Percentage():number { return LoadManager._percentage; }\r\n    \r\n\r\n\r\n\r\n}","import { WorldsData } from \"./DataManager\";\r\n\r\nexport interface IProgressLevel {\r\n    unlocked: boolean;\r\n    completed: boolean;\r\n}\r\n\r\nexport interface IProgressSpecial {\r\n    collected: boolean;\r\n    unlocks: string;\r\n}\r\n\r\n/**Handles progress made while playing the game. */\r\nexport class ProgressManager {\r\n\r\n    private static _worldsData:WorldsData;\r\n    private static _levelsProgress:IProgressLevel[];\r\n    private static _specialsProgress:IProgressSpecial[];\r\n    \r\n    /*--------------- METHODS ------------------------*/\r\n    /**Loads in the worlds data so it can parse the progress data. */\r\n    public static loadWorldsData(worldsData:WorldsData) {\r\n        ProgressManager._worldsData = worldsData;\r\n\r\n        //build data for world set\r\n\r\n        console.log(worldsData);\r\n\r\n        ProgressManager._levelsProgress = worldsData.worlds.map(world => {\r\n            return [].concat.apply([], world as any)\r\n                .map(level => {\r\n                    return { unlocked: false, completed: false };\r\n                });\r\n        });\r\n        ProgressManager._specialsProgress = worldsData.worlds.map(world => {\r\n            return [].concat.apply([], world as any)\r\n                .map(level => {\r\n                    if(level.special) return { collected: false, unlocks:level.unlocks };\r\n                    return null;\r\n                });\r\n        });\r\n\r\n        //unlock level 1\r\n        ProgressManager._levelsProgress[0][0].unlocked = true;\r\n\r\n        console.log(\"PROGRESS\", ProgressManager._levelsProgress, ProgressManager._specialsProgress);\r\n\r\n        //read cookie data\r\n        ProgressManager._readCookieData();\r\n    }\r\n\r\n    /**Saves the progress data to a cookie or two. */\r\n    public static saveCookieData() {\r\n        \r\n    }\r\n\r\n    /**Reads cookie data and fills in progress data. */\r\n    private static _readCookieData() {\r\n\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get ProgressData() {\r\n        return {\r\n            levels : ProgressManager._levelsProgress,\r\n            specials : ProgressManager._specialsProgress\r\n        };\r\n    }\r\n}","import { Screen } from \"../screens/Screen\";\r\n\r\nexport class ScreenManager {\r\n    private static _screensLookup:{ [key:string]:Screen } = { };\r\n    private static _currentScreen:Screen = null;\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Registers a screen into the Screen Manager.  Uses a key to associate it. */\r\n    public static registerScreen(key:string, screen:Screen):void {\r\n        //if we don't have this screen, add it\r\n        if(ScreenManager._screensLookup[key] == null)\r\n            ScreenManager._screensLookup[key] = screen;\r\n    }\r\n\r\n    /**Unregisters a screen from the Screen Manager. */\r\n    public static unregisterScreen(key:string):boolean {\r\n        if(ScreenManager._screensLookup[key] == null) return false;\r\n\r\n        ScreenManager._screensLookup[key] = null;\r\n        delete ScreenManager._screensLookup[key];\r\n        return true;\r\n    }\r\n\r\n    /**Sets the current screen.  Can be done with the screen itself or an associative key. */\r\n    public static setCurrentScreen(screen:string | Screen, stage:createjs.StageGL):Promise<void> {\r\n        let tempScreen = null;\r\n        if(screen instanceof Screen) tempScreen = screen;\r\n        else tempScreen = ScreenManager._screensLookup[screen];\r\n\r\n        //if we did not find a screen, do not follow through\r\n        if(tempScreen == null) return Promise.resolve();\r\n\r\n        let promises = [];\r\n        //if we have a previous screen, wait for it to fade out\r\n        if(ScreenManager._currentScreen != null)\r\n        promises.push(\r\n            new Promise(async(res) => {\r\n                //fade out\r\n                createjs.Tween\r\n                    .get(ScreenManager._currentScreen.Container)\r\n                    .to({ alpha:0 }, 500, createjs.Ease.linear)\r\n                    .call(() => {\r\n                        ScreenManager._currentScreen.destroy();\r\n                        ScreenManager._currentScreen.disable();\r\n                        res();\r\n                    });\r\n            })\r\n        );\r\n\r\n\r\n        //wait for certain actions to finish\r\n        return new Promise(async(res) => {\r\n            //wait for promises to finish\r\n            await Promise.all(promises);\r\n\r\n            //now add in the new one\r\n            ScreenManager._currentScreen = tempScreen;\r\n            ScreenManager._currentScreen.create(stage);\r\n            ScreenManager._currentScreen.Container.alpha = 0;\r\n            ScreenManager._currentScreen.disable(); //disable until ready\r\n            console.log(\"FADE IN\")\r\n            //fade in\r\n            createjs.Tween\r\n                .get(ScreenManager._currentScreen.Container)\r\n                .to({ alpha:1 }, 1200, createjs.Ease.linear)\r\n                .call(() => {\r\n                    console.log(\"DONE\");\r\n                    ScreenManager._currentScreen.enable();\r\n                    res();\r\n                });\r\n\r\n        });\r\n    }\r\n\r\n    public static getScreenByKey(key:string):Screen {\r\n        return ScreenManager._screensLookup[key];\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get AllScreens() { return ScreenManager._screensLookup; }\r\n    public static get CurrentScreen() { return ScreenManager._currentScreen; }\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Container } from \"../ui/display/Container\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { Game } from \"../Game\";\r\nimport { DataManager } from \"../managers/DataManager\";\r\nimport { IntermediaryScreen } from \"./IntermediaryScreen\";\r\nimport { Logging } from \"../Functions\";\r\n\r\nexport class EndScreen extends Screen {\r\n    private _game:Game;\r\n    private _buttonsContainer:Container;\r\n\r\n    private _completeSpr:createjs.DisplayObject;\r\n    private _failSpr:createjs.DisplayObject;\r\n\r\n    //flags\r\n    private _isFail:boolean;\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n\r\n        this._game = game;\r\n        this._isFail = false;\r\n\r\n        //layout stuff\r\n        const bg = new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"bg\");\r\n        this._container.addChild(bg);\r\n\r\n        this._buttonsContainer = new Container(Container.LAYOUT_OPTIONS.ColumnLeftBottom);\r\n        this._buttonsContainer.addMany({\r\n            btnTryAgain : new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"btnTryAgain\"),\r\n            btnNextLevel : new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"btnNextLevel\"),\r\n            btnMainMenu : new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"btnMainMenu\"),\r\n        });\r\n        this._container.addChild(this._buttonsContainer.Container);\r\n\r\n        //--conditional text\r\n        this._completeSpr = new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"complete\");\r\n        this._failSpr = new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"failure\");\r\n        this._completeSpr.x = this._game.StageWidth / 2 - (this._completeSpr.getBounds().width / 2);\r\n        this._completeSpr.y = 220;\r\n        this._failSpr.x = this._game.StageWidth / 2 - (this._failSpr.getBounds().width / 2);\r\n        this._failSpr.y = this._game.StageHeight * 0.45;\r\n        this._container.addChild(this._completeSpr);\r\n        this._container.addChild(this._failSpr);\r\n\r\n        \r\n        \r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    create(stage:createjs.StageGL):Screen {\r\n        \r\n        \r\n        // //for testing\r\n        // (this._container as any).on(\"click\", (e) => {\r\n        //     ScreenManager.setCurrentScreen(\"menu\", stage);\r\n        // }, this, true);       \r\n        \r\n\r\n        return super.create(stage);\r\n    }\r\n\r\n\r\n    enable() {\r\n        super.enable();\r\n\r\n        //try again\r\n        (this._buttonsContainer.Sprites[\"btnTryAgain\"] as any).on(\"click\", () => {\r\n            //restart this level\r\n            this._game.changeCurrentLevel(this._game.CurrentLevelData);\r\n            ScreenManager.setCurrentScreen(\"game\", this._game.Stage);\r\n        }, this, true);\r\n        //next level\r\n        (this._buttonsContainer.Sprites[\"btnNextLevel\"] as any).on(\"click\", () => {\r\n            //find the next level\r\n            const nextLevel = DataManager.getNextLevel(this._game.CurrentLevelData);\r\n            //if there is no next level, go back to menu\r\n            if(nextLevel == null) {\r\n                //go to main menu\r\n                ScreenManager.setCurrentScreen(\"menu\", this._game.Stage);\r\n                return;\r\n            }\r\n\r\n            Logging.error(\"WHERE AM I? \" + nextLevel.name);\r\n            this._game.changeCurrentLevel(nextLevel);\r\n            //go to intermediary screen\r\n            const intermediary = ScreenManager.getScreenByKey(\"intermediary\") as IntermediaryScreen;\r\n            new Promise(async(res) => {\r\n                intermediary.Text = nextLevel.name;\r\n                await ScreenManager.setCurrentScreen(intermediary, this._game.Stage);\r\n                intermediary.queueNextScreen(\"game\", 1000);\r\n\r\n                res();\r\n            });\r\n        }, this, true);\r\n        //main menu\r\n        (this._buttonsContainer.Sprites[\"btnMainMenu\"] as any).on(\"click\", () => {\r\n            //go to main menu\r\n            ScreenManager.setCurrentScreen(\"menu\", this._game.Stage);\r\n        }, this, true);\r\n    }\r\n\r\n    disable() {\r\n        //toggle fail/success\r\n        this._completeSpr.visible = !this._isFail;\r\n        this._failSpr.visible = this._isFail;\r\n\r\n        Object.keys(this._buttonsContainer.Sprites).forEach(key => this._buttonsContainer.Sprites[key].removeAllEventListeners());\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n}","import { TutorialCreator } from \"./TutorialCreator\";\r\nimport { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { ObjectPool } from \"../ObjectPool\";\r\nimport { Fish } from \"../entities/Fish\";\r\nimport { Persephone } from \"../entities/specials/Persephone\";\r\nimport { Puffer } from \"../entities/Puffer\";\r\nimport { Cat } from \"../entities/Cat\";\r\nimport { Game } from \"../Game\";\r\nimport { Container } from \"../ui/display/Container\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { Logging } from \"../Functions\";\r\nimport { LevelData } from \"../managers/DataManager\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { GameScore } from \"../ui/partials/GameScore\";\r\n\r\nexport class GameScreen extends Screen {\r\n    private _game:Game;\r\n\r\n    //create containers\r\n    private _staticContainer:Container;\r\n    private _fishContainer:createjs.Container;\r\n    private _pufferContainer:createjs.Container;\r\n\r\n    private _winContainer:createjs.Container;\r\n    private _winBanner:createjs.Shape;\r\n    private _winText:createjs.BitmapText;\r\n\r\n    private _gameScore:GameScore;\r\n    private _tutorialCreator:TutorialCreator;\r\n\r\n    private _cat:Cat;\r\n    private _fishes:Fish[];\r\n    private _puffers:Puffer[];\r\n\r\n    private _remainingFish:number;\r\n\r\n    private _pauseLogic:Boolean;\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n        this._game = game;\r\n        this._fishes = [];\r\n        this._puffers = [];\r\n        this._remainingFish = -1;\r\n\r\n        //create object pool\r\n        ObjectPool.createPoolObject(new Cat(this), POOL.CAT)\r\n        for(let i = 0; i < 120; i++) {\r\n            ObjectPool.createPoolObject(new Fish(this), POOL.FISH);\r\n        }\r\n        for(let i = 0; i < 30; i++) {\r\n            ObjectPool.createPoolObject(new Puffer(this), POOL.PUFFERFISH)\r\n        }\r\n        ObjectPool.createPoolObject(new Persephone(this), POOL.PERSEPHONE);\r\n\r\n\r\n        //pool out static kitty\r\n        this._cat = (ObjectPool.checkout(POOL.CAT) as Cat);\r\n        this._cat.X = 290;\r\n        this._cat.Y = 70;\r\n\r\n        //create containers\r\n        this._staticContainer = new Container();\r\n        this._staticContainer.addMany({\r\n            bg : new createjs.Sprite(LoadManager.Spritesheets.BG_Spritesheet, \"bg1\")\r\n        });\r\n\r\n        this._fishContainer = new createjs.Container();\r\n        this._pufferContainer = new createjs.Container();\r\n\r\n        this._winContainer = new createjs.Container();\r\n\r\n        this._gameScore = new GameScore(this._game);\r\n        this._tutorialCreator = new TutorialCreator(this._game, this);\r\n\r\n        this._pauseLogic = false;\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n\r\n    /**Attempts to grab a fish.  Returns any fish that are touching the global position. */\r\n    public tryToGrabFishes(x:number, y:number):Fish[] {\r\n        let fishes = [];\r\n\r\n\r\n        const hitObjects = this._container.getObjectsUnderPoint(x, y, 0);\r\n        for(let i = 0; i < this._fishes.length; i++) {\r\n            const fish = this._fishes[i];\r\n            if(hitObjects.indexOf(fish.Sprite) != -1) {\r\n                fishes.push(fish);\r\n            }\r\n        }\r\n\r\n        return fishes;\r\n\r\n    }\r\n\r\n    /**Tests to see if we hit a puffer. */\r\n    public hasHitAPuffer(x:number, y:number):Boolean {\r\n        // console.log(\"TESTING PUFF\");\r\n\r\n        let hasHitPuffer = false;\r\n        const hitObjects = this._container.getObjectsUnderPoint(x, y, 0);\r\n        for(let i = 0; i < this._puffers.length; i++) {\r\n            if(hitObjects.indexOf(this._puffers[i].Sprite) != -1) {\r\n                console.log (\"I HIT A PUFF\");\r\n                this._puffers[i].puff();\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public collectFish(fish:Fish) {\r\n        //get fish\r\n        Logging.success(\"GOT FISH!\");\r\n\r\n        const killedFish = fish.destroy();\r\n\r\n        //decrement fish counter -- make sure we didn't make an error\r\n        if(killedFish != null) {\r\n            this._remainingFish--;\r\n            this._fishes.splice(this._fishes.indexOf(killedFish as Fish), 1);\r\n\r\n            //if all our fish are gone, end the game!\r\n            if(this._remainingFish <= 0) {\r\n                //win game!\r\n                Logging.success(\"GAME IS OVER!\");\r\n                //call win\r\n                this.win();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public win() {\r\n        //disable controls\r\n        this.disable();\r\n        //set the score\r\n        this._game.changeCurrentScore({\r\n            totalFish: this._fishes.length,\r\n            combos: 10,\r\n            time: 100\r\n        });\r\n        \r\n        //show win banner\r\n        createjs.Tween.get(this._winContainer)\r\n            .to({y:this._game.StageHeight / 2 - 25}, 600, createjs.Ease.elasticOut)\r\n            .wait(2000)\r\n            .call(() => {\r\n                //transition to end screen\r\n                ScreenManager.setCurrentScreen(\"end\", this._game.Stage);\r\n                // ScreenManager.setCurrentScreen(\"menu\", this._game.Stage);\r\n\r\n                //reset game data\r\n                this.reset();\r\n            });\r\n    }\r\n\r\n    public pauseGameLogic() {\r\n        this._pauseLogic = true;\r\n    }\r\n\r\n    public unpauseGameLogic() {\r\n        this._pauseLogic = false;\r\n    }\r\n\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n        super.create(stage);\r\n        //add stuff\r\n        this._staticContainer.checkoutSprites();\r\n        this._staticContainer.Sprites.bg.y = 0;\r\n        this._container.addChild(this._staticContainer.Container);\r\n\r\n        this._container.addChild(this._fishContainer);\r\n        this._container.addChild(this._pufferContainer);\r\n\r\n        //add conditional text\r\n        this._winBanner = new createjs.Shape();\r\n        this._winBanner.graphics.beginFill(\"black\");\r\n        this._winBanner.graphics.drawRect(0, 0, this._game.StageWidth, 50);\r\n        this._winBanner.cache(0, 0, this._game.StageWidth, 50);\r\n        this._winContainer.addChild(this._winBanner);\r\n        this._winText = Sprites.generateBitmapText(\"Win!\", LoadManager.Spritesheets.TypographyWhite);\r\n        this._winContainer.addChild(this._winText);\r\n        this._winText.x = (this._game.StageWidth / 2) - (this._winText.getBounds().width / 2);\r\n\r\n        this._container.addChild(this._winContainer);\r\n        this._winContainer. y = this._game.StageHeight + 50;\r\n        this._winContainer.mouseEnabled = false;\r\n\r\n        \r\n        this._cat.create(this._container);\r\n\r\n\r\n        //testing\r\n        // const puffer = new createjs.Sprite(LoadManager.Spritesheets.Puffer_Spritesheet, \"pufferIdle\");\r\n        // puffer.x = 100;\r\n        // puffer.y = 200;\r\n        // (puffer as any).on(\"click\", () => {\r\n        //     puffer.gotoAndPlay(\"pufferAngry\")\r\n        // })\r\n        // this._container.addChild(puffer);\r\n\r\n\r\n        //add level data if it exists\r\n        this.reset();\r\n        // this.destroy();\r\n        if(this._game.CurrentLevelData != null) {\r\n            //load in critters\r\n            for(let i = 0; i < this._game.CurrentLevelData.data.length; i++) {\r\n                const data = this._game.CurrentLevelData.data[i];\r\n                switch(data.id) {\r\n                    case POOL.PERSEPHONE:\r\n                    case POOL.FISH:\r\n                        const fish = (ObjectPool.checkout(data.id) as Fish);\r\n                        fish.create(this._fishContainer);\r\n                        if(data.speed != null) fish.Speed = data.speed; //set variables\r\n                        if(data.x != null) fish.X = data.x;\r\n                        if(data.y != null) fish.Y = data.y;\r\n                        if(data.flip != null && data.flip) fish.DirectionX = -1;\r\n                        fish.setNaturalY();\r\n                        this._fishes.push(fish);\r\n                        break;\r\n                    case POOL.PUFFERFISH:\r\n                        const puffer = (ObjectPool.checkout(POOL.PUFFERFISH) as Puffer);\r\n                        puffer.create(this._pufferContainer);\r\n                        if(data.speed != null) puffer.Speed = data.speed; //set variables\r\n                        if(data.x != null) puffer.X = data.x;\r\n                        if(data.y != null) puffer.Y = data.y;\r\n                        if(data.flip != null && data.flip) puffer.DirectionX = -1;\r\n                        this._puffers.push(puffer);\r\n                }      \r\n            }\r\n\r\n            //set fish total\r\n            this._remainingFish = this._fishes.length;\r\n            // console.log(\"FISHIE NUM?\", this._remainingFish, this._fishContainer.children.length);\r\n        }\r\n        //get the level tutorials\r\n        if(this._game.CurrentLevelData.tutorials != null) {\r\n            this._tutorialCreator.queueTutorials(this._game.CurrentLevelData.tutorials);\r\n        }\r\n        //get the level background\r\n        if(this._game.CurrentLevelData.background != null) {\r\n            (this._staticContainer.Sprites[\"bg\"] as createjs.Sprite).gotoAndStop(this._game.CurrentLevelData.background);\r\n        }\r\n        else {\r\n            (this._staticContainer.Sprites[\"bg\"] as createjs.Sprite).gotoAndStop(\"bg1\");\r\n        }\r\n\r\n\r\n        //add the score\r\n        // this._gameScore.Container.y = this._game.StageHeight - 40;\r\n        // this._container.addChild(this._gameScore.Container);\r\n\r\n\r\n        //update the game HUD for this round\r\n        const levelData = this._game.CurrentLevelData;\r\n        console.log(this._game.CurrentLevelData);\r\n        const showScore = (levelData.showScore != null && !levelData.showScore) ? false : true;\r\n        const showTimer = (levelData.duration != null);\r\n        const showFishRemain = (levelData.showRemainingFish != null && !levelData.showRemainingFish) ? false : true;\r\n        this._gameScore.startHUD(showScore, showFishRemain, showTimer);\r\n\r\n        return null;\r\n    }\r\n\r\n    public destroy() {\r\n\r\n        this._cat.destroy();\r\n        this._fishes.forEach(f => {\r\n            f.destroy();\r\n        });\r\n        this._puffers.forEach(f => {\r\n            f.destroy();\r\n        });\r\n\r\n        ObjectPool.releaseAllObjects();\r\n\r\n        this.reset();\r\n\r\n        return super.destroy();\r\n    }\r\n\r\n    public update(gameTime:number) {\r\n        //if our logic is paused, do not do game loop\r\n        if(this._pauseLogic) return;\r\n\r\n        const normalizedTime = Math.min(1, gameTime) + 0.5;\r\n\r\n        //update entities\r\n        this._fishes.forEach(fish => {\r\n            fish.update(normalizedTime);\r\n        });\r\n        this._puffers.forEach(puffer => {\r\n            puffer.update(normalizedTime);\r\n        });\r\n\r\n        this._cat.update(normalizedTime);\r\n\r\n        //update the score\r\n        this._gameScore.update(gameTime);\r\n\r\n        super.update(gameTime);\r\n    }\r\n\r\n    public enable() {\r\n        (this._container as any).on(\"click\", this._cat.grab, this._cat);\r\n    }\r\n\r\n    public disable() {\r\n        (this._container as any).removeAllEventListeners();\r\n    }\r\n\r\n    public reset() {\r\n        this._cat.X = 290;\r\n        this._fishes.forEach(f => { ObjectPool.return(f); });\r\n        this._puffers.forEach(f => { ObjectPool.return(f); });\r\n\r\n        ObjectPool.releaseAllObjects();\r\n\r\n        this._fishContainer.removeAllChildren();\r\n        this._pufferContainer.removeAllChildren();\r\n\r\n        this._fishes = [];\r\n        this._puffers = [];\r\n\r\n\r\n        super.reset();\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Game() { return this._game; }\r\n    public get Cat() { return this._cat; }\r\n    public get Fishes() { return this._fishes; }\r\n    public get IsGamelogicPaused() { return this._pauseLogic; }\r\n}\r\n\r\n\r\n\r\nexport class POOL { \r\n    static get CAT() { return \"cat\"; }\r\n    static get FISH() { return \"fish\"; }\r\n    static get PUFFERFISH() { return \"puffer\"; }\r\n    static get PERSEPHONE() { return \"persephone\"; }\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { Game } from \"../Game\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\n\r\nexport class IntermediaryScreen extends Screen {\r\n    private _game:Game;\r\n    private _bg:createjs.Shape;\r\n    private _textContainer:createjs.Container;\r\n    private _txtSprite:createjs.DisplayObject;\r\n\r\n    private _text:string;\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n        this._game = game;\r\n\r\n        this._text = \"\";\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Chooses the screen to load in after the intermediary. */\r\n    public queueNextScreen(screenKey:string, duration:number=3000) {\r\n        const evt = window.setTimeout(() => {\r\n            //load the screen\r\n            ScreenManager.setCurrentScreen(screenKey, this._game.Stage);\r\n            //clear the timeout\r\n            window.clearTimeout(evt);\r\n        }, duration);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n        //add stuff\r\n        this._bg = new createjs.Shape();\r\n        this._bg.graphics.beginFill(\"#191919\");\r\n        this._bg.graphics.drawRect(0, 0, this._game.StageWidth, this._game.StageHeight);\r\n        this._bg.graphics.endFill();\r\n        this._bg.cache(0, 0, this._game.StageWidth, this._game.StageHeight);\r\n        this._container.addChild(this._bg);\r\n\r\n        this._textContainer = new createjs.Container();\r\n        this._container.addChild(this._textContainer);\r\n\r\n        if(this._text != \"\") {\r\n            //create the text\r\n            this._txtSprite = Sprites.generateBitmapText(this._text, LoadManager.Spritesheets.TypographyWhite);\r\n            (this._txtSprite as any).scale = 0.6;\r\n            //load into container\r\n            this._textContainer.addChild(this._txtSprite);\r\n    \r\n            //put container at bottom\r\n            this._textContainer.x = (this._game.StageWidth / 2) - ((this._txtSprite.getBounds().width / 2) * 0.6);\r\n            this._textContainer.y = (this._game.StageHeight / 2) - (this._txtSprite.getBounds().height / 2);\r\n        }\r\n\r\n        return super.create(stage);\r\n    }\r\n\r\n    public destroy() {\r\n        this._textContainer.removeAllChildren();\r\n\r\n        return super.destroy();\r\n    }\r\n\r\n    public enable() {\r\n        super.enable();\r\n    }\r\n\r\n    public disable() {\r\n        super.disable();\r\n\r\n        this.reset();\r\n    }\r\n\r\n    public reset() {\r\n        this.Text = \"\";\r\n        super.reset();\r\n    }\r\n\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public set Text(value:string) {\r\n        this._text = value;\r\n    }\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { Layout } from \"../ui/display/Layout\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { Container } from \"../ui/display/Container\";\r\nimport { Logging } from \"../Functions\";\r\nimport { Game } from \"../Game\";\r\nimport { LevelSelectDisplay } from \"../ui/custom/LevelSelectDisplay\";\r\nimport { IntermediaryScreen } from \"./IntermediaryScreen\";\r\nimport { GameScreen } from \"./GameScreen\";\r\nimport { DataManager } from \"../managers/DataManager\";\r\n\r\nexport class MenuScreen extends Screen {\r\n    private _game:Game;\r\n    //containers\r\n    private _swipeContainer:createjs.Container;\r\n    private _staticContainer:Container;\r\n    // private _mainContainer:Container;\r\n    private _mainContainer:createjs.Container;\r\n    private _clearedContainer:Container;\r\n    private _optionsContainer:Container;\r\n\r\n    private _mainButtonsContainer:Container;\r\n    private _logo:createjs.DisplayObject;\r\n    private _fancyFish:createjs.Sprite;\r\n\r\n    //custom containers\r\n    private _levelSelectDisplay:LevelSelectDisplay;\r\n\r\n    //properties\r\n    private _swipeSpeed:number;\r\n    private _currentScreen:string;\r\n    private _initialSwipePos:{x:number, y:number};\r\n    private _dragTimer:any;\r\n\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n\r\n        this._game = game;\r\n\r\n        //setup swipe container -- holds all moving sprites\r\n        this._swipeContainer = new createjs.Container();\r\n\r\n        //setup static container\r\n        this._staticContainer = new Container();\r\n        const bg = new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"bg\");\r\n\r\n        this._staticContainer.addMany({\r\n            bg\r\n        });\r\n\r\n        //setup main container\r\n        this._mainContainer = new createjs.Container();\r\n        this._logo = new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"logo\");\r\n        this._logo.x = this._game.StageWidth - this._logo.getBounds().width - 20;\r\n        this._logo.y = this._game.StageHeight * 0.4;\r\n        this._mainContainer.addChild(this._logo);\r\n        this._mainButtonsContainer = new Container(Container.LAYOUT_OPTIONS.ColumnLeftBottom);\r\n        this._mainButtonsContainer.addMany({\r\n            btnNewGame : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnNewGame\"),\r\n            btnOptions : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnOptions\"),\r\n            btnLevelSelect : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnLevelSelect\"),\r\n            btnExit : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnExit\"),\r\n        });\r\n        this._mainContainer.addChild(this._mainButtonsContainer.Container);\r\n        this._fancyFish = new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"fancyFish\");\r\n        this._fancyFish.x = this._game.StageWidth - this._fancyFish.getBounds().width - 20;\r\n        this._fancyFish.y = this._game.StageHeight - this._fancyFish.getBounds().height - 20;\r\n        this._mainContainer.addChild(this._fancyFish);\r\n        // this._mainContainer.addMany({\r\n        //     logo : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"logo\"),\r\n        //     fishbowl : Sprites.Buttons.Fishbowl,\r\n        //     btnNewGame : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnNewGame\"),\r\n        //     btnOptions : Sprites.Buttons.Options,\r\n        //     btnLevelSelect : Sprites.Buttons.LevelSelect,\r\n        //     btnExit : Sprites.Buttons.Exit\r\n        // });\r\n\r\n        //setup options container\r\n        this._optionsContainer = new Container();\r\n        this._optionsContainer.addMany({\r\n            txtOptions : Sprites.generateBitmapText(\"Options\", LoadManager.Spritesheets.Typography),\r\n            btnClearData : Sprites.Buttons.ClearData\r\n        });\r\n        this._optionsContainer.Container.x -= this._game.StageWidth;\r\n\r\n        //setup cleared container\r\n        this._clearedContainer = new Container();\r\n        this._clearedContainer.add(\"txtCleared\", Sprites.generateBitmapText(\"Data successfully cleared!\", LoadManager.Spritesheets.Typography));\r\n        this._clearedContainer.Container.x -= this._game.StageWidth;\r\n        this._clearedContainer.Container.y -= this._game.StageHeight;\r\n\r\n        this._levelSelectDisplay = new LevelSelectDisplay(game);\r\n        this._levelSelectDisplay.Container.x += this._game.StageWidth;\r\n\r\n\r\n        //setup properties\r\n        this._swipeSpeed = 800;\r\n        this._currentScreen = \"main\";\r\n        this._initialSwipePos = { x:-1, y:-1 };\r\n\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    private _onNewGame() {\r\n        Logging.message(\"Go to new game!\");\r\n        \r\n        const data = DataManager.getLevelDataByIndex(0);\r\n        this._game.changeCurrentLevel(data);\r\n        \r\n        const intermediary = ScreenManager.getScreenByKey(\"intermediary\") as IntermediaryScreen;\r\n        new Promise(async(res) => {\r\n            intermediary.Text = data.name;\r\n            await ScreenManager.setCurrentScreen(intermediary, this.Stage);\r\n            intermediary.queueNextScreen(\"game\");\r\n\r\n            res();\r\n        });\r\n    }\r\n    private _onOptions() {\r\n        //go to options!\r\n        Logging.message(\"Go to options!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:this._game.StageWidth}, this._swipeSpeed, createjs.Ease.circOut);\r\n        this._currentScreen = \"options\";\r\n    }\r\n    private _onLevelSelect() {\r\n        Logging.message(\"Go to level select!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:-this._game.StageWidth}, this._swipeSpeed, createjs.Ease.circOut);\r\n        this._currentScreen = \"levelSelect\";\r\n    }\r\n    private _onExit() {\r\n        Logging.message(\"Go to exit!\");\r\n    }\r\n\r\n    private _onMain() {\r\n        Logging.message(\"Go to main!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:0}, this._swipeSpeed, createjs.Ease.bounceOut);\r\n        this._currentScreen = \"main\";\r\n    }\r\n\r\n    private _onClearData() {\r\n        Logging.success(\"Cleared data!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:this._game.StageWidth, y:this._game.StageHeight}, this._swipeSpeed, createjs.Ease.cubicIn);\r\n        // this._currentScreen = \"cleared\"\r\n        let e = window.setTimeout(() => {\r\n            createjs.Tween.get(this._swipeContainer).to({x:this._game.StageWidth, y:0}, this._swipeSpeed, createjs.Ease.cubicInOut);\r\n            window.clearInterval(e);\r\n            this._currentScreen = \"options\";\r\n        }, 2000);\r\n    }\r\n\r\n    private _onDragStart(e) {\r\n\r\n        this._initialSwipePos = { x:e.stageX, y:e.stageY };\r\n\r\n        //reset drag timer if not null\r\n        if(this._dragTimer != null) window.clearTimeout(this._dragTimer);\r\n        this._dragTimer = setTimeout(() => {\r\n            this._initialSwipePos = { x:-1, y:-1 };\r\n            this._dragTimer = null;\r\n        }, 500);\r\n    }\r\n    private _onDragEnd(e) {\r\n        if(this._initialSwipePos.x != -1 || this._initialSwipePos.y != -1) {\r\n            //find the direction\r\n            if((this._initialSwipePos.x - e.stageX) > 20) {\r\n                if(this._currentScreen == \"options\")\r\n                    this._onMain();\r\n            }\r\n            else if((this._initialSwipePos.x - e.stageX) < -20) {\r\n                if(this._currentScreen == \"levelSelect\")\r\n                    this._onMain();\r\n            }\r\n        }\r\n    }\r\n\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n\r\n        //add in the containers\r\n        this._staticContainer.Sprites.bg.y = 0;\r\n        this._container.addChild(this._staticContainer.Container);\r\n        this._container.addChild(this._swipeContainer);\r\n        this._swipeContainer.addChild(this._mainContainer);\r\n        this._swipeContainer.addChild(this._optionsContainer.Container);\r\n        this._swipeContainer.addChild(this._clearedContainer.Container);\r\n        // this._swipeContainer.addChild(this._levelSelectContainer.Container);\r\n\r\n        \r\n        this._swipeContainer.addChild(this._levelSelectDisplay.Container);\r\n\r\n        return super.create(stage);\r\n    }\r\n\r\n    public enable() {\r\n        console.log(\"LOAD IN MENU ACTIONS\");\r\n        super.enable();\r\n        //listen to events\r\n        (this._mainButtonsContainer.Sprites.btnNewGame as any).on(\"click\", this._onNewGame, this, true);\r\n        (this._mainButtonsContainer.Sprites.btnOptions as any).on(\"click\", this._onOptions, this);\r\n        (this._mainButtonsContainer.Sprites.btnLevelSelect as any).on(\"click\", this._onLevelSelect, this);\r\n        (this._mainButtonsContainer.Sprites.btnExit as any).on(\"click\", this._onExit, this);\r\n\r\n        Sprites.listenToClearData();\r\n        (this._optionsContainer.Sprites.btnClearData as any).on(Sprites.CLEAR_DATA, this._onClearData, this);\r\n\r\n        //listen for swipes\r\n        (this._staticContainer.Sprites.bg as any).on(\"mousedown\", this._onDragStart, this);\r\n        (this._staticContainer.Sprites.bg as any).on(\"click\", this._onDragEnd, this);\r\n\r\n        // this._mainButtonsContainer.Sprites.btnOptions.on(\"click\", () => console.log(\"HELLO I CLIC\"));\r\n\r\n        this._levelSelectDisplay.enable();\r\n\r\n\r\n\r\n        //rock the fish\r\n        createjs.Tween\r\n            // @ts-ignore\r\n            .get(this._fancyFish, { loop:true })\r\n            .to({ y:this._fancyFish.y-30 }, 3000, createjs.Ease.sineInOut)\r\n            .to({ y:this._fancyFish.y }, 3000, createjs.Ease.sineInOut);\r\n\r\n        //rock the logo\r\n        createjs.Tween\r\n            // @ts-ignore\r\n            .get(this._logo, { loop:true })\r\n            .wait(1200)\r\n            .to({ y:this._logo.y-15 }, 4500, createjs.Ease.sineInOut)\r\n            .to({ y:this._logo.y }, 4800, createjs.Ease.sineInOut);\r\n    }\r\n\r\n    public disable() {\r\n        super.disable();\r\n        //stop listen to events\r\n        (this._mainButtonsContainer.Sprites.btnNewGame as any).off(\"click\", this._onNewGame);\r\n        (this._mainButtonsContainer.Sprites.btnOptions as any).off(\"click\", this._onOptions);\r\n        (this._mainButtonsContainer.Sprites.btnLevelSelect as any).off(\"click\", this._onLevelSelect);\r\n        (this._mainButtonsContainer.Sprites.btnExit as any).off(\"click\", this._onExit);\r\n\r\n        Sprites.stopListenToClearData();\r\n        (this._optionsContainer.Sprites.btnClearData as any).off(Sprites.CLEAR_DATA, this._onClearData);\r\n\r\n        //stop listen for swipes\r\n        (this._staticContainer.Sprites.bg as any).off(\"mousedown\", this._onDragStart);\r\n        (this._staticContainer.Sprites.bg as any).off(\"click\", this._onDragEnd);\r\n\r\n\r\n        this._mainButtonsContainer.Sprites.btnNewGame.removeAllEventListeners();\r\n        this._mainButtonsContainer.Sprites.btnOptions.removeAllEventListeners();\r\n        this._mainButtonsContainer.Sprites.btnLevelSelect.removeAllEventListeners();\r\n        this._mainButtonsContainer.Sprites.btnExit.removeAllEventListeners();\r\n        this._staticContainer.Sprites.bg.removeAllEventListeners();\r\n\r\n\r\n        this._levelSelectDisplay.disable();\r\n\r\n        this.reset();\r\n\r\n\r\n        createjs.Tween.removeAllTweens();\r\n    }\r\n\r\n    public reset() {\r\n        //reset the position of the swipe container\r\n        this._swipeContainer.x = 0;\r\n        this._swipeContainer.y = 0;\r\n\r\n        super.reset();\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n}","import { IUpdateable, ICreateable, IEnableable } from \"../Interfaces\";\r\n\r\nexport class Screen implements ICreateable<Screen>, IUpdateable, IEnableable {\r\n    private _stage:createjs.StageGL;\r\n    protected _container:createjs.Container;\r\n\r\n    constructor() {\r\n        this._container = new createjs.Container();\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Updates the screen. */\r\n    public update(gameTime:number) {\r\n\r\n    }\r\n\r\n    /**Creates the screen and adds to the stage. */\r\n    public create(stage:createjs.StageGL):Screen {\r\n        this._stage = stage;\r\n        //add to the stage\r\n        this._stage.addChild(this._container);\r\n\r\n        \r\n        return this;\r\n    }\r\n\r\n    /**Destroys the screen and removes from the stage. */\r\n    public destroy():Screen {\r\n\r\n        //remove from the stage\r\n        this._stage.removeChild(this._container);\r\n\r\n        return this;\r\n    }\r\n\r\n    public enable() {\r\n\r\n    }\r\n\r\n    public disable() {\r\n        \r\n    }\r\n\r\n    public reset() {\r\n        \r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container():createjs.Container { return this._container; }\r\n    protected get Stage():createjs.StageGL { return this._stage; }\r\n\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Game } from \"../Game\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\n\r\nexport class SplashScreen extends Screen {\r\n    private _game:Game;\r\n    private _textContainer:createjs.Container;\r\n\r\n    private _textSpritesheet;\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n        this._game = game;\r\n\r\n\r\n        this._textSpritesheet = new createjs.SpriteSheet({images: [\"assets/spritesheets/typography_white.png\"], frames: [[0,329,27,44,0,0,0],[89,47,21,44,0,0,0],[63,47,23,44,0,0,0],[32,141,24,44,0,0,0],[89,94,21,44,0,0,0],[110,141,20,44,0,0,0],[34,94,26,44,0,0,0],[0,188,28,44,0,0,0],[152,282,14,44,0,0,0],[158,94,16,44,0,0,0],[59,141,24,44,0,0,0],[136,94,19,44,0,0,0],[0,47,32,44,0,0,0],[0,141,29,44,0,0,0],[0,235,28,44,0,0,0],[86,141,21,44,0,0,0],[0,282,28,44,0,0,0],[63,94,23,44,0,0,0],[156,141,17,44,0,0,0],[81,235,21,44,0,0,0],[30,329,27,44,0,0,0],[66,0,24,44,0,0,0],[0,0,35,44,0,0,0],[31,188,23,44,0,0,0],[31,235,22,44,0,0,0],[57,188,23,44,0,0,0],[108,329,18,44,0,0,0],[60,329,21,44,0,0,0],[159,47,17,44,0,0,0],[118,0,20,44,0,0,0],[129,329,18,44,0,0,0],[169,282,14,44,0,0,0],[113,47,20,44,0,0,0],[84,329,21,44,0,0,0],[171,329,12,44,0,0,0],[186,282,12,44,0,0,0],[113,94,20,44,0,0,0],[191,188,12,44,0,0,0],[0,94,31,44,0,0,0],[56,235,22,44,0,0,0],[60,282,22,44,0,0,0],[108,188,20,44,0,0,0],[85,282,20,44,0,0,0],[177,94,15,44,0,0,0],[184,0,15,44,0,0,0],[179,47,15,44,0,0,0],[31,282,22,44,0,0,0],[131,282,18,44,0,0,0],[38,0,25,44,0,0,0],[150,329,18,44,0,0,0],[108,282,20,44,0,0,0],[152,235,18,44,0,0,0],[35,47,25,44,0,0,0],[153,188,16,44,0,0,0],[83,188,22,44,0,0,0],[131,188,19,44,0,0,0],[93,0,22,44,0,0,0],[129,235,20,44,0,0,0],[133,141,20,44,0,0,0],[141,0,20,44,0,0,0],[105,235,21,44,0,0,0],[136,47,20,44,0,0,0],[194,141,12,44,0,0,0],[195,94,12,44,0,0,0],[197,47,12,44,0,0,0],[172,188,16,44,0,0,0],[176,141,15,44,0,0,0],[173,235,14,44,0,0,0],[164,0,17,44,0,0,0]],  animations: {A:[0,0, true], B:[1,1, true], C:[2,2, true], D:[3,3, true], E:[4,4, true], F:[5,5, true], G:[6,6, true], H:[7,7, true], I:[8,8, true], J:[9,9, true], K:[10,10, true], L:[11,11, true], M:[12,12, true], N:[13,13, true], O:[14,14, true], P:[15,15, true], Q:[16,16, true], R:[17,17, true], S:[18,18, true], T:[19,19, true], U:[20,20, true], V:[21,21, true], W:[22,22, true], X:[23,23, true], Y:[24,24, true], Z:[25,25, true], a:[26,26, true], b:[27,27, true], c:[28,28, true], d:[29,29, true], e:[30,30, true], f:[31,31, true], g:[32,32, true], h:[33,33, true], i:[34,34, true], j:[35,35, true], k:[36,36, true], l:[37,37, true], m:[38,38, true], n:[39,39, true], o:[40,40, true], p:[41,41, true], q:[42,42, true], r:[43,43, true], s:[44,44, true], t:[45,45, true], u:[46,46, true], v:[47,47, true], w:[48,48, true], x:[49,49, true], y:[50,50, true], z:[51,51, true], 0:[52,52, true], 1:[53,53, true], 2:[54,54, true], 3:[55,55, true], 4:[56,56, true], 5:[57,57, true], 6:[58,58, true], 7:[59,59, true], 8:[60,60, true], 9:[61,61, true], \".\":[62,62, true], \",\":[63,63, true], \"'\":[64,64, true], \"\\\"\":[65,65, true], \"?\":[66,66, true], \"!\":[67,67, true], \"$\":[68,68, true]}});\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n        //add stuff\r\n        //load the image\r\n        const img = document.createElement(\"img\");\r\n        img.onload = (e) => {\r\n            const splash = new createjs.Bitmap(img);\r\n            this._container.addChild(splash);\r\n\r\n            super.create(stage);\r\n        }\r\n        img.src = \"assets/images/splash.png\";\r\n\r\n\r\n        this._textContainer = new createjs.Container();\r\n        this._container.addChild(this._textContainer);\r\n\r\n        this.Text = \"0\";\r\n\r\n        stage.update();\r\n\r\n\r\n\r\n        return this;\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public set Text(text:string) {\r\n        this._textContainer.removeAllChildren();\r\n        //add text\r\n        const textEl = Sprites.generateBitmapText(text, this._textSpritesheet);\r\n        this._textContainer.addChild(textEl);\r\n        this._container.addChild(this._textContainer);\r\n\r\n        this._game.Stage.update();\r\n    }\r\n}","import { LoadManager } from \"../managers/LoadManager\";\r\nimport { Game } from \"../Game\";\r\nimport { GameScreen } from \"./GameScreen\";\r\n\r\n/**This class creates the tutorial items.  This class will control the game and game screen when being used. */\r\nexport class TutorialCreator {\r\n    public static get KEY() {\r\n        return {\r\n            \"First\" : \"first\",\r\n            \"You\" : \"you\",\r\n            \"Fish\" : \"fish\",\r\n            \"Puffer\" : \"puffer\",\r\n            \"Many\" : \"many\",\r\n            \"Pause\" : \"pause\",\r\n            \"Special\" : \"special\"\r\n        }\r\n    };\r\n\r\n    private _game:Game;\r\n    private _gameScreen:GameScreen;\r\n\r\n\r\n    //tutorial overlays\r\n    private _youOverlay:createjs.Sprite;\r\n    private _fishOverlay:createjs.Sprite;\r\n    private _pufferOverlay:createjs.Sprite;\r\n    private _manyOverlay:createjs.Sprite;\r\n    private _pauseOverlay:createjs.Sprite;\r\n    private _specialOverlay:createjs.Sprite;\r\n\r\n    private _currentOverlay:createjs.Sprite;\r\n    private _tutorialQueue:string[];\r\n\r\n    constructor(game:Game, gameScreen:GameScreen) {\r\n        this._game = game;\r\n        this._gameScreen = gameScreen;\r\n\r\n        this._tutorialQueue = [];\r\n\r\n        //build all the required screens\r\n        this._youOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"you\");\r\n        this._fishOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"fish\");\r\n        this._pufferOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"puffer\");\r\n        this._manyOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"many\");\r\n        this._pauseOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"pause\");\r\n        this._specialOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"special\");\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public async queueTutorials(keys:string[]) {\r\n\r\n        for(let i = 0; i < keys.length; i++) {\r\n            const key = keys[i];\r\n\r\n            await new Promise(async(res, rej) => {\r\n\r\n                console.log(\"NUM\", i);\r\n\r\n                switch(key) {\r\n                    //first will play multiple screens\r\n                    case TutorialCreator.KEY.First :\r\n                        await this._runYou();\r\n                        await this._transition(this._fishOverlay);\r\n                        await this._runFish();\r\n                        await this._transition(null);\r\n                        this._gameScreen.unpauseGameLogic();\r\n                        res();\r\n                        break;\r\n                    case TutorialCreator.KEY.You :\r\n                        await this._runYou();\r\n                        await this._transition(null);\r\n                        this._gameScreen.unpauseGameLogic();\r\n                        res();\r\n                        break;\r\n                    case TutorialCreator.KEY.Fish :\r\n                        await this._runFish();\r\n                        await this._transition(null);\r\n                        this._gameScreen.unpauseGameLogic();\r\n                        res();\r\n                        break;\r\n                    case TutorialCreator.KEY.Puffer :\r\n                        await this._runPuffer();\r\n                        await this._transition(null);\r\n                        this._gameScreen.unpauseGameLogic();\r\n                        res();\r\n                        break;\r\n                    case TutorialCreator.KEY.Special :\r\n                        await this._runSpecial();\r\n                        await this._transition(null);\r\n                        this._gameScreen.unpauseGameLogic();\r\n                        res();\r\n                        break;\r\n\r\n                }\r\n\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    private async _transition(nextScreen) {\r\n        let promises = [];\r\n        //if we have a current screen, wait for it to fade out\r\n        if(this._currentOverlay != null) {\r\n            promises.push(\r\n                new Promise(async(res) => {\r\n                    //fade out\r\n                    createjs.Tween\r\n                        .get(this._currentOverlay)\r\n                        .to({ alpha:0 }, 500, createjs.Ease.linear)\r\n                        .call(() => {\r\n                            this._gameScreen.Container.removeChild(this._currentOverlay);\r\n                            res();\r\n                        });\r\n                })\r\n            );\r\n        }\r\n\r\n        //wait for certain actions to finish\r\n        return new Promise(async(res) => {\r\n            //wait for promises to finish\r\n            await Promise.all(promises);\r\n\r\n            //if we are transitioning to null, just end us\r\n            if(nextScreen == null) {\r\n                this._currentOverlay.alpha = 1;\r\n                res();\r\n                return;\r\n            }\r\n\r\n            this._currentOverlay.alpha = 1;\r\n\r\n            //now add in the new one\r\n            this._currentOverlay = nextScreen;\r\n            this._gameScreen.Container.addChild(this._currentOverlay);\r\n            this._currentOverlay.alpha = 0;\r\n\r\n            //fade in\r\n            createjs.Tween\r\n                .get(this._currentOverlay)\r\n                .to({ alpha:1 }, 500, createjs.Ease.linear)\r\n                .call(() => {\r\n                    res();\r\n                });\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    private async _runYou() {\r\n\r\n        return new Promise((res, rej) => {\r\n            this._currentOverlay = this._youOverlay;\r\n\r\n            const catStart = this._gameScreen.Cat.Y;\r\n            //move the cat hand\r\n            \r\n            this._gameScreen.Cat.Y = 80;\r\n            //pause the game\r\n            this._gameScreen.pauseGameLogic();\r\n            //overlay screen\r\n            this._gameScreen.Container.addChild(this._youOverlay);\r\n            //listen for screen click\r\n            (this._game.Stage).on(\"pressup\", () => { \r\n                //put cat paw back to start Y\r\n                this._gameScreen.Cat.Y = catStart;\r\n                res();\r\n            }, true, true);\r\n\r\n        });\r\n        \r\n    }\r\n\r\n    private async _runFish() {\r\n\r\n        return new Promise((res, rej) => {\r\n            this._currentOverlay = this._fishOverlay;\r\n            //pause the game\r\n            this._gameScreen.pauseGameLogic();\r\n            //overlay screen\r\n            this._gameScreen.Container.addChild(this._fishOverlay);\r\n            //listen for screen click\r\n            (this._game.Stage).on(\"pressup\", () => { \r\n                res();\r\n            }, true, true);\r\n        });\r\n\r\n    }\r\n\r\n    private async _runPuffer() {\r\n\r\n        return new Promise((res, rej) => {\r\n            this._currentOverlay = this._pufferOverlay;\r\n            //pause the game\r\n            this._gameScreen.pauseGameLogic();\r\n            //overlay screen\r\n            this._gameScreen.Container.addChild(this._pufferOverlay);\r\n            //listen for screen click\r\n            (this._game.Stage).on(\"pressup\", () => { \r\n                res();\r\n            }, true, true);\r\n        });\r\n\r\n    }\r\n\r\n    private async _runSpecial() {\r\n\r\n        return new Promise((res, rej) => {\r\n            this._currentOverlay = this._specialOverlay;\r\n            //pause the game\r\n            this._gameScreen.pauseGameLogic();\r\n            //overlay screen\r\n            this._gameScreen.Container.addChild(this._specialOverlay);\r\n            //listen for screen click\r\n            (this._game.Stage).on(\"pressup\", () => { \r\n                res();\r\n            }, true, true);\r\n        });\r\n\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n}","import { LoadManager } from \"../managers/LoadManager\";\r\n\r\n/**Used to gain access to in-game sprites. */\r\nexport class Sprites {\r\n    public static CLEAR_DATA:string = \"onClearData\";\r\n\r\n    private static _backgrounds:{ [key:string]:createjs.DisplayObject } = { };\r\n    private static _buttons:{ [key:string]:createjs.DisplayObject } = { };\r\n\r\n    private static _graphics:{ [key:string]:createjs.DisplayObject } = { };\r\n\r\n    private static _spritesheets:createjs.SpriteSheet[];\r\n\r\n    private static _canClearData:boolean = false;\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public static setup() {\r\n        return new Promise((res, rej) => {\r\n            // Sprites.spritesheets = spritesheets\r\n            //setup all the sprites\r\n            /* ------- STATIC ------- */\r\n            Sprites._backgrounds.Main = new createjs.Sprite(LoadManager.Spritesheets.UI); // Static BG\r\n            (Sprites._backgrounds.Main as createjs.Sprite).gotoAndStop(\"bg_main_static\");\r\n\r\n            Sprites._backgrounds.Logo = new createjs.Sprite(LoadManager.Spritesheets.Entities); // LOGO\r\n            (Sprites._backgrounds.Logo as createjs.Sprite).gotoAndStop(\"icon_title\");\r\n\r\n            Sprites._backgrounds.BG = LoadManager.Images.BG; // Redux\r\n            Sprites._backgrounds.BGTop = LoadManager.Images.BGTop;\r\n\r\n\r\n            /* ------- ANIMATED ------- */\r\n            Sprites._backgrounds.Wave = new createjs.Sprite(LoadManager.Spritesheets.UI); // Animated BG\r\n            (Sprites._backgrounds.Wave as createjs.Sprite).gotoAndPlay(\"bg_main\");\r\n\r\n\r\n            /* ------- GRAPHICS ------ */\r\n            Sprites._graphics.Timer = new createjs.Sprite(LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n            (Sprites._graphics.Timer as createjs.Sprite).gotoAndPlay(\"sprTime\");\r\n            Sprites._graphics.Score = new createjs.Sprite(LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n            (Sprites._graphics.Score as createjs.Sprite).gotoAndPlay(\"sprScore\");\r\n            Sprites._graphics.FishRemain = new createjs.Sprite(LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n            (Sprites._graphics.FishRemain as createjs.Sprite).gotoAndPlay(\"sprFish\");\r\n            \r\n            /* ------- BUTTONS ------- */\r\n            Sprites._buttons.NewGame = new createjs.Sprite(LoadManager.Spritesheets.Entities); // New Game\r\n            (Sprites._buttons.NewGame as createjs.Sprite).gotoAndStop(\"btn_new_game\");\r\n            new createjs.ButtonHelper(Sprites._buttons.NewGame as createjs.Sprite, \"btn_new_game\", \"btn_new_game_hover\", \"btn_new_game_hover\");\r\n\r\n\r\n            Sprites._buttons.Options = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Options\r\n            (Sprites._buttons.Options as createjs.Sprite).gotoAndStop(\"btn_new_game\");\r\n            new createjs.ButtonHelper(Sprites._buttons.Options as createjs.Sprite, \"btn_options\", \"btn_options_hover\", \"btn_options_hover\");\r\n\r\n            Sprites._buttons.LevelSelect = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Select\r\n            (Sprites._buttons.LevelSelect as createjs.Sprite).gotoAndStop(\"btn_select\");\r\n            new createjs.ButtonHelper(Sprites._buttons.LevelSelect as createjs.Sprite, \"btn_select\", \"btn_select_hover\", \"btn_select_hover\");\r\n\r\n            Sprites._buttons.Exit = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Exit\r\n            (Sprites._buttons.Exit as createjs.Sprite).gotoAndStop(\"btn_select\");\r\n            new createjs.ButtonHelper(Sprites._buttons.Exit as createjs.Sprite, \"btn_exit\", \"btn_exit_hover\", \"btn_exit_hover\");\r\n\r\n            Sprites._buttons.Fishbowl = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Fishbowl\r\n            (Sprites._buttons.Fishbowl as createjs.Sprite).gotoAndStop(\"btn_select\");\r\n            new createjs.ButtonHelper(Sprites._buttons.Fishbowl as createjs.Sprite, \"icon_fishbowl\", \"icon_fishbowl_hover\", \"icon_fishbowl_hover\", true);\r\n\r\n\r\n            /* ------- MENU ------- */\r\n            Sprites._backgrounds.LevelSelectBG = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Select BG\r\n            (Sprites._backgrounds.LevelSelectBG as createjs.Sprite).gotoAndStop(\"static_bg\");\r\n            Sprites._buttons.LevelEmpty = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Empty Button\r\n            (Sprites._buttons.LevelEmpty as createjs.Sprite).gotoAndStop(\"level_empty\");\r\n            Sprites._buttons.LevelComplete = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Complete Button\r\n            (Sprites._buttons.LevelComplete as createjs.Sprite).gotoAndStop(\"level_complete\");\r\n            Sprites._buttons.LevelSpecialEmpty = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Special Empty Button\r\n            (Sprites._buttons.LevelSpecialEmpty as createjs.Sprite).gotoAndStop(\"level_special_empty\");\r\n            Sprites._buttons.LevelSpecialComplete = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Special Complete Button\r\n            (Sprites._buttons.LevelSpecialComplete as createjs.Sprite).gotoAndStop(\"level_special_complete\");\r\n\r\n\r\n            /* ------- COMPLEX ------- */\r\n            Sprites._setupBTNClearData();\r\n\r\n            res();\r\n        });\r\n    }\r\n\r\n    // /* --- Complex createjs.Sprite Setup --- */\r\n    private static _setupBTNClearData() {\r\n        Sprites._buttons.ClearData = new createjs.Sprite(LoadManager.Spritesheets.UI); // BTN Clear Data\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndStop(\"btn_clear_data\");\r\n        (Sprites._buttons.ClearData as createjs.Sprite).cursor = \"pointer\";\r\n        Sprites._canClearData = false;\r\n    }\r\n    public static listenToClearData() {\r\n        //listen\r\n        (Sprites._buttons.ClearData as any).on(\"mousedown\", Sprites._btnDataDown);\r\n        (Sprites._buttons.ClearData as any).on(\"animationend\", Sprites._btnDataComplete);\r\n        (Sprites._buttons.ClearData as any).on(\"click\", Sprites._btnDataUp);\r\n    }\r\n    public static stopListenToClearData() {\r\n        //listen\r\n        (Sprites._buttons.ClearData as any).off(\"mousedown\", Sprites._btnDataDown);\r\n        (Sprites._buttons.ClearData as any).off(\"animationend\", Sprites._btnDataComplete);\r\n        (Sprites._buttons.ClearData as any).off(\"click\", Sprites._btnDataUp);\r\n    }\r\n\r\n    private static _btnDataDown(e) {\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndPlay(\"btn_clear_data_progress\");\r\n        Sprites._canClearData = true;\r\n    }\r\n    private static _btnDataUp(e) {\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndStop(\"btn_clear_data\");\r\n        Sprites._canClearData = false;\r\n    }\r\n    private static _btnDataComplete(e) {\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndStop(\"btn_clear_data\");\r\n        //dispatch event to button\r\n        if(Sprites._canClearData) {\r\n            (Sprites._buttons.ClearData as createjs.Sprite).dispatchEvent(new Event(Sprites.CLEAR_DATA));\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**A helper function to generate and cache text for the StageGL object. */\r\n    public static generateText(text, details = \"20px Arial\", color = \"#FFFEEE\") {\r\n        const textObj = new createjs.Text(text, details, color)\r\n        textObj.cache(0, 0, textObj.getBounds().width, textObj.getBounds().height);\r\n        return textObj;\r\n    }\r\n\r\n    public static generateBitmapText(text, spritesheet) {\r\n        const textObj = new createjs.BitmapText(text, spritesheet);\r\n        return textObj;\r\n    }\r\n\r\n\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get Backgrounds() { return Sprites._backgrounds; }\r\n    public static get Buttons() { return Sprites._buttons; }\r\n    public static get Graphics() { return Sprites._graphics; }\r\n\r\n    // static get BG() { return Sprites._bg }\r\n    // static get Logo() { return Sprites._logo }\r\n    // static get AnimBG() { return Sprites._animBg }\r\n    // static get GameBG() { return Sprites._gameBG }\r\n    // static get GameBGTop() { return Sprites._gameBGTop }\r\n    // //buttons\r\n    // static get BTN_New_Game() { return Sprites._btnNewGame }\r\n    // static get BTN_Options() { return Sprites._btnOptions }\r\n    // static get BTN_Select() { return Sprites._btnSelect }\r\n    // static get BTN_Exit() { return Sprites._btnExit }\r\n    // static get BTN_Fishbowl() { return Sprites._btnFishbowl }\r\n    // static get BTN_ClearData() { return Sprites._btnClearData }\r\n\r\n\r\n    // static get CLEAR_DATA() { return \"onClearData\" }\r\n}","import { Sprites } from \"../Sprites\";\r\nimport { LoadManager } from \"../../managers/LoadManager\";\r\nimport { ProgressManager } from \"../../managers/ProgressManager\";\r\nimport { Game } from \"../../Game\";\r\nimport { IEnableable } from \"../../Interfaces\";\r\nimport { GameScreen } from \"../../screens/GameScreen\";\r\nimport { DataManager } from \"../../managers/DataManager\";\r\nimport { ScreenManager } from \"../../managers/ScreenManager\";\r\nimport { IntermediaryScreen } from \"../../screens/IntermediaryScreen\";\r\n\r\n\r\nexport class LevelSelectDisplay implements IEnableable {\r\n    private _game:Game;\r\n\r\n    private _container:createjs.Container;\r\n    private _background:createjs.Sprite;\r\n    private _levelsContainer:createjs.Container;\r\n    private _levelTextContainer:createjs.Container;\r\n\r\n    private _levelsData:any;\r\n\r\n    private _levelButtons:createjs.Sprite[];\r\n\r\n    constructor(game:Game) {\r\n        this._game = game;\r\n        this._levelButtons = [];\r\n\r\n        //build the required components for the level select display\r\n        this._container = new createjs.Container();\r\n        this._background = Sprites.Backgrounds.LevelSelectBG as createjs.Sprite;\r\n        this._background.x = (game.StageWidth / 2) - (this._background.getBounds().width / 2);\r\n        this._background.y = 80;\r\n\r\n        this._levelsContainer = new createjs.Container();\r\n        this._container.addChild(this._background);\r\n        let text = Sprites.generateBitmapText(\"Level Select\", LoadManager.Spritesheets.Typography);\r\n        text.x = (game.StageWidth / 2) - (text.getBounds().width / 2);\r\n        text.y = 30;\r\n        this._container.addChild(text);\r\n\r\n\r\n        //setup display text\r\n        this._levelTextContainer = new createjs.Container();\r\n        this._container.addChild(this._levelTextContainer);\r\n\r\n        this.LevelText = \"Hello World!\";\r\n\r\n\r\n\r\n        //build levels data\r\n        this._levelsData = DataManager.WorldsData.worlds.map((world, i) => {\r\n            return [].concat.apply([], world as any)\r\n            .map((level, n) => {\r\n                let special = ProgressManager.ProgressData.specials[i][n];\r\n\r\n                let obj = level;\r\n                obj.unlocked = ProgressManager.ProgressData.levels[i][n].unlocked;\r\n                obj.completed = ProgressManager.ProgressData.levels[i][n].completed;\r\n                obj.special = (special != null);\r\n\r\n                return obj;\r\n            })\r\n        });\r\n\r\n        console.log(\"LEVEL DISPLAY DATA\", this._levelsData);\r\n\r\n\r\n\r\n        //build the level icons\r\n        for(let r = 0; r < this._levelsData.length; r++) {\r\n            //iterate through levels\r\n            for(let i = 0; i < this._levelsData[r].length; i++) {\r\n                const levelData = this._levelsData[r][i];\r\n                console.log(\"LEVEL\", levelData);\r\n                //decide the sprite\r\n                let sprite = Sprites.Buttons.LevelEmpty.clone();\r\n                if(levelData.special != null && levelData.special) sprite = Sprites.Buttons.LevelSpecialEmpty.clone();\r\n                // //completed\r\n                if(levelData.completed) {\r\n                    sprite = Sprites.Buttons.LevelComplete.clone();\r\n                    if(levelData.special != null && levelData.special) sprite = Sprites.Buttons.LevelSpecialComplete;\r\n                }\r\n                //locked\r\n                if(!levelData.unlocked) {\r\n                    sprite.alpha = 0.25;\r\n                }\r\n                else {\r\n                    sprite.alpha = 1;\r\n                     //extras\r\n                    sprite.cursor = \"pointer\";\r\n                }\r\n\r\n                //place\r\n                sprite.x = 60 * i;\r\n                sprite.y = 50 * r;\r\n                //add\r\n                this._levelsContainer.addChild(sprite);\r\n                //to array\r\n                this._levelButtons.push(sprite as createjs.Sprite);\r\n            }\r\n        };\r\n\r\n        this._levelsContainer.x = (game.StageWidth / 2) - (this._levelsContainer.getBounds().width / 2);\r\n        this._levelsContainer.y = 100;\r\n        this._container.addChild(this._levelsContainer);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public enable() {\r\n        this._levelButtons.forEach(btn => {\r\n            btn.on(\"click\", this._onLevelClick, this);\r\n            btn.on(\"mouseover\", this._onLevelHover, this);\r\n            btn.on(\"mouseout\", this._onLevelUnhover, this);\r\n        });\r\n    }\r\n\r\n    public disable() {\r\n        this._levelButtons.forEach(btn => {\r\n            btn.removeAllEventListeners();\r\n        });\r\n    }\r\n\r\n\r\n    /**Returns level data from the given index. */\r\n    private _getDataByIndex(index:number) {\r\n        //flatten level data, and get data\r\n        let flatten = this._levelsData.reduce((acc, next) => acc.concat(next));\r\n        return flatten[index];\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    private _onLevelClick(e) {\r\n         //get button index\r\n        let index = this._levelButtons.indexOf(e.target);\r\n\r\n        if(index == -1) return;\r\n\r\n        //set the level index\r\n        const data = DataManager.getLevelDataByIndex(index);\r\n        console.log(\"MY LEVEL DATA\", data);\r\n        this._game.changeCurrentLevel(data);\r\n        //go to intermediary screen\r\n        const intermediary = ScreenManager.getScreenByKey(\"intermediary\") as IntermediaryScreen;\r\n        new Promise(async(res) => {\r\n            intermediary.Text = data.name;\r\n            await ScreenManager.setCurrentScreen(intermediary, this._game.Stage);\r\n            intermediary.queueNextScreen(\"game\", 1000);\r\n\r\n            res();\r\n        });\r\n    }\r\n\r\n    private _onLevelHover(e) {\r\n        //find the button data\r\n        //get button index\r\n        let index = this._levelButtons.indexOf(e.target);\r\n        \r\n        if(index != -1) {\r\n            const data = this._getDataByIndex(index);\r\n            if(data != null) {\r\n                if(data.unlocked)\r\n                    this.LevelText = data.name;\r\n            }\r\n        }\r\n\r\n    }\r\n    private _onLevelUnhover(e) {\r\n        this.LevelText = \"\";\r\n    }\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container() { return this._container; }\r\n    public set LevelText(value:string) {\r\n        if(value == \"\") {\r\n            this._levelTextContainer.removeAllChildren();\r\n            return;\r\n        }\r\n        //create the text\r\n        const text = Sprites.generateBitmapText(value, LoadManager.Spritesheets.TypographyWhite);\r\n        (text as any).scale = 0.6;\r\n        //load into container\r\n        this._levelTextContainer.removeAllChildren();\r\n        this._levelTextContainer.addChild(text);\r\n\r\n        //put container at bottom\r\n        this._levelTextContainer.x = (this._game.StageWidth / 2) - ((text.getBounds().width / 2) * 0.6);\r\n        this._levelTextContainer.y = this._game.StageHeight - 30;\r\n    }\r\n}","import { Layout } from \"./Layout\";\r\n\r\n/**Uses custom classes and the createjs library to help easily build up ui interfaces with DisplayObjects. */\r\nexport class Container {\r\n    private _sprites:{ [key:string]:createjs.DisplayObject };\r\n    private _container:createjs.Container;\r\n    private _layout:Layout;\r\n\r\n    constructor(layout:{ direction:string, alignment:string, crossAlignment:string, spacing:number } = null) {\r\n        this._sprites = { };\r\n        this._container = new createjs.Container();\r\n        this._layout = (layout != null) ? new Layout(this._container, layout.direction, layout.alignment, layout.crossAlignment, layout.spacing)  : Layout.MAKE_VERTICAL_CENTER(this._container);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public add(key:string, sprite:createjs.DisplayObject, updateLayout:boolean=true):boolean {\r\n        if(this._sprites[key] != null) return false;\r\n        this._sprites[key] = sprite.clone();\r\n\r\n        if(updateLayout) this._layout.buildLayout(true, ...Object.keys(this._sprites).map(k => this._sprites[k]));\r\n        return true;\r\n    }\r\n\r\n    public addMany(sprites:{ [key:string]:createjs.DisplayObject }) {\r\n        Object.keys(sprites).forEach(k => {\r\n            this.add(k, sprites[k], false);\r\n        });\r\n\r\n        this._layout.buildLayout(true, ...Object.keys(this._sprites).map(k => this._sprites[k]));\r\n    }\r\n\r\n    public changeLayout(layout:Layout) {\r\n        this._layout = layout;\r\n    }\r\n\r\n    /**In case of wandering or reusable sprites, call them back to this layout! */\r\n    public checkoutSprites() {\r\n        this._layout.buildLayout(true, ...Object.keys(this._sprites).map(k => this._sprites[k]));\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container():createjs.Container { return this._container; }\r\n    public get Sprites() { return this._sprites; }\r\n\r\n    public static get LAYOUT_OPTIONS() {\r\n        return {\r\n            //column layouts\r\n            //-- left aligned\r\n            \"ColumnLeftTop\" : {direction:Layout.VERTICAL, alignment:Layout.START, crossAlignment:Layout.START, spacing:5},\r\n            \"ColumnLeftCenter\" : {direction:Layout.VERTICAL, alignment:Layout.START, crossAlignment:Layout.CENTER, spacing:5},\r\n            \"ColumnLeftBottom\" : {direction:Layout.VERTICAL, alignment:Layout.START, crossAlignment:Layout.END, spacing:5},\r\n            //-- center aligned\r\n            \"ColumnCenterTop\" : {direction:Layout.VERTICAL, alignment:Layout.CENTER, crossAlignment:Layout.START, spacing:5},\r\n            \"ColumnCenterCenter\" : {direction:Layout.VERTICAL, alignment:Layout.CENTER, crossAlignment:Layout.CENTER, spacing:5},\r\n            \"ColumnCenterBottom\" : {direction:Layout.VERTICAL, alignment:Layout.CENTER, crossAlignment:Layout.END, spacing:5},\r\n            //-- right aligned\r\n            \"ColumnRightTop\" : {direction:Layout.VERTICAL, alignment:Layout.END, crossAlignment:Layout.START, spacing:5},\r\n            \"ColumnRightCenter\" : {direction:Layout.VERTICAL, alignment:Layout.END, crossAlignment:Layout.CENTER, spacing:5},\r\n            \"ColumnRightBottom\" : {direction:Layout.VERTICAL, alignment:Layout.END, crossAlignment:Layout.END, spacing:5}\r\n        };\r\n    }\r\n}","import { Game } from \"../../Game\";\r\n\r\n/**Used to layout createjs display objects. */\r\nexport class Layout {\r\n    //justify content\r\n    public static HORIZONTAL:string = \"horizontal\";\r\n    public static VERTICAL:string = \"vertical\";\r\n    //align items\r\n    public static START:string = \"start\";\r\n    public static END:string = \"end\";\r\n    public static CENTER:string = \"center\";\r\n\r\n    private _parent:createjs.Container;\r\n    private _items:createjs.DisplayObject[];\r\n\r\n    private _direction:string;\r\n    private _alignment:string;\r\n    private _crossAlignment:string;\r\n    private _spacing:number;\r\n\r\n    constructor(parent:createjs.Container, direction:string, alignment:string, crossAlignment:string, spacing:number = 5) {\r\n        this._parent = parent;\r\n        this._items = [];\r\n\r\n        this._direction = direction;\r\n        this._alignment = alignment;\r\n        this._crossAlignment = crossAlignment;\r\n        this._spacing = spacing;\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public buildLayout(addToParent:boolean=true, ...items:createjs.DisplayObject[]) {\r\n        if(items.length <= 0) return;\r\n\r\n        this._items = items;\r\n\r\n        if(addToParent) {\r\n            this._parent.removeAllChildren();\r\n        }\r\n        \r\n\r\n        if(this._direction == Layout.VERTICAL) {\r\n            let totalHeight = 0;\r\n            //ALIGNMENT\r\n            switch(this._alignment) {\r\n                case Layout.START : {\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        item.x = 0;\r\n                        item.y = totalHeight;\r\n                        totalHeight += item.getBounds().height + this._spacing;\r\n                        if(addToParent) this._parent.addChild(item);\r\n                    }\r\n                    break;\r\n                }\r\n                case Layout.CENTER : {\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        item.x = (Game.WIDTH / 2) - (item.getBounds().width / 2);\r\n                        item.y = totalHeight;\r\n                        totalHeight += item.getBounds().height + this._spacing;\r\n                        if(addToParent) this._parent.addChild(item);\r\n                    }\r\n                    break;\r\n                }\r\n                case Layout.END : {\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        item.x = Game.WIDTH - item.getBounds().width;\r\n                        item.y = totalHeight;\r\n                        totalHeight += item.getBounds().height + this._spacing;\r\n                        if(addToParent) this._parent.addChild(item);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n\r\n            //CROSS ALIGNMENT\r\n            //handle vertical alignment\r\n            switch(this._crossAlignment) {\r\n                case Layout.START : {\r\n                    break;\r\n                }\r\n                case Layout.CENTER : {\r\n                    totalHeight += items[items.length-1].getBounds().height;\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        //decipher desired center\r\n                        item.y += (Game.HEIGHT / 2) - (totalHeight / 2);\r\n                    }\r\n                    break;\r\n                }\r\n                case Layout.END :  {\r\n                    totalHeight += items[items.length-1].getBounds().height;\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        //decipher desired center\r\n                        item.y += Game.HEIGHT - totalHeight;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n\r\n        }\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    \r\n    /*--------------- HELPER FUNCTIONS ---------------*/\r\n    public static MAKE_VERTICAL_CENTER(container:createjs.Container) { return new Layout(container, Layout.VERTICAL, Layout.CENTER, Layout.CENTER, 5); }\r\n    public static MAKE_VERTICAL_START(container:createjs.Container) { return new Layout(container, Layout.VERTICAL, Layout.CENTER, Layout.START, 5); }\r\n\r\n}","import { Game } from \"../../Game\";\r\nimport { Sprites } from \"../Sprites\";\r\nimport { LoadManager } from \"../../managers/LoadManager\";\r\n\r\n/**Creates a display container for the game screen. */\r\nexport class GameScore {\r\n    private _game:Game;\r\n    private _container:createjs.Container;\r\n    private _bg:createjs.Shape;\r\n    private _txtTimer:createjs.DisplayObject;\r\n\r\n    private _timerContainer:createjs.Container;\r\n    private _timerTextContainer:createjs.Container;\r\n    private _fishRemainContainer:createjs.Container;\r\n    private _fishRemainTextContainer:createjs.Container;\r\n    private _scoreContainer:createjs.Container;\r\n    private _scoreTextContainer:createjs.Container;\r\n\r\n    //game conditions\r\n    private _useTimer:boolean = false;\r\n    private _useFishRemain:boolean = true;\r\n    private _useScore:boolean = true;\r\n\r\n    constructor(game:Game) {\r\n        this._game = game;\r\n        //create the initial objects\r\n        this._container = new createjs.Container();\r\n        this._bg = new createjs.Shape();\r\n        this._bg.graphics.beginFill(\"#000000\");\r\n        this._bg.graphics.drawRect(0, 0, this._game.StageWidth, 40);\r\n        this._bg.graphics.endFill();\r\n        this._bg.cache(0, 0, this._game.StageWidth, 40);\r\n        this._container.addChild(this._bg);\r\n\r\n        //create the container objects\r\n        //timer\r\n        this._timerContainer = new createjs.Container();\r\n        this._timerContainer.x += 10;\r\n        const timerSprite = Sprites.Graphics.Timer.clone();\r\n        this._timerContainer.addChild(timerSprite);\r\n        this._timerTextContainer = new createjs.Container();\r\n        this._timerTextContainer.y += 8;\r\n        this._timerTextContainer.x += Sprites.Graphics.Timer.getBounds().width + 10;\r\n        this._timerContainer.addChild(this._timerTextContainer);\r\n        this._container.addChild(this._timerContainer);\r\n\r\n        //fish remain\r\n        this._fishRemainContainer = new createjs.Container();\r\n        const fishRemainSprite = Sprites.Graphics.FishRemain.clone();\r\n        this._fishRemainContainer.addChild(fishRemainSprite);\r\n        this._fishRemainTextContainer = new createjs.Container();\r\n        this._fishRemainTextContainer.y += 8;\r\n        this._fishRemainTextContainer.x += Sprites.Graphics.FishRemain.getBounds().width + 10;\r\n        this._fishRemainContainer.addChild(this._fishRemainTextContainer);\r\n        this._container.addChild(this._fishRemainContainer);\r\n\r\n        //score\r\n        this._scoreContainer = new createjs.Container();\r\n        this._scoreContainer.x = this._game.StageWidth - Sprites.Graphics.Score.getBounds().width - 40;\r\n        const scoreSprite = Sprites.Graphics.Score.clone();\r\n        this._scoreContainer.addChild(scoreSprite);\r\n        this._scoreTextContainer = new createjs.Container();\r\n        this._scoreTextContainer.y += 8;\r\n        this._scoreTextContainer.x += Sprites.Graphics.Score.getBounds().width + 10;\r\n        this._scoreContainer.addChild(this._scoreTextContainer);\r\n        this._container.addChild(this._scoreContainer);\r\n        \r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public startHUD(showScore:boolean, showFishRemain:boolean, showTimer:boolean) {\r\n        this._useScore = showScore;\r\n        this._useFishRemain = showFishRemain;\r\n        this._useTimer = showTimer;\r\n\r\n        console.log(\"SHOW ME THE SCORE, REMAIN, TIMER\", showScore, showFishRemain, showTimer);\r\n\r\n        if(this._useScore) this._container.addChild(this._scoreContainer);\r\n        else this._container.removeChild(this._scoreContainer);\r\n\r\n        if(this._useFishRemain) this._container.addChild(this._fishRemainContainer);\r\n        else this._container.removeChild(this._fishRemainContainer);\r\n\r\n        if(this._useTimer) this._container.addChild(this._timerContainer);\r\n        else this._container.removeChild(this._timerContainer);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public update(gameTime:number) {\r\n        \r\n        // //get the game timer\r\n        // let timer = gameTime;\r\n        // this._timerTextContainer.removeAllChildren();\r\n        // let timerCont = Sprites.generateBitmapText(this._game.CurrentLevelData.currentTime.toString(), LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n        // this._timerTextContainer.addChild(timerCont);\r\n\r\n        // //get the fish remain score\r\n        // let fishRemain = gameTime;\r\n        // this._fishRemainTextContainer.removeAllChildren();\r\n        // let fishRemainCont = Sprites.generateBitmapText(this._game.CurrentLevelData.remainingFish.toString(), LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n        // this._fishRemainTextContainer.addChild(fishRemainCont);\r\n        // this._fishRemainContainer.x = (this._game.StageWidth / 2) - (this._fishRemainContainer.getBounds().width / 2);\r\n\r\n        // //get the score\r\n        // let score = gameTime;\r\n        // this._scoreTextContainer.removeAllChildren();\r\n        // let scoreCont = Sprites.generateBitmapText(this._game.CurrentLevelData.score.toString(), LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n        // this._scoreTextContainer.addChild(scoreCont);\r\n        // this._scoreContainer.x = this._game.StageWidth - this._scoreContainer.getBounds().width - 40;\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container() { return this._container; }\r\n\r\n}"]}