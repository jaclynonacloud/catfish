{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/Functions.ts","src/Game.ts","src/ObjectPool.ts","src/entities/Cat.ts","src/entities/Entity.ts","src/entities/Fish.ts","src/entities/Puffer.ts","src/entities/specials/Persephone.ts","src/main.ts","src/managers/DataManager.ts","src/managers/LoadManager.ts","src/managers/ScreenManager.ts","src/screens/EndScreen.ts","src/screens/GameScreen.ts","src/screens/IntermediaryScreen.ts","src/screens/MenuScreen.ts","src/screens/Screen.ts","src/screens/SplashScreen.ts","src/screens/TutorialCreator.ts","src/ui/Sprites.ts","src/ui/custom/LevelSelectDisplay.ts","src/ui/display/Container.ts","src/ui/display/Layout.ts","src/ui/partials/GameScore.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Logging","message","console","log","_message","LoadManager_1","ScreenManager_1","SplashScreen_1","MenuScreen_1","GameScreen_1","EndScreen_1","Functions_1","Sprites_1","IntermediaryScreen_1","DataManager_1","Game","canvasDiv","_this","this","_classCallCheck","_canvas","width","WIDTH","height","HEIGHT","_lastGameTime","_scaling","Promise","res","rej","__awaiter","regeneratorRuntime","mark","_callee","wrap","_context","prev","next","_stage","createjs","StageGL","antialias","setClearColor","enableMouseOver","update","addEventListener","LoadManager","ASSETS_UPDATED","Percentage","loadAssets","catch","err","warn","success","DataManager","loadWorldsData","error","changeCurrentLevel","getLevelDataByIndex","Sprites","setup","ScreenManager","registerScreen","SplashScreen","MenuScreen","GameScreen","EndScreen","IntermediaryScreen","setCurrentScreen","Ticker","framerate","FRAME_RATE","on","stop","levelData","_currentLevel","currentScore","_currentScore","gameTime","getMeasuredFPS","CurrentScreen","Math","min","document","body","clientHeight","ObjectPool","obj","type","poolObj","active","Pool","push","_getObjectByType","_getObjectByObj","_pool","forEach","return","find","Entity_1","Cat","gameScreen","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","Spritesheets","Kitty_Spritesheet","_speed","_fishCaughtMultiplier","_caughtFish","_isGrabbing","_isRising","_isInjured","_hasReachedSurface","_sprite","gotoAndPlay","ANIMATION","Idle","Entity","_this2","IsGamelogicPaused","X","Stage","mouseX","Speed","speed","mouseY","_catYTween","Tween","get","to","y","Ease","circIn","Grab","Hold","fishes","tryToGrabFishes","Y","caught","returnToSurface","_this3","removeTweens","wait","linear","reachSurface","_this4","hasNewFish","indexOf","release","_this5","Ow","injure","drop","_this6","collectFish","_this7","_get","prototype","hasHitAPuffer","hitEnemy","caughtFishMult","value","freeze","Death","spritesheet","_gameScreen","Sprite","_direction","x","_isIgnoringCollision","_ignoreCollisionTimer","Scaling","container","addChild","parent","removeChild","IGNORE_COLLISION","artificialReg","arguments","undefined","reg","regX","regY","Bounds","Width","Height","bounds","StageWidth","extents","StageHeight","HIT","Right","Left","lastX","scaleX","getBounds","Top","Bottom","Fish","Peeper_Spritesheet","_isCaught","_isReturning","Slow","_naturalY","Panic","hitTest","disable","abs","isNeg","IsIgnoringCollision","testStageBounds","startIgnoreCollision","Fast","Puffer","Puffer_Spritesheet","_cooldown","_currentCooldown","Angry","cat","Recover","Fish_1","Persephone","Persephone_Spritesheet","SPEC_ANIMATION","Game_1","getElementById","fileLocation","fetch","then","blob","json","_worldsData","index","concat","apply","worlds","_sheetsTotal","_sheetsLoaded","_percentage","_totalAssetsLoaded","_totalAssets","src","stage","reset","_preloadManager","LoadQueue","Sound","registerPlugins","WebAudioPlugin","HTMLAudioPlugin","FlashAudioPlugin","alternateExtensions","installPlugin","_onLoaded","_onComplete","_onError","data","setMaxConnections","loadManifest","ASSETS_LOADED","emitErrorEvent","dispatchEvent","AssetsLoadedEvent","AssetsFailedEvent","parseFloat","getItems","toFixed","AssetsUpdatedEvent","name","sheet","item","Types","JAVASCRIPT","window","id","_SpriteSheet","complete","_loadedSheet","ev","remove","IMAGE","Images","Bitmap","emitUpdatedEvent","removeAllEventListeners","setInterval","emitLoadedEvent","Event","ASSETS_FAILED","Screen_1","key","screen","_screensLookup","tempScreen","Screen","resolve","promises","_currentScreen","Container","alpha","destroy","_callee2","_context2","all","create","enable","Container_1","game","_game","_isFail","bg","Catfish_End","_container","_buttonsContainer","LAYOUT_OPTIONS","ColumnLeftBottom","addMany","btnTryAgain","btnNextLevel","btnMainMenu","_completeSpr","_failSpr","visible","TutorialCreator_1","ObjectPool_1","Persephone_1","Puffer_1","Cat_1","GameScore_1","_fishes","_puffers","_remainingFish","createPoolObject","POOL","CAT","FISH","_i","PUFFERFISH","PERSEPHONE","_cat","checkout","_staticContainer","BG_Spritesheet","_fishContainer","_pufferContainer","_winContainer","_gameScore","GameScore","_tutorialCreator","TutorialCreator","_pauseLogic","hitObjects","getObjectsUnderPoint","fish","puff","killedFish","splice","win","changeCurrentScore","totalFish","combos","time","elasticOut","checkoutSprites","_winBanner","Shape","graphics","beginFill","drawRect","cache","_winText","generateBitmapText","TypographyWhite","mouseEnabled","CurrentLevelData","flip","DirectionX","setNaturalY","puffer","tutorials","queueTutorials","background","gotoAndStop","showScore","showTimer","duration","showFishRemain","showRemainingFish","startHUD","releaseAllObjects","removeAllChildren","normalizedTime","grab","_text","screenKey","evt","setTimeout","clearTimeout","_bg","endFill","_textContainer","_txtSprite","scale","Text","LevelSelectDisplay_1","_swipeContainer","Catfish_Main","_mainContainer","_logo","_mainButtonsContainer","btnNewGame","btnOptions","btnLevelSelect","btnExit","_fancyFish","_optionsContainer","txtOptions","Typography","btnClearData","Buttons","ClearData","_clearedContainer","add","_levelSelectDisplay","LevelSelectDisplay","_swipeSpeed","_initialSwipePos","intermediary","getScreenByKey","queueNextScreen","circOut","bounceOut","cubicIn","cubicInOut","clearInterval","stageX","stageY","_dragTimer","_onMain","_onNewGame","_onOptions","_onLevelSelect","_onExit","listenToClearData","CLEAR_DATA","_onClearData","_onDragStart","_onDragEnd","loop","sineInOut","off","stopListenToClearData","removeAllTweens","_splash","_tutorialQueue","_youOverlay","Tutorial_Spritesheet","_fishOverlay","_pufferOverlay","_manyOverlay","_pauseOverlay","_specialOverlay","First","You","Many","Pause","Special","keys","t0","KEY","_runYou","_transition","_runFish","unpauseGameLogic","abrupt","_runPuffer","_runSpecial","nextScreen","_currentOverlay","_callee3","_context4","_callee4","_context5","catStart","pauseGameLogic","_backgrounds","Main","UI","Logo","Entities","BG","BGTop","Wave","_graphics","Timer","ScoreHUD_Spritesheet","Score","FishRemain","_buttons","NewGame","ButtonHelper","Options","LevelSelect","Exit","Fishbowl","LevelSelectBG","Menu_Level_Select","LevelEmpty","LevelComplete","LevelSpecialEmpty","LevelSpecialComplete","_setupBTNClearData","cursor","_canClearData","_btnDataDown","_btnDataComplete","_btnDataUp","text","details","color","textObj","BitmapText","_levelButtons","_background","Backgrounds","_levelsContainer","_levelTextContainer","LevelText","_levelsData","unlocked","special","sprite","clone","btn","_onLevelClick","_onLevelHover","_onLevelUnhover","reduce","acc","target","_getDataByIndex","Layout_1","layout","_sprites","_layout","Layout","direction","alignment","crossAlignment","spacing","MAKE_VERTICAL_CENTER","updateLayout","buildLayout","_toConsumableArray","map","k","sprites","_layout2","_layout3","ColumnLeftTop","VERTICAL","START","ColumnLeftCenter","CENTER","END","ColumnCenterTop","ColumnCenterCenter","ColumnCenterBottom","ColumnRightTop","ColumnRightCenter","ColumnRightBottom","_parent","_items","_alignment","_crossAlignment","_spacing","addToParent","_len","items","Array","_key","totalHeight","_item","_i2","_item2","_i3","_i4","HORIZONTAL","_useTimer","_useFishRemain","_useScore","_timerContainer","timerSprite","Graphics","_timerTextContainer","_fishRemainContainer","fishRemainSprite","_fishRemainTextContainer","_scoreContainer","scoreSprite","_scoreTextContainer"],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/* ************************************************* */\r\n/*                      LOGGING                      */\r\n/* ************************************************* */\r\nexport class Logging {\r\n    static success(message:string):void {\r\n        console.log(`%c ${message}`, 'color:seagreen; font-size:1.1em; font-weight:bold; border-left: solid 3px seagreen;')    ;\r\n    }\r\n\r\n    static message(message:string):void {\r\n        console.log(`%c ${message}`, 'color:#1E265C; font-size:1.1em; font-weight:bold; border-left: solid 3px #1E265C;');\r\n    }\r\n\r\n    static error(message:string):void {\r\n        console.log(`%c ${message}`, 'color:red; font-size:1.1em; border-left: solid 3px red;');\r\n    }\r\n}","import { LoadManager } from \"./managers/LoadManager\";\r\nimport { ScreenManager } from \"./managers/ScreenManager\";\r\nimport { SplashScreen } from \"./screens/SplashScreen\";\r\nimport { MenuScreen } from \"./screens/MenuScreen\";\r\nimport { GameScreen } from \"./screens/GameScreen\";\r\nimport { EndScreen } from \"./screens/EndScreen\";\r\nimport { Logging } from \"./Functions\";\r\nimport { Sprites } from \"./ui/Sprites\";\r\nimport { IntermediaryScreen } from \"./screens/IntermediaryScreen\";\r\nimport { DataManager, LevelData } from \"./managers/DataManager\";\r\n\r\nexport interface ICurrentScore {\r\n    totalFish: number;\r\n    time: number;\r\n    combos: number;\r\n}\r\n\r\n\r\nexport class Game {\r\n    private _canvas:HTMLCanvasElement;\r\n    private _stage:createjs.StageGL;\r\n    private _scaling:number;\r\n\r\n    private _lastGameTime:number;\r\n\r\n    private _currentLevel:LevelData;\r\n    private _currentScore:ICurrentScore;\r\n\r\n    constructor(canvasDiv:HTMLCanvasElement) {\r\n\r\n        this._canvas = canvasDiv;\r\n        this._canvas.width = Game.WIDTH;\r\n        this._canvas.height = Game.HEIGHT;\r\n\r\n        this._lastGameTime = -1;\r\n\r\n        //set the scaling\r\n        this._scaling = Game.HEIGHT / 1024;\r\n\r\n        //start loading game assets\r\n        new Promise(async(res, rej) => {\r\n            //create the stage\r\n            console.log(\"Readying stage!\");\r\n            this._stage = new createjs.StageGL(this._canvas, { antialias: true });\r\n            // this._stage = new createjs.StageGL(this._canvas);\r\n            (this._stage as any).setClearColor(\"#000000\");\r\n            this._stage.enableMouseOver(10);\r\n            this._stage.update();\r\n\r\n            // this._stage.scaleX = this._stage.scaleY = 0.8;\r\n\r\n            console.log(this._stage, this._canvas);\r\n\r\n            //listen to asset updates\r\n            (this._stage as any).addEventListener(LoadManager.ASSETS_UPDATED, (e) => {\r\n                console.log(LoadManager.Percentage);\r\n            });\r\n            //load assets\r\n            await LoadManager.loadAssets(\"assets/manifest.json\", this._stage)\r\n                .catch(err => {\r\n                    console.warn(\"Error loading assets:\", err);\r\n                });\r\n\r\n            Logging.success(\"Assets Loaded Successfully!\");\r\n\r\n            //load level data\r\n            await DataManager.loadWorldsData(\"assets/data/levels.json\")\r\n                .catch(err => {\r\n                    Logging.error(err);\r\n                    return;\r\n                });\r\n\r\n            //set the current screen\r\n            //game test, load desired level patch -- if autoloading to game screen\r\n            this.changeCurrentLevel(DataManager.getLevelDataByIndex(3));\r\n\r\n            Logging.success(\"Level Data Loaded Successfully!\");\r\n\r\n            //setup createjs.Sprites\r\n            await Sprites.setup();\r\n\r\n            //build the screens\r\n            ScreenManager.registerScreen(\"splash\", new SplashScreen());\r\n            ScreenManager.registerScreen(\"menu\", new MenuScreen(this));\r\n            ScreenManager.registerScreen(\"game\", new GameScreen(this));\r\n            ScreenManager.registerScreen(\"end\", new EndScreen(this));\r\n            ScreenManager.registerScreen(\"intermediary\", new IntermediaryScreen(this));\r\n            \r\n\r\n            ScreenManager.setCurrentScreen(\"game\", this._stage);\r\n            // ScreenManager.setCurrentScreen(\"end\", this._stage);\r\n\r\n            //setup the game loop\r\n            createjs.Ticker.framerate = Game.FRAME_RATE;\r\n            createjs.Ticker.on(\"tick\", this.update, this);\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public changeCurrentLevel(levelData:LevelData) {\r\n        this._currentLevel = levelData;\r\n    }\r\n\r\n    public changeCurrentScore(currentScore:ICurrentScore) {\r\n        this._currentScore = currentScore;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    public update(e:any) {\r\n\r\n        const gameTime = (this._lastGameTime != -1) ? createjs.Ticker.getMeasuredFPS() - this._lastGameTime : 1;\r\n        this._lastGameTime = createjs.Ticker.getMeasuredFPS();\r\n\r\n        //update the screen\r\n        if(ScreenManager.CurrentScreen != null) ScreenManager.CurrentScreen.update(gameTime);\r\n\r\n        //update the stage\r\n        this._stage.update();\r\n    }\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get FRAME_RATE() { return 30; }\r\n    public static get WIDTH() { return Game.HEIGHT * 0.5625; } //desired size\r\n    public static get HEIGHT() { return Math.min(document.body.clientHeight, 1024); }\r\n\r\n    public get StageWidth() { return this._canvas.width; } //actual size\r\n    public get StageHeight() { return this._canvas.height; }\r\n\r\n    public get Stage() { return this._stage; }\r\n    public get Scaling() { return this._scaling; }\r\n\r\n    public get CurrentLevelData() { return this._currentLevel; }\r\n    public get CurrentScoreData() { return this._currentScore; }\r\n\r\n\r\n\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n\r\n\r\n}","import { Logging } from \"./Functions\";\r\nimport { Entity } from \"./entities/Entity\";\r\n\r\nexport interface IPoolObject {\r\n    type:string;\r\n    obj:Entity,\r\n    active:boolean;\r\n}\r\n\r\nexport class ObjectPool {\r\n    private static _pool:IPoolObject[];\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Creates a pool object. */\r\n    public static createPoolObject(obj:Entity, type:string) {\r\n        const poolObj = {\r\n            type,\r\n            obj,\r\n            active: false\r\n        };\r\n        ObjectPool.Pool.push(poolObj);\r\n        return poolObj;\r\n    }\r\n\r\n    /**Checks out a pool object.  Use POOL global function to access. */\r\n    public static checkout(type:string) {\r\n        const poolObj = ObjectPool._getObjectByType(type);\r\n        if(poolObj != null) {\r\n            poolObj.active = true;\r\n            return poolObj.obj;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**Returns an object to the pool. */\r\n    public static return(obj:Entity) {\r\n        const poolObj = ObjectPool._getObjectByObj(obj);\r\n        if(poolObj != null) {\r\n            poolObj.active = false;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**Returns all objects to pool. */\r\n    public static releaseAllObjects() {\r\n        ObjectPool._pool.forEach(p => {\r\n            ObjectPool.return(p.obj);\r\n        });\r\n    }\r\n\r\n\r\n    public static _getObjectByType(type) {\r\n        const poolObj = ObjectPool._pool.find((o => o.type == type && !o.active));\r\n        if(poolObj == null) Logging.error(\"Object not found in pool, or pool is exhausted.  Return some objects.\");\r\n        return poolObj\r\n    }\r\n    public static _getObjectByObj(obj) {\r\n        return ObjectPool._pool.find((o => o.obj == obj));\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get Pool() { \r\n        if(ObjectPool._pool == null) ObjectPool._pool = [];\r\n        return ObjectPool._pool;\r\n    }\r\n}","import { Game } from \"../Game\";\r\nimport { Entity } from \"./Entity\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { IEnableable } from \"../Interfaces\";\r\nimport { Logging } from \"../Functions\";\r\nimport { GameScreen } from \"../screens/GameScreen\";\r\nimport { Fish } from \"./Fish\";\r\n\r\nexport class Cat extends Entity implements IEnableable {\r\n    private _speed:number;\r\n    private _fishCaughtMultiplier:number; //this will be the rate at which the cat slows down when rising per fish\r\n\r\n    private _catYTween:createjs.Tween;\r\n    private _caughtFish:Fish[];\r\n\r\n    private _isGrabbing:boolean;\r\n    private _isRising:boolean;\r\n    private _isInjured:boolean;\r\n    private _hasReachedSurface:boolean;\r\n\r\n    constructor(gameScreen:GameScreen) {\r\n        super(gameScreen, LoadManager.Spritesheets.Kitty_Spritesheet);\r\n        // super(gameScreen, LoadManager.Spritesheets.Cat_Spritesheet);\r\n        this._speed = 3;\r\n        this._fishCaughtMultiplier = 0.05;\r\n\r\n        this._caughtFish = [];\r\n        this._isGrabbing = false;\r\n        this._isRising = false;\r\n        this._isInjured = false;\r\n        this._hasReachedSurface = true;\r\n\r\n        this._sprite.gotoAndPlay(Cat.ANIMATION.Idle);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    enable() {\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n    }\r\n\r\n\r\n    /***************/\r\n    /*   ACTIONS   */\r\n    /***************/\r\n    public grab() {\r\n        //if the game is paused, we shall not grab\r\n        if(this.GameScreen.IsGamelogicPaused) return;\r\n\r\n        //cannot grab if we are not at surface\r\n        if(!this._hasReachedSurface) return;\r\n\r\n        this._isGrabbing = true;\r\n        this._hasReachedSurface = false;\r\n\r\n        //move to x position\r\n        this.X = this.GameScreen.Game.Stage.mouseX;\r\n\r\n\r\n        console.log(\"START SPEED:\", this.Speed);\r\n\r\n        //grab to y position\r\n        const speed = (this.GameScreen.Game.Stage.mouseY / 2) * this.Speed;\r\n        this._catYTween = createjs.Tween\r\n            .get(this._sprite)\r\n            .to({ y:this.GameScreen.Game.Stage.mouseY }, speed, createjs.Ease.circIn)\r\n            .call(() => {\r\n                //once the grab is done, turn off flag\r\n                this._isGrabbing = false;\r\n\r\n                 //play animations\r\n                this._sprite.gotoAndPlay(Cat.ANIMATION.Grab);\r\n                //listen for animation to finish\r\n                (this._sprite as any).on(\"animationend\", () => {\r\n                    this._sprite.gotoAndPlay(Cat.ANIMATION.Hold);\r\n                }, true);\r\n\r\n                //try to grab a fish\r\n                const fishes = this.GameScreen.tryToGrabFishes(this.X , this.Y);\r\n\r\n                //see if a fish was grabbed\r\n                if(fishes.length > 0) this.caught(fishes);\r\n                else this.returnToSurface();\r\n            });\r\n\r\n    }\r\n\r\n    /**\r\n     * Called to return cat to surface.\r\n     */\r\n    public returnToSurface() {\r\n        this._sprite.gotoAndPlay(Cat.ANIMATION.Idle);\r\n\r\n        //remove any lingering tweens\r\n        createjs.Tween.removeTweens(this._sprite);\r\n        const speed = (this.Y / 2) * this.Speed;\r\n        this._catYTween = createjs.Tween.get(this._sprite)\r\n            .wait(150)\r\n            .to({y:20}, speed, createjs.Ease.linear)\r\n            .call(() => {\r\n                //once the surface has been reached, allow x movement again\r\n                this.reachSurface();\r\n            });\r\n    }\r\n\r\n    public caught(fishes:Fish[]) {\r\n        console.log(\"I CAUGHT\");\r\n        if(fishes.length <= 0) return;\r\n        this._isRising = true;  \r\n        \r\n        let hasNewFish = false;\r\n\r\n        fishes.forEach(f => {\r\n            if(this._caughtFish.indexOf(f) != -1) return;\r\n            hasNewFish = true;\r\n            //grab the fish\r\n            f.catch();\r\n\r\n            //add fish to caught array\r\n            this._caughtFish.push(f);\r\n\r\n            //control the fish\r\n            f.Y = this.Y;\r\n        });\r\n        \r\n        console.log(\"I WAS CAUGHT, NOW RISING\");\r\n        console.log(\"FISH CAUGHT SPEED:\", this.Speed);\r\n\r\n        if(!hasNewFish) return;\r\n        \r\n        //if we grabbed a fish...\r\n        //go back up... slowly\r\n        createjs.Tween.removeTweens(this._sprite);\r\n        const speed = this.Y * this.Speed;\r\n        this._catYTween = createjs.Tween.get(this._sprite)\r\n            .wait(250)\r\n            .to({y:-20}, speed, createjs.Ease.linear)\r\n            .call(() => {\r\n                //once the surface has been reached, allow x movement again\r\n                this.reachSurface();\r\n                this._isRising = false;\r\n            });\r\n\r\n    }\r\n    public drop() {\r\n        //release the fish\r\n        this._caughtFish.forEach(f => f.release());\r\n        this._caughtFish = [];\r\n    }\r\n\r\n    /**Called when hit by an enemy. */\r\n    public injure() {\r\n        this._isInjured = true;\r\n        console.log(\"TAKING DAMAGE\");\r\n        //start hurt animation\r\n        //end any current tweening\r\n        createjs.Tween.removeTweens(this._sprite);\r\n        this._sprite.gotoAndPlay(Cat.ANIMATION.Ow);\r\n        this._catYTween = createjs.Tween.get(this._sprite)\r\n            .wait(15)\r\n            .to({y:20}, 500, createjs.Ease.linear)\r\n            .call(() => {\r\n                //once the surface has been reached, allow x movement again\r\n                this.reachSurface();\r\n                this._sprite.gotoAndPlay(Cat.ANIMATION.Idle);\r\n            });\r\n    }\r\n\r\n    /**Called when the cat tickles an enemy. */\r\n    public hitEnemy() {\r\n        this.injure();\r\n        this.drop();\r\n    }\r\n\r\n    public reachSurface() {\r\n        //if we have a fish, send to main logic\r\n        if(this._caughtFish != null) {\r\n            this._caughtFish.forEach(f => {\r\n                this.GameScreen.collectFish(f);\r\n            });\r\n            this._caughtFish = [];\r\n        }\r\n\r\n        //set flags\r\n        this._hasReachedSurface = true;\r\n        this._isInjured = false;\r\n        this._isRising = false;\r\n        this._isGrabbing = false;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    update(gameTime:number) {\r\n        //if our game logic is paused, no FISHING\r\n        if(this.GameScreen.IsGamelogicPaused) return;\r\n\r\n        super.update(gameTime);\r\n\r\n\r\n        //if we are rising, attempt to catch more fish\r\n        if(this._isRising && !this._isInjured) {\r\n            console.log(\"TRY TO GRAB\");\r\n            //try to grab a fish\r\n            const fishes = this.GameScreen.tryToGrabFishes(this.X , this.Y);\r\n            //see if a fish was grabbed\r\n            if(fishes.length > 0)\r\n                this.caught(fishes);\r\n        }\r\n\r\n        //test puffer damage\r\n        if(this._isRising || this._isGrabbing) {\r\n            //don't test again if injured\r\n            if(!this._isInjured) {\r\n                //test for puffer hit\r\n                const hasHitPuffer = this.GameScreen.hasHitAPuffer(this.X, this.Y);\r\n                if(hasHitPuffer) {\r\n                    this.hitEnemy();\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        //drag fish with us if we have any\r\n        if(this._caughtFish != null) {\r\n            this._caughtFish.forEach(f => {\r\n                f.Y = this.Y - 20;\r\n            });\r\n        }\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get GRAB_RANGE() { return 120; }\r\n    public static get ANIMATION() {\r\n        return Object.freeze({\r\n            \"Idle\" : \"kittyIdle\",\r\n            \"Death\" : \"kittyIdle\",\r\n            \"Grab\" : \"kittyIdle\",\r\n            \"Hold\" : \"kittyIdle\",\r\n            \"Ow\" : \"kittyIdle\"\r\n        });\r\n    }\r\n    // public static get ANIMATION() {\r\n    //     return Object.freeze({\r\n    //         \"Idle\" : \"cat_idle\",\r\n    //         \"Death\" : \"cat_death\",\r\n    //         \"Grab\" : \"cat_grab\",\r\n    //         \"Hold\" : \"cat_grab_hold\",\r\n    //         \"Ow\" : \"cat_ow\"\r\n    //     });\r\n    // }\r\n    public get Speed() { \r\n        const caughtFishMult = ((this._caughtFish.length > 0) ? 1 + (this._caughtFish.length + this._fishCaughtMultiplier) : 1);\r\n        console.log(caughtFishMult);\r\n\r\n        return caughtFishMult * this._speed;\r\n    }\r\n    public set Speed(value:number) { this._speed = value; }\r\n}","import { ICreateable, IUpdateable } from \"../Interfaces\";\r\nimport { GameScreen } from \"../screens/GameScreen\";\r\nimport { Game } from \"../Game\";\r\n\r\nexport class Entity implements ICreateable<Entity>, IUpdateable {\r\n    private _gameScreen:GameScreen;\r\n    protected _name:string;\r\n    protected _sprite:createjs.Sprite;\r\n    protected _direction:{ x:number, y:number };\r\n    private _scaling:number;\r\n\r\n    private _isIgnoringCollision:boolean;\r\n    private _ignoreCollisionTimer:number;\r\n\r\n    constructor(gameScreen:GameScreen, spritesheet:createjs.SpriteSheet) {\r\n        this._gameScreen = gameScreen;\r\n        this._sprite = new createjs.Sprite(spritesheet);\r\n        this._direction = { x:1, y:1 };\r\n\r\n        this._isIgnoringCollision = false;\r\n        this._ignoreCollisionTimer = 0;\r\n\r\n        //get the game scale\r\n        this._scaling = this._gameScreen.Game.Scaling;\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public create(container:createjs.Container):Entity {\r\n        // (this._sprite as any).scale = this._scaling;\r\n\r\n        //move to main container\r\n        if(container == null)\r\n            this._gameScreen.Game.Stage.addChild(this._sprite);\r\n        else\r\n            container.addChild(this._sprite);\r\n        return this;\r\n    }\r\n\r\n    public destroy():Entity {\r\n        if(this._sprite == null || this._sprite.parent == null) return null;\r\n\r\n        //remove from main container\r\n        this._sprite.parent.removeChild(this._sprite);\r\n\r\n        return this;\r\n    }\r\n\r\n    public update(gameTime:number) {\r\n\r\n         //listen for collision ignore\r\n        if(this._isIgnoringCollision) {\r\n            this._ignoreCollisionTimer++;\r\n\r\n            if(this._ignoreCollisionTimer > Entity.IGNORE_COLLISION)\r\n                this._isIgnoringCollision = false;\r\n        }\r\n    }\r\n\r\n    protected startIgnoreCollision() {\r\n        this._isIgnoringCollision = true\r\n    }\r\n\r\n    protected testStageBounds(artificialReg:{x:number, y:number} = null) {\r\n        let reg = { x:this._sprite.regX, y:this._sprite.regY };\r\n        if(artificialReg != null) {\r\n            reg = {\r\n                x: (this._direction.x > 0) ? this.Bounds.Width * artificialReg.x : (this.Bounds.Width * (1 - artificialReg.x)),\r\n                y: (this._direction.y > 0) ? this.Bounds.Height * artificialReg.y : (this.Bounds.Height * (1 - artificialReg.y))\r\n            }\r\n        }\r\n        // const bounds = { width:this._game.StageWidth, height: this._game.StageHeight };\r\n        const bounds = { width:this._gameScreen.Game.StageWidth, height: this._gameScreen.Game.StageHeight };\r\n        const extents = {   \r\n            x:(this._direction.x > 0) ? (this.Bounds.Width - reg.x) : -reg.x, \r\n            y:(this._direction.y > 0) ? (this.Bounds.Height - reg.y) : -reg.y \r\n        };\r\n\r\n        //test walls\r\n        if((this.X + extents.x) > bounds.width) return Entity.HIT.Right;\r\n        else if(this.X + extents.x < 0) return Entity.HIT.Left;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get IGNORE_COLLISION() { return 20; }\r\n    public static get HIT() { return Object.freeze({Top:0, Right:1, Bottom:2, Left:3}); }\r\n\r\n    protected get GameScreen() { return this._gameScreen; }\r\n\r\n    public get Sprite() { return this._sprite; }\r\n    public get Parent() { return this._sprite.parent; }\r\n\r\n    public get X() { return this._sprite.x; }\r\n    public set X(value) { this._sprite.x = value; }\r\n    public get Y() { return this._sprite.y; }\r\n    public set Y(value) { this._sprite.y = value; }\r\n\r\n    public set DirectionX(value) { \r\n        const lastX = this._direction.x;\r\n        this._direction.x = value; \r\n        //flip sprite if our direction has changed\r\n        if(this._direction.x != lastX) this._sprite.scaleX *= -1;\r\n    }\r\n\r\n    public get Bounds() { \r\n        let bounds = this._sprite.getBounds();\r\n        return  { Width:bounds.width, Height:bounds.height };\r\n    }\r\n\r\n    public get IsIgnoringCollision() { return this._isIgnoringCollision; }\r\n}","import { Game } from \"../Game\";\r\nimport { Entity } from \"./Entity\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { IEnableable } from \"../Interfaces\";\r\nimport { Logging } from \"../Functions\";\r\nimport { GameScreen } from \"../screens/GameScreen\";\r\n\r\nexport class Fish extends Entity implements IEnableable {\r\n    private _speed:number;\r\n    private _naturalY:number;\r\n\r\n    private _isCaught:boolean;\r\n    private _isReturning:boolean;\r\n\r\n    constructor(gameScreen:GameScreen, spritesheet?:createjs.SpriteSheet) {\r\n        super(gameScreen, spritesheet || LoadManager.Spritesheets.Peeper_Spritesheet);\r\n        this._speed = 1;\r\n\r\n        this._isCaught = false;\r\n        this._isReturning = false;\r\n\r\n        this._sprite.gotoAndPlay(Fish.ANIMATION.Slow);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    \r\n\r\n\r\n    /***************/\r\n    /*   ACTIONS   */\r\n    /***************/\r\n    public setNaturalY() {\r\n        this._naturalY = this.Y;\r\n    }\r\n\r\n    public catch() {\r\n        if(this._isCaught) return;\r\n        \r\n        Logging.message(\"Fish was grabbed!\");\r\n        this._isCaught = true;\r\n\r\n        this._sprite.gotoAndPlay(Fish.ANIMATION.Panic);\r\n    }\r\n\r\n    public release() {\r\n        this._isCaught = false;\r\n        //return to natural y position\r\n        this._isReturning = true;\r\n    }\r\n\r\n\r\n    /**Test to see if global position hits sprite. */\r\n    public testHit(x:number, y:number):boolean {\r\n        return this._sprite.hitTest(x, y);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    destroy() {\r\n        //reset flags\r\n        this._isCaught = false;\r\n        //reset animations\r\n        this._sprite.gotoAndPlay(Fish.ANIMATION.Slow);\r\n\r\n        this.disable();\r\n        return super.destroy();\r\n    }\r\n\r\n    update(gameTime:number) {\r\n        super.update(gameTime);\r\n\r\n        //move the fishy\r\n        if(!this._isCaught)\r\n            this.X += this._speed * gameTime * this._direction.x;\r\n        //--if returning, swim to natural y\r\n        if(this._isReturning) {\r\n            //if we are still far away, swim!\r\n            if(Math.abs(this.Y - this._naturalY) > 30) {\r\n                const isNeg = this.Y > this._naturalY;\r\n                this.Y += (isNeg) ? -10 : 10;\r\n            }\r\n            else {\r\n                this._isReturning = false;\r\n                this._sprite.gotoAndPlay(Fish.ANIMATION.Slow);\r\n            }\r\n        }\r\n\r\n        //test collision\r\n        if(!this.IsIgnoringCollision) {\r\n\r\n            //if fish hits the edge, flip direction\r\n            const hit = this.testStageBounds({x:0.5, y:0.5});\r\n            switch(hit) {\r\n                case Entity.HIT.Right:\r\n                    this._direction.x *= -1;\r\n                    this._sprite.scaleX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X -= 5 - this.Bounds.Width;\r\n                    break;\r\n                case Entity.HIT.Left:\r\n                    this._direction.x *= -1;\r\n                    this._sprite.scaleX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X += 5 - this.Bounds.Width;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    enable() {\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get ANIMATION() {\r\n        return Object.freeze({\r\n            \"Slow\" : \"fishIdle\",\r\n            \"Fast\" : \"fishIdle\",\r\n            \"Panic\" : \"fishPanic\"\r\n        });\r\n    }\r\n    public get Speed() { return this._speed; }\r\n    public set Speed(value:number) { this._speed = value; }\r\n}","import { Game } from \"../Game\";\r\nimport { Entity } from \"./Entity\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { IEnableable } from \"../Interfaces\";\r\nimport { Logging } from \"../Functions\";\r\nimport { GameScreen } from \"../screens/GameScreen\";\r\nimport { Cat } from \"./Cat\";\r\n\r\nexport class Puffer extends Entity implements IEnableable {\r\n    public get Type() { return \"Puffer\"; }\r\n    \r\n    private _speed:number;\r\n    private _cooldown:number = 40;\r\n    private _currentCooldown:number = 0;\r\n\r\n    private _isCaught:boolean;\r\n\r\n    constructor(gameScreen:GameScreen) {\r\n        super(gameScreen, LoadManager.Spritesheets.Puffer_Spritesheet);\r\n        this._speed = 1;\r\n\r\n        this._isCaught = false;\r\n\r\n        this._sprite.gotoAndPlay(Puffer.ANIMATION.Idle);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    \r\n\r\n\r\n    /***************/\r\n    /*   ACTIONS   */\r\n    /***************/\r\n    public puff() {\r\n        this._sprite.gotoAndPlay(Puffer.ANIMATION.Angry);\r\n        //start cooldown\r\n        this._currentCooldown = this._cooldown;\r\n    }\r\n\r\n\r\n    /**Test to see if global position hits sprite. */\r\n    public testHit(x:number, y:number, cat:Cat):boolean {\r\n        return (x >= this.X - cat.Bounds.Width && x <= this.X + this.Bounds.Width \r\n            && y >= this.Y - cat.Bounds.Height && y <= this.Y + this.Bounds.Height) ;\r\n        // return this._sprite.hitTest(x, y);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    destroy() {\r\n        //reset flags\r\n        this._isCaught = false;\r\n        //reset animations\r\n        this._sprite.gotoAndPlay(Puffer.ANIMATION.Idle);\r\n\r\n        this.disable();\r\n        return super.destroy();\r\n    }\r\n\r\n    update(gameTime:number) {\r\n        super.update(gameTime);\r\n\r\n        //move the fishy\r\n        if(!this._isCaught)\r\n            this.X += this._speed * gameTime * this._direction.x;\r\n\r\n        //do cooldown\r\n        if(this._currentCooldown >= 0) {\r\n            this._currentCooldown--;\r\n            if(this._currentCooldown == 0) {\r\n                //reset animations\r\n                this._sprite.gotoAndPlay(Puffer.ANIMATION.Recover);\r\n            }\r\n        }\r\n\r\n        //test collision\r\n        if(!this.IsIgnoringCollision) {\r\n\r\n            //if fish hits the edge, flip direction\r\n            const hit = this.testStageBounds({x:0.5, y:0.5});\r\n            switch(hit) {\r\n                case Entity.HIT.Right:\r\n                    this._direction.x *= -1;\r\n                    this._sprite.scaleX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X -= 5 - this.Bounds.Width;\r\n                    break;\r\n                case Entity.HIT.Left:\r\n                    this._direction.x *= -1;\r\n                    this._sprite.scaleX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X += 5 - this.Bounds.Width;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    enable() {\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get ANIMATION() {\r\n        return Object.freeze({\r\n            \"Idle\" : \"pufferIdle\",\r\n            \"Angry\" : \"pufferAngry\",\r\n            \"Recover\" : \"pufferRecover\"\r\n        });\r\n    }\r\n    public get Speed() { return this._speed; }\r\n    public set Speed(value:number) { this._speed = value; }\r\n}","import { LoadManager } from \"../../managers/LoadManager\";\r\nimport { Fish } from \"../Fish\";\r\nimport { GameScreen } from \"../../screens/GameScreen\";\r\n\r\nexport class Persephone extends Fish {\r\n\r\n    constructor(gameScreen:GameScreen) {\r\n        super(gameScreen, LoadManager.Spritesheets.Persephone_Spritesheet);\r\n        this._sprite.gotoAndPlay(Persephone.SPEC_ANIMATION.Idle);\r\n    }\r\n\r\n\r\n    public static get SPEC_ANIMATION() {\r\n        return Object.freeze({\r\n            \"Idle\" : \"persIdle\"\r\n        });\r\n    }\r\n\r\n}","import { Game } from \"./Game\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    const game = new Game(document.getElementById(\"game-canvas\") as HTMLCanvasElement);\r\n});","import { Screen } from \"../screens/Screen\";\r\n\r\nexport interface WorldsData {\r\n    worlds:LevelData[];\r\n}\r\n\r\nexport interface LevelData {\r\n    name:string;\r\n    tutorials?:string[];\r\n    background?:string;\r\n    data:any[];\r\n    duration?:number;\r\n    showScore?:boolean;\r\n    showRemainingFish?:boolean;\r\n}\r\n\r\nexport class DataManager {\r\n    private static _worldsData:WorldsData;\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Loads in the worlds data! */\r\n    public static loadWorldsData(fileLocation:string) {\r\n        return new Promise<WorldsData>(async(res, rej) => {\r\n            await fetch(fileLocation)\r\n                .then(blob => blob.json())\r\n                .then(json => {\r\n                    this._worldsData = json;\r\n                    res(this._worldsData);\r\n                })\r\n                .catch(err => {\r\n                    rej(\"Could not load world data! \" + err);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**Returns the level data received by the given index. */\r\n    public static getLevelDataByIndex(index:number) {\r\n        //flatten level data, and get data\r\n        let flatten = [].concat.apply([], DataManager._worldsData.worlds);\r\n        return flatten[index];\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get WorldsData():WorldsData { return DataManager._worldsData; }\r\n}","export class LoadManager {\r\n    public static get ASSETS_LOADED():string { return \"onAssetsLoaded\"; }\r\n    public static get ASSETS_FAILED():string { return \"onAssetsFailed\"; }\r\n    public static get ASSETS_UPDATED():string { return \"onAssetsUpdated\"; }\r\n\r\n    public static Spritesheets:{ [key:string]:createjs.SpriteSheet } = {};\r\n    public static Images:{ [key:string]:createjs.Bitmap } = {};\r\n\r\n    private static _stage:createjs.StageGL;\r\n    private static _preloadManager:createjs.LoadQueue;\r\n    private static _sheetsTotal:number = 0;\r\n    private static _sheetsLoaded:number = 0;\r\n\r\n    private static _percentage:number = 0;\r\n    private static _totalAssetsLoaded:number = 0;\r\n    private static _totalAssets:number = 0;\r\n\r\n    private static AssetsLoadedEvent:any = new (createjs as any).Event(LoadManager.ASSETS_LOADED, false, true);\r\n    private static AssetsFailedEvent:any = new (createjs as any).Event(LoadManager.ASSETS_FAILED, false, true);\r\n    private static AssetsUpdatedEvent:any = new (createjs as any).Event(LoadManager.ASSETS_UPDATED, false, true);\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public static reset() {\r\n        LoadManager._sheetsTotal = 0;\r\n        LoadManager._sheetsLoaded = 0;\r\n\r\n        LoadManager._percentage = 0;\r\n        LoadManager._totalAssetsLoaded = 0;\r\n        LoadManager._totalAssets = 0;\r\n    }\r\n\r\n    public static loadAssets(src:string, stage:createjs.StageGL) {\r\n        LoadManager.reset();\r\n        LoadManager._stage = stage;\r\n\r\n        return new Promise(async(res, rej) => {\r\n            LoadManager._preloadManager = new createjs.LoadQueue();\r\n\r\n            //setup sound controllers\r\n            createjs.Sound.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin, createjs.FlashAudioPlugin]);\r\n            createjs.Sound.alternateExtensions = [\"mp3\",\"wav\"];\r\n            LoadManager._preloadManager.installPlugin(createjs.Sound);\r\n\r\n            //setup listeners\r\n            (LoadManager._preloadManager as any).on(\"fileload\", LoadManager._onLoaded, LoadManager);\r\n            (LoadManager._preloadManager as any).on(\"complete\", LoadManager._onComplete, LoadManager);\r\n            (LoadManager._preloadManager as any).on(\"error\", LoadManager._onError, LoadManager);\r\n\r\n            //get the manifest\r\n            fetch(src)\r\n                .then(blob => blob.json())\r\n                .then(data => {\r\n                    //load the manifest\r\n                    LoadManager._preloadManager.setMaxConnections(1);\r\n                    LoadManager._preloadManager.loadManifest(data);\r\n\r\n                    (LoadManager._stage as any).addEventListener(LoadManager.ASSETS_LOADED, () => {\r\n                        res();\r\n                    });\r\n                })\r\n                .catch(() => {\r\n                    LoadManager.emitErrorEvent();\r\n                    rej(\"Could not load assets!\");\r\n                });\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    public static emitLoadedEvent() {\r\n        if(LoadManager._stage != null) (LoadManager._stage as any).dispatchEvent(LoadManager.AssetsLoadedEvent);\r\n    }\r\n    public static emitErrorEvent() {\r\n        if(LoadManager._stage != null) (LoadManager._stage as any).dispatchEvent(LoadManager.AssetsFailedEvent);\r\n    }\r\n    public static emitUpdatedEvent() {\r\n        LoadManager._percentage = parseFloat((LoadManager._preloadManager.getItems(true).length / LoadManager._preloadManager.getItems(false).length).toFixed(2));\r\n        if(LoadManager._stage != null) (LoadManager._stage as any).dispatchEvent(LoadManager.AssetsUpdatedEvent);\r\n    }\r\n\r\n\r\n    private static _loadedSheet(name:string, sheet:createjs.SpriteSheet) {\r\n        LoadManager.Spritesheets[name] = sheet;\r\n\r\n        LoadManager._sheetsLoaded++;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    private static _onLoaded(e) {\r\n\r\n        console.log(\"asset loaded: \" + e.item.src + \" type: \" + e.item.type);\r\n\r\n        switch(e.item.type) {\r\n            case (createjs as any).Types.JAVASCRIPT: {\r\n                //load the spritesheet\r\n                LoadManager._sheetsTotal++;\r\n                \r\n                const sheet = (window[e.item.id] as any)._SpriteSheet;\r\n\r\n                // listen for spritesheet to load\r\n                if(!sheet.complete) {\r\n                    sheet.on(\"complete\", (ev:any) => {\r\n                        LoadManager._loadedSheet(e.item.id, sheet);\r\n                        ev.remove();\r\n                    })\r\n                }\r\n                else LoadManager._loadedSheet(e.item.id, sheet);\r\n                break\r\n            }\r\n            case (createjs as any).Types.IMAGE: {\r\n                //build the bitmap\r\n                LoadManager.Images[e.item.id] = new createjs.Bitmap(e.item.src);\r\n            }\r\n        }\r\n\r\n\r\n\r\n        //update event\r\n        LoadManager.emitUpdatedEvent();\r\n    }\r\n\r\n    private static _onComplete(e) {\r\n        //remove all preLoadManager events\r\n        (LoadManager._preloadManager as any).removeAllEventListeners();\r\n        \r\n        //make sure all spritesheets are loaded\r\n        if(LoadManager._sheetsLoaded < LoadManager._sheetsTotal) {\r\n            const loadInterval = setInterval((ev:any) => {\r\n                //see if they are loaded\r\n                if(LoadManager._sheetsLoaded >= LoadManager._sheetsTotal) {\r\n                    e.remove();\r\n                    // window.clearInterval(loadInterval);\r\n                    LoadManager.emitLoadedEvent();\r\n                }\r\n            }, 100)\r\n        }\r\n        else LoadManager.emitLoadedEvent();\r\n    }\r\n\r\n    private static _onError(e) {\r\n        LoadManager.emitErrorEvent();\r\n    }\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get Percentage():number { return LoadManager._percentage; }\r\n    \r\n\r\n\r\n\r\n}","import { Screen } from \"../screens/Screen\";\r\n\r\nexport class ScreenManager {\r\n    private static _screensLookup:{ [key:string]:Screen } = { };\r\n    private static _currentScreen:Screen = null;\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Registers a screen into the Screen Manager.  Uses a key to associate it. */\r\n    public static registerScreen(key:string, screen:Screen):void {\r\n        //if we don't have this screen, add it\r\n        if(ScreenManager._screensLookup[key] == null)\r\n            ScreenManager._screensLookup[key] = screen;\r\n    }\r\n\r\n    /**Unregisters a screen from the Screen Manager. */\r\n    public static unregisterScreen(key:string):boolean {\r\n        if(ScreenManager._screensLookup[key] == null) return false;\r\n\r\n        ScreenManager._screensLookup[key] = null;\r\n        delete ScreenManager._screensLookup[key];\r\n        return true;\r\n    }\r\n\r\n    /**Sets the current screen.  Can be done with the screen itself or an associative key. */\r\n    public static setCurrentScreen(screen:string | Screen, stage:createjs.StageGL):Promise<void> {\r\n        let tempScreen = null;\r\n        if(screen instanceof Screen) tempScreen = screen;\r\n        else tempScreen = ScreenManager._screensLookup[screen];\r\n\r\n        //if we did not find a screen, do not follow through\r\n        if(tempScreen == null) return Promise.resolve();\r\n\r\n        let promises = [];\r\n        //if we have a previous screen, wait for it to fade out\r\n        if(ScreenManager._currentScreen != null)\r\n        promises.push(\r\n            new Promise(async(res) => {\r\n                //fade out\r\n                createjs.Tween\r\n                    .get(ScreenManager._currentScreen.Container)\r\n                    .to({ alpha:0 }, 500, createjs.Ease.linear)\r\n                    .call(() => {\r\n                        ScreenManager._currentScreen.destroy();\r\n                        ScreenManager._currentScreen.disable();\r\n                        res();\r\n                    });\r\n            })\r\n        );\r\n\r\n\r\n        //wait for certain actions to finish\r\n        return new Promise(async(res) => {\r\n            //wait for promises to finish\r\n            await Promise.all(promises);\r\n\r\n            //now add in the new one\r\n            ScreenManager._currentScreen = tempScreen;\r\n            ScreenManager._currentScreen.create(stage);\r\n            ScreenManager._currentScreen.Container.alpha = 0;\r\n            ScreenManager._currentScreen.disable(); //disable until ready\r\n            console.log(\"FADE IN\")\r\n            //fade in\r\n            createjs.Tween\r\n                .get(ScreenManager._currentScreen.Container)\r\n                .to({ alpha:1 }, 1200, createjs.Ease.linear)\r\n                .call(() => {\r\n                    console.log(\"DONE\");\r\n                    ScreenManager._currentScreen.enable();\r\n                    res();\r\n                });\r\n\r\n        });\r\n    }\r\n\r\n    public static getScreenByKey(key:string):Screen {\r\n        return ScreenManager._screensLookup[key];\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get AllScreens() { return ScreenManager._screensLookup; }\r\n    public static get CurrentScreen() { return ScreenManager._currentScreen; }\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Container } from \"../ui/display/Container\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { Game } from \"../Game\";\r\n\r\nexport class EndScreen extends Screen {\r\n    private _game:Game;\r\n    private _splash:createjs.Shape;\r\n    private _buttonsContainer:Container;\r\n\r\n    private _highScoreSpr:createjs.Sprite;\r\n    private _completeSpr:createjs.DisplayObject;\r\n    private _failSpr:createjs.DisplayObject;\r\n    private _scoreContainer:Container;\r\n\r\n    //scorebox holders\r\n    private _fishRemainContainer:createjs.Container;\r\n    private _timeContainer:createjs.Container;\r\n    private _combosContainer:createjs.Container;\r\n\r\n    //flags\r\n    private _isFail:boolean;\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n\r\n        this._game = game;\r\n        this._isFail = false;\r\n\r\n        //layout stuff\r\n        const bg = new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"bg\");\r\n        this._container.addChild(bg);\r\n\r\n        this._buttonsContainer = new Container(Container.LAYOUT_OPTIONS.ColumnLeftBottom);\r\n        this._buttonsContainer.addMany({\r\n            btnTryAgain : new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"btnTryAgain\"),\r\n            btnNextLevel : new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"btnNextLevel\"),\r\n            btnMainMenu : new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"btnMainMenu\"),\r\n        });\r\n        this._container.addChild(this._buttonsContainer.Container);\r\n\r\n        // //conditionals\r\n        // //--high score\r\n        // this._highScoreSpr = new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"highScore\");\r\n        // this._highScoreSpr.x = this._game.StageWidth / 2 - (this._highScoreSpr.getBounds().width / 2);\r\n        // this._highScoreSpr.y = 60;\r\n        // this._container.addChild(this._highScoreSpr);\r\n        //--conditional text\r\n        this._completeSpr = new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"complete\");\r\n        this._failSpr = new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"failure\");\r\n        this._completeSpr.x = this._game.StageWidth / 2 - (this._completeSpr.getBounds().width / 2);\r\n        this._completeSpr.y = 220;\r\n        this._failSpr.x = this._game.StageWidth / 2 - (this._failSpr.getBounds().width / 2);\r\n        this._failSpr.y = this._game.StageHeight * 0.45;\r\n        this._container.addChild(this._completeSpr);\r\n        this._container.addChild(this._failSpr);\r\n        // --score container\r\n        // this._scoreContainer = new Container(Container.LAYOUT_OPTIONS.ColumnCenterCenter);\r\n        // this._scoreContainer.addMany({\r\n        //     fishRemain: new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"fishRemain\"),\r\n        //     time: new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"time\"),\r\n        //     combos: new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"combos\"),\r\n        //     line: new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"line\")\r\n        // });\r\n        // const scoreX = 250;\r\n        // this._scoreContainer.Sprites[\"fishRemain\"].x = scoreX - (this._scoreContainer.Sprites[\"fishRemain\"].getBounds().width);\r\n        // this._scoreContainer.Sprites[\"time\"].x = scoreX - (this._scoreContainer.Sprites[\"time\"].getBounds().width);\r\n        // this._scoreContainer.Sprites[\"combos\"].x = scoreX - (this._scoreContainer.Sprites[\"combos\"].getBounds().width);\r\n        // this._scoreContainer.Sprites[\"line\"].x = this._game.StageWidth - this._scoreContainer.Sprites[\"line\"].getBounds().width - 30;\r\n        // this._scoreContainer.Sprites[\"line\"].y += 15;\r\n        // this._container.addChild(this._scoreContainer.Container);\r\n\r\n        //line them up\r\n        // this._fishRemainContainer = new createjs.Container();\r\n        // this._timeContainer = new createjs.Container();\r\n        // this._combosContainer = new createjs.Container();\r\n        // this._container.addChild(this._fishRemainContainer);\r\n        // this._container.addChild(this._timeContainer);\r\n        // this._container.addChild(this._combosContainer);\r\n\r\n        // this._fishRemainContainer.x = scoreX + 20;\r\n        // this._fishRemainContainer.y = this._scoreContainer.Sprites[\"fishRemain\"].y;\r\n        // this._timeContainer.x = scoreX + 20;\r\n        // this._timeContainer.y = this._scoreContainer.Sprites[\"time\"].y;\r\n        // this._combosContainer.x = scoreX + 20;\r\n        // this._combosContainer.y = this._scoreContainer.Sprites[\"combos\"].y;\r\n\r\n\r\n        // const peeper = new createjs.Sprite(LoadManager.Spritesheets.Kitty_Spritesheet);\r\n        // peeper.gotoAndPlay(\"kittyIdle\");\r\n        // this._container.addChild(peeper);\r\n\r\n        \r\n        \r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    create(stage:createjs.StageGL):Screen {\r\n        \r\n        \r\n        //for testing\r\n        (this._container as any).on(\"click\", (e) => {\r\n            ScreenManager.setCurrentScreen(\"menu\", stage);\r\n        }, this, true);       \r\n        \r\n\r\n        return super.create(stage);\r\n    }\r\n\r\n\r\n    enable() {\r\n        super.enable();\r\n\r\n        //fake score data\r\n        // this._game.changeCurrentScore({ totalFish:10, time:150, combos:2 });\r\n\r\n        // //toggle data based on current level stats\r\n        // const levelData = this._game.CurrentLevelData;\r\n        // //look for flags\r\n        // const showFishRemain = (levelData.showRemainingFish != null && !levelData.showRemainingFish) ? false : true;\r\n        // const showScore = (levelData.showScore != null && !levelData.showScore) ? false : true;\r\n        // const showTime = (levelData.duration != null);\r\n\r\n\r\n        // //layout score data\r\n        // const { totalFish, time, combos } = this._game.CurrentScoreData;\r\n        // const txtFishRemain = Sprites.generateBitmapText((showFishRemain) ? totalFish.toString() : \"-\", LoadManager.Spritesheets.TypographyWhite);\r\n        // this._fishRemainContainer.addChild(txtFishRemain);\r\n        // const txtTime = Sprites.generateBitmapText((showTime) ? time.toString() : \"-\", LoadManager.Spritesheets.TypographyWhite);\r\n        // this._timeContainer.addChild(txtTime);\r\n        // const txtCombos = Sprites.generateBitmapText((showScore) ? combos.toString() : \"-\", LoadManager.Spritesheets.TypographyWhite);\r\n        // this._combosContainer.addChild(txtCombos);\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n        //kill score containers\r\n        // this._fishRemainContainer.removeAllChildren();\r\n        // this._timeContainer.removeAllChildren();\r\n        // this._combosContainer.removeAllChildren();\r\n\r\n        //toggle fail/success\r\n        this._completeSpr.visible = !this._isFail;\r\n        this._failSpr.visible = this._isFail;\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n}","import { TutorialCreator } from \"./TutorialCreator\";\r\nimport { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { ObjectPool } from \"../ObjectPool\";\r\nimport { Fish } from \"../entities/Fish\";\r\nimport { Persephone } from \"../entities/specials/Persephone\";\r\nimport { Puffer } from \"../entities/Puffer\";\r\nimport { Cat } from \"../entities/Cat\";\r\nimport { Game } from \"../Game\";\r\nimport { Container } from \"../ui/display/Container\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { Logging } from \"../Functions\";\r\nimport { LevelData } from \"../managers/DataManager\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { GameScore } from \"../ui/partials/GameScore\";\r\n\r\nexport class GameScreen extends Screen {\r\n    private _game:Game;\r\n\r\n    //create containers\r\n    private _staticContainer:Container;\r\n    private _fishContainer:createjs.Container;\r\n    private _pufferContainer:createjs.Container;\r\n\r\n    private _winContainer:createjs.Container;\r\n    private _winBanner:createjs.Shape;\r\n    private _winText:createjs.BitmapText;\r\n\r\n    private _gameScore:GameScore;\r\n    private _tutorialCreator:TutorialCreator;\r\n\r\n    private _cat:Cat;\r\n    private _fishes:Fish[];\r\n    private _puffers:Puffer[];\r\n\r\n    private _remainingFish:number;\r\n\r\n    private _pauseLogic:Boolean;\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n        this._game = game;\r\n        this._fishes = [];\r\n        this._puffers = [];\r\n        this._remainingFish = -1;\r\n\r\n        //create object pool\r\n        ObjectPool.createPoolObject(new Cat(this), POOL.CAT)\r\n        for(let i = 0; i < 120; i++) {\r\n            ObjectPool.createPoolObject(new Fish(this), POOL.FISH);\r\n        }\r\n        for(let i = 0; i < 30; i++) {\r\n            ObjectPool.createPoolObject(new Puffer(this), POOL.PUFFERFISH)\r\n        }\r\n        ObjectPool.createPoolObject(new Persephone(this), POOL.PERSEPHONE);\r\n\r\n\r\n        //pool out static kitty\r\n        this._cat = (ObjectPool.checkout(POOL.CAT) as Cat);\r\n        this._cat.X = 290;\r\n        this._cat.Y = 70;\r\n\r\n        //create containers\r\n        this._staticContainer = new Container();\r\n        this._staticContainer.addMany({\r\n            bg : new createjs.Sprite(LoadManager.Spritesheets.BG_Spritesheet, \"bg1\")\r\n        });\r\n\r\n        this._fishContainer = new createjs.Container();\r\n        this._pufferContainer = new createjs.Container();\r\n\r\n        this._winContainer = new createjs.Container();\r\n\r\n        this._gameScore = new GameScore(this._game);\r\n        this._tutorialCreator = new TutorialCreator(this._game, this);\r\n\r\n        this._pauseLogic = false;\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n\r\n    /**Attempts to grab a fish.  Returns any fish that are touching the global position. */\r\n    public tryToGrabFishes(x:number, y:number):Fish[] {\r\n        let fishes = [];\r\n\r\n\r\n        const hitObjects = this._container.getObjectsUnderPoint(x, y, 0);\r\n        for(let i = 0; i < this._fishes.length; i++) {\r\n            const fish = this._fishes[i];\r\n            if(hitObjects.indexOf(fish.Sprite) != -1) {\r\n                fishes.push(fish);\r\n            }\r\n        }\r\n\r\n        return fishes;\r\n\r\n    }\r\n\r\n    /**Tests to see if we hit a puffer. */\r\n    public hasHitAPuffer(x:number, y:number):Boolean {\r\n        // console.log(\"TESTING PUFF\");\r\n\r\n        let hasHitPuffer = false;\r\n        const hitObjects = this._container.getObjectsUnderPoint(x, y, 0);\r\n        for(let i = 0; i < this._puffers.length; i++) {\r\n            if(hitObjects.indexOf(this._puffers[i].Sprite) != -1) {\r\n                console.log (\"I HIT A PUFF\");\r\n                this._puffers[i].puff();\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public collectFish(fish:Fish) {\r\n        //get fish\r\n        Logging.success(\"GOT FISH!\");\r\n\r\n        const killedFish = fish.destroy();\r\n\r\n        //decrement fish counter -- make sure we didn't make an error\r\n        if(killedFish != null) {\r\n            this._remainingFish--;\r\n            this._fishes.splice(this._fishes.indexOf(killedFish as Fish), 1);\r\n\r\n            //if all our fish are gone, end the game!\r\n            if(this._remainingFish <= 0) {\r\n                //win game!\r\n                Logging.success(\"GAME IS OVER!\");\r\n                //call win\r\n                this.win();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public win() {\r\n        //disable controls\r\n        this.disable();\r\n        //set the score\r\n        this._game.changeCurrentScore({\r\n            totalFish: this._fishes.length,\r\n            combos: 10,\r\n            time: 100\r\n        });\r\n        \r\n        //show win banner\r\n        createjs.Tween.get(this._winContainer)\r\n            .to({y:this._game.StageHeight / 2 - 25}, 600, createjs.Ease.elasticOut)\r\n            .wait(2000)\r\n            .call(() => {\r\n                //transition to end screen\r\n                ScreenManager.setCurrentScreen(\"end\", this._game.Stage);\r\n                // ScreenManager.setCurrentScreen(\"menu\", this._game.Stage);\r\n\r\n                //reset game data\r\n                this.reset();\r\n            });\r\n    }\r\n\r\n    public pauseGameLogic() {\r\n        this._pauseLogic = true;\r\n    }\r\n\r\n    public unpauseGameLogic() {\r\n        this._pauseLogic = false;\r\n    }\r\n\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n        super.create(stage);\r\n        //add stuff\r\n        this._staticContainer.checkoutSprites();\r\n        this._staticContainer.Sprites.bg.y = 0;\r\n        this._container.addChild(this._staticContainer.Container);\r\n\r\n        this._container.addChild(this._fishContainer);\r\n        this._container.addChild(this._pufferContainer);\r\n\r\n        //add conditional text\r\n        this._winBanner = new createjs.Shape();\r\n        this._winBanner.graphics.beginFill(\"black\");\r\n        this._winBanner.graphics.drawRect(0, 0, this._game.StageWidth, 50);\r\n        this._winBanner.cache(0, 0, this._game.StageWidth, 50);\r\n        this._winContainer.addChild(this._winBanner);\r\n        this._winText = Sprites.generateBitmapText(\"Win!\", LoadManager.Spritesheets.TypographyWhite);\r\n        this._winContainer.addChild(this._winText);\r\n        this._winText.x = (this._game.StageWidth / 2) - (this._winText.getBounds().width / 2);\r\n\r\n        this._container.addChild(this._winContainer);\r\n        this._winContainer. y = this._game.StageHeight + 50;\r\n        this._winContainer.mouseEnabled = false;\r\n\r\n        \r\n        this._cat.create(this._container);\r\n\r\n\r\n        //testing\r\n        // const puffer = new createjs.Sprite(LoadManager.Spritesheets.Puffer_Spritesheet, \"pufferIdle\");\r\n        // puffer.x = 100;\r\n        // puffer.y = 200;\r\n        // (puffer as any).on(\"click\", () => {\r\n        //     puffer.gotoAndPlay(\"pufferAngry\")\r\n        // })\r\n        // this._container.addChild(puffer);\r\n\r\n\r\n        //add level data if it exists\r\n        if(this._game.CurrentLevelData != null) {\r\n            //load in critters\r\n            for(let i = 0; i < this._game.CurrentLevelData.data.length; i++) {\r\n                const data = this._game.CurrentLevelData.data[i];\r\n                switch(data.id) {\r\n                    case POOL.FISH:\r\n                    case POOL.PERSEPHONE:\r\n                        const fish = (ObjectPool.checkout(data.id) as Fish);\r\n                        fish.create(this._fishContainer);\r\n                        if(data.speed != null) fish.Speed = data.speed; //set variables\r\n                        if(data.x != null) fish.X = data.x * this._game.Scaling;\r\n                        if(data.y != null) fish.Y = data.y * this._game.Scaling;\r\n                        // if(data.x != null) fish.X = data.x;\r\n                        // if(data.y != null) fish.Y = data.y;\r\n                        if(data.flip != null && data.flip) fish.DirectionX = -1;\r\n                        fish.setNaturalY();\r\n                        this._fishes.push(fish);\r\n                        break;\r\n                    case POOL.PUFFERFISH:\r\n                        const puffer = (ObjectPool.checkout(POOL.PUFFERFISH) as Puffer);\r\n                        puffer.create(this._pufferContainer);\r\n                        if(data.speed != null) puffer.Speed = data.speed; //set variables\r\n                        if(data.x != null) puffer.X = data.x * this._game.Scaling;\r\n                        if(data.y != null) puffer.Y = data.y * this._game.Scaling;\r\n                        if(data.flip != null && data.flip) puffer.DirectionX = -1;\r\n                        this._puffers.push(puffer);\r\n                }      \r\n            }\r\n\r\n            //set fish total\r\n            this._remainingFish = this._fishes.length;\r\n        }\r\n        //get the level tutorials\r\n        if(this._game.CurrentLevelData.tutorials != null) {\r\n            this._tutorialCreator.queueTutorials(this._game.CurrentLevelData.tutorials);\r\n        }\r\n        //get the level background\r\n        if(this._game.CurrentLevelData.background != null) {\r\n            (this._staticContainer.Sprites[\"bg\"] as createjs.Sprite).gotoAndStop(this._game.CurrentLevelData.background);\r\n        }\r\n        else {\r\n            (this._staticContainer.Sprites[\"bg\"] as createjs.Sprite).gotoAndStop(\"bg1\");\r\n        }\r\n\r\n\r\n        //add the score\r\n        // this._gameScore.Container.y = this._game.StageHeight - 40;\r\n        // this._container.addChild(this._gameScore.Container);\r\n\r\n\r\n        //update the game HUD for this round\r\n        const levelData = this._game.CurrentLevelData;\r\n        console.log(this._game.CurrentLevelData);\r\n        const showScore = (levelData.showScore != null && !levelData.showScore) ? false : true;\r\n        const showTimer = (levelData.duration != null);\r\n        const showFishRemain = (levelData.showRemainingFish != null && !levelData.showRemainingFish) ? false : true;\r\n        this._gameScore.startHUD(showScore, showFishRemain, showTimer);\r\n\r\n        return null;\r\n    }\r\n\r\n    public destroy() {\r\n        this._cat.destroy();\r\n        this._fishes.forEach(f => {\r\n            f.destroy();\r\n            ObjectPool.return(f);\r\n        });\r\n        this._puffers.forEach(f => {\r\n            f.destroy();\r\n            ObjectPool.return(f);\r\n        });\r\n\r\n        ObjectPool.releaseAllObjects();\r\n\r\n        this._fishContainer.removeAllChildren();\r\n        this._pufferContainer.removeAllChildren();\r\n\r\n        this._fishes = [];\r\n\r\n        return super.destroy();\r\n    }\r\n\r\n    public update(gameTime:number) {\r\n        //if our logic is paused, do not do game loop\r\n        if(this._pauseLogic) return;\r\n\r\n        const normalizedTime = Math.min(1, gameTime) + 0.5;\r\n\r\n        //update entities\r\n        this._fishes.forEach(fish => {\r\n            fish.update(normalizedTime);\r\n        });\r\n        this._puffers.forEach(puffer => {\r\n            puffer.update(normalizedTime);\r\n        });\r\n\r\n        this._cat.update(normalizedTime);\r\n\r\n        //update the score\r\n        this._gameScore.update(gameTime);\r\n\r\n        super.update(gameTime);\r\n    }\r\n\r\n    public enable() {\r\n        (this._container as any).on(\"click\", this._cat.grab, this._cat);\r\n    }\r\n\r\n    public disable() {\r\n        (this._container as any).removeAllEventListeners();\r\n    }\r\n\r\n    public reset() {\r\n        this._fishes.forEach(f => f.destroy());\r\n        this._puffers.forEach(p => p.destroy());\r\n\r\n        this._fishes = [];\r\n        this._puffers = [];\r\n\r\n        this._cat.X = 290;\r\n\r\n        super.reset();\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Game() { return this._game; }\r\n    public get Cat() { return this._cat; }\r\n    public get Fishes() { return this._fishes; }\r\n    public get IsGamelogicPaused() { return this._pauseLogic; }\r\n}\r\n\r\n\r\n\r\nexport class POOL { \r\n    static get CAT() { return \"cat\"; }\r\n    static get FISH() { return \"fish\"; }\r\n    static get PUFFERFISH() { return \"puffer\"; }\r\n    static get PERSEPHONE() { return \"persephone\"; }\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { Game } from \"../Game\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\n\r\nexport class IntermediaryScreen extends Screen {\r\n    private _game:Game;\r\n    private _bg:createjs.Shape;\r\n    private _textContainer:createjs.Container;\r\n    private _txtSprite:createjs.DisplayObject;\r\n\r\n    private _text:string;\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n        this._game = game;\r\n\r\n        this._text = \"\";\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Chooses the screen to load in after the intermediary. */\r\n    public queueNextScreen(screenKey:string, duration:number=3000) {\r\n        const evt = window.setTimeout(() => {\r\n            //load the screen\r\n            ScreenManager.setCurrentScreen(screenKey, this._game.Stage);\r\n            //clear the timeout\r\n            window.clearTimeout(evt);\r\n        }, duration);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n        //add stuff\r\n        this._bg = new createjs.Shape();\r\n        this._bg.graphics.beginFill(\"#191919\");\r\n        this._bg.graphics.drawRect(0, 0, this._game.StageWidth, this._game.StageHeight);\r\n        this._bg.graphics.endFill();\r\n        this._bg.cache(0, 0, this._game.StageWidth, this._game.StageHeight);\r\n        this._container.addChild(this._bg);\r\n\r\n        this._textContainer = new createjs.Container();\r\n        this._container.addChild(this._textContainer);\r\n\r\n        if(this._text != \"\") {\r\n            //create the text\r\n            this._txtSprite = Sprites.generateBitmapText(this._text, LoadManager.Spritesheets.TypographyWhite);\r\n            (this._txtSprite as any).scale = 0.6;\r\n            //load into container\r\n            this._textContainer.addChild(this._txtSprite);\r\n    \r\n            //put container at bottom\r\n            this._textContainer.x = (this._game.StageWidth / 2) - ((this._txtSprite.getBounds().width / 2) * 0.6);\r\n            this._textContainer.y = (this._game.StageHeight / 2) - (this._txtSprite.getBounds().height / 2);\r\n        }\r\n\r\n        return super.create(stage);\r\n    }\r\n\r\n    public destroy() {\r\n        this._textContainer.removeAllChildren();\r\n\r\n        return super.destroy();\r\n    }\r\n\r\n    public enable() {\r\n        super.enable();\r\n\r\n        //for testing\r\n        (this._container as any).on(\"click\", (e) => {\r\n            ScreenManager.setCurrentScreen(\"menu\", this.Stage);\r\n        }, this, true);\r\n    }\r\n\r\n    public disable() {\r\n        super.disable();\r\n\r\n        this.reset();\r\n    }\r\n\r\n    public reset() {\r\n        this.Text = \"\";\r\n        super.reset();\r\n    }\r\n\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public set Text(value:string) {\r\n        this._text = value;\r\n    }\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { Layout } from \"../ui/display/Layout\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { Container } from \"../ui/display/Container\";\r\nimport { Logging } from \"../Functions\";\r\nimport { Game } from \"../Game\";\r\nimport { LevelSelectDisplay } from \"../ui/custom/LevelSelectDisplay\";\r\nimport { IntermediaryScreen } from \"./IntermediaryScreen\";\r\nimport { GameScreen } from \"./GameScreen\";\r\nimport { DataManager } from \"../managers/DataManager\";\r\n\r\nexport class MenuScreen extends Screen {\r\n    private _game:Game;\r\n    //containers\r\n    private _swipeContainer:createjs.Container;\r\n    private _staticContainer:Container;\r\n    // private _mainContainer:Container;\r\n    private _mainContainer:createjs.Container;\r\n    private _clearedContainer:Container;\r\n    private _optionsContainer:Container;\r\n\r\n    private _mainButtonsContainer:Container;\r\n    private _logo:createjs.DisplayObject;\r\n    private _fancyFish:createjs.Sprite;\r\n\r\n    //custom containers\r\n    private _levelSelectDisplay:LevelSelectDisplay;\r\n\r\n    //properties\r\n    private _swipeSpeed:number;\r\n    private _currentScreen:string;\r\n    private _initialSwipePos:{x:number, y:number};\r\n    private _dragTimer:any;\r\n\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n\r\n        this._game = game;\r\n\r\n        //setup swipe container -- holds all moving sprites\r\n        this._swipeContainer = new createjs.Container();\r\n\r\n        //setup static container\r\n        this._staticContainer = new Container();\r\n        const bg = new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"bg\");\r\n\r\n        this._staticContainer.addMany({\r\n            bg\r\n        });\r\n\r\n        //setup main container\r\n        this._mainContainer = new createjs.Container();\r\n        this._logo = new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"logo\");\r\n        this._logo.x = this._game.StageWidth - this._logo.getBounds().width - 20;\r\n        this._logo.y = this._game.StageHeight * 0.4;\r\n        this._mainContainer.addChild(this._logo);\r\n        this._mainButtonsContainer = new Container(Container.LAYOUT_OPTIONS.ColumnLeftBottom);\r\n        this._mainButtonsContainer.addMany({\r\n            btnNewGame : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnNewGame\"),\r\n            btnOptions : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnOptions\"),\r\n            btnLevelSelect : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnLevelSelect\"),\r\n            btnExit : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnExit\"),\r\n        });\r\n        this._mainContainer.addChild(this._mainButtonsContainer.Container);\r\n        this._fancyFish = new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"fancyFish\");\r\n        this._fancyFish.x = this._game.StageWidth - this._fancyFish.getBounds().width - 20;\r\n        this._fancyFish.y = this._game.StageHeight - this._fancyFish.getBounds().height - 20;\r\n        this._mainContainer.addChild(this._fancyFish);\r\n        // this._mainContainer.addMany({\r\n        //     logo : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"logo\"),\r\n        //     fishbowl : Sprites.Buttons.Fishbowl,\r\n        //     btnNewGame : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnNewGame\"),\r\n        //     btnOptions : Sprites.Buttons.Options,\r\n        //     btnLevelSelect : Sprites.Buttons.LevelSelect,\r\n        //     btnExit : Sprites.Buttons.Exit\r\n        // });\r\n\r\n        //setup options container\r\n        this._optionsContainer = new Container();\r\n        this._optionsContainer.addMany({\r\n            txtOptions : Sprites.generateBitmapText(\"Options\", LoadManager.Spritesheets.Typography),\r\n            btnClearData : Sprites.Buttons.ClearData\r\n        });\r\n        this._optionsContainer.Container.x -= this._game.StageWidth;\r\n\r\n        //setup cleared container\r\n        this._clearedContainer = new Container();\r\n        this._clearedContainer.add(\"txtCleared\", Sprites.generateBitmapText(\"Data successfully cleared!\", LoadManager.Spritesheets.Typography));\r\n        this._clearedContainer.Container.x -= this._game.StageWidth;\r\n        this._clearedContainer.Container.y -= this._game.StageHeight;\r\n\r\n        this._levelSelectDisplay = new LevelSelectDisplay(game);\r\n        this._levelSelectDisplay.Container.x += this._game.StageWidth;\r\n\r\n\r\n        //setup properties\r\n        this._swipeSpeed = 800;\r\n        this._currentScreen = \"main\";\r\n        this._initialSwipePos = { x:-1, y:-1 };\r\n\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    private _onNewGame() {\r\n        Logging.message(\"Go to new game!\");\r\n        \r\n        const data = DataManager.getLevelDataByIndex(0);\r\n        this._game.changeCurrentLevel(data);\r\n        \r\n        const intermediary = ScreenManager.getScreenByKey(\"intermediary\") as IntermediaryScreen;\r\n        new Promise(async(res) => {\r\n            intermediary.Text = data.name;\r\n            await ScreenManager.setCurrentScreen(intermediary, this.Stage);\r\n            intermediary.queueNextScreen(\"game\");\r\n\r\n            res();\r\n        });\r\n    }\r\n    private _onOptions() {\r\n        //go to options!\r\n        Logging.message(\"Go to options!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:this._game.StageWidth}, this._swipeSpeed, createjs.Ease.circOut);\r\n        this._currentScreen = \"options\";\r\n    }\r\n    private _onLevelSelect() {\r\n        Logging.message(\"Go to level select!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:-this._game.StageWidth}, this._swipeSpeed, createjs.Ease.circOut);\r\n        this._currentScreen = \"levelSelect\";\r\n    }\r\n    private _onExit() {\r\n        Logging.message(\"Go to exit!\");\r\n    }\r\n\r\n    private _onMain() {\r\n        Logging.message(\"Go to main!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:0}, this._swipeSpeed, createjs.Ease.bounceOut);\r\n        this._currentScreen = \"main\";\r\n    }\r\n\r\n    private _onClearData() {\r\n        Logging.success(\"Cleared data!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:this._game.StageWidth, y:this._game.StageHeight}, this._swipeSpeed, createjs.Ease.cubicIn);\r\n        // this._currentScreen = \"cleared\"\r\n        let e = window.setTimeout(() => {\r\n            createjs.Tween.get(this._swipeContainer).to({x:this._game.StageWidth, y:0}, this._swipeSpeed, createjs.Ease.cubicInOut);\r\n            window.clearInterval(e);\r\n            this._currentScreen = \"options\";\r\n        }, 2000);\r\n    }\r\n\r\n    private _onDragStart(e) {\r\n\r\n        this._initialSwipePos = { x:e.stageX, y:e.stageY };\r\n\r\n        //reset drag timer if not null\r\n        if(this._dragTimer != null) window.clearTimeout(this._dragTimer);\r\n        this._dragTimer = setTimeout(() => {\r\n            this._initialSwipePos = { x:-1, y:-1 };\r\n            this._dragTimer = null;\r\n        }, 500);\r\n    }\r\n    private _onDragEnd(e) {\r\n        if(this._initialSwipePos.x != -1 || this._initialSwipePos.y != -1) {\r\n            //find the direction\r\n            if((this._initialSwipePos.x - e.stageX) > 20) {\r\n                if(this._currentScreen == \"options\")\r\n                    this._onMain();\r\n            }\r\n            else if((this._initialSwipePos.x - e.stageX) < -20) {\r\n                if(this._currentScreen == \"levelSelect\")\r\n                    this._onMain();\r\n            }\r\n        }\r\n    }\r\n\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n\r\n        //add in the containers\r\n        this._staticContainer.Sprites.bg.y = 0;\r\n        this._container.addChild(this._staticContainer.Container);\r\n        this._container.addChild(this._swipeContainer);\r\n        this._swipeContainer.addChild(this._mainContainer);\r\n        this._swipeContainer.addChild(this._optionsContainer.Container);\r\n        this._swipeContainer.addChild(this._clearedContainer.Container);\r\n        // this._swipeContainer.addChild(this._levelSelectContainer.Container);\r\n\r\n        \r\n        this._swipeContainer.addChild(this._levelSelectDisplay.Container);\r\n\r\n        return super.create(stage);\r\n    }\r\n\r\n    public enable() {\r\n        console.log(\"LOAD IN MENU ACTIONS\");\r\n        super.enable();\r\n        //listen to events\r\n        (this._mainButtonsContainer.Sprites.btnNewGame as any).on(\"click\", this._onNewGame, this, true);\r\n        (this._mainButtonsContainer.Sprites.btnOptions as any).on(\"click\", this._onOptions, this);\r\n        (this._mainButtonsContainer.Sprites.btnLevelSelect as any).on(\"click\", this._onLevelSelect, this);\r\n        (this._mainButtonsContainer.Sprites.btnExit as any).on(\"click\", this._onExit, this);\r\n\r\n        Sprites.listenToClearData();\r\n        (this._optionsContainer.Sprites.btnClearData as any).on(Sprites.CLEAR_DATA, this._onClearData, this);\r\n\r\n        //listen for swipes\r\n        (this._staticContainer.Sprites.bg as any).on(\"mousedown\", this._onDragStart, this);\r\n        (this._staticContainer.Sprites.bg as any).on(\"click\", this._onDragEnd, this);\r\n\r\n        // this._mainButtonsContainer.Sprites.btnOptions.on(\"click\", () => console.log(\"HELLO I CLIC\"));\r\n\r\n        this._levelSelectDisplay.enable();\r\n\r\n\r\n\r\n        //rock the fish\r\n        createjs.Tween\r\n            // @ts-ignore\r\n            .get(this._fancyFish, { loop:true })\r\n            .to({ y:this._fancyFish.y-30 }, 3000, createjs.Ease.sineInOut)\r\n            .to({ y:this._fancyFish.y }, 3000, createjs.Ease.sineInOut);\r\n\r\n        //rock the logo\r\n        createjs.Tween\r\n            // @ts-ignore\r\n            .get(this._logo, { loop:true })\r\n            .wait(1200)\r\n            .to({ y:this._logo.y-15 }, 4500, createjs.Ease.sineInOut)\r\n            .to({ y:this._logo.y }, 4800, createjs.Ease.sineInOut);\r\n    }\r\n\r\n    public disable() {\r\n        super.disable();\r\n        //stop listen to events\r\n        (this._mainButtonsContainer.Sprites.btnNewGame as any).off(\"click\", this._onNewGame);\r\n        (this._mainButtonsContainer.Sprites.btnOptions as any).off(\"click\", this._onOptions);\r\n        (this._mainButtonsContainer.Sprites.btnLevelSelect as any).off(\"click\", this._onLevelSelect);\r\n        (this._mainButtonsContainer.Sprites.btnExit as any).off(\"click\", this._onExit);\r\n\r\n        Sprites.stopListenToClearData();\r\n        (this._optionsContainer.Sprites.btnClearData as any).off(Sprites.CLEAR_DATA, this._onClearData);\r\n\r\n        //stop listen for swipes\r\n        (this._staticContainer.Sprites.bg as any).off(\"mousedown\", this._onDragStart);\r\n        (this._staticContainer.Sprites.bg as any).off(\"click\", this._onDragEnd);\r\n\r\n\r\n        this._levelSelectDisplay.disable();\r\n\r\n        this.reset();\r\n\r\n\r\n        createjs.Tween.removeAllTweens();\r\n    }\r\n\r\n    public reset() {\r\n        //reset the position of the swipe container\r\n        this._swipeContainer.x = 0;\r\n        this._swipeContainer.y = 0;\r\n\r\n        super.reset();\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n}","import { IUpdateable, ICreateable, IEnableable } from \"../Interfaces\";\r\n\r\nexport class Screen implements ICreateable<Screen>, IUpdateable, IEnableable {\r\n    private _stage:createjs.StageGL;\r\n    protected _container:createjs.Container;\r\n\r\n    constructor() {\r\n        this._container = new createjs.Container();\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Updates the screen. */\r\n    public update(gameTime:number) {\r\n\r\n    }\r\n\r\n    /**Creates the screen and adds to the stage. */\r\n    public create(stage:createjs.StageGL):Screen {\r\n        this._stage = stage;\r\n        //add to the stage\r\n        this._stage.addChild(this._container);\r\n\r\n        \r\n        return this;\r\n    }\r\n\r\n    /**Destroys the screen and removes from the stage. */\r\n    public destroy():Screen {\r\n\r\n        //remove from the stage\r\n        this._stage.removeChild(this._container);\r\n\r\n        return this;\r\n    }\r\n\r\n    public enable() {\r\n\r\n    }\r\n\r\n    public disable() {\r\n        \r\n    }\r\n\r\n    public reset() {\r\n        \r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container():createjs.Container { return this._container; }\r\n    protected get Stage():createjs.StageGL { return this._stage; }\r\n\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\n\r\nexport class SplashScreen extends Screen {\r\n    private _splash:createjs.Shape;\r\n    \r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n        //add stuff\r\n        this._splash = new createjs.Shape();\r\n        this._splash.graphics.beginFill(\"red\");\r\n        this._splash.graphics.drawRect(0, 0, 100, 100);\r\n        this._splash.graphics.endFill();\r\n        this._splash.cache(0, 0, 100, 100);\r\n        this._container.addChild(this._splash);\r\n        super.create(stage);\r\n\r\n        //for testing\r\n        (this._container as any).on(\"click\", (e) => {\r\n            ScreenManager.setCurrentScreen(\"menu\", stage);\r\n        }, this, true);\r\n\r\n        return this;\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n}","import { LoadManager } from \"../managers/LoadManager\";\r\nimport { Game } from \"../Game\";\r\nimport { GameScreen } from \"./GameScreen\";\r\n\r\n/**This class creates the tutorial items.  This class will control the game and game screen when being used. */\r\nexport class TutorialCreator {\r\n    public static get KEY() {\r\n        return {\r\n            \"First\" : \"first\",\r\n            \"You\" : \"you\",\r\n            \"Fish\" : \"fish\",\r\n            \"Puffer\" : \"puffer\",\r\n            \"Many\" : \"many\",\r\n            \"Pause\" : \"pause\",\r\n            \"Special\" : \"special\"\r\n        }\r\n    };\r\n\r\n    private _game:Game;\r\n    private _gameScreen:GameScreen;\r\n\r\n\r\n    //tutorial overlays\r\n    private _youOverlay:createjs.Sprite;\r\n    private _fishOverlay:createjs.Sprite;\r\n    private _pufferOverlay:createjs.Sprite;\r\n    private _manyOverlay:createjs.Sprite;\r\n    private _pauseOverlay:createjs.Sprite;\r\n    private _specialOverlay:createjs.Sprite;\r\n\r\n    private _currentOverlay:createjs.Sprite;\r\n    private _tutorialQueue:string[];\r\n\r\n    constructor(game:Game, gameScreen:GameScreen) {\r\n        this._game = game;\r\n        this._gameScreen = gameScreen;\r\n\r\n        this._tutorialQueue = [];\r\n\r\n        //build all the required screens\r\n        this._youOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"you\");\r\n        this._fishOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"fish\");\r\n        this._pufferOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"puffer\");\r\n        this._manyOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"many\");\r\n        this._pauseOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"pause\");\r\n        this._specialOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"special\");\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public async queueTutorials(keys:string[]) {\r\n\r\n        for(let i = 0; i < keys.length; i++) {\r\n            const key = keys[i];\r\n\r\n            await new Promise(async(res, rej) => {\r\n\r\n                console.log(\"NUM\", i);\r\n\r\n                switch(key) {\r\n                    //first will play multiple screens\r\n                    case TutorialCreator.KEY.First :\r\n                        await this._runYou();\r\n                        await this._transition(this._fishOverlay);\r\n                        await this._runFish();\r\n                        await this._transition(null);\r\n                        this._gameScreen.unpauseGameLogic();\r\n                        res();\r\n                        break;\r\n                    case TutorialCreator.KEY.You :\r\n                        await this._runYou();\r\n                        await this._transition(null);\r\n                        this._gameScreen.unpauseGameLogic();\r\n                        res();\r\n                        break;\r\n                    case TutorialCreator.KEY.Fish :\r\n                        await this._runFish();\r\n                        await this._transition(null);\r\n                        this._gameScreen.unpauseGameLogic();\r\n                        res();\r\n                        break;\r\n                    case TutorialCreator.KEY.Puffer :\r\n                        await this._runPuffer();\r\n                        await this._transition(null);\r\n                        this._gameScreen.unpauseGameLogic();\r\n                        res();\r\n                        break;\r\n                    case TutorialCreator.KEY.Special :\r\n                        await this._runSpecial();\r\n                        await this._transition(null);\r\n                        this._gameScreen.unpauseGameLogic();\r\n                        res();\r\n                        break;\r\n\r\n                }\r\n\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    private async _transition(nextScreen) {\r\n        let promises = [];\r\n        //if we have a current screen, wait for it to fade out\r\n        if(this._currentOverlay != null) {\r\n            promises.push(\r\n                new Promise(async(res) => {\r\n                    //fade out\r\n                    createjs.Tween\r\n                        .get(this._currentOverlay)\r\n                        .to({ alpha:0 }, 500, createjs.Ease.linear)\r\n                        .call(() => {\r\n                            this._gameScreen.Container.removeChild(this._currentOverlay);\r\n                            res();\r\n                        });\r\n                })\r\n            );\r\n        }\r\n\r\n        //wait for certain actions to finish\r\n        return new Promise(async(res) => {\r\n            //wait for promises to finish\r\n            await Promise.all(promises);\r\n\r\n            //if we are transitioning to null, just end us\r\n            if(nextScreen == null) {\r\n                this._currentOverlay.alpha = 1;\r\n                res();\r\n                return;\r\n            }\r\n\r\n            this._currentOverlay.alpha = 1;\r\n\r\n            //now add in the new one\r\n            this._currentOverlay = nextScreen;\r\n            this._gameScreen.Container.addChild(this._currentOverlay);\r\n            this._currentOverlay.alpha = 0;\r\n\r\n            //fade in\r\n            createjs.Tween\r\n                .get(this._currentOverlay)\r\n                .to({ alpha:1 }, 500, createjs.Ease.linear)\r\n                .call(() => {\r\n                    res();\r\n                });\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    private async _runYou() {\r\n\r\n        return new Promise((res, rej) => {\r\n            this._currentOverlay = this._youOverlay;\r\n\r\n            const catStart = this._gameScreen.Cat.Y;\r\n            //move the cat hand\r\n            \r\n            this._gameScreen.Cat.Y = 80;\r\n            //pause the game\r\n            this._gameScreen.pauseGameLogic();\r\n            //overlay screen\r\n            this._gameScreen.Container.addChild(this._youOverlay);\r\n            //listen for screen click\r\n            (this._game.Stage).on(\"pressup\", () => { \r\n                //put cat paw back to start Y\r\n                this._gameScreen.Cat.Y = catStart;\r\n                res();\r\n            }, true, true);\r\n\r\n        });\r\n        \r\n    }\r\n\r\n    private async _runFish() {\r\n\r\n        return new Promise((res, rej) => {\r\n            this._currentOverlay = this._fishOverlay;\r\n            //pause the game\r\n            this._gameScreen.pauseGameLogic();\r\n            //overlay screen\r\n            this._gameScreen.Container.addChild(this._fishOverlay);\r\n            //listen for screen click\r\n            (this._game.Stage).on(\"pressup\", () => { \r\n                res();\r\n            }, true, true);\r\n        });\r\n\r\n    }\r\n\r\n    private async _runPuffer() {\r\n\r\n        return new Promise((res, rej) => {\r\n            this._currentOverlay = this._pufferOverlay;\r\n            //pause the game\r\n            this._gameScreen.pauseGameLogic();\r\n            //overlay screen\r\n            this._gameScreen.Container.addChild(this._pufferOverlay);\r\n            //listen for screen click\r\n            (this._game.Stage).on(\"pressup\", () => { \r\n                res();\r\n            }, true, true);\r\n        });\r\n\r\n    }\r\n\r\n    private async _runSpecial() {\r\n\r\n        return new Promise((res, rej) => {\r\n            this._currentOverlay = this._specialOverlay;\r\n            //pause the game\r\n            this._gameScreen.pauseGameLogic();\r\n            //overlay screen\r\n            this._gameScreen.Container.addChild(this._specialOverlay);\r\n            //listen for screen click\r\n            (this._game.Stage).on(\"pressup\", () => { \r\n                res();\r\n            }, true, true);\r\n        });\r\n\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n}","import { LoadManager } from \"../managers/LoadManager\";\r\n\r\n/**Used to gain access to in-game sprites. */\r\nexport class Sprites {\r\n    public static CLEAR_DATA:string = \"onClearData\";\r\n\r\n    private static _backgrounds:{ [key:string]:createjs.DisplayObject } = { };\r\n    private static _buttons:{ [key:string]:createjs.DisplayObject } = { };\r\n\r\n    private static _graphics:{ [key:string]:createjs.DisplayObject } = { };\r\n\r\n    private static _spritesheets:createjs.SpriteSheet[];\r\n\r\n    private static _canClearData:boolean = false;\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public static setup() {\r\n        return new Promise((res, rej) => {\r\n            // Sprites.spritesheets = spritesheets\r\n            //setup all the sprites\r\n            /* ------- STATIC ------- */\r\n            Sprites._backgrounds.Main = new createjs.Sprite(LoadManager.Spritesheets.UI); // Static BG\r\n            (Sprites._backgrounds.Main as createjs.Sprite).gotoAndStop(\"bg_main_static\");\r\n\r\n            Sprites._backgrounds.Logo = new createjs.Sprite(LoadManager.Spritesheets.Entities); // LOGO\r\n            (Sprites._backgrounds.Logo as createjs.Sprite).gotoAndStop(\"icon_title\");\r\n\r\n            Sprites._backgrounds.BG = LoadManager.Images.BG; // Redux\r\n            Sprites._backgrounds.BGTop = LoadManager.Images.BGTop;\r\n\r\n\r\n            /* ------- ANIMATED ------- */\r\n            Sprites._backgrounds.Wave = new createjs.Sprite(LoadManager.Spritesheets.UI); // Animated BG\r\n            (Sprites._backgrounds.Wave as createjs.Sprite).gotoAndPlay(\"bg_main\");\r\n\r\n\r\n            /* ------- GRAPHICS ------ */\r\n            Sprites._graphics.Timer = new createjs.Sprite(LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n            (Sprites._graphics.Timer as createjs.Sprite).gotoAndPlay(\"sprTime\");\r\n            Sprites._graphics.Score = new createjs.Sprite(LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n            (Sprites._graphics.Score as createjs.Sprite).gotoAndPlay(\"sprScore\");\r\n            Sprites._graphics.FishRemain = new createjs.Sprite(LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n            (Sprites._graphics.FishRemain as createjs.Sprite).gotoAndPlay(\"sprFish\");\r\n            \r\n            /* ------- BUTTONS ------- */\r\n            Sprites._buttons.NewGame = new createjs.Sprite(LoadManager.Spritesheets.Entities); // New Game\r\n            (Sprites._buttons.NewGame as createjs.Sprite).gotoAndStop(\"btn_new_game\");\r\n            new createjs.ButtonHelper(Sprites._buttons.NewGame as createjs.Sprite, \"btn_new_game\", \"btn_new_game_hover\", \"btn_new_game_hover\");\r\n\r\n\r\n            Sprites._buttons.Options = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Options\r\n            (Sprites._buttons.Options as createjs.Sprite).gotoAndStop(\"btn_new_game\");\r\n            new createjs.ButtonHelper(Sprites._buttons.Options as createjs.Sprite, \"btn_options\", \"btn_options_hover\", \"btn_options_hover\");\r\n\r\n            Sprites._buttons.LevelSelect = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Select\r\n            (Sprites._buttons.LevelSelect as createjs.Sprite).gotoAndStop(\"btn_select\");\r\n            new createjs.ButtonHelper(Sprites._buttons.LevelSelect as createjs.Sprite, \"btn_select\", \"btn_select_hover\", \"btn_select_hover\");\r\n\r\n            Sprites._buttons.Exit = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Exit\r\n            (Sprites._buttons.Exit as createjs.Sprite).gotoAndStop(\"btn_select\");\r\n            new createjs.ButtonHelper(Sprites._buttons.Exit as createjs.Sprite, \"btn_exit\", \"btn_exit_hover\", \"btn_exit_hover\");\r\n\r\n            Sprites._buttons.Fishbowl = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Fishbowl\r\n            (Sprites._buttons.Fishbowl as createjs.Sprite).gotoAndStop(\"btn_select\");\r\n            new createjs.ButtonHelper(Sprites._buttons.Fishbowl as createjs.Sprite, \"icon_fishbowl\", \"icon_fishbowl_hover\", \"icon_fishbowl_hover\", true);\r\n\r\n\r\n            /* ------- MENU ------- */\r\n            Sprites._backgrounds.LevelSelectBG = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Select BG\r\n            (Sprites._backgrounds.LevelSelectBG as createjs.Sprite).gotoAndStop(\"static_bg\");\r\n            Sprites._buttons.LevelEmpty = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Empty Button\r\n            (Sprites._buttons.LevelEmpty as createjs.Sprite).gotoAndStop(\"level_empty\");\r\n            Sprites._buttons.LevelComplete = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Complete Button\r\n            (Sprites._buttons.LevelComplete as createjs.Sprite).gotoAndStop(\"level_complete\");\r\n            Sprites._buttons.LevelSpecialEmpty = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Special Empty Button\r\n            (Sprites._buttons.LevelSpecialEmpty as createjs.Sprite).gotoAndStop(\"level_special_empty\");\r\n            Sprites._buttons.LevelSpecialComplete = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Special Complete Button\r\n            (Sprites._buttons.LevelSpecialComplete as createjs.Sprite).gotoAndStop(\"level_special_complete\");\r\n\r\n\r\n            /* ------- COMPLEX ------- */\r\n            Sprites._setupBTNClearData();\r\n\r\n            res();\r\n        });\r\n    }\r\n\r\n    // /* --- Complex createjs.Sprite Setup --- */\r\n    private static _setupBTNClearData() {\r\n        Sprites._buttons.ClearData = new createjs.Sprite(LoadManager.Spritesheets.UI); // BTN Clear Data\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndStop(\"btn_clear_data\");\r\n        (Sprites._buttons.ClearData as createjs.Sprite).cursor = \"pointer\";\r\n        Sprites._canClearData = false;\r\n    }\r\n    public static listenToClearData() {\r\n        //listen\r\n        (Sprites._buttons.ClearData as any).on(\"mousedown\", Sprites._btnDataDown);\r\n        (Sprites._buttons.ClearData as any).on(\"animationend\", Sprites._btnDataComplete);\r\n        (Sprites._buttons.ClearData as any).on(\"click\", Sprites._btnDataUp);\r\n    }\r\n    public static stopListenToClearData() {\r\n        //listen\r\n        (Sprites._buttons.ClearData as any).off(\"mousedown\", Sprites._btnDataDown);\r\n        (Sprites._buttons.ClearData as any).off(\"animationend\", Sprites._btnDataComplete);\r\n        (Sprites._buttons.ClearData as any).off(\"click\", Sprites._btnDataUp);\r\n    }\r\n\r\n    private static _btnDataDown(e) {\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndPlay(\"btn_clear_data_progress\");\r\n        Sprites._canClearData = true;\r\n    }\r\n    private static _btnDataUp(e) {\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndStop(\"btn_clear_data\");\r\n        Sprites._canClearData = false;\r\n    }\r\n    private static _btnDataComplete(e) {\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndStop(\"btn_clear_data\");\r\n        //dispatch event to button\r\n        if(Sprites._canClearData) {\r\n            (Sprites._buttons.ClearData as createjs.Sprite).dispatchEvent(new Event(Sprites.CLEAR_DATA));\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**A helper function to generate and cache text for the StageGL object. */\r\n    public static generateText(text, details = \"20px Arial\", color = \"#FFFEEE\") {\r\n        const textObj = new createjs.Text(text, details, color)\r\n        textObj.cache(0, 0, textObj.getBounds().width, textObj.getBounds().height);\r\n        return textObj;\r\n    }\r\n\r\n    public static generateBitmapText(text, spritesheet) {\r\n        const textObj = new createjs.BitmapText(text, spritesheet);\r\n        return textObj;\r\n    }\r\n\r\n\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get Backgrounds() { return Sprites._backgrounds; }\r\n    public static get Buttons() { return Sprites._buttons; }\r\n    public static get Graphics() { return Sprites._graphics; }\r\n\r\n    // static get BG() { return Sprites._bg }\r\n    // static get Logo() { return Sprites._logo }\r\n    // static get AnimBG() { return Sprites._animBg }\r\n    // static get GameBG() { return Sprites._gameBG }\r\n    // static get GameBGTop() { return Sprites._gameBGTop }\r\n    // //buttons\r\n    // static get BTN_New_Game() { return Sprites._btnNewGame }\r\n    // static get BTN_Options() { return Sprites._btnOptions }\r\n    // static get BTN_Select() { return Sprites._btnSelect }\r\n    // static get BTN_Exit() { return Sprites._btnExit }\r\n    // static get BTN_Fishbowl() { return Sprites._btnFishbowl }\r\n    // static get BTN_ClearData() { return Sprites._btnClearData }\r\n\r\n\r\n    // static get CLEAR_DATA() { return \"onClearData\" }\r\n}","import { Sprites } from \"../Sprites\";\r\nimport { LoadManager } from \"../../managers/LoadManager\";\r\nimport { Game } from \"../../Game\";\r\nimport { IEnableable } from \"../../Interfaces\";\r\nimport { GameScreen } from \"../../screens/GameScreen\";\r\nimport { DataManager } from \"../../managers/DataManager\";\r\nimport { ScreenManager } from \"../../managers/ScreenManager\";\r\nimport { IntermediaryScreen } from \"../../screens/IntermediaryScreen\";\r\n\r\n\r\nexport class LevelSelectDisplay implements IEnableable {\r\n    private _game:Game;\r\n\r\n    private _container:createjs.Container;\r\n    private _background:createjs.Sprite;\r\n    private _levelsContainer:createjs.Container;\r\n    private _levelTextContainer:createjs.Container;\r\n\r\n    private _levelsData:any;\r\n\r\n    private _levelButtons:createjs.Sprite[];\r\n\r\n    constructor(game:Game) {\r\n        this._game = game;\r\n        this._levelButtons = [];\r\n\r\n        //build the required components for the level select display\r\n        this._container = new createjs.Container();\r\n        this._background = Sprites.Backgrounds.LevelSelectBG as createjs.Sprite;\r\n        this._background.x = (game.StageWidth / 2) - (this._background.getBounds().width / 2);\r\n        this._background.y = 80;\r\n\r\n        this._levelsContainer = new createjs.Container();\r\n        this._container.addChild(this._background);\r\n        let text = Sprites.generateBitmapText(\"Level Select\", LoadManager.Spritesheets.Typography);\r\n        text.x = (game.StageWidth / 2) - (text.getBounds().width / 2);\r\n        text.y = 30;\r\n        this._container.addChild(text);\r\n\r\n\r\n        //setup display text\r\n        this._levelTextContainer = new createjs.Container();\r\n        this._container.addChild(this._levelTextContainer);\r\n\r\n        this.LevelText = \"Hello World!\";\r\n\r\n\r\n        //spoof some level data\r\n        this._levelsData = [\r\n            [\r\n                { name: \"Welcome to the pond!\", complete:true, unlocked:true, data:[0, 0, 0, 0, 0, 0, 0] },\r\n                { name: \"A new adventure!\", complete:true, unlocked:true, data:[0, 0, 0, 0, 0, 0, 0] },\r\n                { name: \"Learn to aim!\", complete:false, unlocked:true, data:[0, 0, 0, 0, 0, 0, 0] },\r\n                { name: \"Persephone!\", special:true, complete:false, unlocked:false, data:[0, 0, 0, 0, 0, 0, 0] },\r\n            ],\r\n            [\r\n                { name: \"In deep water!\", complete:false, unlocked:false, data:[0, 0, 0, 0, 0, 0, 0] },\r\n                { name: \"An ocean of fish!\", complete:false, unlocked:false, data:[0, 0, 0, 0, 0, 0, 0] },\r\n                { name: \"Barnacles ahoy!\", complete:false, unlocked:false, data:[0, 0, 0, 0, 0, 0, 0] },\r\n                { name: \"Owen!\", special:true, complete:false, unlocked:false, data:[0, 0, 0, 0, 0, 0, 0] },\r\n            ]\r\n        ];\r\n\r\n\r\n        //build the level icons\r\n        for(let r = 0; r < this._levelsData.length; r++) {\r\n            //iterate through levels\r\n            for(let i = 0; i < this._levelsData[r].length; i++) {\r\n                const levelData = this._levelsData[r][i];\r\n                console.log(\"LEVEL\", levelData);\r\n                //decide the sprite\r\n                let sprite = Sprites.Buttons.LevelEmpty.clone();\r\n                if(levelData.special != null && levelData.special) sprite = Sprites.Buttons.LevelSpecialEmpty.clone();\r\n                // //completed\r\n                if(levelData.complete) {\r\n                    sprite = Sprites.Buttons.LevelComplete.clone();\r\n                    if(levelData.special != null && levelData.special) sprite = Sprites.Buttons.LevelSpecialComplete;\r\n                }\r\n                //locked\r\n                if(!levelData.unlocked) {\r\n                    sprite.alpha = 0.25;\r\n                }\r\n                else {\r\n                    sprite.alpha = 1;\r\n                     //extras\r\n                    sprite.cursor = \"pointer\";\r\n                }\r\n\r\n                //place\r\n                sprite.x = 60 * i;\r\n                sprite.y = 50 * r;\r\n                //add\r\n                this._levelsContainer.addChild(sprite);\r\n                //to array\r\n                this._levelButtons.push(sprite as createjs.Sprite);\r\n            }\r\n        };\r\n\r\n        this._levelsContainer.x = (game.StageWidth / 2) - (this._levelsContainer.getBounds().width / 2);\r\n        this._levelsContainer.y = 100;\r\n        this._container.addChild(this._levelsContainer);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public enable() {\r\n        this._levelButtons.forEach(btn => {\r\n            btn.on(\"click\", this._onLevelClick, this);\r\n            btn.on(\"mouseover\", this._onLevelHover, this);\r\n            btn.on(\"mouseout\", this._onLevelUnhover, this);\r\n        });\r\n    }\r\n\r\n    public disable() {\r\n        this._levelButtons.forEach(btn => {\r\n            btn.removeAllEventListeners();\r\n        });\r\n    }\r\n\r\n\r\n    /**Returns level data from the given index. */\r\n    private _getDataByIndex(index:number) {\r\n        //flatten level data, and get data\r\n        let flatten = this._levelsData.reduce((acc, next) => acc.concat(next));\r\n        return flatten[index];\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    private _onLevelClick(e) {\r\n         //get button index\r\n        let index = this._levelButtons.indexOf(e.target);\r\n\r\n        if(index == -1) return;\r\n\r\n        //set the level index\r\n        const data = DataManager.getLevelDataByIndex(index);\r\n        console.log(\"MY LEVEL DATA\", data);\r\n        this._game.changeCurrentLevel(data);\r\n        //go to intermediary screen\r\n        const intermediary = ScreenManager.getScreenByKey(\"intermediary\") as IntermediaryScreen;\r\n        new Promise(async(res) => {\r\n            intermediary.Text = data.name;\r\n            await ScreenManager.setCurrentScreen(intermediary, this._game.Stage);\r\n            intermediary.queueNextScreen(\"game\", 1000);\r\n\r\n            res();\r\n        });\r\n    }\r\n\r\n    private _onLevelHover(e) {\r\n        //find the button data\r\n        //get button index\r\n        let index = this._levelButtons.indexOf(e.target);\r\n        \r\n        if(index != -1) {\r\n            const data = this._getDataByIndex(index);\r\n            if(data != null) {\r\n                if(data.unlocked)\r\n                    this.LevelText = data.name;\r\n            }\r\n        }\r\n\r\n    }\r\n    private _onLevelUnhover(e) {\r\n        this.LevelText = \"\";\r\n    }\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container() { return this._container; }\r\n    public set LevelText(value:string) {\r\n        if(value == \"\") {\r\n            this._levelTextContainer.removeAllChildren();\r\n            return;\r\n        }\r\n        //create the text\r\n        const text = Sprites.generateBitmapText(value, LoadManager.Spritesheets.TypographyWhite);\r\n        (text as any).scale = 0.6;\r\n        //load into container\r\n        this._levelTextContainer.removeAllChildren();\r\n        this._levelTextContainer.addChild(text);\r\n\r\n        //put container at bottom\r\n        this._levelTextContainer.x = (this._game.StageWidth / 2) - ((text.getBounds().width / 2) * 0.6);\r\n        this._levelTextContainer.y = this._game.StageHeight - 30;\r\n    }\r\n}","import { Layout } from \"./Layout\";\r\n\r\n/**Uses custom classes and the createjs library to help easily build up ui interfaces with DisplayObjects. */\r\nexport class Container {\r\n    private _sprites:{ [key:string]:createjs.DisplayObject };\r\n    private _container:createjs.Container;\r\n    private _layout:Layout;\r\n\r\n    constructor(layout:{ direction:string, alignment:string, crossAlignment:string, spacing:number } = null) {\r\n        this._sprites = { };\r\n        this._container = new createjs.Container();\r\n        this._layout = (layout != null) ? new Layout(this._container, layout.direction, layout.alignment, layout.crossAlignment, layout.spacing)  : Layout.MAKE_VERTICAL_CENTER(this._container);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public add(key:string, sprite:createjs.DisplayObject, updateLayout:boolean=true):boolean {\r\n        if(this._sprites[key] != null) return false;\r\n        this._sprites[key] = sprite.clone();\r\n\r\n        if(updateLayout) this._layout.buildLayout(true, ...Object.keys(this._sprites).map(k => this._sprites[k]));\r\n        return true;\r\n    }\r\n\r\n    public addMany(sprites:{ [key:string]:createjs.DisplayObject }) {\r\n        Object.keys(sprites).forEach(k => {\r\n            this.add(k, sprites[k], false);\r\n        });\r\n\r\n        this._layout.buildLayout(true, ...Object.keys(this._sprites).map(k => this._sprites[k]));\r\n    }\r\n\r\n    public changeLayout(layout:Layout) {\r\n        this._layout = layout;\r\n    }\r\n\r\n    /**In case of wandering or reusable sprites, call them back to this layout! */\r\n    public checkoutSprites() {\r\n        this._layout.buildLayout(true, ...Object.keys(this._sprites).map(k => this._sprites[k]));\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container():createjs.Container { return this._container; }\r\n    public get Sprites() { return this._sprites; }\r\n\r\n    public static get LAYOUT_OPTIONS() {\r\n        return {\r\n            //column layouts\r\n            //-- left aligned\r\n            \"ColumnLeftTop\" : {direction:Layout.VERTICAL, alignment:Layout.START, crossAlignment:Layout.START, spacing:5},\r\n            \"ColumnLeftCenter\" : {direction:Layout.VERTICAL, alignment:Layout.START, crossAlignment:Layout.CENTER, spacing:5},\r\n            \"ColumnLeftBottom\" : {direction:Layout.VERTICAL, alignment:Layout.START, crossAlignment:Layout.END, spacing:5},\r\n            //-- center aligned\r\n            \"ColumnCenterTop\" : {direction:Layout.VERTICAL, alignment:Layout.CENTER, crossAlignment:Layout.START, spacing:5},\r\n            \"ColumnCenterCenter\" : {direction:Layout.VERTICAL, alignment:Layout.CENTER, crossAlignment:Layout.CENTER, spacing:5},\r\n            \"ColumnCenterBottom\" : {direction:Layout.VERTICAL, alignment:Layout.CENTER, crossAlignment:Layout.END, spacing:5},\r\n            //-- right aligned\r\n            \"ColumnRightTop\" : {direction:Layout.VERTICAL, alignment:Layout.END, crossAlignment:Layout.START, spacing:5},\r\n            \"ColumnRightCenter\" : {direction:Layout.VERTICAL, alignment:Layout.END, crossAlignment:Layout.CENTER, spacing:5},\r\n            \"ColumnRightBottom\" : {direction:Layout.VERTICAL, alignment:Layout.END, crossAlignment:Layout.END, spacing:5}\r\n        };\r\n    }\r\n}","import { Game } from \"../../Game\";\r\n\r\n/**Used to layout createjs display objects. */\r\nexport class Layout {\r\n    //justify content\r\n    public static HORIZONTAL:string = \"horizontal\";\r\n    public static VERTICAL:string = \"vertical\";\r\n    //align items\r\n    public static START:string = \"start\";\r\n    public static END:string = \"end\";\r\n    public static CENTER:string = \"center\";\r\n\r\n    private _parent:createjs.Container;\r\n    private _items:createjs.DisplayObject[];\r\n\r\n    private _direction:string;\r\n    private _alignment:string;\r\n    private _crossAlignment:string;\r\n    private _spacing:number;\r\n\r\n    constructor(parent:createjs.Container, direction:string, alignment:string, crossAlignment:string, spacing:number = 5) {\r\n        this._parent = parent;\r\n        this._items = [];\r\n\r\n        this._direction = direction;\r\n        this._alignment = alignment;\r\n        this._crossAlignment = crossAlignment;\r\n        this._spacing = spacing;\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public buildLayout(addToParent:boolean=true, ...items:createjs.DisplayObject[]) {\r\n        if(items.length <= 0) return;\r\n\r\n        this._items = items;\r\n\r\n        if(addToParent) {\r\n            this._parent.removeAllChildren();\r\n        }\r\n        \r\n\r\n        if(this._direction == Layout.VERTICAL) {\r\n            let totalHeight = 0;\r\n            //ALIGNMENT\r\n            switch(this._alignment) {\r\n                case Layout.START : {\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        item.x = 0;\r\n                        item.y = totalHeight;\r\n                        totalHeight += item.getBounds().height + this._spacing;\r\n                        if(addToParent) this._parent.addChild(item);\r\n                    }\r\n                    break;\r\n                }\r\n                case Layout.CENTER : {\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        item.x = (Game.WIDTH / 2) - (item.getBounds().width / 2);\r\n                        item.y = totalHeight;\r\n                        totalHeight += item.getBounds().height + this._spacing;\r\n                        if(addToParent) this._parent.addChild(item);\r\n                    }\r\n                    break;\r\n                }\r\n                case Layout.END : {\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        item.x = Game.WIDTH - item.getBounds().width;\r\n                        item.y = totalHeight;\r\n                        totalHeight += item.getBounds().height + this._spacing;\r\n                        if(addToParent) this._parent.addChild(item);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n\r\n            //CROSS ALIGNMENT\r\n            //handle vertical alignment\r\n            switch(this._crossAlignment) {\r\n                case Layout.START : {\r\n                    break;\r\n                }\r\n                case Layout.CENTER : {\r\n                    totalHeight += items[items.length-1].getBounds().height;\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        //decipher desired center\r\n                        item.y += (Game.HEIGHT / 2) - (totalHeight / 2);\r\n                    }\r\n                    break;\r\n                }\r\n                case Layout.END :  {\r\n                    totalHeight += items[items.length-1].getBounds().height;\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        //decipher desired center\r\n                        item.y += Game.HEIGHT - totalHeight;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n\r\n        }\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    \r\n    /*--------------- HELPER FUNCTIONS ---------------*/\r\n    public static MAKE_VERTICAL_CENTER(container:createjs.Container) { return new Layout(container, Layout.VERTICAL, Layout.CENTER, Layout.CENTER, 5); }\r\n    public static MAKE_VERTICAL_START(container:createjs.Container) { return new Layout(container, Layout.VERTICAL, Layout.CENTER, Layout.START, 5); }\r\n\r\n}","import { Game } from \"../../Game\";\r\nimport { Sprites } from \"../Sprites\";\r\nimport { LoadManager } from \"../../managers/LoadManager\";\r\n\r\n/**Creates a display container for the game screen. */\r\nexport class GameScore {\r\n    private _game:Game;\r\n    private _container:createjs.Container;\r\n    private _bg:createjs.Shape;\r\n    private _txtTimer:createjs.DisplayObject;\r\n\r\n    private _timerContainer:createjs.Container;\r\n    private _timerTextContainer:createjs.Container;\r\n    private _fishRemainContainer:createjs.Container;\r\n    private _fishRemainTextContainer:createjs.Container;\r\n    private _scoreContainer:createjs.Container;\r\n    private _scoreTextContainer:createjs.Container;\r\n\r\n    //game conditions\r\n    private _useTimer:boolean = false;\r\n    private _useFishRemain:boolean = true;\r\n    private _useScore:boolean = true;\r\n\r\n    constructor(game:Game) {\r\n        this._game = game;\r\n        //create the initial objects\r\n        this._container = new createjs.Container();\r\n        this._bg = new createjs.Shape();\r\n        this._bg.graphics.beginFill(\"#000000\");\r\n        this._bg.graphics.drawRect(0, 0, this._game.StageWidth, 40);\r\n        this._bg.graphics.endFill();\r\n        this._bg.cache(0, 0, this._game.StageWidth, 40);\r\n        this._container.addChild(this._bg);\r\n\r\n        //create the container objects\r\n        //timer\r\n        this._timerContainer = new createjs.Container();\r\n        this._timerContainer.x += 10;\r\n        const timerSprite = Sprites.Graphics.Timer.clone();\r\n        this._timerContainer.addChild(timerSprite);\r\n        this._timerTextContainer = new createjs.Container();\r\n        this._timerTextContainer.y += 8;\r\n        this._timerTextContainer.x += Sprites.Graphics.Timer.getBounds().width + 10;\r\n        this._timerContainer.addChild(this._timerTextContainer);\r\n        this._container.addChild(this._timerContainer);\r\n\r\n        //fish remain\r\n        this._fishRemainContainer = new createjs.Container();\r\n        const fishRemainSprite = Sprites.Graphics.FishRemain.clone();\r\n        this._fishRemainContainer.addChild(fishRemainSprite);\r\n        this._fishRemainTextContainer = new createjs.Container();\r\n        this._fishRemainTextContainer.y += 8;\r\n        this._fishRemainTextContainer.x += Sprites.Graphics.FishRemain.getBounds().width + 10;\r\n        this._fishRemainContainer.addChild(this._fishRemainTextContainer);\r\n        this._container.addChild(this._fishRemainContainer);\r\n\r\n        //score\r\n        this._scoreContainer = new createjs.Container();\r\n        this._scoreContainer.x = this._game.StageWidth - Sprites.Graphics.Score.getBounds().width - 40;\r\n        const scoreSprite = Sprites.Graphics.Score.clone();\r\n        this._scoreContainer.addChild(scoreSprite);\r\n        this._scoreTextContainer = new createjs.Container();\r\n        this._scoreTextContainer.y += 8;\r\n        this._scoreTextContainer.x += Sprites.Graphics.Score.getBounds().width + 10;\r\n        this._scoreContainer.addChild(this._scoreTextContainer);\r\n        this._container.addChild(this._scoreContainer);\r\n        \r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public startHUD(showScore:boolean, showFishRemain:boolean, showTimer:boolean) {\r\n        this._useScore = showScore;\r\n        this._useFishRemain = showFishRemain;\r\n        this._useTimer = showTimer;\r\n\r\n        console.log(\"SHOW ME THE SCORE, REMAIN, TIMER\", showScore, showFishRemain, showTimer);\r\n\r\n        if(this._useScore) this._container.addChild(this._scoreContainer);\r\n        else this._container.removeChild(this._scoreContainer);\r\n\r\n        if(this._useFishRemain) this._container.addChild(this._fishRemainContainer);\r\n        else this._container.removeChild(this._fishRemainContainer);\r\n\r\n        if(this._useTimer) this._container.addChild(this._timerContainer);\r\n        else this._container.removeChild(this._timerContainer);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public update(gameTime:number) {\r\n        \r\n        // //get the game timer\r\n        // let timer = gameTime;\r\n        // this._timerTextContainer.removeAllChildren();\r\n        // let timerCont = Sprites.generateBitmapText(this._game.CurrentLevelData.currentTime.toString(), LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n        // this._timerTextContainer.addChild(timerCont);\r\n\r\n        // //get the fish remain score\r\n        // let fishRemain = gameTime;\r\n        // this._fishRemainTextContainer.removeAllChildren();\r\n        // let fishRemainCont = Sprites.generateBitmapText(this._game.CurrentLevelData.remainingFish.toString(), LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n        // this._fishRemainTextContainer.addChild(fishRemainCont);\r\n        // this._fishRemainContainer.x = (this._game.StageWidth / 2) - (this._fishRemainContainer.getBounds().width / 2);\r\n\r\n        // //get the score\r\n        // let score = gameTime;\r\n        // this._scoreTextContainer.removeAllChildren();\r\n        // let scoreCont = Sprites.generateBitmapText(this._game.CurrentLevelData.score.toString(), LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n        // this._scoreTextContainer.addChild(scoreCont);\r\n        // this._scoreContainer.x = this._game.StageWidth - this._scoreContainer.getBounds().width - 40;\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container() { return this._container; }\r\n\r\n}"]}