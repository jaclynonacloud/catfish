{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/Functions.ts","src/Game.ts","src/ObjectPool.ts","src/entities/Cat.ts","src/entities/Entity.ts","src/entities/Fish.ts","src/entities/Puffer.ts","src/entities/specials/Persephone.ts","src/main.ts","src/managers/DataManager.ts","src/managers/LoadManager.ts","src/managers/ProgressManager.ts","src/managers/ScreenManager.ts","src/screens/EndScreen.ts","src/screens/GameScreen.ts","src/screens/IntermediaryScreen.ts","src/screens/MenuScreen.ts","src/screens/Screen.ts","src/screens/SplashScreen.ts","src/screens/TutorialCreator.ts","src/ui/Sprites.ts","src/ui/custom/LevelSelectDisplay.ts","src/ui/display/Container.ts","src/ui/display/Layout.ts","src/ui/partials/GameScore.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Logging","message","console","log","_message","LoadManager_1","ProgressManager_1","ScreenManager_1","SplashScreen_1","MenuScreen_1","GameScreen_1","EndScreen_1","Functions_1","Sprites_1","IntermediaryScreen_1","DataManager_1","Game","canvasDiv","_this","this","_classCallCheck","_canvas","width","WIDTH","height","HEIGHT","_lastGameTime","_scaling","Promise","res","rej","__awaiter","regeneratorRuntime","mark","_callee","splash","wrap","_context","prev","next","_stage","createjs","StageGL","antialias","setClearColor","enableMouseOver","update","ScreenManager","registerScreen","SplashScreen","setCurrentScreen","getScreenByKey","addEventListener","LoadManager","ASSETS_UPDATED","Percentage","Text","Math","ceil","toString","loadAssets","catch","err","warn","success","DataManager","loadWorldsData","error","ProgressManager","WorldsData","changeCurrentLevel","getLevelDataByIndex","Sprites","setup","MenuScreen","GameScreen","EndScreen","IntermediaryScreen","Ticker","framerate","FRAME_RATE","on","stop","levelData","_currentLevel","currentScore","_currentScore","children","ch","scaleX","scaleY","_scaleChildren","gameTime","getMeasuredFPS","CurrentScreen","ObjectPool","obj","type","poolObj","active","Pool","push","_getObjectByType","_getObjectByObj","_pool","forEach","return","find","Entity_1","Cat","gameScreen","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","Spritesheets","Kitty_Spritesheet","_speed","_fishCaughtMultiplier","_caughtFish","_isGrabbing","_isRising","_isInjured","_hasReachedSurface","_sprite","gotoAndPlay","ANIMATION","Idle","Entity","_this2","IsGamelogicPaused","X","Stage","mouseX","speed","mouseY","Speed","_catYTween","Tween","get","to","y","Ease","circIn","Grab","Hold","fishes","tryToGrabFishes","Y","caught","returnToSurface","_this3","removeTweens","wait","linear","reachSurface","_this4","hasNewFish","indexOf","release","_this5","Ow","injure","drop","_this6","collectFish","_this7","_get","prototype","hasHitAPuffer","hitEnemy","caughtFishMult","value","freeze","Death","spritesheet","_gameScreen","Sprite","_direction","x","_isIgnoringCollision","_ignoreCollisionTimer","Scaling","container","addChild","parent","removeChild","IGNORE_COLLISION","artificialReg","arguments","undefined","reg","regX","regY","Bounds","Width","Height","bounds","StageWidth","extents","StageHeight","HIT","Right","Left","lastX","getBounds","Top","Bottom","Fish","Peeper_Spritesheet","_isCaught","_isReturning","Slow","_naturalY","Panic","hitTest","disable","abs","isNeg","IsIgnoringCollision","testStageBounds","startIgnoreCollision","Fast","Puffer","Puffer_Spritesheet","_cooldown","_currentCooldown","Angry","cat","Recover","Fish_1","Persephone","Persephone_Spritesheet","SPEC_ANIMATION","Game_1","document","getElementById","fileLocation","fetch","then","blob","json","_worldsData","index","flatten","concat","apply","worlds","currentLevel","getLevelIndexByData","world","level","_sheetsTotal","_sheetsLoaded","_percentage","_totalAssetsLoaded","_totalAssets","src","stage","reset","_preloadManager","LoadQueue","Sound","registerPlugins","WebAudioPlugin","HTMLAudioPlugin","FlashAudioPlugin","alternateExtensions","installPlugin","_onLoaded","_onComplete","_onError","data","setMaxConnections","loadManifest","ASSETS_LOADED","emitErrorEvent","dispatchEvent","AssetsLoadedEvent","AssetsFailedEvent","parseFloat","getItems","toFixed","AssetsUpdatedEvent","name","sheet","item","Types","JAVASCRIPT","window","id","_SpriteSheet","complete","_loadedSheet","ev","remove","IMAGE","Images","Bitmap","emitUpdatedEvent","removeAllEventListeners","setInterval","emitLoadedEvent","Event","ASSETS_FAILED","worldsData","_levelsProgress","map","unlocked","completed","_specialsProgress","special","collected","unlocks","_readCookieData","worldIndex","levelIndex","nextLevel","nextWorld","saveCookieData","ProgressData","cookie","JSON","stringify","_getCookie","parse","levels","specials","cname","ca","decodeURIComponent","split","charAt","substring","Screen_1","key","screen","_screensLookup","tempScreen","Screen","resolve","promises","_currentScreen","Container","alpha","destroy","_callee2","_context2","all","create","enable","Container_1","game","_game","_isFail","bg","Catfish_End","_container","_buttonsContainer","LAYOUT_OPTIONS","ColumnLeftBottom","addMany","btnTryAgain","btnNextLevel","btnMainMenu","_completeSpr","_failSpr","CurrentLevelData","getNextLevel","intermediary","queueNextScreen","visible","keys","TutorialCreator_1","ObjectPool_1","Persephone_1","Puffer_1","Cat_1","GameScore_1","_fishes","_puffers","_remainingFish","createPoolObject","POOL","CAT","FISH","_i","PUFFERFISH","PERSEPHONE","_cat","checkout","_staticContainer","BG_Spritesheet","_fishContainer","_pufferContainer","_winContainer","_gameScore","GameScore","_tutorialCreator","TutorialCreator","_pauseLogic","hitObjects","getObjectsUnderPoint","fish","puff","killedFish","splice","win","changeCurrentScore","totalFish","combos","time","elasticOut","levelIndices","getIndexData","completeLevel","collectSpecial","checkoutSprites","_winBanner","Shape","graphics","beginFill","drawRect","cache","_winText","generateBitmapText","TypographyWhite","mouseEnabled","flip","DirectionX","setNaturalY","puffer","tutorials","queueTutorials","background","gotoAndStop","showScore","showTimer","duration","showFishRemain","showRemainingFish","startHUD","releaseAllObjects","normalizedTime","min","grab","removeAllChildren","_text","screenKey","evt","setTimeout","clearTimeout","_bg","endFill","_textContainer","_txtSprite","scale","LevelSelectDisplay_1","_swipeContainer","Catfish_Main","_mainContainer","_logo","_mainButtonsContainer","btnNewGame","btnOptions","btnLevelSelect","btnExit","_fancyFish","_optionsContainer","txtOptions","Typography","btnClearData","Buttons","ClearData","_clearedContainer","add","_levelSelectDisplay","LevelSelectDisplay","_swipeSpeed","_initialSwipePos","circOut","bounceOut","cubicIn","cubicInOut","clearInterval","stageX","stageY","_dragTimer","_onMain","_onNewGame","_onOptions","_onLevelSelect","_onExit","listenToClearData","CLEAR_DATA","_onClearData","_onDragStart","_onDragEnd","loop","sineInOut","off","stopListenToClearData","removeAllTweens","_textSpritesheet","SpriteSheet","images","frames","animations","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","Z","b","d","g","h","j","k","l","m","q","s","v","w","z","0","2","3","4","5","6","7","8","9",".",",","'","\"","?","!","$","img","createElement","onload","text","textEl","_tutorialQueue","_youOverlay","Tutorial_Spritesheet","_fishOverlay","_pufferOverlay","_manyOverlay","_pauseOverlay","_specialOverlay","First","You","Many","Pause","Special","t0","KEY","_runYou","_transition","_runFish","unpauseGameLogic","abrupt","_runPuffer","_runSpecial","nextScreen","_currentOverlay","_callee3","_context4","_callee4","_context5","catStart","pauseGameLogic","_backgrounds","Main","UI","Logo","Entities","BG","BGTop","Wave","_graphics","Timer","ScoreHUD_Spritesheet","Score","FishRemain","_buttons","NewGame","ButtonHelper","Options","LevelSelect","Exit","Fishbowl","LevelSelectBG","Menu_Level_Select","LevelEmpty","LevelComplete","LevelSpecialEmpty","LevelSpecialComplete","_setupBTNClearData","cursor","_canClearData","_btnDataDown","_btnDataComplete","_btnDataUp","details","color","textObj","BitmapText","_levelButtons","_background","Backgrounds","_levelsContainer","_levelTextContainer","LevelText","rebuild","btn","_onLevelClick","_onLevelHover","_onLevelUnhover","_levelsData","sprite","clone","reduce","acc","target","_getDataByIndex","Layout_1","layout","_sprites","_layout","Layout","direction","alignment","crossAlignment","spacing","MAKE_VERTICAL_CENTER","updateLayout","buildLayout","_toConsumableArray","sprites","_layout2","_layout3","ColumnLeftTop","VERTICAL","START","ColumnLeftCenter","CENTER","END","ColumnCenterTop","ColumnCenterCenter","ColumnCenterBottom","ColumnRightTop","ColumnRightCenter","ColumnRightBottom","_parent","_items","_alignment","_crossAlignment","_spacing","addToParent","_len","items","Array","_key","totalHeight","_item","_i2","_item2","_i3","_i4","HORIZONTAL","_useTimer","_useFishRemain","_useScore","_timerContainer","timerSprite","Graphics","_timerTextContainer","_fishRemainContainer","fishRemainSprite","_fishRemainTextContainer","_scoreContainer","scoreSprite","_scoreTextContainer"],"mappings":"CAAA,SAAAA,EAAAC,EAAAC,EAAAC,GAAA,SAAAC,EAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,IAAAE,EAAA,mBAAAC,SAAAA,QAAA,IAAAF,GAAAC,EAAA,OAAAA,EAAAF,GAAA,GAAA,GAAAI,EAAA,OAAAA,EAAAJ,GAAA,GAAA,IAAAK,EAAA,IAAAC,MAAA,uBAAAN,EAAA,KAAA,MAAAK,EAAAE,KAAA,mBAAAF,EAAA,IAAAG,EAAAX,EAAAG,GAAA,CAAAS,QAAA,IAAAb,EAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,OAAAI,EAAAH,EAAAI,GAAA,GAAAL,IAAAA,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,OAAAD,EAAAG,GAAAS,QAAA,IAAA,IAAAL,EAAA,mBAAAD,SAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,IAAA,OAAAD,EAAA,CAAA,CAAAa,EAAA,CAAA,SAAAT,EAAAU,EAAAJ,8TCGaK,+KACMC,GACXC,QAAQC,IAAR,MAAkBF,EAAW,uHAGlBG,GACXF,QAAQC,IAAR,MAAkBC,EAAW,mHAGpBH,GACTC,QAAQC,IAAR,MAAkBF,EAAW,oEAVrCN,EAAAK,QAAAA,0lBCHA,IAAAK,EAAAhB,EAAA,0BACAiB,EAAAjB,EAAA,8BACAkB,EAAAlB,EAAA,4BACAmB,EAAAnB,EAAA,0BACAoB,EAAApB,EAAA,wBACAqB,EAAArB,EAAA,wBACAsB,EAAAtB,EAAA,uBACAuB,EAAAvB,EAAA,eACAwB,EAAAxB,EAAA,gBACAyB,EAAAzB,EAAA,gCACA0B,EAAA1B,EAAA,0BASa2B,aAUT,SAAAA,EAAYC,GAA2B,IAAAC,EAAAC,kGAAAC,CAAAD,KAAAH,GAEnCG,KAAKE,QAAUJ,EACfE,KAAKE,QAAQC,MAAQN,EAAKO,MAC1BJ,KAAKE,QAAQG,OAASR,EAAKS,OAE3BN,KAAKO,eAAiB,EAGtBP,KAAKQ,SAAWX,EAAKS,OAAS,KAG9B,IAAIG,QAAQ,SAAMC,EAAKC,GAAX,OAAkBC,EAAAb,OAAA,OAAA,EAAAc,mBAAAC,KAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAH,mBAAAI,KAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAE1BrC,QAAQC,IAAI,mBACZgB,KAAKqB,OAAS,IAAIC,SAASC,QAAQvB,KAAKE,QAAS,CAAEsB,WAAW,IAE7DxB,KAAKqB,OAAeI,cAAc,WACnCzB,KAAKqB,OAAOK,gBAAgB,IAC5B1B,KAAKqB,OAAOM,SAIZ5C,QAAQC,IAAIgB,KAAKqB,OAAQrB,KAAKE,SAG9Bd,EAAAwC,cAAcC,eAAe,SAAU,IAAIxC,EAAAyC,aAAa9B,OACxDZ,EAAAwC,cAAcG,iBAAiB,SAAU/B,KAAKqB,QAExCL,EAAS5B,EAAAwC,cAAcI,eAAe,UAG3ChC,KAAKqB,OAAeY,iBAAiB/C,EAAAgD,YAAYC,eAAgB,SAACxE,GAC/DoB,QAAQC,IAAIE,EAAAgD,YAAYE,YAExBpB,EAAOqB,KAAOC,KAAKC,KAA8B,IAAzBrD,EAAAgD,YAAYE,YAAkBI,aAvBhCtB,EAAAE,KAAA,GA0BpBlC,EAAAgD,YAAYO,WAAW,uBAAwBzC,KAAKqB,QACrDqB,MAAM,SAAAC,GACH5D,QAAQ6D,KAAK,wBAAyBD,KA5BpB,KAAA,GAAA,OA+B1BlD,EAAAZ,QAAQgE,QAAQ,+BA/BU3B,EAAAE,KAAA,GAkCpBxB,EAAAkD,YAAYC,eAAe,2BAC5BL,MAAM,SAAAC,GACHlD,EAAAZ,QAAQmE,MAAML,KApCI,KAAA,GAAA,OAAAzB,EAAAE,KAAA,GAwCpBjC,EAAA8D,gBAAgBF,eAAenD,EAAAkD,YAAYI,YAxCvB,KAAA,GAAA,OA4C1BlD,KAAKmD,mBAAmBvD,EAAAkD,YAAYM,oBAAoB,IAExD3D,EAAAZ,QAAQgE,QAAQ,mCA9CU3B,EAAAE,KAAA,GAiDpB1B,EAAA2D,QAAQC,QAjDY,KAAA,GAoD1BlE,EAAAwC,cAAcC,eAAe,OAAQ,IAAIvC,EAAAiE,WAAWvD,OACpDZ,EAAAwC,cAAcC,eAAe,OAAQ,IAAItC,EAAAiE,WAAWxD,OACpDZ,EAAAwC,cAAcC,eAAe,MAAO,IAAIrC,EAAAiE,UAAUzD,OAClDZ,EAAAwC,cAAcC,eAAe,eAAgB,IAAIlC,EAAA+D,mBAAmB1D,OAGpEZ,EAAAwC,cAAcG,iBAAiB,OAAQ/B,KAAKqB,QAK5CC,SAASqC,OAAOC,UAAY/D,EAAKgE,WACjCvC,SAASqC,OAAOG,GAAG,OAAQ9D,KAAK2B,OAAQ3B,MAExCU,IAlE0B,KAAA,GAAA,IAAA,MAAA,OAAAQ,EAAA6C,SAAAhD,EAAAf,gEA0ERgE,GACtBhE,KAAKiE,cAAgBD,6CAGCE,GACtBlE,KAAKmE,cAAgBD,yCAMFE,GAGnB,GAAe,MAAZA,EACC,IAAI,IAAIrG,EAAI,EAAGA,EAAIqG,EAAS1F,OAAQX,IAAK,CACrC,IAAMsG,EAAKD,EAASrG,GACpBsG,EAAGC,OAASD,EAAGE,OAASvE,KAAKQ,SACX,MAAf6D,EAAGD,UAAiC,MAAbC,EAAGC,QAAgBtE,KAAKwE,eAAeH,mCAO/D1G,GAEV,IAAM8G,GAAmC,GAAvBzE,KAAKO,cAAuBe,SAASqC,OAAOe,iBAAmB1E,KAAKO,cAAgB,EACtGP,KAAKO,cAAgBe,SAASqC,OAAOe,iBAGH,MAA/BtF,EAAAwC,cAAc+C,eAAuBvF,EAAAwC,cAAc+C,cAAchD,OAAO8C,GAM3EzE,KAAKqB,OAAOM,4CAaU,OAAO3B,KAAKE,QAAQC,0CACnB,OAAOH,KAAKE,QAAQG,qCAE1B,OAAOL,KAAKqB,uCACV,OAAOrB,KAAKQ,kDAEH,OAAOR,KAAKiE,uDACZ,OAAOjE,KAAKmE,mDAdX,OAAO,iCAIZ,OAAO,mCACN,OAAO,cAhJxC3F,EAAAqB,KAAAA,mnBCnBA,IAAAJ,EAAAvB,EAAA,eASa0G,wLAKsBC,EAAYC,GACvC,IAAMC,EAAU,CACZD,KAAAA,EACAD,IAAAA,EACAG,QAAQ,GAGZ,OADAJ,EAAWK,KAAKC,KAAKH,GACdA,mCAIYD,GACnB,IAAMC,EAAUH,EAAWO,iBAAiBL,GAC5C,OAAc,MAAXC,GACCA,EAAQC,QAAS,EACVD,EAAQF,KAEZ,oCAIUA,GACjB,IAAME,EAAUH,EAAWQ,gBAAgBP,GAC3C,OAAc,MAAXE,KACCA,EAAQC,QAAS,+CAQrBJ,EAAWS,MAAMC,QAAQ,SAAA/G,GACrBqG,EAAWW,OAAOhH,EAAEsG,gDAKGC,GAC3B,IAAMC,EAAUH,EAAWS,MAAMG,KAAM,SAAA1H,GAAA,OAAKA,EAAEgH,MAAQA,IAAShH,EAAEkH,SAEjE,OADc,MAAXD,GAAiBtF,EAAAZ,QAAQmE,MAAM,yEAC3B+B,0CAEmBF,GAC1B,OAAOD,EAAWS,MAAMG,KAAM,SAAA1H,GAAA,OAAKA,EAAE+G,KAAOA,iCAQ5C,OADuB,MAApBD,EAAWS,QAAeT,EAAWS,MAAQ,IACzCT,EAAWS,eAzD1B7G,EAAAoG,WAAAA,gWCRA,IAAAa,EAAAvH,EAAA,YACAgB,EAAAhB,EAAA,2BAMawH,cAYT,SAAAA,EAAYC,gGAAqB1F,CAAAD,KAAA0F,GAAA,IAAA3F,mKAAA6F,CAAA5F,MAAA0F,EAAAG,WAAAC,OAAAC,eAAAL,IAAAjH,KAAAuB,KACvB2F,EAAYzG,EAAAgD,YAAY8D,aAAaC,oBADd,OAG7BlG,EAAKmG,OAAS,EACdnG,EAAKoG,sBAAwB,IAE7BpG,EAAKqG,YAAc,GACnBrG,EAAKsG,aAAc,EACnBtG,EAAKuG,WAAY,EACjBvG,EAAKwG,YAAa,EAClBxG,EAAKyG,oBAAqB,EAE1BzG,EAAK0G,QAAQC,YAAYhB,EAAIiB,UAAUC,MAZV7G,qUAZZ0F,EAAAoB,+GAwCV,IAAAC,EAAA9G,KAEP,IAAGA,KAAKwD,WAAWuD,mBAGf/G,KAAKwG,mBAAT,CAEAxG,KAAKqG,aAAc,EACnBrG,KAAKwG,oBAAqB,EAG1BxG,KAAKgH,EAAIhH,KAAKwD,WAAW3D,KAAKoH,MAAMC,OAGpC,IAAMC,EAASnH,KAAKwD,WAAW3D,KAAKoH,MAAMG,OAAS,EAAKpH,KAAKqH,MAC7DrH,KAAKsH,WAAahG,SAASiG,MACtBC,IAAIxH,KAAKyG,SACTgB,GAAG,CAAEC,EAAE1H,KAAKwD,WAAW3D,KAAKoH,MAAMG,QAAUD,EAAO7F,SAASqG,KAAKC,QACjEnJ,KAAK,WAEFqI,EAAKT,aAAc,EAGnBS,EAAKL,QAAQC,YAAYhB,EAAIiB,UAAUkB,MAEtCf,EAAKL,QAAgB3C,GAAG,eAAgB,WACrCgD,EAAKL,QAAQC,YAAYhB,EAAIiB,UAAUmB,QACxC,GAGH,IAAMC,EAASjB,EAAKtD,WAAWwE,gBAAgBlB,EAAKE,EAAIF,EAAKmB,GAG1C,EAAhBF,EAAOrJ,OAAYoI,EAAKoB,OAAOH,GAC7BjB,EAAKqB,+DAQA,IAAAC,EAAApI,KAClBA,KAAKyG,QAAQC,YAAYhB,EAAIiB,UAAUC,MAGvCtF,SAASiG,MAAMc,aAAarI,KAAKyG,SACjC,IAAMU,EAASnH,KAAKiI,EAAI,EAAKjI,KAAKqH,MAClCrH,KAAKsH,WAAahG,SAASiG,MAAMC,IAAIxH,KAAKyG,SACrC6B,KAAK,KACLb,GAAG,CAACC,EAAE,IAAKP,EAAO7F,SAASqG,KAAKY,QAChC9J,KAAK,WAEF2J,EAAKI,gDAIHT,GAAa,IAAAU,EAAAzI,KACvB,KAAG+H,EAAOrJ,QAAU,GAApB,CAGA,IAAIgK,IAFJ1I,KAAKsG,WAAY,GAiBjB,GAbAyB,EAAOzC,QAAQ,SAAAtH,IACwB,GAAhCyK,EAAKrC,YAAYuC,QAAQ3K,KAC5B0K,GAAa,EAEb1K,EAAE0E,QAGF+F,EAAKrC,YAAYlB,KAAKlH,GAGtBA,EAAEiK,EAAIQ,EAAKR,KAGXS,EAAJ,CAIApH,SAASiG,MAAMc,aAAarI,KAAKyG,SACjC,IAAMU,EAAQnH,KAAKiI,EAAIjI,KAAKqH,MAC5BrH,KAAKsH,WAAahG,SAASiG,MAAMC,IAAIxH,KAAKyG,SACrC6B,KAAK,KACLb,GAAG,CAACC,GAAG,IAAKP,EAAO7F,SAASqG,KAAKY,QACjC9J,KAAK,WAEFgK,EAAKD,eACLC,EAAKnC,WAAY,qCAMzBtG,KAAKoG,YAAYd,QAAQ,SAAAtH,GAAA,OAAKA,EAAE4K,YAChC5I,KAAKoG,YAAc,oCAIV,IAAAyC,EAAA7I,KACTA,KAAKuG,YAAa,EAGlBjF,SAASiG,MAAMc,aAAarI,KAAKyG,SACjCzG,KAAKyG,QAAQC,YAAYhB,EAAIiB,UAAUmC,IACvC9I,KAAKsH,WAAahG,SAASiG,MAAMC,IAAIxH,KAAKyG,SACrC6B,KAAK,IACLb,GAAG,CAACC,EAAE,IAAK,IAAKpG,SAASqG,KAAKY,QAC9B9J,KAAK,WAEFoK,EAAKL,eACLK,EAAKpC,QAAQC,YAAYhB,EAAIiB,UAAUC,2CAM/C5G,KAAK+I,SACL/I,KAAKgJ,8CAGU,IAAAC,EAAAjJ,KAEQ,MAApBA,KAAKoG,cACJpG,KAAKoG,YAAYd,QAAQ,SAAAtH,GACrBiL,EAAKzF,WAAW0F,YAAYlL,KAEhCgC,KAAKoG,YAAc,IAIvBpG,KAAKwG,oBAAqB,EAC1BxG,KAAKuG,YAAa,EAClBvG,KAAKsG,WAAY,EACjBtG,KAAKqG,aAAc,iCAKhB5B,GAAe,IAAA0E,EAAAnJ,KAElB,IAAGA,KAAKwD,WAAWuD,kBAAnB,CAMA,4PAJAqC,CAAA1D,EAAA2D,UAAAxD,WAAAC,OAAAC,eAAAL,EAAA2D,WAAA,SAAArJ,MAAAvB,KAAAuB,KAAayE,GAIVzE,KAAKsG,YAActG,KAAKuG,WAAY,CAEnC,IAAMwB,EAAS/H,KAAKwD,WAAWwE,gBAAgBhI,KAAKgH,EAAIhH,KAAKiI,GAE1C,EAAhBF,EAAOrJ,QACNsB,KAAKkI,OAAOH,GAIpB,GAAG/H,KAAKsG,WAAatG,KAAKqG,YAEtB,IAAIrG,KAAKuG,WAGL,GADqBvG,KAAKwD,WAAW8F,cAActJ,KAAKgH,EAAGhH,KAAKiI,GAG5D,YADAjI,KAAKuJ,WAOM,MAApBvJ,KAAKoG,aACJpG,KAAKoG,YAAYd,QAAQ,SAAAtH,GACrBA,EAAEiK,EAAIkB,EAAKlB,EAAI,oCAyBvB,IAAMuB,EAA6C,EAA1BxJ,KAAKoG,YAAY1H,OAAc,GAAKsB,KAAKoG,YAAY1H,OAASsB,KAAKmG,uBAAyB,EAGrH,OAFApH,QAAQC,IAAIwK,GAELA,EAAiBxJ,KAAKkG,qBAEhBuD,GAAgBzJ,KAAKkG,OAASuD,uCAzBd,OAAO,sCAEpC,OAAO3D,OAAO4D,OAAO,CACjB9C,KAAS,YACT+C,MAAU,YACV9B,KAAS,YACTC,KAAS,YACTgB,GAAO,uBA/NnBtK,EAAAkH,IAAAA,8XCJamB,aAUT,SAAAA,EAAYlB,EAAuBiE,gGAAgC3J,CAAAD,KAAA6G,GAC/D7G,KAAK6J,YAAclE,EACnB3F,KAAKyG,QAAU,IAAInF,SAASwI,OAAOF,GACnC5J,KAAK+J,WAAa,CAAEC,EAAE,EAAGtC,EAAE,GAE3B1H,KAAKiK,sBAAuB,EAC5BjK,KAAKkK,sBAAwB,EAG7BlK,KAAKQ,SAAWR,KAAK6J,YAAYhK,KAAKsK,iDAI5BC,GAQV,OAJgB,MAAbA,EACCpK,KAAK6J,YAAYhK,KAAKoH,MAAMoD,SAASrK,KAAKyG,SAE1C2D,EAAUC,SAASrK,KAAKyG,SACrBzG,uCAIP,OAAmB,MAAhBA,KAAKyG,SAA0C,MAAvBzG,KAAKyG,QAAQ6D,OAAuB,MAG/DtK,KAAKyG,QAAQ6D,OAAOC,YAAYvK,KAAKyG,SAE9BzG,qCAGGyE,GAGPzE,KAAKiK,uBACJjK,KAAKkK,wBAEFlK,KAAKkK,sBAAwBrD,EAAO2D,mBACnCxK,KAAKiK,sBAAuB,mDAKpCjK,KAAKiK,sBAAuB,4CAGmC,IAAzCQ,EAAyC,EAAAC,UAAAhM,aAAAiM,IAAAD,UAAA,GAAAA,UAAA,GAAJ,KACvDE,EAAM,CAAEZ,EAAEhK,KAAKyG,QAAQoE,KAAMnD,EAAE1H,KAAKyG,QAAQqE,MAC5B,MAAjBL,IACCG,EAAM,CACFZ,EAAwB,EAApBhK,KAAK+J,WAAWC,EAAShK,KAAK+K,OAAOC,MAAQP,EAAcT,EAAKhK,KAAK+K,OAAOC,OAAS,EAAIP,EAAcT,GAC3GtC,EAAwB,EAApB1H,KAAK+J,WAAWrC,EAAS1H,KAAK+K,OAAOE,OAASR,EAAc/C,EAAK1H,KAAK+K,OAAOE,QAAU,EAAIR,EAAc/C,KAIrH,IAAMwD,EAAiBlL,KAAK6J,YAAYhK,KAAKsL,WACvCC,GAD2DpL,KAAK6J,YAAYhK,KAAKwL,YAE5D,EAApBrL,KAAK+J,WAAWC,EAAUhK,KAAK+K,OAAOC,MAAQJ,EAAIZ,GAAMY,EAAIZ,GACxC,EAApBhK,KAAK+J,WAAWrC,GAAU1H,KAAK+K,OAAOE,OAASL,EAAIlD,EAI1D,OAAI1H,KAAKgH,EAAIoE,EAAaF,EAAqBrE,EAAOyE,IAAIC,MAClDvL,KAAKgH,EAAIoE,EAAY,EAAUvE,EAAOyE,IAAIE,UAA7C,qCASoB,OAAOxL,KAAK6J,2CAEnB,OAAO7J,KAAKyG,uCACZ,OAAOzG,KAAKyG,QAAQ6D,iCAEzB,OAAOtK,KAAKyG,QAAQuD,gBACxBP,GAASzJ,KAAKyG,QAAQuD,EAAIP,4BACtB,OAAOzJ,KAAKyG,QAAQiB,gBACxB+B,GAASzJ,KAAKyG,QAAQiB,EAAI+B,mCAEjBA,GAClB,IAAMgC,EAAQzL,KAAK+J,WAAWC,EAC9BhK,KAAK+J,WAAWC,EAAIP,EAEjBzJ,KAAK+J,WAAWC,GAAKyB,IAAOzL,KAAKyG,QAAQnC,SAAW,kCAIvD,IAAI4G,EAASlL,KAAKyG,QAAQiF,YAC1B,MAAQ,CAAEV,MAAME,EAAO/K,MAAO8K,OAAOC,EAAO7K,oDAGb,OAAOL,KAAKiK,gEAzBR,OAAO,+BACpB,OAAOnE,OAAO4D,OAAO,CAACiC,IAAI,EAAGJ,MAAM,EAAGK,OAAO,EAAGJ,KAAK,aAlFnFhN,EAAAqI,OAAAA,6kBCHA,IAAApB,EAAAvH,EAAA,YACAgB,EAAAhB,EAAA,2BAEAuB,EAAAvB,EAAA,gBAGa2N,cAOT,SAAAA,EAAYlG,EAAuBiE,gGAAiC3J,CAAAD,KAAA6L,GAAA,IAAA9L,mKAAA6F,CAAA5F,MAAA6L,EAAAhG,WAAAC,OAAAC,eAAA8F,IAAApN,KAAAuB,KAC1D2F,EAAYiE,GAAe1K,EAAAgD,YAAY8D,aAAa8F,qBADM,OAEhE/L,EAAKmG,OAAS,EAEdnG,EAAKgM,WAAY,EACjBhM,EAAKiM,cAAe,EAEpBjM,EAAK0G,QAAQC,YAAYmF,EAAKlF,UAAUsF,MAPwBlM,qUAP9C0F,EAAAoB,iDAyBlB7G,KAAKkM,UAAYlM,KAAKiI,kCAInBjI,KAAK+L,YAERtM,EAAAZ,QAAQC,QAAQ,qBAChBkB,KAAK+L,WAAY,EAEjB/L,KAAKyG,QAAQC,YAAYmF,EAAKlF,UAAUwF,0CAIxCnM,KAAK+L,WAAY,EAEjB/L,KAAKgM,cAAe,kCAKThC,EAAUtC,GACrB,OAAO1H,KAAKyG,QAAQ2F,QAAQpC,EAAGtC,qCAY/B,OALA1H,KAAK+L,WAAY,EAEjB/L,KAAKyG,QAAQC,YAAYmF,EAAKlF,UAAUsF,MAExCjM,KAAKqM,UACLjD,EAAAyC,EAAAxC,UAAAxD,WAAAC,OAAAC,eAAA8F,EAAAxC,WAAA,UAAArJ,MAAAvB,KAAAuB,qCAGGyE,GAOH,GANA2E,EAAAyC,EAAAxC,UAAAxD,WAAAC,OAAAC,eAAA8F,EAAAxC,WAAA,SAAArJ,MAAAvB,KAAAuB,KAAayE,GAGTzE,KAAK+L,YACL/L,KAAKgH,GAAKhH,KAAKkG,OAASzB,EAAWzE,KAAK+J,WAAWC,GAEpDhK,KAAKgM,aAEJ,GAAuC,GAApC1J,KAAKgK,IAAItM,KAAKiI,EAAIjI,KAAKkM,WAAiB,CACvC,IAAMK,EAAQvM,KAAKiI,EAAIjI,KAAKkM,UAC5BlM,KAAKiI,GAAMsE,GAAU,GAAK,QAG1BvM,KAAKgM,cAAe,EACpBhM,KAAKyG,QAAQC,YAAYmF,EAAKlF,UAAUsF,MAKhD,IAAIjM,KAAKwM,oBAIL,OADYxM,KAAKyM,gBAAgB,CAACzC,EAAE,GAAKtC,EAAE,MAEvC,KAAKjC,EAAAoB,OAAOyE,IAAIC,MACZvL,KAAK+J,WAAWC,IAAM,EACtBhK,KAAKyG,QAAQnC,SAAW,EACxBtE,KAAK0M,uBACL1M,KAAKgH,GAAK,EAAIhH,KAAK+K,OAAOC,MAC1B,MACJ,KAAKvF,EAAAoB,OAAOyE,IAAIE,KACZxL,KAAK+J,WAAWC,IAAM,EACtBhK,KAAKyG,QAAQnC,SAAW,EACxBtE,KAAK0M,uBACL1M,KAAKgH,GAAK,EAAIhH,KAAK+K,OAAOC,0GAsBrB,OAAOhL,KAAKkG,qBAChBuD,GAAgBzJ,KAAKkG,OAASuD,sCAP3C,OAAO3D,OAAO4D,OAAO,CACjBuC,KAAS,WACTU,KAAS,WACTR,MAAU,uBAnHtB3N,EAAAqN,KAAAA,uoBCNA,IAAApG,EAAAvH,EAAA,YACAgB,EAAAhB,EAAA,2BAMa0O,cAST,SAAAA,EAAYjH,gGAAqB1F,CAAAD,KAAA4M,GAAA,IAAA7M,mKAAA6F,CAAA5F,MAAA4M,EAAA/G,WAAAC,OAAAC,eAAA6G,IAAAnO,KAAAuB,KACvB2F,EAAYzG,EAAAgD,YAAY8D,aAAa6G,qBADd,OALzB9M,EAAA+M,UAAmB,GACnB/M,EAAAgN,iBAA0B,EAM9BhN,EAAKmG,OAAS,EAEdnG,EAAKgM,WAAY,EAEjBhM,EAAK0G,QAAQC,YAAYkG,EAAOjG,UAAUC,MANb7G,qUATT0F,EAAAoB,0CA0BpB7G,KAAKyG,QAAQC,YAAYkG,EAAOjG,UAAUqG,OAE1ChN,KAAK+M,iBAAmB/M,KAAK8M,0CAKlB9C,EAAUtC,EAAUuF,GAC/B,OAAQjD,GAAKhK,KAAKgH,EAAIiG,EAAIlC,OAAOC,OAAShB,GAAKhK,KAAKgH,EAAIhH,KAAK+K,OAAOC,OAC7DtD,GAAK1H,KAAKiI,EAAIgF,EAAIlC,OAAOE,QAAUvD,GAAK1H,KAAKiI,EAAIjI,KAAK+K,OAAOE,yCAapE,OALAjL,KAAK+L,WAAY,EAEjB/L,KAAKyG,QAAQC,YAAYkG,EAAOjG,UAAUC,MAE1C5G,KAAKqM,UACLjD,EAAAwD,EAAAvD,UAAAxD,WAAAC,OAAAC,eAAA6G,EAAAvD,WAAA,UAAArJ,MAAAvB,KAAAuB,qCAGGyE,GAiBH,GAhBA2E,EAAAwD,EAAAvD,UAAAxD,WAAAC,OAAAC,eAAA6G,EAAAvD,WAAA,SAAArJ,MAAAvB,KAAAuB,KAAayE,GAGTzE,KAAK+L,YACL/L,KAAKgH,GAAKhH,KAAKkG,OAASzB,EAAWzE,KAAK+J,WAAWC,GAG3B,GAAzBhK,KAAK+M,mBACJ/M,KAAK+M,mBACuB,GAAzB/M,KAAK+M,kBAEJ/M,KAAKyG,QAAQC,YAAYkG,EAAOjG,UAAUuG,WAK9ClN,KAAKwM,oBAIL,OADYxM,KAAKyM,gBAAgB,CAACzC,EAAE,GAAKtC,EAAE,MAEvC,KAAKjC,EAAAoB,OAAOyE,IAAIC,MACZvL,KAAK+J,WAAWC,IAAM,EACtBhK,KAAKyG,QAAQnC,SAAW,EACxBtE,KAAK0M,uBACL1M,KAAKgH,GAAK,EAAIhH,KAAK+K,OAAOC,MAC1B,MACJ,KAAKvF,EAAAoB,OAAOyE,IAAIE,KACZxL,KAAK+J,WAAWC,IAAM,EACtBhK,KAAKyG,QAAQnC,SAAW,EACxBtE,KAAK0M,uBACL1M,KAAKgH,GAAK,EAAIhH,KAAK+K,OAAOC,yGAlFtB,MAAO,uCAwGN,OAAOhL,KAAKkG,qBAChBuD,GAAgBzJ,KAAKkG,OAASuD,sCAP3C,OAAO3D,OAAO4D,OAAO,CACjB9C,KAAS,aACToG,MAAU,cACVE,QAAY,2BAtGxB1O,EAAAoO,OAAAA,0XCRA,IAAA1N,EAAAhB,EAAA,8BACAiP,EAAAjP,EAAA,WAGakP,cAET,SAAAA,EAAYzH,gGAAqB1F,CAAAD,KAAAoN,GAAA,IAAArN,mKAAA6F,CAAA5F,MAAAoN,EAAAvH,WAAAC,OAAAC,eAAAqH,IAAA3O,KAAAuB,KACvB2F,EAAYzG,EAAAgD,YAAY8D,aAAaqH,yBADd,OAE7BtN,EAAK0G,QAAQC,YAAY0G,EAAWE,eAAe1G,MAFtB7G,qUAFLoN,EAAAtB,qDASxB,OAAO/F,OAAO4D,OAAO,CACjB9C,KAAS,sBAVrBpI,EAAA4O,WAAAA,mICJA,IAAAG,EAAArP,EAAA,UAEAsP,SAASvL,iBAAiB,mBAAoB,WAC7B,IAAIsL,EAAA1N,KAAK2N,SAASC,eAAe,ynBCerC3K,sLAMoB4K,GAAmB,IAAA3N,EAAAC,KAC5C,OAAO,IAAIS,QAAoB,SAAMC,EAAKC,GAAX,OAAkBC,EAAAb,OAAA,OAAA,EAAAc,mBAAAC,KAAA,SAAAC,IAAA,IAAA+F,EAAA9G,KAAA,OAAAa,mBAAAI,KAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAAAF,EAAAE,KAAA,EACvCuM,MAAMD,GACPE,KAAK,SAAAC,GAAA,OAAQA,EAAKC,SAClBF,KAAK,SAAAE,GACFhH,EAAKiH,YAAcD,EACnBpN,EAAIoG,EAAKiH,eAEZrL,MAAM,SAAAC,GACHhC,EAAI,8BAAgCgC,KARC,KAAA,EAAA,IAAA,MAAA,OAAAzB,EAAA6C,SAAAhD,EAAAf,uDAcnBgO,GAE9B,IAAIC,EAAU,GAAGC,OAAOC,MAAM,GAAIrL,EAAYiL,YAAYK,QAC1D,OAAGJ,EAAQC,EAAQvP,OACRuP,EAAQD,GACZ,iDAKuBhK,GAG9B,MADc,GAAGkK,OAAOC,MAAM,GAAIrL,EAAYiL,YAAYK,QAC3CzF,QAAQ3E,wCAIAqK,GACvB,IAAIL,EAAQK,EAIZ,OAHgC,MAA7BA,IAAmCL,EAAQhO,KAAKsO,oBAAoBD,IAGhErO,KAAKoD,oBAAoB4K,EAAQ,wCAIjBhK,GAEvB,IAAI,IAAIjG,EAAI,EAAGA,EAAI+E,EAAYiL,YAAYK,OAAO1P,OAAQX,IAEtD,IADA,IAAMwQ,EAAQzL,EAAYiL,YAAYK,OAAOrQ,GACrCH,EAAI,EAAGA,EAAK2Q,EAAc7P,OAAQd,IACtC,GAAG2Q,EAAM3Q,IAAMoG,EAAW,MAAO,CAAEuK,MAAMxQ,EAAGyQ,MAAM5Q,GAI1D,MAAO,CAAE2Q,OAAO,EAAGC,OAAO,sCAMc,OAAO1L,EAAYiL,kDAC3B,MAAO,GAAGG,OAAOC,MAAM,GAAIrL,EAAYiL,YAAYK,iBA/D3F5P,EAAAsE,YAAAA,+lBClBaZ,+KAuBLA,EAAYuM,aAAe,EAC3BvM,EAAYwM,cAAgB,EAE5BxM,EAAYyM,YAAc,EAC1BzM,EAAY0M,mBAAqB,EACjC1M,EAAY2M,aAAe,qCAGNC,EAAYC,GAAsB,IAAAhP,EAAAC,KAIvD,OAHAkC,EAAY8M,QACZ9M,EAAYb,OAAS0N,EAEd,IAAItO,QAAQ,SAAMC,EAAKC,GAAX,OAAkBC,EAAAb,OAAA,OAAA,EAAAc,mBAAAC,KAAA,SAAAC,IAAA,OAAAF,mBAAAI,KAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EACjCc,EAAY+M,gBAAkB,IAAI3N,SAAS4N,UAG3C5N,SAAS6N,MAAMC,gBAAgB,CAAC9N,SAAS+N,eAAgB/N,SAASgO,gBAAiBhO,SAASiO,mBAC5FjO,SAAS6N,MAAMK,oBAAsB,CAAC,MAAM,OAC5CtN,EAAY+M,gBAAgBQ,cAAcnO,SAAS6N,OAGlDjN,EAAY+M,gBAAwBnL,GAAG,WAAY5B,EAAYwN,UAAWxN,GAC1EA,EAAY+M,gBAAwBnL,GAAG,WAAY5B,EAAYyN,YAAazN,GAC5EA,EAAY+M,gBAAwBnL,GAAG,QAAS5B,EAAY0N,SAAU1N,GAGvEyL,MAAMmB,GACDlB,KAAK,SAAAC,GAAA,OAAQA,EAAKC,SAClBF,KAAK,SAAAiC,GAEF3N,EAAY+M,gBAAgBa,kBAAkB,GAC9C5N,EAAY+M,gBAAgBc,aAAaF,GAExC3N,EAAYb,OAAeY,iBAAiBC,EAAY8N,cAAe,WACpEtP,QAGPgC,MAAM,WACHR,EAAY+N,iBACZtP,EAAI,4BA3BqB,KAAA,EAAA,IAAA,MAAA,OAAAO,EAAA6C,SAAAhD,EAAAf,qDAqCZ,MAAtBkC,EAAYb,QAAiBa,EAAYb,OAAe6O,cAAchO,EAAYiO,4DAG5D,MAAtBjO,EAAYb,QAAiBa,EAAYb,OAAe6O,cAAchO,EAAYkO,8DAGrFlO,EAAYyM,YAAc0B,YAAYnO,EAAY+M,gBAAgBqB,UAAS,GAAM5R,OAASwD,EAAY+M,gBAAgBqB,UAAS,GAAO5R,QAAQ6R,QAAQ,IAC7H,MAAtBrO,EAAYb,QAAiBa,EAAYb,OAAe6O,cAAchO,EAAYsO,yDAI7DC,EAAaC,GACrCxO,EAAY8D,aAAayK,GAAQC,EAEjCxO,EAAYwM,kDAIS/Q,GAIrB,OAFAoB,QAAQC,IAAI,iBAAmBrB,EAAEgT,KAAK7B,IAAM,UAAYnR,EAAEgT,KAAK7L,MAExDnH,EAAEgT,KAAK7L,MACV,KAAMxD,SAAiBsP,MAAMC,WAEzB3O,EAAYuM,eAEZ,IAAMiC,EAASI,OAAOnT,EAAEgT,KAAKI,IAAYC,aAGrCN,EAAMO,SAML/O,EAAYgP,aAAavT,EAAEgT,KAAKI,GAAIL,GALrCA,EAAM5M,GAAG,WAAY,SAACqN,GAClBjP,EAAYgP,aAAavT,EAAEgT,KAAKI,GAAIL,GACpCS,EAAGC,WAIX,MAEJ,KAAM9P,SAAiBsP,MAAMS,MAEzBnP,EAAYoP,OAAO3T,EAAEgT,KAAKI,IAAM,IAAIzP,SAASiQ,OAAO5T,EAAEgT,KAAK7B,KAOnE5M,EAAYsP,uDAGW7T,GAKvB,GAHCuE,EAAY+M,gBAAwBwC,0BAGlCvP,EAAYwM,cAAgBxM,EAAYuM,aAClBiD,YAAY,SAACP,GAEEjP,EAAYuM,cAAzCvM,EAAYwM,gBACX/Q,EAAEyT,SAEFlP,EAAYyP,oBAEjB,UAEFzP,EAAYyP,mDAGGhU,GACpBuE,EAAY+N,uDA7I2B,MAAO,uDACP,MAAO,wDACN,MAAO,qDA+IX,OAAO/N,EAAYyM,qBA7I7CzM,EAAA8D,aAAqD,GACrD9D,EAAAoP,OAA0C,GAIzCpP,EAAAuM,aAAsB,EACtBvM,EAAAwM,cAAuB,EAEvBxM,EAAAyM,YAAqB,EACrBzM,EAAA0M,mBAA4B,EAC5B1M,EAAA2M,aAAsB,EAEtB3M,EAAAiO,kBAAwB,IAAK7O,SAAiBsQ,MAAM1P,EAAY8N,eAAe,GAAO,GACtF9N,EAAAkO,kBAAwB,IAAK9O,SAAiBsQ,MAAM1P,EAAY2P,eAAe,GAAO,GACtF3P,EAAAsO,mBAAyB,IAAKlP,SAAiBsQ,MAAM1P,EAAYC,gBAAgB,GAAO,GAnB3G3D,EAAA0D,YAAAA,sVCaae,sLAQoB6O,GACzB7O,EAAgB8K,YAAc+D,EAI9B/S,QAAQC,IAAI8S,GAEZ7O,EAAgB8O,gBAAkBD,EAAW1D,OAAO4D,IAAI,SAAAzD,GACpD,MAAO,GAAGL,OAAOC,MAAM,GAAII,GACtByD,IAAI,SAAAxD,GACD,MAAO,CAAEyD,UAAU,EAAOC,WAAW,OAGjDjP,EAAgBkP,kBAAoBL,EAAW1D,OAAO4D,IAAI,SAAAzD,GACtD,MAAO,GAAGL,OAAOC,MAAM,GAAII,GACtByD,IAAI,SAAAxD,GACD,OAAGA,EAAM4D,QAAgB,CAAEC,WAAW,EAAOC,QAAQ9D,EAAM8D,SACpD,SAKnBrP,EAAgB8O,gBAAgB,GAAG,GAAGE,UAAW,EAEjDlT,QAAQC,IAAI,WAAYiE,EAAgB8O,gBAAiB9O,EAAgBkP,mBAGzElP,EAAgBsP,wDAIQC,EAAmBC,GAE3C,IAAMjE,EAAQvL,EAAgB8O,gBAAgBS,GAAYC,GAC1D,GAAY,MAATjE,EAAH,CACAA,EAAM0D,WAAY,EAIlB,IAAMQ,EAAYzP,EAAgB8O,gBAAgBS,GAAYC,EAAW,GACzE,GAAgB,MAAbC,EACCA,EAAUT,UAAW,MAEpB,CACD,IAAMU,EAAY1P,EAAgB8O,gBAAgBS,EAAW,GAAG,GAChD,MAAbG,IAAmBA,EAAUV,UAAW,GAI/ChP,EAAgB2P,yDAISJ,EAAmBC,GAE5C,IAAMjE,EAAQvL,EAAgBkP,kBAAkBK,GAAYC,GAChD,MAATjE,IACHA,EAAM6D,WAAY,EAGlBpP,EAAgB2P,2DAKhB7T,QAAQC,IAAI,mBAAoBiE,EAAgB4P,cAEhDrF,SAASsF,OAAT,YAA8BC,KAAKC,UAAU/P,EAAgB4P,cAA7D,oDAMA,IAAMC,EAAS7P,EAAgBgQ,WAAW,YAC1C,GAAa,MAAVH,EAAgB,CAEf,IAAMjD,EAAOkD,KAAKG,MAAMJ,GACxB7P,EAAgB8O,gBAAkBlC,EAAKsD,OACvClQ,EAAgBkP,kBAAoBtC,EAAKuD,6CAMvBC,GAItB,IAHA,IAAI5C,EAAO4C,EAAQ,IAEfC,EADgBC,mBAAmB/F,SAASsF,QACzBU,MAAM,KACrBzV,EAAI,EAAGA,EAAGuV,EAAG5U,OAAQX,IAAK,CAE9B,IADA,IAAIE,EAAIqV,EAAGvV,GACW,KAAfE,EAAEwV,OAAO,IAChBxV,EAAIA,EAAEyV,UAAU,GAEhB,GAAuB,GAAnBzV,EAAE0K,QAAQ8H,GACd,OAAOxS,EAAEyV,UAAUjD,EAAK/R,OAAQT,EAAES,QAGtC,MAAO,wCAOP,MAAO,CACHyU,OAASlQ,EAAgB8O,gBACzBqB,SAAWnQ,EAAgBkP,4BAlHvC3T,EAAAyE,gBAAAA,2lBCbA,IAAA0Q,EAAAzV,EAAA,qBAEa0D,sLAOoBgS,EAAYC,GAEG,MAArCjS,EAAckS,eAAeF,KAC5BhS,EAAckS,eAAeF,GAAOC,4CAIbD,GAC3B,OAAwC,MAArChS,EAAckS,eAAeF,KAEhChS,EAAckS,eAAeF,GAAO,YAC7BhS,EAAckS,eAAeF,IAC7B,4CAIoBC,EAAwB9E,GAAsB,IAAAhP,EAAAC,KACrE+T,EAAa,KAKjB,GAAiB,OAJYA,EAA1BF,aAAkBF,EAAAK,OAAqBH,EACxBjS,EAAckS,eAAeD,IAGxB,OAAOpT,QAAQwT,UAEtC,IAAIC,EAAW,GAmBf,OAjBmC,MAAhCtS,EAAcuS,gBACjBD,EAAShP,KACL,IAAIzE,QAAQ,SAAMC,GAAN,OAAaE,EAAAb,OAAA,OAAA,EAAAc,mBAAAC,KAAA,SAAAC,IAAA,OAAAF,mBAAAI,KAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAErBE,SAASiG,MACJC,IAAI5F,EAAcuS,eAAeC,WACjC3M,GAAG,CAAE4M,MAAM,GAAK,IAAK/S,SAASqG,KAAKY,QACnC9J,KAAK,WACFmD,EAAcuS,eAAeG,UAC7B1S,EAAcuS,eAAe9H,UAC7B3L,MARa,KAAA,EAAA,IAAA,MAAA,OAAAQ,EAAA6C,SAAAhD,EAAAf,YAetB,IAAIS,QAAQ,SAAMC,GAAN,OAAaE,EAAAb,OAAA,OAAA,EAAAc,mBAAAC,KAAA,SAAAyT,IAAA,OAAA1T,mBAAAI,KAAA,SAAAuT,GAAA,OAAA,OAAAA,EAAArT,KAAAqT,EAAApT,MAAA,KAAA,EAAA,OAAAoT,EAAApT,KAAA,EAEtBX,QAAQgU,IAAIP,GAFU,KAAA,GAK5BtS,EAAcuS,eAAiBJ,GACFW,OAAO3F,GACpCnN,EAAcuS,eAAeC,UAAUC,MAAQ,EAC/CzS,EAAcuS,eAAe9H,UAC7BtN,QAAQC,IAAI,WAEZsC,SAASiG,MACJC,IAAI5F,EAAcuS,eAAeC,WACjC3M,GAAG,CAAE4M,MAAM,GAAK,KAAM/S,SAASqG,KAAKY,QACpC9J,KAAK,WACFM,QAAQC,IAAI,QACZ4C,EAAcuS,eAAeQ,SAC7BjU,MAjBoB,KAAA,EAAA,IAAA,MAAA,OAAA8T,EAAAzQ,SAAAwQ,EAAAvU,kDAuBP4T,GACzB,OAAOhS,EAAckS,eAAeF,sCAMP,OAAOhS,EAAckS,qDAClB,OAAOlS,EAAcuS,wBAhF1CvS,EAAAkS,eAAyC,GACzClS,EAAAuS,eAAwB,KAF3C3V,EAAAoD,cAAAA,62BCFA,IAAA+R,EAAAzV,EAAA,YACAkB,EAAAlB,EAAA,6BACA0W,EAAA1W,EAAA,2BAEAgB,EAAAhB,EAAA,2BAEA0B,EAAA1B,EAAA,2BAEAuB,EAAAvB,EAAA,gBAEauF,cAUT,SAAAA,EAAYoR,gGAAS5U,CAAAD,KAAAyD,GAAA,IAAA1D,mKAAA6F,CAAA5F,MAAAyD,EAAAoC,WAAAC,OAAAC,eAAAtC,IAAAhF,KAAAuB,OAGjBD,EAAK+U,MAAQD,EACb9U,EAAKgV,SAAU,EAGf,IAAMC,EAAK,IAAI1T,SAASwI,OAAO5K,EAAAgD,YAAY8D,aAAaiP,YAAa,MAPpD,OAQjBlV,EAAKmV,WAAW7K,SAAS2K,GAEzBjV,EAAKoV,kBAAoB,IAAIP,EAAAR,UAAUQ,EAAAR,UAAUgB,eAAeC,kBAChEtV,EAAKoV,kBAAkBG,QAAQ,CAC3BC,YAAc,IAAIjU,SAASwI,OAAO5K,EAAAgD,YAAY8D,aAAaiP,YAAa,eACxEO,aAAe,IAAIlU,SAASwI,OAAO5K,EAAAgD,YAAY8D,aAAaiP,YAAa,gBACzEQ,YAAc,IAAInU,SAASwI,OAAO5K,EAAAgD,YAAY8D,aAAaiP,YAAa,iBAE5ElV,EAAKmV,WAAW7K,SAAStK,EAAKoV,kBAAkBf,WAGhDrU,EAAK2V,aAAe,IAAIpU,SAASwI,OAAO5K,EAAAgD,YAAY8D,aAAaiP,YAAa,YAC9ElV,EAAK4V,SAAW,IAAIrU,SAASwI,OAAO5K,EAAAgD,YAAY8D,aAAaiP,YAAa,WAC1ElV,EAAK2V,aAAa1L,EAAIjK,EAAK+U,MAAM3J,WAAa,EAAKpL,EAAK2V,aAAahK,YAAYvL,MAAQ,EACzFJ,EAAK2V,aAAahO,EAAI,IACtB3H,EAAK4V,SAAS3L,EAAIjK,EAAK+U,MAAM3J,WAAa,EAAKpL,EAAK4V,SAASjK,YAAYvL,MAAQ,EACjFJ,EAAK4V,SAASjO,EAA6B,IAAzB3H,EAAK+U,MAAMzJ,YAC7BtL,EAAKmV,WAAW7K,SAAStK,EAAK2V,cAC9B3V,EAAKmV,WAAW7K,SAAStK,EAAK4V,UA1Bb5V,qUAVM4T,EAAAK,0CA8CpBjF,GASH,OAAA3F,EAAA3F,EAAA4F,UAAAxD,WAAAC,OAAAC,eAAAtC,EAAA4F,WAAA,SAAArJ,MAAAvB,KAAAuB,KAAoB+O,oCAIlB,IAAAjI,EAAA9G,KACFoJ,EAAA3F,EAAA4F,UAAAxD,WAAAC,OAAAC,eAAAtC,EAAA4F,WAAA,SAAArJ,MAAAvB,KAAAuB,MAGCA,KAAKmV,kBAAkB9R,QAAvB,YAAsDS,GAAG,QAAS,WAE/DgD,EAAKgO,MAAM3R,mBAAmB2D,EAAKgO,MAAMc,kBACzCxW,EAAAwC,cAAcG,iBAAiB,OAAQ+E,EAAKgO,MAAM7N,QACnDjH,MAAM,GAERA,KAAKmV,kBAAkB9R,QAAvB,aAAuDS,GAAG,QAAS,WAEhE,IAAM4O,EAAY9S,EAAAkD,YAAY+S,aAAa/O,EAAKgO,MAAMc,kBAEtD,GAAgB,MAAblD,EAAH,CAMAjT,EAAAZ,QAAQmE,MAAM,eAAiB0P,EAAUjC,MACzC3J,EAAKgO,MAAM3R,mBAAmBuP,GAE9B,IAAMoD,EAAe1W,EAAAwC,cAAcI,eAAe,gBAClD,IAAIvB,QAAQ,SAAMC,GAAN,OAAaE,EAAAkG,OAAA,OAAA,EAAAjG,mBAAAC,KAAA,SAAAC,IAAA,OAAAF,mBAAAI,KAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OACrB0U,EAAazT,KAAOqQ,EAAUjC,KADTvP,EAAAE,KAAA,EAEfhC,EAAAwC,cAAcG,iBAAiB+T,EAAc9V,KAAK8U,MAAM7N,OAFzC,KAAA,EAGrB6O,EAAaC,gBAAgB,OAAQ,KAErCrV,IALqB,KAAA,EAAA,IAAA,MAAA,OAAAQ,EAAA6C,SAAAhD,EAAAf,gBARrBZ,EAAAwC,cAAcG,iBAAiB,OAAQ+E,EAAKgO,MAAM7N,QAevDjH,MAAM,GAERA,KAAKmV,kBAAkB9R,QAAvB,YAAsDS,GAAG,QAAS,WAE/D1E,EAAAwC,cAAcG,iBAAiB,OAAQ+E,EAAKgO,MAAM7N,QACnDjH,MAAM,qCAGN,IAAAoI,EAAApI,KAEHA,KAAK0V,aAAaM,SAAWhW,KAAK+U,QAClC/U,KAAK2V,SAASK,QAAUhW,KAAK+U,QAE7BjP,OAAOmQ,KAAKjW,KAAKmV,kBAAkB9R,SAASiC,QAAQ,SAAAsO,GAAA,OAAOxL,EAAK+M,kBAAkB9R,QAAQuQ,GAAKnC,qCAvGvGjT,EAAAiF,UAAAA,g0BCVA,IAAAyS,EAAAhY,EAAA,qBACAyV,EAAAzV,EAAA,YACAkB,EAAAlB,EAAA,6BACAiY,EAAAjY,EAAA,iBACAiP,EAAAjP,EAAA,oBACAkY,EAAAlY,EAAA,mCACAmY,EAAAnY,EAAA,sBACAoY,EAAApY,EAAA,mBAEA0W,EAAA1W,EAAA,2BACAwB,EAAAxB,EAAA,iBACAuB,EAAAvB,EAAA,gBACA0B,EAAA1B,EAAA,2BACAgB,EAAAhB,EAAA,2BACAqY,EAAArY,EAAA,4BACAiB,EAAAjB,EAAA,+BAEasF,cAuBT,SAAAA,EAAYqR,GAAS5U,EAAAD,KAAAwD,GAAA,IAAAzD,mKAAA6F,CAAA5F,MAAAwD,EAAAqC,WAAAC,OAAAC,eAAAvC,IAAA/E,KAAAuB,OAEjBD,EAAK+U,MAAQD,EACb9U,EAAKyW,QAAU,GACfzW,EAAK0W,SAAW,GAChB1W,EAAK2W,gBAAkB,EAGvBP,EAAAvR,WAAW+R,iBAAiB,IAAIL,EAAA5Q,IAAJ3F,GAAe6W,EAAKC,KAChD,IAAI,IAAI9Y,EAAI,EAAGA,EAAI,IAAKA,IACpBoY,EAAAvR,WAAW+R,iBAAiB,IAAIxJ,EAAAtB,KAAJ9L,GAAgB6W,EAAKE,MAErD,IAAI,IAAIC,EAAI,EAAGA,EAAI,GAAIA,IACnBZ,EAAAvR,WAAW+R,iBAAiB,IAAIN,EAAAzJ,OAAJ7M,GAAkB6W,EAAKI,YAbtC,OAejBb,EAAAvR,WAAW+R,iBAAiB,IAAIP,EAAAhJ,WAAJrN,GAAsB6W,EAAKK,YAIvDlX,EAAKmX,KAAQf,EAAAvR,WAAWuS,SAASP,EAAKC,KACtC9W,EAAKmX,KAAKlQ,EAAI,IACdjH,EAAKmX,KAAKjP,EAAI,GAGdlI,EAAKqX,iBAAmB,IAAIxC,EAAAR,UAC5BrU,EAAKqX,iBAAiB9B,QAAQ,CAC1BN,GAAK,IAAI1T,SAASwI,OAAO5K,EAAAgD,YAAY8D,aAAaqR,eAAgB,SAGtEtX,EAAKuX,eAAiB,IAAIhW,SAAS8S,UACnCrU,EAAKwX,iBAAmB,IAAIjW,SAAS8S,UAErCrU,EAAKyX,cAAgB,IAAIlW,SAAS8S,UAElCrU,EAAK0X,WAAa,IAAIlB,EAAAmB,UAAU3X,EAAK+U,OACrC/U,EAAK4X,iBAAmB,IAAIzB,EAAA0B,gBAAgB7X,EAAK+U,MAAzB/U,GAExBA,EAAK8X,aAAc,EArCF9X,qUAvBO4T,EAAAK,mDAkELhK,EAAUtC,GAK7B,IAJA,IAAIK,EAAS,GAGP+P,EAAa9X,KAAKkV,WAAW6C,qBAAqB/N,EAAGtC,EAAG,GACtD3J,EAAI,EAAGA,EAAIiC,KAAKwW,QAAQ9X,OAAQX,IAAK,CACzC,IAAMia,EAAOhY,KAAKwW,QAAQzY,IACa,GAApC+Z,EAAWnP,QAAQqP,EAAKlO,SACvB/B,EAAO7C,KAAK8S,GAIpB,OAAOjQ,wCAKUiC,EAAUtC,GAK3B,IAFA,IACMoQ,EAAa9X,KAAKkV,WAAW6C,qBAAqB/N,EAAGtC,EAAG,GACtD3J,EAAI,EAAGA,EAAIiC,KAAKyW,SAAS/X,OAAQX,IACrC,IAAmD,GAAhD+Z,EAAWnP,QAAQ3I,KAAKyW,SAAS1Y,GAAG+L,QAGnC,OAFA/K,QAAQC,IAAK,gBACbgB,KAAKyW,SAAS1Y,GAAGka,QACV,EAIf,OAAO,sCAGQD,GAEfvY,EAAAZ,QAAQgE,QAAQ,aAEhB,IAAMqV,EAAaF,EAAK1D,UAGP,MAAd4D,IACClY,KAAK0W,iBACL1W,KAAKwW,QAAQ2B,OAAOnY,KAAKwW,QAAQ7N,QAAQuP,GAAqB,GAG3DlY,KAAK0W,gBAAkB,IAEtBjX,EAAAZ,QAAQgE,QAAQ,iBAEhB7C,KAAKoY,sCAMP,IAAAtR,EAAA9G,KAENA,KAAKqM,UAELrM,KAAK8U,MAAMuD,mBAAmB,CAC1BC,UAAWtY,KAAKwW,QAAQ9X,OACxB6Z,OAAQ,GACRC,KAAM,MAIVlX,SAASiG,MAAMC,IAAIxH,KAAKwX,eACnB/P,GAAG,CAACC,EAAE1H,KAAK8U,MAAMzJ,YAAc,EAAI,IAAK,IAAK/J,SAASqG,KAAK8Q,YAC3DnQ,KAAK,KACL7J,KAAK,WAEFW,EAAAwC,cAAcG,iBAAiB,MAAO+E,EAAKgO,MAAM7N,OAIjD,IAAMyR,EAAe9Y,EAAAkD,YAAY6V,aAAa7R,EAAKgO,MAAMc,kBAEzDzW,EAAA8D,gBAAgB2V,cAAcF,EAAanK,MAAOmK,EAAalK,OAE/DrP,EAAA8D,gBAAgB4V,eAAeH,EAAanK,MAAOmK,EAAalK,OAGhE1H,EAAKkI,mDAKbhP,KAAK6X,aAAc,6CAInB7X,KAAK6X,aAAc,iCAMT9I,GAyCV,GAxCA3F,EAAA5F,EAAA6F,UAAAxD,WAAAC,OAAAC,eAAAvC,EAAA6F,WAAA,SAAArJ,MAAAvB,KAAAuB,KAAa+O,GAEb/O,KAAKoX,iBAAiB0B,kBACtB9Y,KAAKoX,iBAAiB/T,QAAQ2R,GAAGtN,EAAI,EACrC1H,KAAKkV,WAAW7K,SAASrK,KAAKoX,iBAAiBhD,WAE/CpU,KAAKkV,WAAW7K,SAASrK,KAAKsX,gBAC9BtX,KAAKkV,WAAW7K,SAASrK,KAAKuX,kBAG9BvX,KAAK+Y,WAAa,IAAIzX,SAAS0X,MAC/BhZ,KAAK+Y,WAAWE,SAASC,UAAU,SACnClZ,KAAK+Y,WAAWE,SAASE,SAAS,EAAG,EAAGnZ,KAAK8U,MAAM3J,WAAY,IAC/DnL,KAAK+Y,WAAWK,MAAM,EAAG,EAAGpZ,KAAK8U,MAAM3J,WAAY,IACnDnL,KAAKwX,cAAcnN,SAASrK,KAAK+Y,YACjC/Y,KAAKqZ,SAAW3Z,EAAA2D,QAAQiW,mBAAmB,OAAQpa,EAAAgD,YAAY8D,aAAauT,iBAC5EvZ,KAAKwX,cAAcnN,SAASrK,KAAKqZ,UACjCrZ,KAAKqZ,SAASrP,EAAKhK,KAAK8U,MAAM3J,WAAa,EAAMnL,KAAKqZ,SAAS3N,YAAYvL,MAAQ,EAEnFH,KAAKkV,WAAW7K,SAASrK,KAAKwX,eAC9BxX,KAAKwX,cAAe9P,EAAI1H,KAAK8U,MAAMzJ,YAAc,GACjDrL,KAAKwX,cAAcgC,cAAe,EAGlCxZ,KAAKkX,KAAKxC,OAAO1U,KAAKkV,YActBlV,KAAKgP,QAE6B,MAA/BhP,KAAK8U,MAAMc,iBAA0B,CAEpC,IAAI,IAAI7X,EAAI,EAAGA,EAAIiC,KAAK8U,MAAMc,iBAAiB/F,KAAKnR,OAAQX,IAAK,CAC7D,IAAM8R,EAAO7P,KAAK8U,MAAMc,iBAAiB/F,KAAK9R,GAC9C,OAAO8R,EAAKkB,IACR,KAAK6F,EAAKK,WACV,KAAKL,EAAKE,KACN,IAAMkB,EAAQ7B,EAAAvR,WAAWuS,SAAStH,EAAKkB,IACvCiH,EAAKtD,OAAO1U,KAAKsX,gBACA,MAAdzH,EAAK1I,QAAe6Q,EAAK3Q,MAAQwI,EAAK1I,OAC5B,MAAV0I,EAAK7F,IAAWgO,EAAKhR,EAAI6I,EAAK7F,GACpB,MAAV6F,EAAKnI,IAAWsQ,EAAK/P,EAAI4H,EAAKnI,GACjB,MAAbmI,EAAK4J,MAAgB5J,EAAK4J,OAAMzB,EAAK0B,YAAc,GACtD1B,EAAK2B,cACL3Z,KAAKwW,QAAQtR,KAAK8S,GAClB,MACJ,KAAKpB,EAAKI,WACN,IAAM4C,EAAUzD,EAAAvR,WAAWuS,SAASP,EAAKI,YACzC4C,EAAOlF,OAAO1U,KAAKuX,kBACF,MAAd1H,EAAK1I,QAAeyS,EAAOvS,MAAQwI,EAAK1I,OAC9B,MAAV0I,EAAK7F,IAAW4P,EAAO5S,EAAI6I,EAAK7F,GACtB,MAAV6F,EAAKnI,IAAWkS,EAAO3R,EAAI4H,EAAKnI,GACnB,MAAbmI,EAAK4J,MAAgB5J,EAAK4J,OAAMG,EAAOF,YAAc,GACxD1Z,KAAKyW,SAASvR,KAAK0U,IAK/B5Z,KAAK0W,eAAiB1W,KAAKwW,QAAQ9X,OAIK,MAAzCsB,KAAK8U,MAAMc,iBAAiBiE,WAC3B7Z,KAAK2X,iBAAiBmC,eAAe9Z,KAAK8U,MAAMc,iBAAiBiE,WAGxB,MAA1C7Z,KAAK8U,MAAMc,iBAAiBmE,WAC1B/Z,KAAKoX,iBAAiB/T,QAAtB,GAAwD2W,YAAYha,KAAK8U,MAAMc,iBAAiBmE,YAGhG/Z,KAAKoX,iBAAiB/T,QAAtB,GAAwD2W,YAAY,OAUzE,IAAMhW,EAAYhE,KAAK8U,MAAMc,iBAC7B7W,QAAQC,IAAIgB,KAAK8U,MAAMc,kBACvB,IAAMqE,IAAoC,MAAvBjW,EAAUiW,YAAsBjW,EAAUiW,WACvDC,EAAmC,MAAtBlW,EAAUmW,SACvBC,IAAiD,MAA/BpW,EAAUqW,oBAA8BrW,EAAUqW,mBAG1E,OAFAra,KAAKyX,WAAW6C,SAASL,EAAWG,EAAgBF,GAE7C,uCAiBP,OAZAla,KAAKkX,KAAK5C,UACVtU,KAAKwW,QAAQlR,QAAQ,SAAAtH,GACjBA,EAAEsW,YAENtU,KAAKyW,SAASnR,QAAQ,SAAAtH,GAClBA,EAAEsW,YAGN6B,EAAAvR,WAAW2V,oBAEXva,KAAKgP,QAEL5F,EAAA5F,EAAA6F,UAAAxD,WAAAC,OAAAC,eAAAvC,EAAA6F,WAAA,UAAArJ,MAAAvB,KAAAuB,qCAGUyE,GAEV,IAAGzE,KAAK6X,YAAR,CAEA,IAAM2C,EAAiBlY,KAAKmY,IAAI,EAAGhW,GAAY,GAG/CzE,KAAKwW,QAAQlR,QAAQ,SAAA0S,GACjBA,EAAKrW,OAAO6Y,KAEhBxa,KAAKyW,SAASnR,QAAQ,SAAAsU,GAClBA,EAAOjY,OAAO6Y,KAGlBxa,KAAKkX,KAAKvV,OAAO6Y,GAGjBxa,KAAKyX,WAAW9V,OAAO8C,GAEvB2E,EAAA5F,EAAA6F,UAAAxD,WAAAC,OAAAC,eAAAvC,EAAA6F,WAAA,SAAArJ,MAAAvB,KAAAuB,KAAayE,qCAIZzE,KAAKkV,WAAmBpR,GAAG,QAAS9D,KAAKkX,KAAKwD,KAAM1a,KAAKkX,wCAIzDlX,KAAKkV,WAAmBzD,0DAIzBzR,KAAKkX,KAAKlQ,EAAI,IACdhH,KAAKwW,QAAQlR,QAAQ,SAAAtH,GAAOmY,EAAAvR,WAAWW,OAAOvH,KAC9CgC,KAAKyW,SAASnR,QAAQ,SAAAtH,GAAOmY,EAAAvR,WAAWW,OAAOvH,KAE/CmY,EAAAvR,WAAW2V,oBAEXva,KAAKsX,eAAeqD,oBACpB3a,KAAKuX,iBAAiBoD,oBAEtB3a,KAAKwW,QAAU,GACfxW,KAAKyW,SAAW,GAGhBrN,EAAA5F,EAAA6F,UAAAxD,WAAAC,OAAAC,eAAAvC,EAAA6F,WAAA,QAAArJ,MAAAvB,KAAAuB,mCAGgB,OAAOA,KAAK8U,kCACb,OAAO9U,KAAKkX,oCACT,OAAOlX,KAAKwW,kDACD,OAAOxW,KAAK6X,qBA3UjDrZ,EAAAgF,WAAAA,MAgVaoT,+EACU,MAAO,mCACN,MAAO,0CACD,MAAO,4CACP,MAAO,sBAJrCpY,EAAAoY,KAAAA,i8BCjWA,IAAAjD,EAAAzV,EAAA,YACAkB,EAAAlB,EAAA,6BACAwB,EAAAxB,EAAA,iBAEAgB,EAAAhB,EAAA,2BAEawF,cAQT,SAAAA,EAAYmR,gGAAS5U,CAAAD,KAAA0D,GAAA,IAAA3D,mKAAA6F,CAAA5F,MAAA0D,EAAAmC,WAAAC,OAAAC,eAAArC,IAAAjF,KAAAuB,OAAA,OAEjBD,EAAK+U,MAAQD,EAEb9U,EAAK6a,MAAQ,GAJI7a,qUARe4T,EAAAK,mDAiBb6G,GAAsC,IAAA/T,EAAA9G,KAApBma,EAAoB,EAAAzP,UAAAhM,aAAAiM,IAAAD,UAAA,GAAAA,UAAA,GAAJ,IAC/CoQ,EAAMhK,OAAOiK,WAAW,WAE1B3b,EAAAwC,cAAcG,iBAAiB8Y,EAAW/T,EAAKgO,MAAM7N,OAErD6J,OAAOkK,aAAaF,IACrBX,kCAKOpL,GAwBV,OAtBA/O,KAAKib,IAAM,IAAI3Z,SAAS0X,MACxBhZ,KAAKib,IAAIhC,SAASC,UAAU,WAC5BlZ,KAAKib,IAAIhC,SAASE,SAAS,EAAG,EAAGnZ,KAAK8U,MAAM3J,WAAYnL,KAAK8U,MAAMzJ,aACnErL,KAAKib,IAAIhC,SAASiC,UAClBlb,KAAKib,IAAI7B,MAAM,EAAG,EAAGpZ,KAAK8U,MAAM3J,WAAYnL,KAAK8U,MAAMzJ,aACvDrL,KAAKkV,WAAW7K,SAASrK,KAAKib,KAE9Bjb,KAAKmb,eAAiB,IAAI7Z,SAAS8S,UACnCpU,KAAKkV,WAAW7K,SAASrK,KAAKmb,gBAEb,IAAdnb,KAAK4a,QAEJ5a,KAAKob,WAAa1b,EAAA2D,QAAQiW,mBAAmBtZ,KAAK4a,MAAO1b,EAAAgD,YAAY8D,aAAauT,iBACjFvZ,KAAKob,WAAmBC,MAAQ,GAEjCrb,KAAKmb,eAAe9Q,SAASrK,KAAKob,YAGlCpb,KAAKmb,eAAenR,EAAKhK,KAAK8U,MAAM3J,WAAa,EAAOnL,KAAKob,WAAW1P,YAAYvL,MAAQ,EAAK,GACjGH,KAAKmb,eAAezT,EAAK1H,KAAK8U,MAAMzJ,YAAc,EAAMrL,KAAKob,WAAW1P,YAAYrL,OAAS,GAGjG+I,EAAA1F,EAAA2F,UAAAxD,WAAAC,OAAAC,eAAArC,EAAA2F,WAAA,SAAArJ,MAAAvB,KAAAuB,KAAoB+O,qCAMpB,OAFA/O,KAAKmb,eAAeR,oBAEpBvR,EAAA1F,EAAA2F,UAAAxD,WAAAC,OAAAC,eAAArC,EAAA2F,WAAA,UAAArJ,MAAAvB,KAAAuB,uCAIAoJ,EAAA1F,EAAA2F,UAAAxD,WAAAC,OAAAC,eAAArC,EAAA2F,WAAA,SAAArJ,MAAAvB,KAAAuB,wCAIAoJ,EAAA1F,EAAA2F,UAAAxD,WAAAC,OAAAC,eAAArC,EAAA2F,WAAA,UAAArJ,MAAAvB,KAAAuB,MAEAA,KAAKgP,wCAILhP,KAAKqC,KAAO,GACZ+G,EAAA1F,EAAA2F,UAAAxD,WAAAC,OAAAC,eAAArC,EAAA2F,WAAA,QAAArJ,MAAAvB,KAAAuB,iCAIYyJ,GACZzJ,KAAK4a,MAAQnR,WA9ErBjL,EAAAkF,mBAAAA,m7BCNA,IAAAiQ,EAAAzV,EAAA,YACAkB,EAAAlB,EAAA,6BACAwB,EAAAxB,EAAA,iBAEAgB,EAAAhB,EAAA,2BACA0W,EAAA1W,EAAA,2BACAuB,EAAAvB,EAAA,gBAEAod,EAAApd,EAAA,mCAGA0B,EAAA1B,EAAA,2BAEaqF,cAwBT,SAAAA,EAAYsR,gGAAS5U,CAAAD,KAAAuD,GAAA,IAAAxD,mKAAA6F,CAAA5F,MAAAuD,EAAAsC,WAAAC,OAAAC,eAAAxC,IAAA9E,KAAAuB,OAGjBD,EAAK+U,MAAQD,EAGb9U,EAAKwb,gBAAkB,IAAIja,SAAS8S,UAGpCrU,EAAKqX,iBAAmB,IAAIxC,EAAAR,UAC5B,IAAMY,EAAK,IAAI1T,SAASwI,OAAO5K,EAAAgD,YAAY8D,aAAawV,aAAc,MAVrD,OAYjBzb,EAAKqX,iBAAiB9B,QAAQ,CAC1BN,GAAAA,IAIJjV,EAAK0b,eAAiB,IAAIna,SAAS8S,UACnCrU,EAAK2b,MAAQ,IAAIpa,SAASwI,OAAO5K,EAAAgD,YAAY8D,aAAawV,aAAc,QACxEzb,EAAK2b,MAAM1R,EAAIjK,EAAK+U,MAAM3J,WAAapL,EAAK2b,MAAMhQ,YAAYvL,MAAQ,GACtEJ,EAAK2b,MAAMhU,EAA6B,GAAzB3H,EAAK+U,MAAMzJ,YAC1BtL,EAAK0b,eAAepR,SAAStK,EAAK2b,OAClC3b,EAAK4b,sBAAwB,IAAI/G,EAAAR,UAAUQ,EAAAR,UAAUgB,eAAeC,kBACpEtV,EAAK4b,sBAAsBrG,QAAQ,CAC/BsG,WAAa,IAAIta,SAASwI,OAAO5K,EAAAgD,YAAY8D,aAAawV,aAAc,cACxEK,WAAa,IAAIva,SAASwI,OAAO5K,EAAAgD,YAAY8D,aAAawV,aAAc,cACxEM,eAAiB,IAAIxa,SAASwI,OAAO5K,EAAAgD,YAAY8D,aAAawV,aAAc,kBAC5EO,QAAU,IAAIza,SAASwI,OAAO5K,EAAAgD,YAAY8D,aAAawV,aAAc,aAEzEzb,EAAK0b,eAAepR,SAAStK,EAAK4b,sBAAsBvH,WACxDrU,EAAKic,WAAa,IAAI1a,SAASwI,OAAO5K,EAAAgD,YAAY8D,aAAawV,aAAc,aAC7Ezb,EAAKic,WAAWhS,EAAIjK,EAAK+U,MAAM3J,WAAapL,EAAKic,WAAWtQ,YAAYvL,MAAQ,GAChFJ,EAAKic,WAAWtU,EAAI3H,EAAK+U,MAAMzJ,YAActL,EAAKic,WAAWtQ,YAAYrL,OAAS,GAClFN,EAAK0b,eAAepR,SAAStK,EAAKic,YAWlCjc,EAAKkc,kBAAoB,IAAIrH,EAAAR,UAC7BrU,EAAKkc,kBAAkB3G,QAAQ,CAC3B4G,WAAaxc,EAAA2D,QAAQiW,mBAAmB,UAAWpa,EAAAgD,YAAY8D,aAAamW,YAC5EC,aAAe1c,EAAA2D,QAAQgZ,QAAQC,YAEnCvc,EAAKkc,kBAAkB7H,UAAUpK,GAAKjK,EAAK+U,MAAM3J,WAGjDpL,EAAKwc,kBAAoB,IAAI3H,EAAAR,UAC7BrU,EAAKwc,kBAAkBC,IAAI,aAAc9c,EAAA2D,QAAQiW,mBAAmB,6BAA8Bpa,EAAAgD,YAAY8D,aAAamW,aAC3Hpc,EAAKwc,kBAAkBnI,UAAUpK,GAAKjK,EAAK+U,MAAM3J,WACjDpL,EAAKwc,kBAAkBnI,UAAU1M,GAAK3H,EAAK+U,MAAMzJ,YAEjDtL,EAAK0c,oBAAsB,IAAInB,EAAAoB,mBAAmB7H,GAClD9U,EAAK0c,oBAAoBrI,UAAUpK,GAAKjK,EAAK+U,MAAM3J,WAInDpL,EAAK4c,YAAc,IACnB5c,EAAKoU,eAAiB,OACtBpU,EAAK6c,iBAAmB,CAAE5S,GAAG,EAAGtC,GAAG,GAhElB3H,qUAxBO4T,EAAAK,gDA+FV,IAAAlN,EAAA9G,KACdP,EAAAZ,QAAQC,QAAQ,mBAEhB,IAAM+Q,EAAOjQ,EAAAkD,YAAYM,oBAAoB,GAC7CpD,KAAK8U,MAAM3R,mBAAmB0M,GAE9B,IAAMiG,EAAe1W,EAAAwC,cAAcI,eAAe,gBAClD,IAAIvB,QAAQ,SAAMC,GAAN,OAAaE,EAAAkG,OAAA,OAAA,EAAAjG,mBAAAC,KAAA,SAAAC,IAAA,OAAAF,mBAAAI,KAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OACrB0U,EAAazT,KAAOwN,EAAKY,KADJvP,EAAAE,KAAA,EAEfhC,EAAAwC,cAAcG,iBAAiB+T,EAAc9V,KAAKiH,OAFnC,KAAA,EAGrB6O,EAAaC,gBAAgB,QAE7BrV,IALqB,KAAA,EAAA,IAAA,MAAA,OAAAQ,EAAA6C,SAAAhD,EAAAf,gDAUzBP,EAAAZ,QAAQC,QAAQ,kBAChBwC,SAASiG,MAAMC,IAAIxH,KAAKub,iBAAiB9T,GAAG,CAACuC,EAAEhK,KAAK8U,MAAM3J,YAAanL,KAAK2c,YAAarb,SAASqG,KAAKkV,SACvG7c,KAAKmU,eAAiB,mDAGtB1U,EAAAZ,QAAQC,QAAQ,uBAChBwC,SAASiG,MAAMC,IAAIxH,KAAKub,iBAAiB9T,GAAG,CAACuC,GAAGhK,KAAK8U,MAAM3J,YAAanL,KAAK2c,YAAarb,SAASqG,KAAKkV,SACxG7c,KAAKmU,eAAiB,gDAGtB1U,EAAAZ,QAAQC,QAAQ,iDAIhBW,EAAAZ,QAAQC,QAAQ,eAChBwC,SAASiG,MAAMC,IAAIxH,KAAKub,iBAAiB9T,GAAG,CAACuC,EAAE,GAAIhK,KAAK2c,YAAarb,SAASqG,KAAKmV,WACnF9c,KAAKmU,eAAiB,8CAGN,IAAA/L,EAAApI,KAChBP,EAAAZ,QAAQgE,QAAQ,iBAChBvB,SAASiG,MAAMC,IAAIxH,KAAKub,iBAAiB9T,GAAG,CAACuC,EAAEhK,KAAK8U,MAAM3J,WAAYzD,EAAE1H,KAAK8U,MAAMzJ,aAAcrL,KAAK2c,YAAarb,SAASqG,KAAKoV,SAEjI,IAAIpf,EAAImT,OAAOiK,WAAW,WACtBzZ,SAASiG,MAAMC,IAAIY,EAAKmT,iBAAiB9T,GAAG,CAACuC,EAAE5B,EAAK0M,MAAM3J,WAAYzD,EAAE,GAAIU,EAAKuU,YAAarb,SAASqG,KAAKqV,YAC5GlM,OAAOmM,cAActf,GACrByK,EAAK+L,eAAiB,WACvB,0CAGcxW,GAAC,IAAA8K,EAAAzI,KAElBA,KAAK4c,iBAAmB,CAAE5S,EAAErM,EAAEuf,OAAQxV,EAAE/J,EAAEwf,QAGpB,MAAnBnd,KAAKod,YAAoBtM,OAAOkK,aAAahb,KAAKod,YACrDpd,KAAKod,WAAarC,WAAW,WACzBtS,EAAKmU,iBAAmB,CAAE5S,GAAG,EAAGtC,GAAG,GACnCe,EAAK2U,WAAa,MACnB,wCAEYzf,IACgB,GAA5BqC,KAAK4c,iBAAiB5S,IAAuC,GAA5BhK,KAAK4c,iBAAiBlV,IAEZ,GAAtC1H,KAAK4c,iBAAiB5S,EAAIrM,EAAEuf,OACF,WAAvBld,KAAKmU,gBACJnU,KAAKqd,UAEJrd,KAAK4c,iBAAiB5S,EAAIrM,EAAEuf,QAAW,IAClB,eAAvBld,KAAKmU,gBACJnU,KAAKqd,0CAMPtO,GAcV,OAXA/O,KAAKoX,iBAAiB/T,QAAQ2R,GAAGtN,EAAI,EACrC1H,KAAKkV,WAAW7K,SAASrK,KAAKoX,iBAAiBhD,WAC/CpU,KAAKkV,WAAW7K,SAASrK,KAAKub,iBAC9Bvb,KAAKub,gBAAgBlR,SAASrK,KAAKyb,gBACnCzb,KAAKub,gBAAgBlR,SAASrK,KAAKic,kBAAkB7H,WACrDpU,KAAKub,gBAAgBlR,SAASrK,KAAKuc,kBAAkBnI,WAIrDpU,KAAKub,gBAAgBlR,SAASrK,KAAKyc,oBAAoBrI,WAEvDhL,EAAA7F,EAAA8F,UAAAxD,WAAAC,OAAAC,eAAAxC,EAAA8F,WAAA,SAAArJ,MAAAvB,KAAAuB,KAAoB+O,oCAIpBhQ,QAAQC,IAAI,wBACZoK,EAAA7F,EAAA8F,UAAAxD,WAAAC,OAAAC,eAAAxC,EAAA8F,WAAA,SAAArJ,MAAAvB,KAAAuB,MAECA,KAAK2b,sBAAsBtY,QAAQuY,WAAmB9X,GAAG,QAAS9D,KAAKsd,WAAYtd,MAAM,GACzFA,KAAK2b,sBAAsBtY,QAAQwY,WAAmB/X,GAAG,QAAS9D,KAAKud,WAAYvd,MACnFA,KAAK2b,sBAAsBtY,QAAQyY,eAAuBhY,GAAG,QAAS9D,KAAKwd,eAAgBxd,MAC3FA,KAAK2b,sBAAsBtY,QAAQ0Y,QAAgBjY,GAAG,QAAS9D,KAAKyd,QAASzd,MAE9EN,EAAA2D,QAAQqa,oBACP1d,KAAKic,kBAAkB5Y,QAAQ+Y,aAAqBtY,GAAGpE,EAAA2D,QAAQsa,WAAY3d,KAAK4d,aAAc5d,MAG9FA,KAAKoX,iBAAiB/T,QAAQ2R,GAAWlR,GAAG,YAAa9D,KAAK6d,aAAc7d,MAC5EA,KAAKoX,iBAAiB/T,QAAQ2R,GAAWlR,GAAG,QAAS9D,KAAK8d,WAAY9d,MAIvEA,KAAKyc,oBAAoB9H,SAKzBrT,SAASiG,MAEJC,IAAIxH,KAAKgc,WAAY,CAAE+B,MAAK,IAC5BtW,GAAG,CAAEC,EAAE1H,KAAKgc,WAAWtU,EAAE,IAAM,IAAMpG,SAASqG,KAAKqW,WACnDvW,GAAG,CAAEC,EAAE1H,KAAKgc,WAAWtU,GAAK,IAAMpG,SAASqG,KAAKqW,WAGrD1c,SAASiG,MAEJC,IAAIxH,KAAK0b,MAAO,CAAEqC,MAAK,IACvBzV,KAAK,MACLb,GAAG,CAAEC,EAAE1H,KAAK0b,MAAMhU,EAAE,IAAM,KAAMpG,SAASqG,KAAKqW,WAC9CvW,GAAG,CAAEC,EAAE1H,KAAK0b,MAAMhU,GAAK,KAAMpG,SAASqG,KAAKqW,6CAIhD5U,EAAA7F,EAAA8F,UAAAxD,WAAAC,OAAAC,eAAAxC,EAAA8F,WAAA,UAAArJ,MAAAvB,KAAAuB,MAECA,KAAK2b,sBAAsBtY,QAAQuY,WAAmBqC,IAAI,QAASje,KAAKsd,YACxEtd,KAAK2b,sBAAsBtY,QAAQwY,WAAmBoC,IAAI,QAASje,KAAKud,YACxEvd,KAAK2b,sBAAsBtY,QAAQyY,eAAuBmC,IAAI,QAASje,KAAKwd,gBAC5Exd,KAAK2b,sBAAsBtY,QAAQ0Y,QAAgBkC,IAAI,QAASje,KAAKyd,SAEtE/d,EAAA2D,QAAQ6a,wBACPle,KAAKic,kBAAkB5Y,QAAQ+Y,aAAqB6B,IAAIve,EAAA2D,QAAQsa,WAAY3d,KAAK4d,cAGjF5d,KAAKoX,iBAAiB/T,QAAQ2R,GAAWiJ,IAAI,YAAaje,KAAK6d,cAC/D7d,KAAKoX,iBAAiB/T,QAAQ2R,GAAWiJ,IAAI,QAASje,KAAK8d,YAG5D9d,KAAK2b,sBAAsBtY,QAAQuY,WAAWnK,0BAC9CzR,KAAK2b,sBAAsBtY,QAAQwY,WAAWpK,0BAC9CzR,KAAK2b,sBAAsBtY,QAAQyY,eAAerK,0BAClDzR,KAAK2b,sBAAsBtY,QAAQ0Y,QAAQtK,0BAC3CzR,KAAKoX,iBAAiB/T,QAAQ2R,GAAGvD,0BAGjCzR,KAAKyc,oBAAoBpQ,UAEzBrM,KAAKgP,QAGL1N,SAASiG,MAAM4W,kDAKfne,KAAKub,gBAAgBvR,EAAI,EACzBhK,KAAKub,gBAAgB7T,EAAI,EAEzB0B,EAAA7F,EAAA8F,UAAAxD,WAAAC,OAAAC,eAAAxC,EAAA8F,WAAA,QAAArJ,MAAAvB,KAAAuB,eAnQRxB,EAAA+E,WAAAA,kiBCXayQ,aAIT,SAAAA,iGAAA/T,CAAAD,KAAAgU,GACIhU,KAAKkV,WAAa,IAAI5T,SAAS8S,mDAKrB3P,mCAKAsK,GAMV,OALA/O,KAAKqB,OAAS0N,EAEd/O,KAAKqB,OAAOgJ,SAASrK,KAAKkV,YAGnBlV,uCASP,OAFAA,KAAKqB,OAAOkJ,YAAYvK,KAAKkV,YAEtBlV,6IAkBiC,OAAOA,KAAKkV,yCACf,OAAOlV,KAAKqB,gBAjDzD7C,EAAAwV,OAAAA,kVCFA,IAAAL,EAAAzV,EAAA,YAGAwB,EAAAxB,EAAA,iBAEa4D,cAMT,SAAAA,EAAY+S,gGAAS5U,CAAAD,KAAA8B,GAAA,IAAA/B,mKAAA6F,CAAA5F,MAAA8B,EAAA+D,WAAAC,OAAAC,eAAAjE,IAAArD,KAAAuB,OAAA,OAEjBD,EAAK+U,MAAQD,EAGb9U,EAAKqe,iBAAmB,IAAI9c,SAAS+c,YAAY,CAACC,OAAQ,CAAC,4CAA6CC,OAAQ,CAAC,CAAC,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,GAAG,EAAE,EAAE,IAAMC,WAAY,CAACC,EAAE,CAAC,EAAE,GAAG,GAAOC,EAAE,CAAC,EAAE,GAAG,GAAOC,EAAE,CAAC,EAAE,GAAG,GAAOC,E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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/* ************************************************* */\r\n/*                      LOGGING                      */\r\n/* ************************************************* */\r\nexport class Logging {\r\n    static success(message:string):void {\r\n        console.log(`%c ${message}`, 'color:seagreen; font-size:1.1em; font-weight:bold; border-left: solid 3px seagreen;')    ;\r\n    }\r\n\r\n    static message(message:string):void {\r\n        console.log(`%c ${message}`, 'color:#1E265C; font-size:1.1em; font-weight:bold; border-left: solid 3px #1E265C;');\r\n    }\r\n\r\n    static error(message:string):void {\r\n        console.log(`%c ${message}`, 'color:red; font-size:1.1em; border-left: solid 3px red;');\r\n    }\r\n}","import { LoadManager } from \"./managers/LoadManager\";\r\nimport { ProgressManager } from \"./managers/ProgressManager\";\r\nimport { ScreenManager } from \"./managers/ScreenManager\";\r\nimport { SplashScreen } from \"./screens/SplashScreen\";\r\nimport { MenuScreen } from \"./screens/MenuScreen\";\r\nimport { GameScreen } from \"./screens/GameScreen\";\r\nimport { EndScreen } from \"./screens/EndScreen\";\r\nimport { Logging } from \"./Functions\";\r\nimport { Sprites } from \"./ui/Sprites\";\r\nimport { IntermediaryScreen } from \"./screens/IntermediaryScreen\";\r\nimport { DataManager, LevelData } from \"./managers/DataManager\";\r\n\r\nexport interface ICurrentScore {\r\n    totalFish: number;\r\n    time: number;\r\n    combos: number;\r\n}\r\n\r\n\r\nexport class Game {\r\n    private _canvas:HTMLCanvasElement;\r\n    private _stage:createjs.StageGL;\r\n    private _scaling:number;\r\n\r\n    private _lastGameTime:number;\r\n\r\n    private _currentLevel:LevelData;\r\n    private _currentScore:ICurrentScore;\r\n\r\n    constructor(canvasDiv:HTMLCanvasElement) {\r\n\r\n        this._canvas = canvasDiv;\r\n        this._canvas.width = Game.WIDTH;\r\n        this._canvas.height = Game.HEIGHT;\r\n\r\n        this._lastGameTime = -1;\r\n\r\n        //set the scaling\r\n        this._scaling = Game.HEIGHT / 1024;\r\n\r\n        //start loading game assets\r\n        new Promise(async(res, rej) => {\r\n            //create the stage\r\n            console.log(\"Readying stage!\");\r\n            this._stage = new createjs.StageGL(this._canvas, { antialias: true });\r\n            // this._stage = new createjs.StageGL(this._canvas);\r\n            (this._stage as any).setClearColor(\"#000000\");\r\n            this._stage.enableMouseOver(10);\r\n            this._stage.update();\r\n\r\n            // this._stage.scaleX = this._stage.scaleY = 0.8;\r\n\r\n            console.log(this._stage, this._canvas);\r\n\r\n            //load the splash screen\r\n            ScreenManager.registerScreen(\"splash\", new SplashScreen(this));\r\n            ScreenManager.setCurrentScreen(\"splash\", this._stage);\r\n\r\n            const splash = ScreenManager.getScreenByKey(\"splash\") as SplashScreen;\r\n\r\n            //listen to asset updates\r\n            (this._stage as any).addEventListener(LoadManager.ASSETS_UPDATED, (e) => {\r\n                console.log(LoadManager.Percentage);\r\n                //update percent\r\n                splash.Text = Math.ceil(LoadManager.Percentage * 100).toString();\r\n            });\r\n            //load assets\r\n            await LoadManager.loadAssets(\"assets/manifest.json\", this._stage)\r\n                .catch(err => {\r\n                    console.warn(\"Error loading assets:\", err);\r\n                });\r\n\r\n            Logging.success(\"Assets Loaded Successfully!\");\r\n\r\n            //load level data\r\n            await DataManager.loadWorldsData(\"assets/data/levels.json\")\r\n                .catch(err => {\r\n                    Logging.error(err);\r\n                    return;\r\n                });\r\n            //load progress data\r\n            await ProgressManager.loadWorldsData(DataManager.WorldsData);\r\n\r\n            //set the current screen\r\n            //game test, load desired level patch -- if autoloading to game screen\r\n            this.changeCurrentLevel(DataManager.getLevelDataByIndex(0));\r\n\r\n            Logging.success(\"Level Data Loaded Successfully!\");\r\n\r\n            //setup createjs.Sprites\r\n            await Sprites.setup();\r\n\r\n            //build the screens\r\n            ScreenManager.registerScreen(\"menu\", new MenuScreen(this));\r\n            ScreenManager.registerScreen(\"game\", new GameScreen(this));\r\n            ScreenManager.registerScreen(\"end\", new EndScreen(this));\r\n            ScreenManager.registerScreen(\"intermediary\", new IntermediaryScreen(this));\r\n            \r\n\r\n            ScreenManager.setCurrentScreen(\"menu\", this._stage);\r\n            // ScreenManager.setCurrentScreen(\"game\", this._stage);\r\n            // ScreenManager.setCurrentScreen(\"end\", this._stage);\r\n\r\n            //setup the game loop\r\n            createjs.Ticker.framerate = Game.FRAME_RATE;\r\n            createjs.Ticker.on(\"tick\", this.update, this);\r\n\r\n            res();\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public changeCurrentLevel(levelData:LevelData) {\r\n        this._currentLevel = levelData;\r\n    }\r\n\r\n    public changeCurrentScore(currentScore:ICurrentScore) {\r\n        this._currentScore = currentScore;\r\n    }\r\n\r\n\r\n\r\n    //recursive sizing\r\n    private _scaleChildren(children) {\r\n\r\n\r\n        if(children != null) {\r\n            for(let i = 0; i < children.length; i++) {\r\n                const ch = children[i];\r\n                ch.scaleX = ch.scaleY = this._scaling;\r\n                if(ch.children != null && ch.scaleX != null) this._scaleChildren(ch);\r\n            }\r\n        }\r\n\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    public update(e:any) {\r\n\r\n        const gameTime = (this._lastGameTime != -1) ? createjs.Ticker.getMeasuredFPS() - this._lastGameTime : 1;\r\n        this._lastGameTime = createjs.Ticker.getMeasuredFPS();\r\n\r\n        //update the screen\r\n        if(ScreenManager.CurrentScreen != null) ScreenManager.CurrentScreen.update(gameTime);\r\n\r\n        //scale all children\r\n        // this._scaleChildren(this._stage.children);\r\n\r\n        //update the stage\r\n        this._stage.update();\r\n    }\r\n\r\n\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get FRAME_RATE() { return 30; }\r\n    // public static get WIDTH() { return Game.HEIGHT * 0.5625; } //desired size\r\n    // public static get HEIGHT() { return Math.min(document.body.clientHeight, 1024); }\r\n\r\n    public static get WIDTH() { return 576; }\r\n    public static get HEIGHT() { return 1024; }\r\n\r\n    public get StageWidth() { return this._canvas.width; } //actual size\r\n    public get StageHeight() { return this._canvas.height; }\r\n\r\n    public get Stage() { return this._stage; }\r\n    public get Scaling() { return this._scaling; }\r\n\r\n    public get CurrentLevelData() { return this._currentLevel; }\r\n    public get CurrentScoreData() { return this._currentScore; }\r\n\r\n\r\n\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n\r\n\r\n}","import { Logging } from \"./Functions\";\r\nimport { Entity } from \"./entities/Entity\";\r\n\r\nexport interface IPoolObject {\r\n    type:string;\r\n    obj:Entity,\r\n    active:boolean;\r\n}\r\n\r\nexport class ObjectPool {\r\n    private static _pool:IPoolObject[];\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Creates a pool object. */\r\n    public static createPoolObject(obj:Entity, type:string) {\r\n        const poolObj = {\r\n            type,\r\n            obj,\r\n            active: false\r\n        };\r\n        ObjectPool.Pool.push(poolObj);\r\n        return poolObj;\r\n    }\r\n\r\n    /**Checks out a pool object.  Use POOL global function to access. */\r\n    public static checkout(type:string) {\r\n        const poolObj = ObjectPool._getObjectByType(type);\r\n        if(poolObj != null) {\r\n            poolObj.active = true;\r\n            return poolObj.obj;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**Returns an object to the pool. */\r\n    public static return(obj:Entity) {\r\n        const poolObj = ObjectPool._getObjectByObj(obj);\r\n        if(poolObj != null) {\r\n            poolObj.active = false;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**Returns all objects to pool. */\r\n    public static releaseAllObjects() {\r\n        ObjectPool._pool.forEach(p => {\r\n            ObjectPool.return(p.obj);\r\n        });\r\n    }\r\n\r\n\r\n    public static _getObjectByType(type) {\r\n        const poolObj = ObjectPool._pool.find((o => o.type == type && !o.active));\r\n        if(poolObj == null) Logging.error(\"Object not found in pool, or pool is exhausted.  Return some objects.\");\r\n        return poolObj\r\n    }\r\n    public static _getObjectByObj(obj) {\r\n        return ObjectPool._pool.find((o => o.obj == obj));\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get Pool() { \r\n        if(ObjectPool._pool == null) ObjectPool._pool = [];\r\n        return ObjectPool._pool;\r\n    }\r\n}","import { Game } from \"../Game\";\r\nimport { Entity } from \"./Entity\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { IEnableable } from \"../Interfaces\";\r\nimport { Logging } from \"../Functions\";\r\nimport { GameScreen } from \"../screens/GameScreen\";\r\nimport { Fish } from \"./Fish\";\r\n\r\nexport class Cat extends Entity implements IEnableable {\r\n    private _speed:number;\r\n    private _fishCaughtMultiplier:number; //this will be the rate at which the cat slows down when rising per fish\r\n\r\n    private _catYTween:createjs.Tween;\r\n    private _caughtFish:Fish[];\r\n\r\n    private _isGrabbing:boolean;\r\n    private _isRising:boolean;\r\n    private _isInjured:boolean;\r\n    private _hasReachedSurface:boolean;\r\n\r\n    constructor(gameScreen:GameScreen) {\r\n        super(gameScreen, LoadManager.Spritesheets.Kitty_Spritesheet);\r\n        // super(gameScreen, LoadManager.Spritesheets.Cat_Spritesheet);\r\n        this._speed = 3;\r\n        this._fishCaughtMultiplier = 0.05;\r\n\r\n        this._caughtFish = [];\r\n        this._isGrabbing = false;\r\n        this._isRising = false;\r\n        this._isInjured = false;\r\n        this._hasReachedSurface = true;\r\n\r\n        this._sprite.gotoAndPlay(Cat.ANIMATION.Idle);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    enable() {\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n    }\r\n\r\n\r\n    /***************/\r\n    /*   ACTIONS   */\r\n    /***************/\r\n    public grab() {\r\n        //if the game is paused, we shall not grab\r\n        if(this.GameScreen.IsGamelogicPaused) return;\r\n\r\n        //cannot grab if we are not at surface\r\n        if(!this._hasReachedSurface) return;\r\n\r\n        this._isGrabbing = true;\r\n        this._hasReachedSurface = false;\r\n\r\n        //move to x position\r\n        this.X = this.GameScreen.Game.Stage.mouseX;\r\n\r\n        //grab to y position\r\n        const speed = (this.GameScreen.Game.Stage.mouseY / 2) * this.Speed;\r\n        this._catYTween = createjs.Tween\r\n            .get(this._sprite)\r\n            .to({ y:this.GameScreen.Game.Stage.mouseY }, speed, createjs.Ease.circIn)\r\n            .call(() => {\r\n                //once the grab is done, turn off flag\r\n                this._isGrabbing = false;\r\n\r\n                 //play animations\r\n                this._sprite.gotoAndPlay(Cat.ANIMATION.Grab);\r\n                //listen for animation to finish\r\n                (this._sprite as any).on(\"animationend\", () => {\r\n                    this._sprite.gotoAndPlay(Cat.ANIMATION.Hold);\r\n                }, true);\r\n\r\n                //try to grab a fish\r\n                const fishes = this.GameScreen.tryToGrabFishes(this.X , this.Y);\r\n\r\n                //see if a fish was grabbed\r\n                if(fishes.length > 0) this.caught(fishes);\r\n                else this.returnToSurface();\r\n            });\r\n\r\n    }\r\n\r\n    /**\r\n     * Called to return cat to surface.\r\n     */\r\n    public returnToSurface() {\r\n        this._sprite.gotoAndPlay(Cat.ANIMATION.Idle);\r\n\r\n        //remove any lingering tweens\r\n        createjs.Tween.removeTweens(this._sprite);\r\n        const speed = (this.Y / 2) * this.Speed;\r\n        this._catYTween = createjs.Tween.get(this._sprite)\r\n            .wait(150)\r\n            .to({y:20}, speed, createjs.Ease.linear)\r\n            .call(() => {\r\n                //once the surface has been reached, allow x movement again\r\n                this.reachSurface();\r\n            });\r\n    }\r\n\r\n    public caught(fishes:Fish[]) {\r\n        if(fishes.length <= 0) return;\r\n        this._isRising = true;  \r\n        \r\n        let hasNewFish = false;\r\n\r\n        fishes.forEach(f => {\r\n            if(this._caughtFish.indexOf(f) != -1) return;\r\n            hasNewFish = true;\r\n            //grab the fish\r\n            f.catch();\r\n\r\n            //add fish to caught array\r\n            this._caughtFish.push(f);\r\n\r\n            //control the fish\r\n            f.Y = this.Y;\r\n        });\r\n\r\n        if(!hasNewFish) return;\r\n        \r\n        //if we grabbed a fish...\r\n        //go back up... slowly\r\n        createjs.Tween.removeTweens(this._sprite);\r\n        const speed = this.Y * this.Speed;\r\n        this._catYTween = createjs.Tween.get(this._sprite)\r\n            .wait(250)\r\n            .to({y:-20}, speed, createjs.Ease.linear)\r\n            .call(() => {\r\n                //once the surface has been reached, allow x movement again\r\n                this.reachSurface();\r\n                this._isRising = false;\r\n            });\r\n\r\n    }\r\n    public drop() {\r\n        //release the fish\r\n        this._caughtFish.forEach(f => f.release());\r\n        this._caughtFish = [];\r\n    }\r\n\r\n    /**Called when hit by an enemy. */\r\n    public injure() {\r\n        this._isInjured = true;\r\n        //start hurt animation\r\n        //end any current tweening\r\n        createjs.Tween.removeTweens(this._sprite);\r\n        this._sprite.gotoAndPlay(Cat.ANIMATION.Ow);\r\n        this._catYTween = createjs.Tween.get(this._sprite)\r\n            .wait(15)\r\n            .to({y:20}, 500, createjs.Ease.linear)\r\n            .call(() => {\r\n                //once the surface has been reached, allow x movement again\r\n                this.reachSurface();\r\n                this._sprite.gotoAndPlay(Cat.ANIMATION.Idle);\r\n            });\r\n    }\r\n\r\n    /**Called when the cat tickles an enemy. */\r\n    public hitEnemy() {\r\n        this.injure();\r\n        this.drop();\r\n    }\r\n\r\n    public reachSurface() {\r\n        //if we have a fish, send to main logic\r\n        if(this._caughtFish != null) {\r\n            this._caughtFish.forEach(f => {\r\n                this.GameScreen.collectFish(f);\r\n            });\r\n            this._caughtFish = [];\r\n        }\r\n\r\n        //set flags\r\n        this._hasReachedSurface = true;\r\n        this._isInjured = false;\r\n        this._isRising = false;\r\n        this._isGrabbing = false;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    update(gameTime:number) {\r\n        //if our game logic is paused, no FISHING\r\n        if(this.GameScreen.IsGamelogicPaused) return;\r\n\r\n        super.update(gameTime);\r\n\r\n\r\n        //if we are rising, attempt to catch more fish\r\n        if(this._isRising && !this._isInjured) {\r\n            //try to grab a fish\r\n            const fishes = this.GameScreen.tryToGrabFishes(this.X , this.Y);\r\n            //see if a fish was grabbed\r\n            if(fishes.length > 0)\r\n                this.caught(fishes);\r\n        }\r\n\r\n        //test puffer damage\r\n        if(this._isRising || this._isGrabbing) {\r\n            //don't test again if injured\r\n            if(!this._isInjured) {\r\n                //test for puffer hit\r\n                const hasHitPuffer = this.GameScreen.hasHitAPuffer(this.X, this.Y);\r\n                if(hasHitPuffer) {\r\n                    this.hitEnemy();\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        //drag fish with us if we have any\r\n        if(this._caughtFish != null) {\r\n            this._caughtFish.forEach(f => {\r\n                f.Y = this.Y - 20;\r\n            });\r\n        }\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get GRAB_RANGE() { return 120; }\r\n    public static get ANIMATION() {\r\n        return Object.freeze({\r\n            \"Idle\" : \"kittyIdle\",\r\n            \"Death\" : \"kittyIdle\",\r\n            \"Grab\" : \"kittyIdle\",\r\n            \"Hold\" : \"kittyIdle\",\r\n            \"Ow\" : \"kittyIdle\"\r\n        });\r\n    }\r\n    // public static get ANIMATION() {\r\n    //     return Object.freeze({\r\n    //         \"Idle\" : \"cat_idle\",\r\n    //         \"Death\" : \"cat_death\",\r\n    //         \"Grab\" : \"cat_grab\",\r\n    //         \"Hold\" : \"cat_grab_hold\",\r\n    //         \"Ow\" : \"cat_ow\"\r\n    //     });\r\n    // }\r\n    public get Speed() { \r\n        const caughtFishMult = ((this._caughtFish.length > 0) ? 1 + (this._caughtFish.length + this._fishCaughtMultiplier) : 1);\r\n        console.log(caughtFishMult);\r\n\r\n        return caughtFishMult * this._speed;\r\n    }\r\n    public set Speed(value:number) { this._speed = value; }\r\n}","import { ICreateable, IUpdateable } from \"../Interfaces\";\r\nimport { GameScreen } from \"../screens/GameScreen\";\r\nimport { Game } from \"../Game\";\r\n\r\nexport class Entity implements ICreateable<Entity>, IUpdateable {\r\n    private _gameScreen:GameScreen;\r\n    protected _name:string;\r\n    protected _sprite:createjs.Sprite;\r\n    protected _direction:{ x:number, y:number };\r\n    private _scaling:number;\r\n\r\n    private _isIgnoringCollision:boolean;\r\n    private _ignoreCollisionTimer:number;\r\n\r\n    constructor(gameScreen:GameScreen, spritesheet:createjs.SpriteSheet) {\r\n        this._gameScreen = gameScreen;\r\n        this._sprite = new createjs.Sprite(spritesheet);\r\n        this._direction = { x:1, y:1 };\r\n\r\n        this._isIgnoringCollision = false;\r\n        this._ignoreCollisionTimer = 0;\r\n\r\n        //get the game scale\r\n        this._scaling = this._gameScreen.Game.Scaling;\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public create(container:createjs.Container):Entity {\r\n        // (this._sprite as any).scale = this._scaling;\r\n\r\n        //move to main container\r\n        if(container == null)\r\n            this._gameScreen.Game.Stage.addChild(this._sprite);\r\n        else\r\n            container.addChild(this._sprite);\r\n        return this;\r\n    }\r\n\r\n    public destroy():Entity {\r\n        if(this._sprite == null || this._sprite.parent == null) return null;\r\n\r\n        //remove from main container\r\n        this._sprite.parent.removeChild(this._sprite);\r\n\r\n        return this;\r\n    }\r\n\r\n    public update(gameTime:number) {\r\n\r\n         //listen for collision ignore\r\n        if(this._isIgnoringCollision) {\r\n            this._ignoreCollisionTimer++;\r\n\r\n            if(this._ignoreCollisionTimer > Entity.IGNORE_COLLISION)\r\n                this._isIgnoringCollision = false;\r\n        }\r\n    }\r\n\r\n    protected startIgnoreCollision() {\r\n        this._isIgnoringCollision = true\r\n    }\r\n\r\n    protected testStageBounds(artificialReg:{x:number, y:number} = null) {\r\n        let reg = { x:this._sprite.regX, y:this._sprite.regY };\r\n        if(artificialReg != null) {\r\n            reg = {\r\n                x: (this._direction.x > 0) ? this.Bounds.Width * artificialReg.x : (this.Bounds.Width * (1 - artificialReg.x)),\r\n                y: (this._direction.y > 0) ? this.Bounds.Height * artificialReg.y : (this.Bounds.Height * (1 - artificialReg.y))\r\n            }\r\n        }\r\n        // const bounds = { width:this._game.StageWidth, height: this._game.StageHeight };\r\n        const bounds = { width:this._gameScreen.Game.StageWidth, height: this._gameScreen.Game.StageHeight };\r\n        const extents = {   \r\n            x:(this._direction.x > 0) ? (this.Bounds.Width - reg.x) : -reg.x, \r\n            y:(this._direction.y > 0) ? (this.Bounds.Height - reg.y) : -reg.y \r\n        };\r\n\r\n        //test walls\r\n        if((this.X + extents.x) > bounds.width) return Entity.HIT.Right;\r\n        else if(this.X + extents.x < 0) return Entity.HIT.Left;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get IGNORE_COLLISION() { return 20; }\r\n    public static get HIT() { return Object.freeze({Top:0, Right:1, Bottom:2, Left:3}); }\r\n\r\n    protected get GameScreen() { return this._gameScreen; }\r\n\r\n    public get Sprite() { return this._sprite; }\r\n    public get Parent() { return this._sprite.parent; }\r\n\r\n    public get X() { return this._sprite.x; }\r\n    public set X(value) { this._sprite.x = value; }\r\n    public get Y() { return this._sprite.y; }\r\n    public set Y(value) { this._sprite.y = value; }\r\n\r\n    public set DirectionX(value) { \r\n        const lastX = this._direction.x;\r\n        this._direction.x = value; \r\n        //flip sprite if our direction has changed\r\n        if(this._direction.x != lastX) this._sprite.scaleX *= -1;\r\n    }\r\n\r\n    public get Bounds() { \r\n        let bounds = this._sprite.getBounds();\r\n        return  { Width:bounds.width, Height:bounds.height };\r\n    }\r\n\r\n    public get IsIgnoringCollision() { return this._isIgnoringCollision; }\r\n}","import { Game } from \"../Game\";\r\nimport { Entity } from \"./Entity\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { IEnableable } from \"../Interfaces\";\r\nimport { Logging } from \"../Functions\";\r\nimport { GameScreen } from \"../screens/GameScreen\";\r\n\r\nexport class Fish extends Entity implements IEnableable {\r\n    private _speed:number;\r\n    private _naturalY:number;\r\n\r\n    private _isCaught:boolean;\r\n    private _isReturning:boolean;\r\n\r\n    constructor(gameScreen:GameScreen, spritesheet?:createjs.SpriteSheet) {\r\n        super(gameScreen, spritesheet || LoadManager.Spritesheets.Peeper_Spritesheet);\r\n        this._speed = 1;\r\n\r\n        this._isCaught = false;\r\n        this._isReturning = false;\r\n\r\n        this._sprite.gotoAndPlay(Fish.ANIMATION.Slow);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    \r\n\r\n\r\n    /***************/\r\n    /*   ACTIONS   */\r\n    /***************/\r\n    public setNaturalY() {\r\n        this._naturalY = this.Y;\r\n    }\r\n\r\n    public catch() {\r\n        if(this._isCaught) return;\r\n        \r\n        Logging.message(\"Fish was grabbed!\");\r\n        this._isCaught = true;\r\n\r\n        this._sprite.gotoAndPlay(Fish.ANIMATION.Panic);\r\n    }\r\n\r\n    public release() {\r\n        this._isCaught = false;\r\n        //return to natural y position\r\n        this._isReturning = true;\r\n    }\r\n\r\n\r\n    /**Test to see if global position hits sprite. */\r\n    public testHit(x:number, y:number):boolean {\r\n        return this._sprite.hitTest(x, y);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    destroy() {\r\n        //reset flags\r\n        this._isCaught = false;\r\n        //reset animations\r\n        this._sprite.gotoAndPlay(Fish.ANIMATION.Slow);\r\n\r\n        this.disable();\r\n        return super.destroy();\r\n    }\r\n\r\n    update(gameTime:number) {\r\n        super.update(gameTime);\r\n\r\n        //move the fishy\r\n        if(!this._isCaught)\r\n            this.X += this._speed * gameTime * this._direction.x;\r\n        //--if returning, swim to natural y\r\n        if(this._isReturning) {\r\n            //if we are still far away, swim!\r\n            if(Math.abs(this.Y - this._naturalY) > 30) {\r\n                const isNeg = this.Y > this._naturalY;\r\n                this.Y += (isNeg) ? -10 : 10;\r\n            }\r\n            else {\r\n                this._isReturning = false;\r\n                this._sprite.gotoAndPlay(Fish.ANIMATION.Slow);\r\n            }\r\n        }\r\n\r\n        //test collision\r\n        if(!this.IsIgnoringCollision) {\r\n\r\n            //if fish hits the edge, flip direction\r\n            const hit = this.testStageBounds({x:0.5, y:0.5});\r\n            switch(hit) {\r\n                case Entity.HIT.Right:\r\n                    this._direction.x *= -1;\r\n                    this._sprite.scaleX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X -= 5 - this.Bounds.Width;\r\n                    break;\r\n                case Entity.HIT.Left:\r\n                    this._direction.x *= -1;\r\n                    this._sprite.scaleX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X += 5 - this.Bounds.Width;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    enable() {\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get ANIMATION() {\r\n        return Object.freeze({\r\n            \"Slow\" : \"fishIdle\",\r\n            \"Fast\" : \"fishIdle\",\r\n            \"Panic\" : \"fishPanic\"\r\n        });\r\n    }\r\n    public get Speed() { return this._speed; }\r\n    public set Speed(value:number) { this._speed = value; }\r\n}","import { Game } from \"../Game\";\r\nimport { Entity } from \"./Entity\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { IEnableable } from \"../Interfaces\";\r\nimport { Logging } from \"../Functions\";\r\nimport { GameScreen } from \"../screens/GameScreen\";\r\nimport { Cat } from \"./Cat\";\r\n\r\nexport class Puffer extends Entity implements IEnableable {\r\n    public get Type() { return \"Puffer\"; }\r\n    \r\n    private _speed:number;\r\n    private _cooldown:number = 40;\r\n    private _currentCooldown:number = 0;\r\n\r\n    private _isCaught:boolean;\r\n\r\n    constructor(gameScreen:GameScreen) {\r\n        super(gameScreen, LoadManager.Spritesheets.Puffer_Spritesheet);\r\n        this._speed = 1;\r\n\r\n        this._isCaught = false;\r\n\r\n        this._sprite.gotoAndPlay(Puffer.ANIMATION.Idle);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    \r\n\r\n\r\n    /***************/\r\n    /*   ACTIONS   */\r\n    /***************/\r\n    public puff() {\r\n        this._sprite.gotoAndPlay(Puffer.ANIMATION.Angry);\r\n        //start cooldown\r\n        this._currentCooldown = this._cooldown;\r\n    }\r\n\r\n\r\n    /**Test to see if global position hits sprite. */\r\n    public testHit(x:number, y:number, cat:Cat):boolean {\r\n        return (x >= this.X - cat.Bounds.Width && x <= this.X + this.Bounds.Width \r\n            && y >= this.Y - cat.Bounds.Height && y <= this.Y + this.Bounds.Height) ;\r\n        // return this._sprite.hitTest(x, y);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    destroy() {\r\n        //reset flags\r\n        this._isCaught = false;\r\n        //reset animations\r\n        this._sprite.gotoAndPlay(Puffer.ANIMATION.Idle);\r\n\r\n        this.disable();\r\n        return super.destroy();\r\n    }\r\n\r\n    update(gameTime:number) {\r\n        super.update(gameTime);\r\n\r\n        //move the fishy\r\n        if(!this._isCaught)\r\n            this.X += this._speed * gameTime * this._direction.x;\r\n\r\n        //do cooldown\r\n        if(this._currentCooldown >= 0) {\r\n            this._currentCooldown--;\r\n            if(this._currentCooldown == 0) {\r\n                //reset animations\r\n                this._sprite.gotoAndPlay(Puffer.ANIMATION.Recover);\r\n            }\r\n        }\r\n\r\n        //test collision\r\n        if(!this.IsIgnoringCollision) {\r\n\r\n            //if fish hits the edge, flip direction\r\n            const hit = this.testStageBounds({x:0.5, y:0.5});\r\n            switch(hit) {\r\n                case Entity.HIT.Right:\r\n                    this._direction.x *= -1;\r\n                    this._sprite.scaleX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X -= 5 - this.Bounds.Width;\r\n                    break;\r\n                case Entity.HIT.Left:\r\n                    this._direction.x *= -1;\r\n                    this._sprite.scaleX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X += 5 - this.Bounds.Width;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    enable() {\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get ANIMATION() {\r\n        return Object.freeze({\r\n            \"Idle\" : \"pufferIdle\",\r\n            \"Angry\" : \"pufferAngry\",\r\n            \"Recover\" : \"pufferRecover\"\r\n        });\r\n    }\r\n    public get Speed() { return this._speed; }\r\n    public set Speed(value:number) { this._speed = value; }\r\n}","import { LoadManager } from \"../../managers/LoadManager\";\r\nimport { Fish } from \"../Fish\";\r\nimport { GameScreen } from \"../../screens/GameScreen\";\r\n\r\nexport class Persephone extends Fish {\r\n\r\n    constructor(gameScreen:GameScreen) {\r\n        super(gameScreen, LoadManager.Spritesheets.Persephone_Spritesheet);\r\n        this._sprite.gotoAndPlay(Persephone.SPEC_ANIMATION.Idle);\r\n    }\r\n\r\n\r\n    public static get SPEC_ANIMATION() {\r\n        return Object.freeze({\r\n            \"Idle\" : \"persIdle\"\r\n        });\r\n    }\r\n\r\n}","import { Game } from \"./Game\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    const game = new Game(document.getElementById(\"game-canvas\") as HTMLCanvasElement);\r\n});","import { Screen } from \"../screens/Screen\";\r\n\r\nexport interface WorldsData {\r\n    worlds:LevelData[];\r\n}\r\n\r\nexport interface LevelData {\r\n    name:string;\r\n    tutorials?:string[];\r\n    background?:string;\r\n    data:any[];\r\n    duration?:number;\r\n    showScore?:boolean;\r\n    showRemainingFish?:boolean;\r\n    special?:boolean;\r\n    unlocks?:string; // name of unlock fish\r\n}\r\n\r\nexport class DataManager {\r\n    private static _worldsData:WorldsData;\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Loads in the worlds data! */\r\n    public static loadWorldsData(fileLocation:string) {\r\n        return new Promise<WorldsData>(async(res, rej) => {\r\n            await fetch(fileLocation)\r\n                .then(blob => blob.json())\r\n                .then(json => {\r\n                    this._worldsData = json;\r\n                    res(this._worldsData);\r\n                })\r\n                .catch(err => {\r\n                    rej(\"Could not load world data! \" + err);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**Returns the level data received by the given index. */\r\n    public static getLevelDataByIndex(index:number) {\r\n        //flatten level data, and get data\r\n        let flatten = [].concat.apply([], DataManager._worldsData.worlds);\r\n        if(index < flatten.length)\r\n            return flatten[index];\r\n        return null;\r\n    }\r\n\r\n    /**Inverse of getLevelDataByIndex.\r\n     * @see getLevelDataByIndex . */\r\n    public static getLevelIndexByData(levelData:LevelData) {\r\n        //flatten level data, and get data\r\n        let flatten = [].concat.apply([], DataManager._worldsData.worlds);\r\n        return flatten.indexOf(levelData);\r\n    }\r\n\r\n    /**Gets the next level data or returns null if there is no next level. */\r\n    public static getNextLevel(currentLevel:number | LevelData) {\r\n        let index = currentLevel as number;\r\n        if(currentLevel as LevelData != null) index = this.getLevelIndexByData(currentLevel as LevelData);\r\n\r\n        //get the next index\r\n        return this.getLevelDataByIndex(index + 1);\r\n    }\r\n\r\n    /**Gets the world and level index of the given level. */\r\n    public static getIndexData(levelData:LevelData) {\r\n        //test each world and look for us\r\n        for(let i = 0; i < DataManager._worldsData.worlds.length; i++) {\r\n            const world = DataManager._worldsData.worlds[i];\r\n            for(let n = 0; n < (world as any).length; n++) {\r\n                if(world[n] == levelData) return { world:i, level:n };\r\n            }            \r\n        }\r\n\r\n        return { world:-1, level:-1 };\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get WorldsData():WorldsData { return DataManager._worldsData; }\r\n    public static get FlatWorldData() { return [].concat.apply([], DataManager._worldsData.worlds); }\r\n}","export class LoadManager {\r\n    public static get ASSETS_LOADED():string { return \"onAssetsLoaded\"; }\r\n    public static get ASSETS_FAILED():string { return \"onAssetsFailed\"; }\r\n    public static get ASSETS_UPDATED():string { return \"onAssetsUpdated\"; }\r\n\r\n    public static Spritesheets:{ [key:string]:createjs.SpriteSheet } = {};\r\n    public static Images:{ [key:string]:createjs.Bitmap } = {};\r\n\r\n    private static _stage:createjs.StageGL;\r\n    private static _preloadManager:createjs.LoadQueue;\r\n    private static _sheetsTotal:number = 0;\r\n    private static _sheetsLoaded:number = 0;\r\n\r\n    private static _percentage:number = 0;\r\n    private static _totalAssetsLoaded:number = 0;\r\n    private static _totalAssets:number = 0;\r\n\r\n    private static AssetsLoadedEvent:any = new (createjs as any).Event(LoadManager.ASSETS_LOADED, false, true);\r\n    private static AssetsFailedEvent:any = new (createjs as any).Event(LoadManager.ASSETS_FAILED, false, true);\r\n    private static AssetsUpdatedEvent:any = new (createjs as any).Event(LoadManager.ASSETS_UPDATED, false, true);\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public static reset() {\r\n        LoadManager._sheetsTotal = 0;\r\n        LoadManager._sheetsLoaded = 0;\r\n\r\n        LoadManager._percentage = 0;\r\n        LoadManager._totalAssetsLoaded = 0;\r\n        LoadManager._totalAssets = 0;\r\n    }\r\n\r\n    public static loadAssets(src:string, stage:createjs.StageGL) {\r\n        LoadManager.reset();\r\n        LoadManager._stage = stage;\r\n\r\n        return new Promise(async(res, rej) => {\r\n            LoadManager._preloadManager = new createjs.LoadQueue();\r\n\r\n            //setup sound controllers\r\n            createjs.Sound.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin, createjs.FlashAudioPlugin]);\r\n            createjs.Sound.alternateExtensions = [\"mp3\",\"wav\"];\r\n            LoadManager._preloadManager.installPlugin(createjs.Sound);\r\n\r\n            //setup listeners\r\n            (LoadManager._preloadManager as any).on(\"fileload\", LoadManager._onLoaded, LoadManager);\r\n            (LoadManager._preloadManager as any).on(\"complete\", LoadManager._onComplete, LoadManager);\r\n            (LoadManager._preloadManager as any).on(\"error\", LoadManager._onError, LoadManager);\r\n\r\n            //get the manifest\r\n            fetch(src)\r\n                .then(blob => blob.json())\r\n                .then(data => {\r\n                    //load the manifest\r\n                    LoadManager._preloadManager.setMaxConnections(1);\r\n                    LoadManager._preloadManager.loadManifest(data);\r\n\r\n                    (LoadManager._stage as any).addEventListener(LoadManager.ASSETS_LOADED, () => {\r\n                        res();\r\n                    });\r\n                })\r\n                .catch(() => {\r\n                    LoadManager.emitErrorEvent();\r\n                    rej(\"Could not load assets!\");\r\n                });\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    public static emitLoadedEvent() {\r\n        if(LoadManager._stage != null) (LoadManager._stage as any).dispatchEvent(LoadManager.AssetsLoadedEvent);\r\n    }\r\n    public static emitErrorEvent() {\r\n        if(LoadManager._stage != null) (LoadManager._stage as any).dispatchEvent(LoadManager.AssetsFailedEvent);\r\n    }\r\n    public static emitUpdatedEvent() {\r\n        LoadManager._percentage = parseFloat((LoadManager._preloadManager.getItems(true).length / LoadManager._preloadManager.getItems(false).length).toFixed(2));\r\n        if(LoadManager._stage != null) (LoadManager._stage as any).dispatchEvent(LoadManager.AssetsUpdatedEvent);\r\n    }\r\n\r\n\r\n    private static _loadedSheet(name:string, sheet:createjs.SpriteSheet) {\r\n        LoadManager.Spritesheets[name] = sheet;\r\n\r\n        LoadManager._sheetsLoaded++;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    private static _onLoaded(e) {\r\n\r\n        console.log(\"asset loaded: \" + e.item.src + \" type: \" + e.item.type);\r\n\r\n        switch(e.item.type) {\r\n            case (createjs as any).Types.JAVASCRIPT: {\r\n                //load the spritesheet\r\n                LoadManager._sheetsTotal++;\r\n                \r\n                const sheet = (window[e.item.id] as any)._SpriteSheet;\r\n\r\n                // listen for spritesheet to load\r\n                if(!sheet.complete) {\r\n                    sheet.on(\"complete\", (ev:any) => {\r\n                        LoadManager._loadedSheet(e.item.id, sheet);\r\n                        ev.remove();\r\n                    })\r\n                }\r\n                else LoadManager._loadedSheet(e.item.id, sheet);\r\n                break\r\n            }\r\n            case (createjs as any).Types.IMAGE: {\r\n                //build the bitmap\r\n                LoadManager.Images[e.item.id] = new createjs.Bitmap(e.item.src);\r\n            }\r\n        }\r\n\r\n\r\n\r\n        //update event\r\n        LoadManager.emitUpdatedEvent();\r\n    }\r\n\r\n    private static _onComplete(e) {\r\n        //remove all preLoadManager events\r\n        (LoadManager._preloadManager as any).removeAllEventListeners();\r\n        \r\n        //make sure all spritesheets are loaded\r\n        if(LoadManager._sheetsLoaded < LoadManager._sheetsTotal) {\r\n            const loadInterval = setInterval((ev:any) => {\r\n                //see if they are loaded\r\n                if(LoadManager._sheetsLoaded >= LoadManager._sheetsTotal) {\r\n                    e.remove();\r\n                    // window.clearInterval(loadInterval);\r\n                    LoadManager.emitLoadedEvent();\r\n                }\r\n            }, 100)\r\n        }\r\n        else LoadManager.emitLoadedEvent();\r\n    }\r\n\r\n    private static _onError(e) {\r\n        LoadManager.emitErrorEvent();\r\n    }\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get Percentage():number { return LoadManager._percentage; }\r\n    \r\n\r\n\r\n\r\n}","import { WorldsData, LevelData } from \"./DataManager\";\r\n\r\nexport interface IProgressLevel {\r\n    unlocked: boolean;\r\n    completed: boolean;\r\n}\r\n\r\nexport interface IProgressSpecial {\r\n    collected: boolean;\r\n    unlocks: string;\r\n}\r\n\r\n/**Handles progress made while playing the game. */\r\nexport class ProgressManager {\r\n\r\n    private static _worldsData:WorldsData;\r\n    private static _levelsProgress:IProgressLevel[];\r\n    private static _specialsProgress:IProgressSpecial[];\r\n    \r\n    /*--------------- METHODS ------------------------*/\r\n    /**Loads in the worlds data so it can parse the progress data. */\r\n    public static loadWorldsData(worldsData:WorldsData) {\r\n        ProgressManager._worldsData = worldsData;\r\n\r\n        //build data for world set\r\n\r\n        console.log(worldsData);\r\n\r\n        ProgressManager._levelsProgress = worldsData.worlds.map(world => {\r\n            return [].concat.apply([], world as any)\r\n                .map(level => {\r\n                    return { unlocked: false, completed: false };\r\n                });\r\n        });\r\n        ProgressManager._specialsProgress = worldsData.worlds.map(world => {\r\n            return [].concat.apply([], world as any)\r\n                .map(level => {\r\n                    if(level.special) return { collected: false, unlocks:level.unlocks };\r\n                    return null;\r\n                });\r\n        });\r\n\r\n        //unlock level 1\r\n        ProgressManager._levelsProgress[0][0].unlocked = true;\r\n\r\n        console.log(\"PROGRESS\", ProgressManager._levelsProgress, ProgressManager._specialsProgress);\r\n\r\n        //read cookie data\r\n        ProgressManager._readCookieData();\r\n    }\r\n\r\n    /**Mark level as complete. Also saves data. */\r\n    public static completeLevel(worldIndex:number, levelIndex:number) {\r\n        //set to complete!\r\n        const level = ProgressManager._levelsProgress[worldIndex][levelIndex];\r\n        if(level == null) return;\r\n        level.completed = true;\r\n\r\n        //if there is a next level, unlock it\r\n        //test for next in this world\r\n        const nextLevel = ProgressManager._levelsProgress[worldIndex][levelIndex+1];\r\n        if(nextLevel != null) {\r\n            nextLevel.unlocked = true;\r\n        }\r\n        else {\r\n            const nextWorld = ProgressManager._levelsProgress[worldIndex+1][0];\r\n            if(nextWorld != null) nextWorld.unlocked = true;\r\n        }\r\n\r\n        //save cookie data\r\n        ProgressManager.saveCookieData();\r\n    }\r\n\r\n    /**Mark special as collected.  Also saves data. */\r\n    public static collectSpecial(worldIndex:number, levelIndex:number) {\r\n        //set to collected!\r\n        const level = ProgressManager._specialsProgress[worldIndex][levelIndex];\r\n        if(level == null) return;\r\n        level.collected = true;\r\n\r\n        //save cookie data\r\n        ProgressManager.saveCookieData();\r\n    }\r\n\r\n    /**Saves the progress data to a cookie or two. */\r\n    public static saveCookieData() {\r\n        console.log(\"MY NEW SAVE DATA\", ProgressManager.ProgressData);\r\n\r\n        document.cookie = `progData=${JSON.stringify(ProgressManager.ProgressData)};path=/`;\r\n    }\r\n\r\n    /**Reads cookie data and fills in progress data. */\r\n    private static _readCookieData() {\r\n        //look for cookie\r\n        const cookie = ProgressManager._getCookie(\"progData\");\r\n        if(cookie != null) {\r\n            //read the cookie\r\n            const data = JSON.parse(cookie);\r\n            ProgressManager._levelsProgress = data.levels;\r\n            ProgressManager._specialsProgress = data.specials;\r\n        }\r\n    }\r\n\r\n\r\n    /*https://www.w3schools.com/js/js_cookies.asp*/\r\n    private static _getCookie(cname) {\r\n        var name = cname + \"=\";\r\n        var decodedCookie = decodeURIComponent(document.cookie);\r\n        var ca = decodedCookie.split(';');\r\n        for(var i = 0; i <ca.length; i++) {\r\n            var c = ca[i];\r\n            while (c.charAt(0) == ' ') {\r\n            c = c.substring(1);\r\n            }\r\n            if (c.indexOf(name) == 0) {\r\n            return c.substring(name.length, c.length);\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get ProgressData() {\r\n        return {\r\n            levels : ProgressManager._levelsProgress,\r\n            specials : ProgressManager._specialsProgress\r\n        };\r\n    }\r\n}","import { Screen } from \"../screens/Screen\";\r\n\r\nexport class ScreenManager {\r\n    private static _screensLookup:{ [key:string]:Screen } = { };\r\n    private static _currentScreen:Screen = null;\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Registers a screen into the Screen Manager.  Uses a key to associate it. */\r\n    public static registerScreen(key:string, screen:Screen):void {\r\n        //if we don't have this screen, add it\r\n        if(ScreenManager._screensLookup[key] == null)\r\n            ScreenManager._screensLookup[key] = screen;\r\n    }\r\n\r\n    /**Unregisters a screen from the Screen Manager. */\r\n    public static unregisterScreen(key:string):boolean {\r\n        if(ScreenManager._screensLookup[key] == null) return false;\r\n\r\n        ScreenManager._screensLookup[key] = null;\r\n        delete ScreenManager._screensLookup[key];\r\n        return true;\r\n    }\r\n\r\n    /**Sets the current screen.  Can be done with the screen itself or an associative key. */\r\n    public static setCurrentScreen(screen:string | Screen, stage:createjs.StageGL):Promise<void> {\r\n        let tempScreen = null;\r\n        if(screen instanceof Screen) tempScreen = screen;\r\n        else tempScreen = ScreenManager._screensLookup[screen];\r\n\r\n        //if we did not find a screen, do not follow through\r\n        if(tempScreen == null) return Promise.resolve();\r\n\r\n        let promises = [];\r\n        //if we have a previous screen, wait for it to fade out\r\n        if(ScreenManager._currentScreen != null)\r\n        promises.push(\r\n            new Promise(async(res) => {\r\n                //fade out\r\n                createjs.Tween\r\n                    .get(ScreenManager._currentScreen.Container)\r\n                    .to({ alpha:0 }, 500, createjs.Ease.linear)\r\n                    .call(() => {\r\n                        ScreenManager._currentScreen.destroy();\r\n                        ScreenManager._currentScreen.disable();\r\n                        res();\r\n                    });\r\n            })\r\n        );\r\n\r\n\r\n        //wait for certain actions to finish\r\n        return new Promise(async(res) => {\r\n            //wait for promises to finish\r\n            await Promise.all(promises);\r\n\r\n            //now add in the new one\r\n            ScreenManager._currentScreen = tempScreen;\r\n            ScreenManager._currentScreen.create(stage);\r\n            ScreenManager._currentScreen.Container.alpha = 0;\r\n            ScreenManager._currentScreen.disable(); //disable until ready\r\n            console.log(\"FADE IN\")\r\n            //fade in\r\n            createjs.Tween\r\n                .get(ScreenManager._currentScreen.Container)\r\n                .to({ alpha:1 }, 1200, createjs.Ease.linear)\r\n                .call(() => {\r\n                    console.log(\"DONE\");\r\n                    ScreenManager._currentScreen.enable();\r\n                    res();\r\n                });\r\n\r\n        });\r\n    }\r\n\r\n    public static getScreenByKey(key:string):Screen {\r\n        return ScreenManager._screensLookup[key];\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get AllScreens() { return ScreenManager._screensLookup; }\r\n    public static get CurrentScreen() { return ScreenManager._currentScreen; }\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Container } from \"../ui/display/Container\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { Game } from \"../Game\";\r\nimport { DataManager } from \"../managers/DataManager\";\r\nimport { IntermediaryScreen } from \"./IntermediaryScreen\";\r\nimport { Logging } from \"../Functions\";\r\n\r\nexport class EndScreen extends Screen {\r\n    private _game:Game;\r\n    private _buttonsContainer:Container;\r\n\r\n    private _completeSpr:createjs.DisplayObject;\r\n    private _failSpr:createjs.DisplayObject;\r\n\r\n    //flags\r\n    private _isFail:boolean;\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n\r\n        this._game = game;\r\n        this._isFail = false;\r\n\r\n        //layout stuff\r\n        const bg = new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"bg\");\r\n        this._container.addChild(bg);\r\n\r\n        this._buttonsContainer = new Container(Container.LAYOUT_OPTIONS.ColumnLeftBottom);\r\n        this._buttonsContainer.addMany({\r\n            btnTryAgain : new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"btnTryAgain\"),\r\n            btnNextLevel : new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"btnNextLevel\"),\r\n            btnMainMenu : new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"btnMainMenu\"),\r\n        });\r\n        this._container.addChild(this._buttonsContainer.Container);\r\n\r\n        //--conditional text\r\n        this._completeSpr = new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"complete\");\r\n        this._failSpr = new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"failure\");\r\n        this._completeSpr.x = this._game.StageWidth / 2 - (this._completeSpr.getBounds().width / 2);\r\n        this._completeSpr.y = 220;\r\n        this._failSpr.x = this._game.StageWidth / 2 - (this._failSpr.getBounds().width / 2);\r\n        this._failSpr.y = this._game.StageHeight * 0.45;\r\n        this._container.addChild(this._completeSpr);\r\n        this._container.addChild(this._failSpr);\r\n\r\n        \r\n        \r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    create(stage:createjs.StageGL):Screen {\r\n        \r\n        \r\n        // //for testing\r\n        // (this._container as any).on(\"click\", (e) => {\r\n        //     ScreenManager.setCurrentScreen(\"menu\", stage);\r\n        // }, this, true);       \r\n        \r\n\r\n        return super.create(stage);\r\n    }\r\n\r\n\r\n    enable() {\r\n        super.enable();\r\n\r\n        //try again\r\n        (this._buttonsContainer.Sprites[\"btnTryAgain\"] as any).on(\"click\", () => {\r\n            //restart this level\r\n            this._game.changeCurrentLevel(this._game.CurrentLevelData);\r\n            ScreenManager.setCurrentScreen(\"game\", this._game.Stage);\r\n        }, this, true);\r\n        //next level\r\n        (this._buttonsContainer.Sprites[\"btnNextLevel\"] as any).on(\"click\", () => {\r\n            //find the next level\r\n            const nextLevel = DataManager.getNextLevel(this._game.CurrentLevelData);\r\n            //if there is no next level, go back to menu\r\n            if(nextLevel == null) {\r\n                //go to main menu\r\n                ScreenManager.setCurrentScreen(\"menu\", this._game.Stage);\r\n                return;\r\n            }\r\n\r\n            Logging.error(\"WHERE AM I? \" + nextLevel.name);\r\n            this._game.changeCurrentLevel(nextLevel);\r\n            //go to intermediary screen\r\n            const intermediary = ScreenManager.getScreenByKey(\"intermediary\") as IntermediaryScreen;\r\n            new Promise(async(res) => {\r\n                intermediary.Text = nextLevel.name;\r\n                await ScreenManager.setCurrentScreen(intermediary, this._game.Stage);\r\n                intermediary.queueNextScreen(\"game\", 1000);\r\n\r\n                res();\r\n            });\r\n        }, this, true);\r\n        //main menu\r\n        (this._buttonsContainer.Sprites[\"btnMainMenu\"] as any).on(\"click\", () => {\r\n            //go to main menu\r\n            ScreenManager.setCurrentScreen(\"menu\", this._game.Stage);\r\n        }, this, true);\r\n    }\r\n\r\n    disable() {\r\n        //toggle fail/success\r\n        this._completeSpr.visible = !this._isFail;\r\n        this._failSpr.visible = this._isFail;\r\n\r\n        Object.keys(this._buttonsContainer.Sprites).forEach(key => this._buttonsContainer.Sprites[key].removeAllEventListeners());\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n}","import { TutorialCreator } from \"./TutorialCreator\";\r\nimport { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { ObjectPool } from \"../ObjectPool\";\r\nimport { Fish } from \"../entities/Fish\";\r\nimport { Persephone } from \"../entities/specials/Persephone\";\r\nimport { Puffer } from \"../entities/Puffer\";\r\nimport { Cat } from \"../entities/Cat\";\r\nimport { Game } from \"../Game\";\r\nimport { Container } from \"../ui/display/Container\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { Logging } from \"../Functions\";\r\nimport { LevelData, DataManager } from \"../managers/DataManager\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { GameScore } from \"../ui/partials/GameScore\";\r\nimport { ProgressManager } from \"../managers/ProgressManager\";\r\n\r\nexport class GameScreen extends Screen {\r\n    private _game:Game;\r\n\r\n    //create containers\r\n    private _staticContainer:Container;\r\n    private _fishContainer:createjs.Container;\r\n    private _pufferContainer:createjs.Container;\r\n\r\n    private _winContainer:createjs.Container;\r\n    private _winBanner:createjs.Shape;\r\n    private _winText:createjs.BitmapText;\r\n\r\n    private _gameScore:GameScore;\r\n    private _tutorialCreator:TutorialCreator;\r\n\r\n    private _cat:Cat;\r\n    private _fishes:Fish[];\r\n    private _puffers:Puffer[];\r\n\r\n    private _remainingFish:number;\r\n\r\n    private _pauseLogic:Boolean;\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n        this._game = game;\r\n        this._fishes = [];\r\n        this._puffers = [];\r\n        this._remainingFish = -1;\r\n\r\n        //create object pool\r\n        ObjectPool.createPoolObject(new Cat(this), POOL.CAT)\r\n        for(let i = 0; i < 120; i++) {\r\n            ObjectPool.createPoolObject(new Fish(this), POOL.FISH);\r\n        }\r\n        for(let i = 0; i < 30; i++) {\r\n            ObjectPool.createPoolObject(new Puffer(this), POOL.PUFFERFISH)\r\n        }\r\n        ObjectPool.createPoolObject(new Persephone(this), POOL.PERSEPHONE);\r\n\r\n\r\n        //pool out static kitty\r\n        this._cat = (ObjectPool.checkout(POOL.CAT) as Cat);\r\n        this._cat.X = 290;\r\n        this._cat.Y = 70;\r\n\r\n        //create containers\r\n        this._staticContainer = new Container();\r\n        this._staticContainer.addMany({\r\n            bg : new createjs.Sprite(LoadManager.Spritesheets.BG_Spritesheet, \"bg1\")\r\n        });\r\n\r\n        this._fishContainer = new createjs.Container();\r\n        this._pufferContainer = new createjs.Container();\r\n\r\n        this._winContainer = new createjs.Container();\r\n\r\n        this._gameScore = new GameScore(this._game);\r\n        this._tutorialCreator = new TutorialCreator(this._game, this);\r\n\r\n        this._pauseLogic = false;\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n\r\n    /**Attempts to grab a fish.  Returns any fish that are touching the global position. */\r\n    public tryToGrabFishes(x:number, y:number):Fish[] {\r\n        let fishes = [];\r\n\r\n\r\n        const hitObjects = this._container.getObjectsUnderPoint(x, y, 0);\r\n        for(let i = 0; i < this._fishes.length; i++) {\r\n            const fish = this._fishes[i];\r\n            if(hitObjects.indexOf(fish.Sprite) != -1) {\r\n                fishes.push(fish);\r\n            }\r\n        }\r\n\r\n        return fishes;\r\n\r\n    }\r\n\r\n    /**Tests to see if we hit a puffer. */\r\n    public hasHitAPuffer(x:number, y:number):Boolean {\r\n        // console.log(\"TESTING PUFF\");\r\n\r\n        let hasHitPuffer = false;\r\n        const hitObjects = this._container.getObjectsUnderPoint(x, y, 0);\r\n        for(let i = 0; i < this._puffers.length; i++) {\r\n            if(hitObjects.indexOf(this._puffers[i].Sprite) != -1) {\r\n                console.log (\"I HIT A PUFF\");\r\n                this._puffers[i].puff();\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public collectFish(fish:Fish) {\r\n        //get fish\r\n        Logging.success(\"GOT FISH!\");\r\n\r\n        const killedFish = fish.destroy();\r\n\r\n        //decrement fish counter -- make sure we didn't make an error\r\n        if(killedFish != null) {\r\n            this._remainingFish--;\r\n            this._fishes.splice(this._fishes.indexOf(killedFish as Fish), 1);\r\n\r\n            //if all our fish are gone, end the game!\r\n            if(this._remainingFish <= 0) {\r\n                //win game!\r\n                Logging.success(\"GAME IS OVER!\");\r\n                //call win\r\n                this.win();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public win() {\r\n        //disable controls\r\n        this.disable();\r\n        //set the score\r\n        this._game.changeCurrentScore({\r\n            totalFish: this._fishes.length,\r\n            combos: 10,\r\n            time: 100\r\n        });\r\n        \r\n        //show win banner\r\n        createjs.Tween.get(this._winContainer)\r\n            .to({y:this._game.StageHeight / 2 - 25}, 600, createjs.Ease.elasticOut)\r\n            .wait(2000)\r\n            .call(() => {\r\n                //transition to end screen\r\n                ScreenManager.setCurrentScreen(\"end\", this._game.Stage);\r\n                // ScreenManager.setCurrentScreen(\"menu\", this._game.Stage);\r\n\r\n                //save this data\r\n                const levelIndices = DataManager.getIndexData(this._game.CurrentLevelData);\r\n                //mark level as complete\r\n                ProgressManager.completeLevel(levelIndices.world, levelIndices.level);\r\n                //try to mark special as collected\r\n                ProgressManager.collectSpecial(levelIndices.world, levelIndices.level);\r\n\r\n                //reset game data\r\n                this.reset();\r\n            });\r\n    }\r\n\r\n    public pauseGameLogic() {\r\n        this._pauseLogic = true;\r\n    }\r\n\r\n    public unpauseGameLogic() {\r\n        this._pauseLogic = false;\r\n    }\r\n\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n        super.create(stage);\r\n        //add stuff\r\n        this._staticContainer.checkoutSprites();\r\n        this._staticContainer.Sprites.bg.y = 0;\r\n        this._container.addChild(this._staticContainer.Container);\r\n\r\n        this._container.addChild(this._fishContainer);\r\n        this._container.addChild(this._pufferContainer);\r\n\r\n        //add conditional text\r\n        this._winBanner = new createjs.Shape();\r\n        this._winBanner.graphics.beginFill(\"black\");\r\n        this._winBanner.graphics.drawRect(0, 0, this._game.StageWidth, 50);\r\n        this._winBanner.cache(0, 0, this._game.StageWidth, 50);\r\n        this._winContainer.addChild(this._winBanner);\r\n        this._winText = Sprites.generateBitmapText(\"Win!\", LoadManager.Spritesheets.TypographyWhite);\r\n        this._winContainer.addChild(this._winText);\r\n        this._winText.x = (this._game.StageWidth / 2) - (this._winText.getBounds().width / 2);\r\n\r\n        this._container.addChild(this._winContainer);\r\n        this._winContainer. y = this._game.StageHeight + 50;\r\n        this._winContainer.mouseEnabled = false;\r\n\r\n        \r\n        this._cat.create(this._container);\r\n\r\n\r\n        //testing\r\n        // const puffer = new createjs.Sprite(LoadManager.Spritesheets.Puffer_Spritesheet, \"pufferIdle\");\r\n        // puffer.x = 100;\r\n        // puffer.y = 200;\r\n        // (puffer as any).on(\"click\", () => {\r\n        //     puffer.gotoAndPlay(\"pufferAngry\")\r\n        // })\r\n        // this._container.addChild(puffer);\r\n\r\n\r\n        //add level data if it exists\r\n        this.reset();\r\n        // this.destroy();\r\n        if(this._game.CurrentLevelData != null) {\r\n            //load in critters\r\n            for(let i = 0; i < this._game.CurrentLevelData.data.length; i++) {\r\n                const data = this._game.CurrentLevelData.data[i];\r\n                switch(data.id) {\r\n                    case POOL.PERSEPHONE:\r\n                    case POOL.FISH:\r\n                        const fish = (ObjectPool.checkout(data.id) as Fish);\r\n                        fish.create(this._fishContainer);\r\n                        if(data.speed != null) fish.Speed = data.speed; //set variables\r\n                        if(data.x != null) fish.X = data.x;\r\n                        if(data.y != null) fish.Y = data.y;\r\n                        if(data.flip != null && data.flip) fish.DirectionX = -1;\r\n                        fish.setNaturalY();\r\n                        this._fishes.push(fish);\r\n                        break;\r\n                    case POOL.PUFFERFISH:\r\n                        const puffer = (ObjectPool.checkout(POOL.PUFFERFISH) as Puffer);\r\n                        puffer.create(this._pufferContainer);\r\n                        if(data.speed != null) puffer.Speed = data.speed; //set variables\r\n                        if(data.x != null) puffer.X = data.x;\r\n                        if(data.y != null) puffer.Y = data.y;\r\n                        if(data.flip != null && data.flip) puffer.DirectionX = -1;\r\n                        this._puffers.push(puffer);\r\n                }      \r\n            }\r\n\r\n            //set fish total\r\n            this._remainingFish = this._fishes.length;\r\n            // console.log(\"FISHIE NUM?\", this._remainingFish, this._fishContainer.children.length);\r\n        }\r\n        //get the level tutorials\r\n        if(this._game.CurrentLevelData.tutorials != null) {\r\n            this._tutorialCreator.queueTutorials(this._game.CurrentLevelData.tutorials);\r\n        }\r\n        //get the level background\r\n        if(this._game.CurrentLevelData.background != null) {\r\n            (this._staticContainer.Sprites[\"bg\"] as createjs.Sprite).gotoAndStop(this._game.CurrentLevelData.background);\r\n        }\r\n        else {\r\n            (this._staticContainer.Sprites[\"bg\"] as createjs.Sprite).gotoAndStop(\"bg1\");\r\n        }\r\n\r\n\r\n        //add the score\r\n        // this._gameScore.Container.y = this._game.StageHeight - 40;\r\n        // this._container.addChild(this._gameScore.Container);\r\n\r\n\r\n        //update the game HUD for this round\r\n        const levelData = this._game.CurrentLevelData;\r\n        console.log(this._game.CurrentLevelData);\r\n        const showScore = (levelData.showScore != null && !levelData.showScore) ? false : true;\r\n        const showTimer = (levelData.duration != null);\r\n        const showFishRemain = (levelData.showRemainingFish != null && !levelData.showRemainingFish) ? false : true;\r\n        this._gameScore.startHUD(showScore, showFishRemain, showTimer);\r\n\r\n        return null;\r\n    }\r\n\r\n    public destroy() {\r\n\r\n        this._cat.destroy();\r\n        this._fishes.forEach(f => {\r\n            f.destroy();\r\n        });\r\n        this._puffers.forEach(f => {\r\n            f.destroy();\r\n        });\r\n\r\n        ObjectPool.releaseAllObjects();\r\n\r\n        this.reset();\r\n\r\n        return super.destroy();\r\n    }\r\n\r\n    public update(gameTime:number) {\r\n        //if our logic is paused, do not do game loop\r\n        if(this._pauseLogic) return;\r\n\r\n        const normalizedTime = Math.min(1, gameTime) + 0.5;\r\n\r\n        //update entities\r\n        this._fishes.forEach(fish => {\r\n            fish.update(normalizedTime);\r\n        });\r\n        this._puffers.forEach(puffer => {\r\n            puffer.update(normalizedTime);\r\n        });\r\n\r\n        this._cat.update(normalizedTime);\r\n\r\n        //update the score\r\n        this._gameScore.update(gameTime);\r\n\r\n        super.update(gameTime);\r\n    }\r\n\r\n    public enable() {\r\n        (this._container as any).on(\"click\", this._cat.grab, this._cat);\r\n    }\r\n\r\n    public disable() {\r\n        (this._container as any).removeAllEventListeners();\r\n    }\r\n\r\n    public reset() {\r\n        this._cat.X = 290;\r\n        this._fishes.forEach(f => { ObjectPool.return(f); });\r\n        this._puffers.forEach(f => { ObjectPool.return(f); });\r\n\r\n        ObjectPool.releaseAllObjects();\r\n\r\n        this._fishContainer.removeAllChildren();\r\n        this._pufferContainer.removeAllChildren();\r\n\r\n        this._fishes = [];\r\n        this._puffers = [];\r\n\r\n\r\n        super.reset();\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Game() { return this._game; }\r\n    public get Cat() { return this._cat; }\r\n    public get Fishes() { return this._fishes; }\r\n    public get IsGamelogicPaused() { return this._pauseLogic; }\r\n}\r\n\r\n\r\n\r\nexport class POOL { \r\n    static get CAT() { return \"cat\"; }\r\n    static get FISH() { return \"fish\"; }\r\n    static get PUFFERFISH() { return \"puffer\"; }\r\n    static get PERSEPHONE() { return \"persephone\"; }\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { Game } from \"../Game\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\n\r\nexport class IntermediaryScreen extends Screen {\r\n    private _game:Game;\r\n    private _bg:createjs.Shape;\r\n    private _textContainer:createjs.Container;\r\n    private _txtSprite:createjs.DisplayObject;\r\n\r\n    private _text:string;\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n        this._game = game;\r\n\r\n        this._text = \"\";\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Chooses the screen to load in after the intermediary. */\r\n    public queueNextScreen(screenKey:string, duration:number=3000) {\r\n        const evt = window.setTimeout(() => {\r\n            //load the screen\r\n            ScreenManager.setCurrentScreen(screenKey, this._game.Stage);\r\n            //clear the timeout\r\n            window.clearTimeout(evt);\r\n        }, duration);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n        //add stuff\r\n        this._bg = new createjs.Shape();\r\n        this._bg.graphics.beginFill(\"#191919\");\r\n        this._bg.graphics.drawRect(0, 0, this._game.StageWidth, this._game.StageHeight);\r\n        this._bg.graphics.endFill();\r\n        this._bg.cache(0, 0, this._game.StageWidth, this._game.StageHeight);\r\n        this._container.addChild(this._bg);\r\n\r\n        this._textContainer = new createjs.Container();\r\n        this._container.addChild(this._textContainer);\r\n\r\n        if(this._text != \"\") {\r\n            //create the text\r\n            this._txtSprite = Sprites.generateBitmapText(this._text, LoadManager.Spritesheets.TypographyWhite);\r\n            (this._txtSprite as any).scale = 0.6;\r\n            //load into container\r\n            this._textContainer.addChild(this._txtSprite);\r\n    \r\n            //put container at bottom\r\n            this._textContainer.x = (this._game.StageWidth / 2) - ((this._txtSprite.getBounds().width / 2) * 0.6);\r\n            this._textContainer.y = (this._game.StageHeight / 2) - (this._txtSprite.getBounds().height / 2);\r\n        }\r\n\r\n        return super.create(stage);\r\n    }\r\n\r\n    public destroy() {\r\n        this._textContainer.removeAllChildren();\r\n\r\n        return super.destroy();\r\n    }\r\n\r\n    public enable() {\r\n        super.enable();\r\n    }\r\n\r\n    public disable() {\r\n        super.disable();\r\n\r\n        this.reset();\r\n    }\r\n\r\n    public reset() {\r\n        this.Text = \"\";\r\n        super.reset();\r\n    }\r\n\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public set Text(value:string) {\r\n        this._text = value;\r\n    }\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { Layout } from \"../ui/display/Layout\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { Container } from \"../ui/display/Container\";\r\nimport { Logging } from \"../Functions\";\r\nimport { Game } from \"../Game\";\r\nimport { LevelSelectDisplay } from \"../ui/custom/LevelSelectDisplay\";\r\nimport { IntermediaryScreen } from \"./IntermediaryScreen\";\r\nimport { GameScreen } from \"./GameScreen\";\r\nimport { DataManager } from \"../managers/DataManager\";\r\n\r\nexport class MenuScreen extends Screen {\r\n    private _game:Game;\r\n    //containers\r\n    private _swipeContainer:createjs.Container;\r\n    private _staticContainer:Container;\r\n    // private _mainContainer:Container;\r\n    private _mainContainer:createjs.Container;\r\n    private _clearedContainer:Container;\r\n    private _optionsContainer:Container;\r\n\r\n    private _mainButtonsContainer:Container;\r\n    private _logo:createjs.DisplayObject;\r\n    private _fancyFish:createjs.Sprite;\r\n\r\n    //custom containers\r\n    private _levelSelectDisplay:LevelSelectDisplay;\r\n\r\n    //properties\r\n    private _swipeSpeed:number;\r\n    private _currentScreen:string;\r\n    private _initialSwipePos:{x:number, y:number};\r\n    private _dragTimer:any;\r\n\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n\r\n        this._game = game;\r\n\r\n        //setup swipe container -- holds all moving sprites\r\n        this._swipeContainer = new createjs.Container();\r\n\r\n        //setup static container\r\n        this._staticContainer = new Container();\r\n        const bg = new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"bg\");\r\n\r\n        this._staticContainer.addMany({\r\n            bg\r\n        });\r\n\r\n        //setup main container\r\n        this._mainContainer = new createjs.Container();\r\n        this._logo = new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"logo\");\r\n        this._logo.x = this._game.StageWidth - this._logo.getBounds().width - 20;\r\n        this._logo.y = this._game.StageHeight * 0.4;\r\n        this._mainContainer.addChild(this._logo);\r\n        this._mainButtonsContainer = new Container(Container.LAYOUT_OPTIONS.ColumnLeftBottom);\r\n        this._mainButtonsContainer.addMany({\r\n            btnNewGame : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnNewGame\"),\r\n            btnOptions : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnOptions\"),\r\n            btnLevelSelect : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnLevelSelect\"),\r\n            btnExit : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnExit\"),\r\n        });\r\n        this._mainContainer.addChild(this._mainButtonsContainer.Container);\r\n        this._fancyFish = new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"fancyFish\");\r\n        this._fancyFish.x = this._game.StageWidth - this._fancyFish.getBounds().width - 20;\r\n        this._fancyFish.y = this._game.StageHeight - this._fancyFish.getBounds().height - 20;\r\n        this._mainContainer.addChild(this._fancyFish);\r\n        // this._mainContainer.addMany({\r\n        //     logo : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"logo\"),\r\n        //     fishbowl : Sprites.Buttons.Fishbowl,\r\n        //     btnNewGame : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnNewGame\"),\r\n        //     btnOptions : Sprites.Buttons.Options,\r\n        //     btnLevelSelect : Sprites.Buttons.LevelSelect,\r\n        //     btnExit : Sprites.Buttons.Exit\r\n        // });\r\n\r\n        //setup options container\r\n        this._optionsContainer = new Container();\r\n        this._optionsContainer.addMany({\r\n            txtOptions : Sprites.generateBitmapText(\"Options\", LoadManager.Spritesheets.Typography),\r\n            btnClearData : Sprites.Buttons.ClearData\r\n        });\r\n        this._optionsContainer.Container.x -= this._game.StageWidth;\r\n\r\n        //setup cleared container\r\n        this._clearedContainer = new Container();\r\n        this._clearedContainer.add(\"txtCleared\", Sprites.generateBitmapText(\"Data successfully cleared!\", LoadManager.Spritesheets.Typography));\r\n        this._clearedContainer.Container.x -= this._game.StageWidth;\r\n        this._clearedContainer.Container.y -= this._game.StageHeight;\r\n\r\n        this._levelSelectDisplay = new LevelSelectDisplay(game);\r\n        this._levelSelectDisplay.Container.x += this._game.StageWidth;\r\n\r\n\r\n        //setup properties\r\n        this._swipeSpeed = 800;\r\n        this._currentScreen = \"main\";\r\n        this._initialSwipePos = { x:-1, y:-1 };\r\n\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    private _onNewGame() {\r\n        Logging.message(\"Go to new game!\");\r\n        \r\n        const data = DataManager.getLevelDataByIndex(0);\r\n        this._game.changeCurrentLevel(data);\r\n        \r\n        const intermediary = ScreenManager.getScreenByKey(\"intermediary\") as IntermediaryScreen;\r\n        new Promise(async(res) => {\r\n            intermediary.Text = data.name;\r\n            await ScreenManager.setCurrentScreen(intermediary, this.Stage);\r\n            intermediary.queueNextScreen(\"game\");\r\n\r\n            res();\r\n        });\r\n    }\r\n    private _onOptions() {\r\n        //go to options!\r\n        Logging.message(\"Go to options!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:this._game.StageWidth}, this._swipeSpeed, createjs.Ease.circOut);\r\n        this._currentScreen = \"options\";\r\n    }\r\n    private _onLevelSelect() {\r\n        Logging.message(\"Go to level select!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:-this._game.StageWidth}, this._swipeSpeed, createjs.Ease.circOut);\r\n        this._currentScreen = \"levelSelect\";\r\n    }\r\n    private _onExit() {\r\n        Logging.message(\"Go to exit!\");\r\n    }\r\n\r\n    private _onMain() {\r\n        Logging.message(\"Go to main!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:0}, this._swipeSpeed, createjs.Ease.bounceOut);\r\n        this._currentScreen = \"main\";\r\n    }\r\n\r\n    private _onClearData() {\r\n        Logging.success(\"Cleared data!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:this._game.StageWidth, y:this._game.StageHeight}, this._swipeSpeed, createjs.Ease.cubicIn);\r\n        // this._currentScreen = \"cleared\"\r\n        let e = window.setTimeout(() => {\r\n            createjs.Tween.get(this._swipeContainer).to({x:this._game.StageWidth, y:0}, this._swipeSpeed, createjs.Ease.cubicInOut);\r\n            window.clearInterval(e);\r\n            this._currentScreen = \"options\";\r\n        }, 2000);\r\n    }\r\n\r\n    private _onDragStart(e) {\r\n\r\n        this._initialSwipePos = { x:e.stageX, y:e.stageY };\r\n\r\n        //reset drag timer if not null\r\n        if(this._dragTimer != null) window.clearTimeout(this._dragTimer);\r\n        this._dragTimer = setTimeout(() => {\r\n            this._initialSwipePos = { x:-1, y:-1 };\r\n            this._dragTimer = null;\r\n        }, 500);\r\n    }\r\n    private _onDragEnd(e) {\r\n        if(this._initialSwipePos.x != -1 || this._initialSwipePos.y != -1) {\r\n            //find the direction\r\n            if((this._initialSwipePos.x - e.stageX) > 20) {\r\n                if(this._currentScreen == \"options\")\r\n                    this._onMain();\r\n            }\r\n            else if((this._initialSwipePos.x - e.stageX) < -20) {\r\n                if(this._currentScreen == \"levelSelect\")\r\n                    this._onMain();\r\n            }\r\n        }\r\n    }\r\n\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n\r\n        //add in the containers\r\n        this._staticContainer.Sprites.bg.y = 0;\r\n        this._container.addChild(this._staticContainer.Container);\r\n        this._container.addChild(this._swipeContainer);\r\n        this._swipeContainer.addChild(this._mainContainer);\r\n        this._swipeContainer.addChild(this._optionsContainer.Container);\r\n        this._swipeContainer.addChild(this._clearedContainer.Container);\r\n        // this._swipeContainer.addChild(this._levelSelectContainer.Container);\r\n\r\n        \r\n        this._swipeContainer.addChild(this._levelSelectDisplay.Container);\r\n\r\n        return super.create(stage);\r\n    }\r\n\r\n    public enable() {\r\n        console.log(\"LOAD IN MENU ACTIONS\");\r\n        super.enable();\r\n        //listen to events\r\n        (this._mainButtonsContainer.Sprites.btnNewGame as any).on(\"click\", this._onNewGame, this, true);\r\n        (this._mainButtonsContainer.Sprites.btnOptions as any).on(\"click\", this._onOptions, this);\r\n        (this._mainButtonsContainer.Sprites.btnLevelSelect as any).on(\"click\", this._onLevelSelect, this);\r\n        (this._mainButtonsContainer.Sprites.btnExit as any).on(\"click\", this._onExit, this);\r\n\r\n        Sprites.listenToClearData();\r\n        (this._optionsContainer.Sprites.btnClearData as any).on(Sprites.CLEAR_DATA, this._onClearData, this);\r\n\r\n        //listen for swipes\r\n        (this._staticContainer.Sprites.bg as any).on(\"mousedown\", this._onDragStart, this);\r\n        (this._staticContainer.Sprites.bg as any).on(\"click\", this._onDragEnd, this);\r\n\r\n        // this._mainButtonsContainer.Sprites.btnOptions.on(\"click\", () => console.log(\"HELLO I CLIC\"));\r\n\r\n        this._levelSelectDisplay.enable();\r\n\r\n\r\n\r\n        //rock the fish\r\n        createjs.Tween\r\n            // @ts-ignore\r\n            .get(this._fancyFish, { loop:true })\r\n            .to({ y:this._fancyFish.y-30 }, 3000, createjs.Ease.sineInOut)\r\n            .to({ y:this._fancyFish.y }, 3000, createjs.Ease.sineInOut);\r\n\r\n        //rock the logo\r\n        createjs.Tween\r\n            // @ts-ignore\r\n            .get(this._logo, { loop:true })\r\n            .wait(1200)\r\n            .to({ y:this._logo.y-15 }, 4500, createjs.Ease.sineInOut)\r\n            .to({ y:this._logo.y }, 4800, createjs.Ease.sineInOut);\r\n    }\r\n\r\n    public disable() {\r\n        super.disable();\r\n        //stop listen to events\r\n        (this._mainButtonsContainer.Sprites.btnNewGame as any).off(\"click\", this._onNewGame);\r\n        (this._mainButtonsContainer.Sprites.btnOptions as any).off(\"click\", this._onOptions);\r\n        (this._mainButtonsContainer.Sprites.btnLevelSelect as any).off(\"click\", this._onLevelSelect);\r\n        (this._mainButtonsContainer.Sprites.btnExit as any).off(\"click\", this._onExit);\r\n\r\n        Sprites.stopListenToClearData();\r\n        (this._optionsContainer.Sprites.btnClearData as any).off(Sprites.CLEAR_DATA, this._onClearData);\r\n\r\n        //stop listen for swipes\r\n        (this._staticContainer.Sprites.bg as any).off(\"mousedown\", this._onDragStart);\r\n        (this._staticContainer.Sprites.bg as any).off(\"click\", this._onDragEnd);\r\n\r\n\r\n        this._mainButtonsContainer.Sprites.btnNewGame.removeAllEventListeners();\r\n        this._mainButtonsContainer.Sprites.btnOptions.removeAllEventListeners();\r\n        this._mainButtonsContainer.Sprites.btnLevelSelect.removeAllEventListeners();\r\n        this._mainButtonsContainer.Sprites.btnExit.removeAllEventListeners();\r\n        this._staticContainer.Sprites.bg.removeAllEventListeners();\r\n\r\n\r\n        this._levelSelectDisplay.disable();\r\n\r\n        this.reset();\r\n\r\n\r\n        createjs.Tween.removeAllTweens();\r\n    }\r\n\r\n    public reset() {\r\n        //reset the position of the swipe container\r\n        this._swipeContainer.x = 0;\r\n        this._swipeContainer.y = 0;\r\n\r\n        super.reset();\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n}","import { IUpdateable, ICreateable, IEnableable } from \"../Interfaces\";\r\n\r\nexport class Screen implements ICreateable<Screen>, IUpdateable, IEnableable {\r\n    private _stage:createjs.StageGL;\r\n    protected _container:createjs.Container;\r\n\r\n    constructor() {\r\n        this._container = new createjs.Container();\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Updates the screen. */\r\n    public update(gameTime:number) {\r\n\r\n    }\r\n\r\n    /**Creates the screen and adds to the stage. */\r\n    public create(stage:createjs.StageGL):Screen {\r\n        this._stage = stage;\r\n        //add to the stage\r\n        this._stage.addChild(this._container);\r\n\r\n        \r\n        return this;\r\n    }\r\n\r\n    /**Destroys the screen and removes from the stage. */\r\n    public destroy():Screen {\r\n\r\n        //remove from the stage\r\n        this._stage.removeChild(this._container);\r\n\r\n        return this;\r\n    }\r\n\r\n    public enable() {\r\n\r\n    }\r\n\r\n    public disable() {\r\n        \r\n    }\r\n\r\n    public reset() {\r\n        \r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container():createjs.Container { return this._container; }\r\n    protected get Stage():createjs.StageGL { return this._stage; }\r\n\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Game } from \"../Game\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\n\r\nexport class SplashScreen extends Screen {\r\n    private _game:Game;\r\n    private _textContainer:createjs.Container;\r\n\r\n    private _textSpritesheet;\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n        this._game = game;\r\n\r\n\r\n        this._textSpritesheet = new createjs.SpriteSheet({images: [\"assets/spritesheets/typography_white.png\"], frames: [[0,329,27,44,0,0,0],[89,47,21,44,0,0,0],[63,47,23,44,0,0,0],[32,141,24,44,0,0,0],[89,94,21,44,0,0,0],[110,141,20,44,0,0,0],[34,94,26,44,0,0,0],[0,188,28,44,0,0,0],[152,282,14,44,0,0,0],[158,94,16,44,0,0,0],[59,141,24,44,0,0,0],[136,94,19,44,0,0,0],[0,47,32,44,0,0,0],[0,141,29,44,0,0,0],[0,235,28,44,0,0,0],[86,141,21,44,0,0,0],[0,282,28,44,0,0,0],[63,94,23,44,0,0,0],[156,141,17,44,0,0,0],[81,235,21,44,0,0,0],[30,329,27,44,0,0,0],[66,0,24,44,0,0,0],[0,0,35,44,0,0,0],[31,188,23,44,0,0,0],[31,235,22,44,0,0,0],[57,188,23,44,0,0,0],[108,329,18,44,0,0,0],[60,329,21,44,0,0,0],[159,47,17,44,0,0,0],[118,0,20,44,0,0,0],[129,329,18,44,0,0,0],[169,282,14,44,0,0,0],[113,47,20,44,0,0,0],[84,329,21,44,0,0,0],[171,329,12,44,0,0,0],[186,282,12,44,0,0,0],[113,94,20,44,0,0,0],[191,188,12,44,0,0,0],[0,94,31,44,0,0,0],[56,235,22,44,0,0,0],[60,282,22,44,0,0,0],[108,188,20,44,0,0,0],[85,282,20,44,0,0,0],[177,94,15,44,0,0,0],[184,0,15,44,0,0,0],[179,47,15,44,0,0,0],[31,282,22,44,0,0,0],[131,282,18,44,0,0,0],[38,0,25,44,0,0,0],[150,329,18,44,0,0,0],[108,282,20,44,0,0,0],[152,235,18,44,0,0,0],[35,47,25,44,0,0,0],[153,188,16,44,0,0,0],[83,188,22,44,0,0,0],[131,188,19,44,0,0,0],[93,0,22,44,0,0,0],[129,235,20,44,0,0,0],[133,141,20,44,0,0,0],[141,0,20,44,0,0,0],[105,235,21,44,0,0,0],[136,47,20,44,0,0,0],[194,141,12,44,0,0,0],[195,94,12,44,0,0,0],[197,47,12,44,0,0,0],[172,188,16,44,0,0,0],[176,141,15,44,0,0,0],[173,235,14,44,0,0,0],[164,0,17,44,0,0,0]],  animations: {A:[0,0, true], B:[1,1, true], C:[2,2, true], D:[3,3, true], E:[4,4, true], F:[5,5, true], G:[6,6, true], H:[7,7, true], I:[8,8, true], J:[9,9, true], K:[10,10, true], L:[11,11, true], M:[12,12, true], N:[13,13, true], O:[14,14, true], P:[15,15, true], Q:[16,16, true], R:[17,17, true], S:[18,18, true], T:[19,19, true], U:[20,20, true], V:[21,21, true], W:[22,22, true], X:[23,23, true], Y:[24,24, true], Z:[25,25, true], a:[26,26, true], b:[27,27, true], c:[28,28, true], d:[29,29, true], e:[30,30, true], f:[31,31, true], g:[32,32, true], h:[33,33, true], i:[34,34, true], j:[35,35, true], k:[36,36, true], l:[37,37, true], m:[38,38, true], n:[39,39, true], o:[40,40, true], p:[41,41, true], q:[42,42, true], r:[43,43, true], s:[44,44, true], t:[45,45, true], u:[46,46, true], v:[47,47, true], w:[48,48, true], x:[49,49, true], y:[50,50, true], z:[51,51, true], 0:[52,52, true], 1:[53,53, true], 2:[54,54, true], 3:[55,55, true], 4:[56,56, true], 5:[57,57, true], 6:[58,58, true], 7:[59,59, true], 8:[60,60, true], 9:[61,61, true], \".\":[62,62, true], \",\":[63,63, true], \"'\":[64,64, true], \"\\\"\":[65,65, true], \"?\":[66,66, true], \"!\":[67,67, true], \"$\":[68,68, true]}});\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n        //add stuff\r\n        //load the image\r\n        const img = document.createElement(\"img\");\r\n        img.onload = (e) => {\r\n            const splash = new createjs.Bitmap(img);\r\n            this._container.addChild(splash);\r\n\r\n            super.create(stage);\r\n        }\r\n        img.src = \"assets/images/splash.png\";\r\n\r\n\r\n        this._textContainer = new createjs.Container();\r\n        this._container.addChild(this._textContainer);\r\n\r\n        this.Text = \"0\";\r\n\r\n        stage.update();\r\n\r\n\r\n\r\n        return this;\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public set Text(text:string) {\r\n        this._textContainer.removeAllChildren();\r\n        //add text\r\n        const textEl = Sprites.generateBitmapText(text, this._textSpritesheet);\r\n        this._textContainer.addChild(textEl);\r\n        this._container.addChild(this._textContainer);\r\n\r\n        this._game.Stage.update();\r\n    }\r\n}","import { LoadManager } from \"../managers/LoadManager\";\r\nimport { Game } from \"../Game\";\r\nimport { GameScreen } from \"./GameScreen\";\r\n\r\n/**This class creates the tutorial items.  This class will control the game and game screen when being used. */\r\nexport class TutorialCreator {\r\n    public static get KEY() {\r\n        return {\r\n            \"First\" : \"first\",\r\n            \"You\" : \"you\",\r\n            \"Fish\" : \"fish\",\r\n            \"Puffer\" : \"puffer\",\r\n            \"Many\" : \"many\",\r\n            \"Pause\" : \"pause\",\r\n            \"Special\" : \"special\"\r\n        }\r\n    };\r\n\r\n    private _game:Game;\r\n    private _gameScreen:GameScreen;\r\n\r\n\r\n    //tutorial overlays\r\n    private _youOverlay:createjs.Sprite;\r\n    private _fishOverlay:createjs.Sprite;\r\n    private _pufferOverlay:createjs.Sprite;\r\n    private _manyOverlay:createjs.Sprite;\r\n    private _pauseOverlay:createjs.Sprite;\r\n    private _specialOverlay:createjs.Sprite;\r\n\r\n    private _currentOverlay:createjs.Sprite;\r\n    private _tutorialQueue:string[];\r\n\r\n    constructor(game:Game, gameScreen:GameScreen) {\r\n        this._game = game;\r\n        this._gameScreen = gameScreen;\r\n\r\n        this._tutorialQueue = [];\r\n\r\n        //build all the required screens\r\n        this._youOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"you\");\r\n        this._fishOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"fish\");\r\n        this._pufferOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"puffer\");\r\n        this._manyOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"many\");\r\n        this._pauseOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"pause\");\r\n        this._specialOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"special\");\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public async queueTutorials(keys:string[]) {\r\n\r\n        for(let i = 0; i < keys.length; i++) {\r\n            const key = keys[i];\r\n\r\n            await new Promise(async(res, rej) => {\r\n\r\n                console.log(\"NUM\", i);\r\n\r\n                switch(key) {\r\n                    //first will play multiple screens\r\n                    case TutorialCreator.KEY.First :\r\n                        await this._runYou();\r\n                        await this._transition(this._fishOverlay);\r\n                        await this._runFish();\r\n                        await this._transition(null);\r\n                        this._gameScreen.unpauseGameLogic();\r\n                        res();\r\n                        break;\r\n                    case TutorialCreator.KEY.You :\r\n                        await this._runYou();\r\n                        await this._transition(null);\r\n                        this._gameScreen.unpauseGameLogic();\r\n                        res();\r\n                        break;\r\n                    case TutorialCreator.KEY.Fish :\r\n                        await this._runFish();\r\n                        await this._transition(null);\r\n                        this._gameScreen.unpauseGameLogic();\r\n                        res();\r\n                        break;\r\n                    case TutorialCreator.KEY.Puffer :\r\n                        await this._runPuffer();\r\n                        await this._transition(null);\r\n                        this._gameScreen.unpauseGameLogic();\r\n                        res();\r\n                        break;\r\n                    case TutorialCreator.KEY.Special :\r\n                        await this._runSpecial();\r\n                        await this._transition(null);\r\n                        this._gameScreen.unpauseGameLogic();\r\n                        res();\r\n                        break;\r\n\r\n                }\r\n\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    private async _transition(nextScreen) {\r\n        let promises = [];\r\n        //if we have a current screen, wait for it to fade out\r\n        if(this._currentOverlay != null) {\r\n            promises.push(\r\n                new Promise(async(res) => {\r\n                    //fade out\r\n                    createjs.Tween\r\n                        .get(this._currentOverlay)\r\n                        .to({ alpha:0 }, 500, createjs.Ease.linear)\r\n                        .call(() => {\r\n                            this._gameScreen.Container.removeChild(this._currentOverlay);\r\n                            res();\r\n                        });\r\n                })\r\n            );\r\n        }\r\n\r\n        //wait for certain actions to finish\r\n        return new Promise(async(res) => {\r\n            //wait for promises to finish\r\n            await Promise.all(promises);\r\n\r\n            //if we are transitioning to null, just end us\r\n            if(nextScreen == null) {\r\n                this._currentOverlay.alpha = 1;\r\n                res();\r\n                return;\r\n            }\r\n\r\n            this._currentOverlay.alpha = 1;\r\n\r\n            //now add in the new one\r\n            this._currentOverlay = nextScreen;\r\n            this._gameScreen.Container.addChild(this._currentOverlay);\r\n            this._currentOverlay.alpha = 0;\r\n\r\n            //fade in\r\n            createjs.Tween\r\n                .get(this._currentOverlay)\r\n                .to({ alpha:1 }, 500, createjs.Ease.linear)\r\n                .call(() => {\r\n                    res();\r\n                });\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    private async _runYou() {\r\n\r\n        return new Promise((res, rej) => {\r\n            this._currentOverlay = this._youOverlay;\r\n\r\n            const catStart = this._gameScreen.Cat.Y;\r\n            //move the cat hand\r\n            \r\n            this._gameScreen.Cat.Y = 80;\r\n            //pause the game\r\n            this._gameScreen.pauseGameLogic();\r\n            //overlay screen\r\n            this._gameScreen.Container.addChild(this._youOverlay);\r\n            //listen for screen click\r\n            (this._game.Stage).on(\"pressup\", () => { \r\n                //put cat paw back to start Y\r\n                this._gameScreen.Cat.Y = catStart;\r\n                res();\r\n            }, true, true);\r\n\r\n        });\r\n        \r\n    }\r\n\r\n    private async _runFish() {\r\n\r\n        return new Promise((res, rej) => {\r\n            this._currentOverlay = this._fishOverlay;\r\n            //pause the game\r\n            this._gameScreen.pauseGameLogic();\r\n            //overlay screen\r\n            this._gameScreen.Container.addChild(this._fishOverlay);\r\n            //listen for screen click\r\n            (this._game.Stage).on(\"pressup\", () => { \r\n                res();\r\n            }, true, true);\r\n        });\r\n\r\n    }\r\n\r\n    private async _runPuffer() {\r\n\r\n        return new Promise((res, rej) => {\r\n            this._currentOverlay = this._pufferOverlay;\r\n            //pause the game\r\n            this._gameScreen.pauseGameLogic();\r\n            //overlay screen\r\n            this._gameScreen.Container.addChild(this._pufferOverlay);\r\n            //listen for screen click\r\n            (this._game.Stage).on(\"pressup\", () => { \r\n                res();\r\n            }, true, true);\r\n        });\r\n\r\n    }\r\n\r\n    private async _runSpecial() {\r\n\r\n        return new Promise((res, rej) => {\r\n            this._currentOverlay = this._specialOverlay;\r\n            //pause the game\r\n            this._gameScreen.pauseGameLogic();\r\n            //overlay screen\r\n            this._gameScreen.Container.addChild(this._specialOverlay);\r\n            //listen for screen click\r\n            (this._game.Stage).on(\"pressup\", () => { \r\n                res();\r\n            }, true, true);\r\n        });\r\n\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n}","import { LoadManager } from \"../managers/LoadManager\";\r\n\r\n/**Used to gain access to in-game sprites. */\r\nexport class Sprites {\r\n    public static CLEAR_DATA:string = \"onClearData\";\r\n\r\n    private static _backgrounds:{ [key:string]:createjs.DisplayObject } = { };\r\n    private static _buttons:{ [key:string]:createjs.DisplayObject } = { };\r\n\r\n    private static _graphics:{ [key:string]:createjs.DisplayObject } = { };\r\n\r\n    private static _spritesheets:createjs.SpriteSheet[];\r\n\r\n    private static _canClearData:boolean = false;\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public static setup() {\r\n        return new Promise((res, rej) => {\r\n            // Sprites.spritesheets = spritesheets\r\n            //setup all the sprites\r\n            /* ------- STATIC ------- */\r\n            Sprites._backgrounds.Main = new createjs.Sprite(LoadManager.Spritesheets.UI); // Static BG\r\n            (Sprites._backgrounds.Main as createjs.Sprite).gotoAndStop(\"bg_main_static\");\r\n\r\n            Sprites._backgrounds.Logo = new createjs.Sprite(LoadManager.Spritesheets.Entities); // LOGO\r\n            (Sprites._backgrounds.Logo as createjs.Sprite).gotoAndStop(\"icon_title\");\r\n\r\n            Sprites._backgrounds.BG = LoadManager.Images.BG; // Redux\r\n            Sprites._backgrounds.BGTop = LoadManager.Images.BGTop;\r\n\r\n\r\n            /* ------- ANIMATED ------- */\r\n            Sprites._backgrounds.Wave = new createjs.Sprite(LoadManager.Spritesheets.UI); // Animated BG\r\n            (Sprites._backgrounds.Wave as createjs.Sprite).gotoAndPlay(\"bg_main\");\r\n\r\n\r\n            /* ------- GRAPHICS ------ */\r\n            Sprites._graphics.Timer = new createjs.Sprite(LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n            (Sprites._graphics.Timer as createjs.Sprite).gotoAndPlay(\"sprTime\");\r\n            Sprites._graphics.Score = new createjs.Sprite(LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n            (Sprites._graphics.Score as createjs.Sprite).gotoAndPlay(\"sprScore\");\r\n            Sprites._graphics.FishRemain = new createjs.Sprite(LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n            (Sprites._graphics.FishRemain as createjs.Sprite).gotoAndPlay(\"sprFish\");\r\n            \r\n            /* ------- BUTTONS ------- */\r\n            Sprites._buttons.NewGame = new createjs.Sprite(LoadManager.Spritesheets.Entities); // New Game\r\n            (Sprites._buttons.NewGame as createjs.Sprite).gotoAndStop(\"btn_new_game\");\r\n            new createjs.ButtonHelper(Sprites._buttons.NewGame as createjs.Sprite, \"btn_new_game\", \"btn_new_game_hover\", \"btn_new_game_hover\");\r\n\r\n\r\n            Sprites._buttons.Options = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Options\r\n            (Sprites._buttons.Options as createjs.Sprite).gotoAndStop(\"btn_new_game\");\r\n            new createjs.ButtonHelper(Sprites._buttons.Options as createjs.Sprite, \"btn_options\", \"btn_options_hover\", \"btn_options_hover\");\r\n\r\n            Sprites._buttons.LevelSelect = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Select\r\n            (Sprites._buttons.LevelSelect as createjs.Sprite).gotoAndStop(\"btn_select\");\r\n            new createjs.ButtonHelper(Sprites._buttons.LevelSelect as createjs.Sprite, \"btn_select\", \"btn_select_hover\", \"btn_select_hover\");\r\n\r\n            Sprites._buttons.Exit = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Exit\r\n            (Sprites._buttons.Exit as createjs.Sprite).gotoAndStop(\"btn_select\");\r\n            new createjs.ButtonHelper(Sprites._buttons.Exit as createjs.Sprite, \"btn_exit\", \"btn_exit_hover\", \"btn_exit_hover\");\r\n\r\n            Sprites._buttons.Fishbowl = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Fishbowl\r\n            (Sprites._buttons.Fishbowl as createjs.Sprite).gotoAndStop(\"btn_select\");\r\n            new createjs.ButtonHelper(Sprites._buttons.Fishbowl as createjs.Sprite, \"icon_fishbowl\", \"icon_fishbowl_hover\", \"icon_fishbowl_hover\", true);\r\n\r\n\r\n            /* ------- MENU ------- */\r\n            Sprites._backgrounds.LevelSelectBG = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Select BG\r\n            (Sprites._backgrounds.LevelSelectBG as createjs.Sprite).gotoAndStop(\"static_bg\");\r\n            Sprites._buttons.LevelEmpty = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Empty Button\r\n            (Sprites._buttons.LevelEmpty as createjs.Sprite).gotoAndStop(\"level_empty\");\r\n            Sprites._buttons.LevelComplete = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Complete Button\r\n            (Sprites._buttons.LevelComplete as createjs.Sprite).gotoAndStop(\"level_complete\");\r\n            Sprites._buttons.LevelSpecialEmpty = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Special Empty Button\r\n            (Sprites._buttons.LevelSpecialEmpty as createjs.Sprite).gotoAndStop(\"level_special_empty\");\r\n            Sprites._buttons.LevelSpecialComplete = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Special Complete Button\r\n            (Sprites._buttons.LevelSpecialComplete as createjs.Sprite).gotoAndStop(\"level_special_complete\");\r\n\r\n\r\n            /* ------- COMPLEX ------- */\r\n            Sprites._setupBTNClearData();\r\n\r\n            res();\r\n        });\r\n    }\r\n\r\n    // /* --- Complex createjs.Sprite Setup --- */\r\n    private static _setupBTNClearData() {\r\n        Sprites._buttons.ClearData = new createjs.Sprite(LoadManager.Spritesheets.UI); // BTN Clear Data\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndStop(\"btn_clear_data\");\r\n        (Sprites._buttons.ClearData as createjs.Sprite).cursor = \"pointer\";\r\n        Sprites._canClearData = false;\r\n    }\r\n    public static listenToClearData() {\r\n        //listen\r\n        (Sprites._buttons.ClearData as any).on(\"mousedown\", Sprites._btnDataDown);\r\n        (Sprites._buttons.ClearData as any).on(\"animationend\", Sprites._btnDataComplete);\r\n        (Sprites._buttons.ClearData as any).on(\"click\", Sprites._btnDataUp);\r\n    }\r\n    public static stopListenToClearData() {\r\n        //listen\r\n        (Sprites._buttons.ClearData as any).off(\"mousedown\", Sprites._btnDataDown);\r\n        (Sprites._buttons.ClearData as any).off(\"animationend\", Sprites._btnDataComplete);\r\n        (Sprites._buttons.ClearData as any).off(\"click\", Sprites._btnDataUp);\r\n    }\r\n\r\n    private static _btnDataDown(e) {\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndPlay(\"btn_clear_data_progress\");\r\n        Sprites._canClearData = true;\r\n    }\r\n    private static _btnDataUp(e) {\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndStop(\"btn_clear_data\");\r\n        Sprites._canClearData = false;\r\n    }\r\n    private static _btnDataComplete(e) {\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndStop(\"btn_clear_data\");\r\n        //dispatch event to button\r\n        if(Sprites._canClearData) {\r\n            (Sprites._buttons.ClearData as createjs.Sprite).dispatchEvent(new Event(Sprites.CLEAR_DATA));\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**A helper function to generate and cache text for the StageGL object. */\r\n    public static generateText(text, details = \"20px Arial\", color = \"#FFFEEE\") {\r\n        const textObj = new createjs.Text(text, details, color)\r\n        textObj.cache(0, 0, textObj.getBounds().width, textObj.getBounds().height);\r\n        return textObj;\r\n    }\r\n\r\n    public static generateBitmapText(text, spritesheet) {\r\n        const textObj = new createjs.BitmapText(text, spritesheet);\r\n        return textObj;\r\n    }\r\n\r\n\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get Backgrounds() { return Sprites._backgrounds; }\r\n    public static get Buttons() { return Sprites._buttons; }\r\n    public static get Graphics() { return Sprites._graphics; }\r\n\r\n    // static get BG() { return Sprites._bg }\r\n    // static get Logo() { return Sprites._logo }\r\n    // static get AnimBG() { return Sprites._animBg }\r\n    // static get GameBG() { return Sprites._gameBG }\r\n    // static get GameBGTop() { return Sprites._gameBGTop }\r\n    // //buttons\r\n    // static get BTN_New_Game() { return Sprites._btnNewGame }\r\n    // static get BTN_Options() { return Sprites._btnOptions }\r\n    // static get BTN_Select() { return Sprites._btnSelect }\r\n    // static get BTN_Exit() { return Sprites._btnExit }\r\n    // static get BTN_Fishbowl() { return Sprites._btnFishbowl }\r\n    // static get BTN_ClearData() { return Sprites._btnClearData }\r\n\r\n\r\n    // static get CLEAR_DATA() { return \"onClearData\" }\r\n}","import { Sprites } from \"../Sprites\";\r\nimport { LoadManager } from \"../../managers/LoadManager\";\r\nimport { ProgressManager } from \"../../managers/ProgressManager\";\r\nimport { Game } from \"../../Game\";\r\nimport { IEnableable } from \"../../Interfaces\";\r\nimport { GameScreen } from \"../../screens/GameScreen\";\r\nimport { DataManager } from \"../../managers/DataManager\";\r\nimport { ScreenManager } from \"../../managers/ScreenManager\";\r\nimport { IntermediaryScreen } from \"../../screens/IntermediaryScreen\";\r\n\r\n\r\nexport class LevelSelectDisplay implements IEnableable {\r\n    private _game:Game;\r\n\r\n    private _container:createjs.Container;\r\n    private _background:createjs.Sprite;\r\n    private _levelsContainer:createjs.Container;\r\n    private _levelTextContainer:createjs.Container;\r\n\r\n    private _levelsData:any;\r\n\r\n    private _levelButtons:createjs.Sprite[];\r\n\r\n    constructor(game:Game) {\r\n        this._game = game;\r\n        this._levelButtons = [];\r\n\r\n        //build the required components for the level select display\r\n        this._container = new createjs.Container();\r\n        this._background = Sprites.Backgrounds.LevelSelectBG as createjs.Sprite;\r\n        this._background.x = (game.StageWidth / 2) - (this._background.getBounds().width / 2);\r\n        this._background.y = 80;\r\n\r\n        this._levelsContainer = new createjs.Container();\r\n        this._container.addChild(this._background);\r\n        let text = Sprites.generateBitmapText(\"Level Select\", LoadManager.Spritesheets.Typography);\r\n        text.x = (game.StageWidth / 2) - (text.getBounds().width / 2);\r\n        text.y = 30;\r\n        this._container.addChild(text);\r\n\r\n\r\n        //setup display text\r\n        this._levelTextContainer = new createjs.Container();\r\n        this._container.addChild(this._levelTextContainer);\r\n\r\n        this.LevelText = \"\";\r\n\r\n\r\n\r\n        this.rebuild();\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public enable() {\r\n        this.rebuild();\r\n        this._levelButtons.forEach(btn => {\r\n            btn.on(\"click\", this._onLevelClick, this);\r\n            btn.on(\"mouseover\", this._onLevelHover, this);\r\n            btn.on(\"mouseout\", this._onLevelUnhover, this);\r\n        });\r\n    }\r\n\r\n    public disable() {\r\n        this._levelButtons.forEach(btn => {\r\n            btn.removeAllEventListeners();\r\n        });\r\n    }\r\n\r\n    public rebuild() {\r\n        //rebuild all buttons\r\n        this._levelButtons.forEach(ch => {\r\n            this._container.removeChild(ch);\r\n            ch.removeAllEventListeners();\r\n            ch = null;\r\n        });\r\n        this._levelButtons = [];\r\n        this._levelsContainer.removeAllChildren();\r\n\r\n        //build levels data\r\n        this._levelsData = DataManager.WorldsData.worlds.map((world, i) => {\r\n            return [].concat.apply([], world as any)\r\n            .map((level, n) => {\r\n                let special = ProgressManager.ProgressData.specials[i][n];\r\n\r\n                let obj = level;\r\n                obj.unlocked = ProgressManager.ProgressData.levels[i][n].unlocked;\r\n                obj.completed = ProgressManager.ProgressData.levels[i][n].completed;\r\n                obj.special = (special != null);\r\n\r\n                return obj;\r\n            })\r\n        });\r\n\r\n        console.log(\"LEVEL DISPLAY DATA\", this._levelsData);\r\n\r\n\r\n\r\n        //build the level icons\r\n        for(let r = 0; r < this._levelsData.length; r++) {\r\n            //iterate through levels\r\n            for(let i = 0; i < this._levelsData[r].length; i++) {\r\n                const levelData = this._levelsData[r][i];\r\n                console.log(\"LEVEL\", levelData);\r\n                //decide the sprite\r\n                let sprite = Sprites.Buttons.LevelEmpty.clone();\r\n                if(levelData.special != null && levelData.special) sprite = Sprites.Buttons.LevelSpecialEmpty.clone();\r\n                // //completed\r\n                if(levelData.completed) {\r\n                    sprite = Sprites.Buttons.LevelComplete.clone();\r\n                    if(levelData.special != null && levelData.special) sprite = Sprites.Buttons.LevelSpecialComplete;\r\n                }\r\n                //locked\r\n                if(!levelData.unlocked) {\r\n                    sprite.alpha = 0.25;\r\n                }\r\n                else {\r\n                    sprite.alpha = 1;\r\n                     //extras\r\n                    sprite.cursor = \"pointer\";\r\n                }\r\n\r\n                //place\r\n                sprite.x = 60 * i;\r\n                sprite.y = 50 * r;\r\n                //add\r\n                this._levelsContainer.addChild(sprite);\r\n                //to array\r\n                this._levelButtons.push(sprite as createjs.Sprite);\r\n            }\r\n        };\r\n\r\n        this._levelsContainer.x = (this._game.StageWidth / 2) - (this._levelsContainer.getBounds().width / 2);\r\n        this._levelsContainer.y = 100;\r\n        this._container.addChild(this._levelsContainer);\r\n    }\r\n\r\n\r\n    /**Returns level data from the given index. */\r\n    private _getDataByIndex(index:number) {\r\n        //flatten level data, and get data\r\n        let flatten = this._levelsData.reduce((acc, next) => acc.concat(next));\r\n        return flatten[index];\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    private _onLevelClick(e) {\r\n         //get button index\r\n        let index = this._levelButtons.indexOf(e.target);\r\n\r\n        if(index == -1) return;\r\n\r\n        //set the level index\r\n        const data = DataManager.getLevelDataByIndex(index);\r\n        console.log(\"MY LEVEL DATA\", data);\r\n        this._game.changeCurrentLevel(data);\r\n        //go to intermediary screen\r\n        const intermediary = ScreenManager.getScreenByKey(\"intermediary\") as IntermediaryScreen;\r\n        new Promise(async(res) => {\r\n            intermediary.Text = data.name;\r\n            await ScreenManager.setCurrentScreen(intermediary, this._game.Stage);\r\n            intermediary.queueNextScreen(\"game\", 1000);\r\n\r\n            res();\r\n        });\r\n    }\r\n\r\n    private _onLevelHover(e) {\r\n        //find the button data\r\n        //get button index\r\n        let index = this._levelButtons.indexOf(e.target);\r\n        \r\n        if(index != -1) {\r\n            const data = this._getDataByIndex(index);\r\n            if(data != null) {\r\n                if(data.unlocked)\r\n                    this.LevelText = data.name;\r\n            }\r\n        }\r\n\r\n    }\r\n    private _onLevelUnhover(e) {\r\n        this.LevelText = \"\";\r\n    }\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container() { return this._container; }\r\n    public set LevelText(value:string) {\r\n        if(value == \"\") {\r\n            this._levelTextContainer.removeAllChildren();\r\n            return;\r\n        }\r\n        //create the text\r\n        const text = Sprites.generateBitmapText(value, LoadManager.Spritesheets.TypographyWhite);\r\n        (text as any).scale = 0.6;\r\n        //load into container\r\n        this._levelTextContainer.removeAllChildren();\r\n        this._levelTextContainer.addChild(text);\r\n\r\n        //put container at bottom\r\n        this._levelTextContainer.x = (this._game.StageWidth / 2) - ((text.getBounds().width / 2) * 0.6);\r\n        this._levelTextContainer.y = this._game.StageHeight - 30;\r\n    }\r\n}","import { Layout } from \"./Layout\";\r\n\r\n/**Uses custom classes and the createjs library to help easily build up ui interfaces with DisplayObjects. */\r\nexport class Container {\r\n    private _sprites:{ [key:string]:createjs.DisplayObject };\r\n    private _container:createjs.Container;\r\n    private _layout:Layout;\r\n\r\n    constructor(layout:{ direction:string, alignment:string, crossAlignment:string, spacing:number } = null) {\r\n        this._sprites = { };\r\n        this._container = new createjs.Container();\r\n        this._layout = (layout != null) ? new Layout(this._container, layout.direction, layout.alignment, layout.crossAlignment, layout.spacing)  : Layout.MAKE_VERTICAL_CENTER(this._container);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public add(key:string, sprite:createjs.DisplayObject, updateLayout:boolean=true):boolean {\r\n        if(this._sprites[key] != null) return false;\r\n        this._sprites[key] = sprite.clone();\r\n\r\n        if(updateLayout) this._layout.buildLayout(true, ...Object.keys(this._sprites).map(k => this._sprites[k]));\r\n        return true;\r\n    }\r\n\r\n    public addMany(sprites:{ [key:string]:createjs.DisplayObject }) {\r\n        Object.keys(sprites).forEach(k => {\r\n            this.add(k, sprites[k], false);\r\n        });\r\n\r\n        this._layout.buildLayout(true, ...Object.keys(this._sprites).map(k => this._sprites[k]));\r\n    }\r\n\r\n    public changeLayout(layout:Layout) {\r\n        this._layout = layout;\r\n    }\r\n\r\n    /**In case of wandering or reusable sprites, call them back to this layout! */\r\n    public checkoutSprites() {\r\n        this._layout.buildLayout(true, ...Object.keys(this._sprites).map(k => this._sprites[k]));\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container():createjs.Container { return this._container; }\r\n    public get Sprites() { return this._sprites; }\r\n\r\n    public static get LAYOUT_OPTIONS() {\r\n        return {\r\n            //column layouts\r\n            //-- left aligned\r\n            \"ColumnLeftTop\" : {direction:Layout.VERTICAL, alignment:Layout.START, crossAlignment:Layout.START, spacing:5},\r\n            \"ColumnLeftCenter\" : {direction:Layout.VERTICAL, alignment:Layout.START, crossAlignment:Layout.CENTER, spacing:5},\r\n            \"ColumnLeftBottom\" : {direction:Layout.VERTICAL, alignment:Layout.START, crossAlignment:Layout.END, spacing:5},\r\n            //-- center aligned\r\n            \"ColumnCenterTop\" : {direction:Layout.VERTICAL, alignment:Layout.CENTER, crossAlignment:Layout.START, spacing:5},\r\n            \"ColumnCenterCenter\" : {direction:Layout.VERTICAL, alignment:Layout.CENTER, crossAlignment:Layout.CENTER, spacing:5},\r\n            \"ColumnCenterBottom\" : {direction:Layout.VERTICAL, alignment:Layout.CENTER, crossAlignment:Layout.END, spacing:5},\r\n            //-- right aligned\r\n            \"ColumnRightTop\" : {direction:Layout.VERTICAL, alignment:Layout.END, crossAlignment:Layout.START, spacing:5},\r\n            \"ColumnRightCenter\" : {direction:Layout.VERTICAL, alignment:Layout.END, crossAlignment:Layout.CENTER, spacing:5},\r\n            \"ColumnRightBottom\" : {direction:Layout.VERTICAL, alignment:Layout.END, crossAlignment:Layout.END, spacing:5}\r\n        };\r\n    }\r\n}","import { Game } from \"../../Game\";\r\n\r\n/**Used to layout createjs display objects. */\r\nexport class Layout {\r\n    //justify content\r\n    public static HORIZONTAL:string = \"horizontal\";\r\n    public static VERTICAL:string = \"vertical\";\r\n    //align items\r\n    public static START:string = \"start\";\r\n    public static END:string = \"end\";\r\n    public static CENTER:string = \"center\";\r\n\r\n    private _parent:createjs.Container;\r\n    private _items:createjs.DisplayObject[];\r\n\r\n    private _direction:string;\r\n    private _alignment:string;\r\n    private _crossAlignment:string;\r\n    private _spacing:number;\r\n\r\n    constructor(parent:createjs.Container, direction:string, alignment:string, crossAlignment:string, spacing:number = 5) {\r\n        this._parent = parent;\r\n        this._items = [];\r\n\r\n        this._direction = direction;\r\n        this._alignment = alignment;\r\n        this._crossAlignment = crossAlignment;\r\n        this._spacing = spacing;\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public buildLayout(addToParent:boolean=true, ...items:createjs.DisplayObject[]) {\r\n        if(items.length <= 0) return;\r\n\r\n        this._items = items;\r\n\r\n        if(addToParent) {\r\n            this._parent.removeAllChildren();\r\n        }\r\n        \r\n\r\n        if(this._direction == Layout.VERTICAL) {\r\n            let totalHeight = 0;\r\n            //ALIGNMENT\r\n            switch(this._alignment) {\r\n                case Layout.START : {\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        item.x = 0;\r\n                        item.y = totalHeight;\r\n                        totalHeight += item.getBounds().height + this._spacing;\r\n                        if(addToParent) this._parent.addChild(item);\r\n                    }\r\n                    break;\r\n                }\r\n                case Layout.CENTER : {\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        item.x = (Game.WIDTH / 2) - (item.getBounds().width / 2);\r\n                        item.y = totalHeight;\r\n                        totalHeight += item.getBounds().height + this._spacing;\r\n                        if(addToParent) this._parent.addChild(item);\r\n                    }\r\n                    break;\r\n                }\r\n                case Layout.END : {\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        item.x = Game.WIDTH - item.getBounds().width;\r\n                        item.y = totalHeight;\r\n                        totalHeight += item.getBounds().height + this._spacing;\r\n                        if(addToParent) this._parent.addChild(item);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n\r\n            //CROSS ALIGNMENT\r\n            //handle vertical alignment\r\n            switch(this._crossAlignment) {\r\n                case Layout.START : {\r\n                    break;\r\n                }\r\n                case Layout.CENTER : {\r\n                    totalHeight += items[items.length-1].getBounds().height;\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        //decipher desired center\r\n                        item.y += (Game.HEIGHT / 2) - (totalHeight / 2);\r\n                    }\r\n                    break;\r\n                }\r\n                case Layout.END :  {\r\n                    totalHeight += items[items.length-1].getBounds().height;\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        //decipher desired center\r\n                        item.y += Game.HEIGHT - totalHeight;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n\r\n        }\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    \r\n    /*--------------- HELPER FUNCTIONS ---------------*/\r\n    public static MAKE_VERTICAL_CENTER(container:createjs.Container) { return new Layout(container, Layout.VERTICAL, Layout.CENTER, Layout.CENTER, 5); }\r\n    public static MAKE_VERTICAL_START(container:createjs.Container) { return new Layout(container, Layout.VERTICAL, Layout.CENTER, Layout.START, 5); }\r\n\r\n}","import { Game } from \"../../Game\";\r\nimport { Sprites } from \"../Sprites\";\r\nimport { LoadManager } from \"../../managers/LoadManager\";\r\n\r\n/**Creates a display container for the game screen. */\r\nexport class GameScore {\r\n    private _game:Game;\r\n    private _container:createjs.Container;\r\n    private _bg:createjs.Shape;\r\n    private _txtTimer:createjs.DisplayObject;\r\n\r\n    private _timerContainer:createjs.Container;\r\n    private _timerTextContainer:createjs.Container;\r\n    private _fishRemainContainer:createjs.Container;\r\n    private _fishRemainTextContainer:createjs.Container;\r\n    private _scoreContainer:createjs.Container;\r\n    private _scoreTextContainer:createjs.Container;\r\n\r\n    //game conditions\r\n    private _useTimer:boolean = false;\r\n    private _useFishRemain:boolean = true;\r\n    private _useScore:boolean = true;\r\n\r\n    constructor(game:Game) {\r\n        this._game = game;\r\n        //create the initial objects\r\n        this._container = new createjs.Container();\r\n        this._bg = new createjs.Shape();\r\n        this._bg.graphics.beginFill(\"#000000\");\r\n        this._bg.graphics.drawRect(0, 0, this._game.StageWidth, 40);\r\n        this._bg.graphics.endFill();\r\n        this._bg.cache(0, 0, this._game.StageWidth, 40);\r\n        this._container.addChild(this._bg);\r\n\r\n        //create the container objects\r\n        //timer\r\n        this._timerContainer = new createjs.Container();\r\n        this._timerContainer.x += 10;\r\n        const timerSprite = Sprites.Graphics.Timer.clone();\r\n        this._timerContainer.addChild(timerSprite);\r\n        this._timerTextContainer = new createjs.Container();\r\n        this._timerTextContainer.y += 8;\r\n        this._timerTextContainer.x += Sprites.Graphics.Timer.getBounds().width + 10;\r\n        this._timerContainer.addChild(this._timerTextContainer);\r\n        this._container.addChild(this._timerContainer);\r\n\r\n        //fish remain\r\n        this._fishRemainContainer = new createjs.Container();\r\n        const fishRemainSprite = Sprites.Graphics.FishRemain.clone();\r\n        this._fishRemainContainer.addChild(fishRemainSprite);\r\n        this._fishRemainTextContainer = new createjs.Container();\r\n        this._fishRemainTextContainer.y += 8;\r\n        this._fishRemainTextContainer.x += Sprites.Graphics.FishRemain.getBounds().width + 10;\r\n        this._fishRemainContainer.addChild(this._fishRemainTextContainer);\r\n        this._container.addChild(this._fishRemainContainer);\r\n\r\n        //score\r\n        this._scoreContainer = new createjs.Container();\r\n        this._scoreContainer.x = this._game.StageWidth - Sprites.Graphics.Score.getBounds().width - 40;\r\n        const scoreSprite = Sprites.Graphics.Score.clone();\r\n        this._scoreContainer.addChild(scoreSprite);\r\n        this._scoreTextContainer = new createjs.Container();\r\n        this._scoreTextContainer.y += 8;\r\n        this._scoreTextContainer.x += Sprites.Graphics.Score.getBounds().width + 10;\r\n        this._scoreContainer.addChild(this._scoreTextContainer);\r\n        this._container.addChild(this._scoreContainer);\r\n        \r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public startHUD(showScore:boolean, showFishRemain:boolean, showTimer:boolean) {\r\n        this._useScore = showScore;\r\n        this._useFishRemain = showFishRemain;\r\n        this._useTimer = showTimer;\r\n\r\n        console.log(\"SHOW ME THE SCORE, REMAIN, TIMER\", showScore, showFishRemain, showTimer);\r\n\r\n        if(this._useScore) this._container.addChild(this._scoreContainer);\r\n        else this._container.removeChild(this._scoreContainer);\r\n\r\n        if(this._useFishRemain) this._container.addChild(this._fishRemainContainer);\r\n        else this._container.removeChild(this._fishRemainContainer);\r\n\r\n        if(this._useTimer) this._container.addChild(this._timerContainer);\r\n        else this._container.removeChild(this._timerContainer);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public update(gameTime:number) {\r\n        \r\n        // //get the game timer\r\n        // let timer = gameTime;\r\n        // this._timerTextContainer.removeAllChildren();\r\n        // let timerCont = Sprites.generateBitmapText(this._game.CurrentLevelData.currentTime.toString(), LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n        // this._timerTextContainer.addChild(timerCont);\r\n\r\n        // //get the fish remain score\r\n        // let fishRemain = gameTime;\r\n        // this._fishRemainTextContainer.removeAllChildren();\r\n        // let fishRemainCont = Sprites.generateBitmapText(this._game.CurrentLevelData.remainingFish.toString(), LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n        // this._fishRemainTextContainer.addChild(fishRemainCont);\r\n        // this._fishRemainContainer.x = (this._game.StageWidth / 2) - (this._fishRemainContainer.getBounds().width / 2);\r\n\r\n        // //get the score\r\n        // let score = gameTime;\r\n        // this._scoreTextContainer.removeAllChildren();\r\n        // let scoreCont = Sprites.generateBitmapText(this._game.CurrentLevelData.score.toString(), LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n        // this._scoreTextContainer.addChild(scoreCont);\r\n        // this._scoreContainer.x = this._game.StageWidth - this._scoreContainer.getBounds().width - 40;\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container() { return this._container; }\r\n\r\n}"]}