{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/Functions.ts","src/Game.ts","src/ObjectPool.ts","src/entities/Cat.ts","src/entities/Entity.ts","src/entities/Fish.ts","src/entities/Puffer.ts","src/entities/specials/Owen.ts","src/entities/specials/Persephone.ts","src/entities/specials/Riley.ts","src/entities/specials/Special.ts","src/main.ts","src/managers/DataManager.ts","src/managers/LoadManager.ts","src/managers/ProgressManager.ts","src/managers/ScreenManager.ts","src/managers/SoundManager.ts","src/screens/EndScreen.ts","src/screens/GameScreen.ts","src/screens/IntermediaryScreen.ts","src/screens/MenuScreen.ts","src/screens/Screen.ts","src/screens/SplashScreen.ts","src/screens/TutorialCreator.ts","src/ui/Sprites.ts","src/ui/custom/LevelSelectDisplay.ts","src/ui/display/Container.ts","src/ui/display/Layout.ts","src/ui/partials/GameScore.ts"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","Logging","message","console","log","_message","LoadManager_1","ProgressManager_1","ScreenManager_1","SplashScreen_1","MenuScreen_1","GameScreen_1","EndScreen_1","Functions_1","Sprites_1","IntermediaryScreen_1","DataManager_1","Game","canvasDiv","_this","this","_classCallCheck","_canvas","width","WIDTH","height","HEIGHT","_lastGameTime","_scaling","Promise","res","rej","__awaiter","regeneratorRuntime","mark","_callee","splash","wrap","_context","prev","next","_stage","createjs","StageGL","antialias","setClearColor","enableMouseOver","update","ScreenManager","registerScreen","SplashScreen","setCurrentScreen","getScreenByKey","addEventListener","LoadManager","ASSETS_UPDATED","Text","Math","ceil","Percentage","toString","loadAssets","catch","err","warn","success","DataManager","loadWorldsData","error","ProgressManager","WorldsData","changeCurrentLevel","getLevelDataByIndex","Sprites","setup","MenuScreen","GameScreen","EndScreen","IntermediaryScreen","Ticker","framerate","FRAME_RATE","on","stop","levelData","_currentLevel","currentScore","_currentScore","children","ch","scaleX","scaleY","_scaleChildren","gameTime","getMeasuredFPS","CurrentScreen","ObjectPool","obj","type","poolObj","active","Pool","push","_getObjectByType","_getObjectByObj","_pool","forEach","find","Entity_1","SoundManager_1","Cat","game","gameScreen","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","Spritesheets","Kitty_Spritesheet","_gameScreen","_speed","_fishCaughtMultiplier","_caughtFish","_isGrabbing","_isRising","_isInjured","_hasReachedSurface","_sprite","gotoAndPlay","ANIMATION","Idle","Entity","_this2","IsGamelogicPaused","X","Stage","mouseX","speed","mouseY","Speed","_catYTween","Tween","get","to","y","Ease","circIn","Grab","Hold","fishes","tryToGrabFishes","Y","caught","returnToSurface","_this3","removeTweens","wait","linear","reachSurface","_this4","hasNewFish","indexOf","SoundManager","playSFX","Sounds","FishGrab","release","_this5","Ow","injure","drop","CatInjure","_this6","collectFish","_this7","_get","prototype","hasHitAPuffer","hitEnemy","value","freeze","Death","spritesheet","_game","Sprite","_direction","x","_isIgnoringCollision","_ignoreCollisionTimer","container","addChild","parent","removeChild","IGNORE_COLLISION","artificialReg","arguments","undefined","reg","regX","regY","Bounds","Width","Height","bounds","StageWidth","extents","StageHeight","HIT","Right","Left","lastX","getBounds","Top","Bottom","Fish","Peeper_Spritesheet","_isCaught","_isReturning","Slow","_naturalY","Panic","hitTest","disable","abs","isNeg","IsIgnoringCollision","testStageBounds","DirectionX","startIgnoreCollision","Fast","Puffer","Puffer_Spritesheet","_cooldown","_currentCooldown","Angry","cat","Recover","Special_1","Owen","Specials_Spritesheet","SPEC_ANIMATION","Special","Persephone","Riley","Fish_1","_isOnMainPage","_resetAttentionSpan","isOnMainPage","floor","random","_attnSpanDuration","_desiredX","_desiredY","_isNeg","Game_1","document","getElementById","fileLocation","fetch","then","blob","json","_worldsData","index","flatten","concat","apply","worlds","currentLevel","getLevelIndexByData","world","level","_sheetsTotal","_sheetsLoaded","_percentage","_totalAssetsLoaded","_totalAssets","src","stage","reset","_preloadManager","LoadQueue","Sound","registerPlugins","WebAudioPlugin","HTMLAudioPlugin","FlashAudioPlugin","alternateExtensions","installPlugin","_onLoaded","_onComplete","_onError","data","setMaxConnections","loadManifest","ASSETS_LOADED","emitErrorEvent","dispatchEvent","AssetsLoadedEvent","AssetsFailedEvent","parseFloat","getItems","toFixed","AssetsUpdatedEvent","name","sheet","item","Types","JAVASCRIPT","window","id","_SpriteSheet","complete","_loadedSheet","ev","remove","IMAGE","Images","Bitmap","SOUND","emitUpdatedEvent","removeAllEventListeners","setInterval","emitLoadedEvent","Event","ASSETS_FAILED","worldsData","_levelsProgress","map","unlocked","completed","_specialsProgress","special","collected","unlocks","_readCookieData","worldIndex","levelIndex","nextLevel","nextWorld","saveCookieData","cookie","JSON","stringify","ProgressData","_getCookie","parse","levels","specials","cname","ca","decodeURIComponent","split","charAt","substring","Screen_1","key","screen","_screensLookup","tempScreen","Screen","resolve","promises","_currentScreen","Container","alpha","destroy","_callee2","_context2","all","create","enable","loop","_ambience","sound","play","position","prefVolume","duration","playAmbience","fadeInAmbience","volume","_sfx","splice","keys","step","fadeInterval","clearInterval","killOnFinish","Container_1","_isFail","bg","Catfish_End","_container","_buttonsContainer","LAYOUT_OPTIONS","ColumnLeftBottom","addMany","btnTryAgain","btnNextLevel","btnMainMenu","_completeSpr","_failSpr","BTNSelect","CurrentLevelData","getNextLevel","intermediary","queueNextScreen","visible","TutorialCreator_1","ObjectPool_1","Persephone_1","Owen_1","Riley_1","Puffer_1","Cat_1","GameScore_1","_fishes","_puffers","_remainingFish","createPoolObject","POOL","CAT","FISH","_i","PUFFERFISH","PERSEPHONE","OWEN","RILEY","_cat","checkout","_staticContainer","BG_Spritesheet","_fishContainer","_pufferContainer","_winContainer","_gameScore","GameScore","_tutorialCreator","TutorialCreator","_pauseLogic","hitObjects","getObjectsUnderPoint","fish","puff","killedFish","win","changeCurrentScore","totalFish","combos","time","Win","elasticOut","fadeOutAmbience","levelIndices","getIndexData","completeLevel","collectSpecial","checkoutSprites","_winBanner","Shape","graphics","beginFill","drawRect","cache","_winText","generateBitmapText","TypographyWhite","mouseEnabled","forceDirectionX","flip","setNaturalY","puffer","tutorials","queueTutorials","background","gotoAndStop","musicKey","music","playAmbienceWithFadeIn","showScore","showTimer","showFishRemain","showRemainingFish","startHUD","releaseAllObjects","normalizedTime","min","grab","return","removeAllChildren","_text","screenKey","evt","setTimeout","clearTimeout","_bg","endFill","_textContainer","_txtSprite","scale","LevelSelectDisplay_1","_swipeContainer","Catfish_Main","_mainContainer","_logo","_mainButtonsContainer","btnNewGame","btnOptions","btnLevelSelect","btnExit","_fancyFish","_optionsContainer","txtOptions","Typography","btnClearData","Buttons","ClearData","_clearedContainer","add","_levelSelectDisplay","LevelSelectDisplay","_collectedContainer","_collectibleFish","_swipeSpeed","_initialSwipePos","BubblesFade","circOut","bounceOut","cubicIn","cubicInOut","stageX","stageY","_dragTimer","_onMain","_onNewGame","_onOptions","_onLevelSelect","_onExit","_onFish","listenToClearData","CLEAR_DATA","_onClearData","_onDragStart","_onDragEnd","collFish","filter","d","toLowerCase","setMainPage","sineInOut","off","stopListenToClearData","removeAllTweens","_textSpritesheet","SpriteSheet","images","frames","animations","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","Z","b","g","h","j","k","l","m","q","s","v","w","z","0","2","3","4","5","6","7","8","9",".",",","'","\"","?","!","$","img","createElement","onload","text","textEl","_tutorialQueue","_youOverlay","Tutorial_Spritesheet","_fishOverlay","_pufferOverlay","_manyOverlay","_pauseOverlay","_specialOverlay","First","You","Many","Pause","t0","KEY","_runYou","_transition","_runFish","unpauseGameLogic","abrupt","_runPuffer","_runSpecial","nextScreen","_currentOverlay","_callee3","_context4","_callee4","_context5","catStart","pauseGameLogic","_backgrounds","Main","UI","Logo","Entities","BG","BGTop","Wave","_graphics","Timer","ScoreHUD_Spritesheet","Score","FishRemain","_buttons","NewGame","ButtonHelper","Options","LevelSelect","Exit","Fishbowl","LevelSelectBG","Menu_Level_Select","LevelEmpty","LevelComplete","LevelSpecialEmpty","LevelSpecialComplete","_setupBTNClearData","cursor","_canClearData","_btnDataDown","_btnDataComplete","_btnDataUp","details","color","textObj","BitmapText","_levelButtons","_background","Backgrounds","_levelsContainer","_levelTextContainer","LevelText","rebuild","btn","_onLevelClick","_onLevelHover","_onLevelUnhover","_levelsData","sprite","clone","reduce","acc","target","_getDataByIndex","Layout_1","layout","_sprites","_layout","Layout","direction","alignment","crossAlignment","spacing","MAKE_VERTICAL_CENTER","updateLayout","buildLayout","_toConsumableArray","sprites","_layout2","_layout3","ColumnLeftTop","VERTICAL","START","ColumnLeftCenter","CENTER","END","ColumnCenterTop","ColumnCenterCenter","ColumnCenterBottom","ColumnRightTop","ColumnRightCenter","ColumnRightBottom","_parent","_items","_alignment","_crossAlignment","_spacing","addToParent","_len","items","Array","_key","totalHeight","_item","_i2","_item2","_i3","_i4","HORIZONTAL","_useTimer","_useFishRemain","_useScore","_timerContainer","timerSprite","Graphics","_timerTextContainer","_fishRemainContainer","fishRemainSprite","_fishRemainTextContainer","_scoreContainer","scoreSprite","_scoreTextContainer"],"mappings":"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AI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,IAAI,GAAG,GAAG,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,GAAG,EAAE,EAAE,IAAMC,WAAY,CAACC,EAAE,CAAC,EAAE,GAAG,GAAOC,EAAE,CAAC,EAAE,GAAG,GAAOC,EAAE,CAAC,EAAE,GAAG,GAAOC,EAAE,CAAC,EAAE,GAAG,GAAOC,EAAE,CAAC,EAAE,GAAG,GAAOC,EAAE,CAAC,EAAE,GAAG,GAAOC,EAAE,CAAC,EAAE,GAAG,GAAOC,EAAE,CAAC,EAAE,GAAG,GAAOC,EAAE,CAAC,EAAE,GAAG,GAAOC,EAAE,CAAC,EAAE,GAAG,GAAOC,EAAE,CAAC,GAAG,IAAI,GAAOC,EAAE,CAAC,GAAG,IAAI,GAAOC,EAAE,CAAC,GAAG,IAAI,GAAOC,EAAE,CAAC,GAAG,IAAI,GAAOC,EAAE,CAAC,GAAG,IAAI,GAAOC,EAAE,CAAC,GAAG,IAAI,GAAOC,EAAE,CAAC,GAAG,IAAI,GAAOC,EAAE,CAAC,GAAG,IAAI,GAAOC,EAAE,CAAC,GAAG,IAAI,GAAOC,EAAE,CAAC,GAAG,IAAI,GAAOC,EAAE,CAAC,GAAG,IAAI,GAAOC,EAAE,CAAC,GAAG,IAAI,GAAOC,EAAE,CAAC,GAAG,IAAI,GAAO/b,E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","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/* ************************************************* */\r\n/*                      LOGGING                      */\r\n/* ************************************************* */\r\nexport class Logging {\r\n    static success(message:string):void {\r\n        console.log(`%c ${message}`, 'color:seagreen; font-size:1.1em; font-weight:bold; border-left: solid 3px seagreen;')    ;\r\n    }\r\n\r\n    static message(message:string):void {\r\n        console.log(`%c ${message}`, 'color:#1E265C; font-size:1.1em; font-weight:bold; border-left: solid 3px #1E265C;');\r\n    }\r\n\r\n    static error(message:string):void {\r\n        console.log(`%c ${message}`, 'color:red; font-size:1.1em; border-left: solid 3px red;');\r\n    }\r\n}","import { LoadManager } from \"./managers/LoadManager\";\r\nimport { ProgressManager } from \"./managers/ProgressManager\";\r\nimport { ScreenManager } from \"./managers/ScreenManager\";\r\nimport { SplashScreen } from \"./screens/SplashScreen\";\r\nimport { MenuScreen } from \"./screens/MenuScreen\";\r\nimport { GameScreen } from \"./screens/GameScreen\";\r\nimport { EndScreen } from \"./screens/EndScreen\";\r\nimport { Logging } from \"./Functions\";\r\nimport { Sprites } from \"./ui/Sprites\";\r\nimport { IntermediaryScreen } from \"./screens/IntermediaryScreen\";\r\nimport { DataManager, LevelData } from \"./managers/DataManager\";\r\n\r\nexport interface ICurrentScore {\r\n    totalFish: number;\r\n    time: number;\r\n    combos: number;\r\n}\r\n\r\n\r\nexport class Game {\r\n    private _canvas:HTMLCanvasElement;\r\n    private _stage:createjs.StageGL;\r\n    private _scaling:number;\r\n\r\n    private _lastGameTime:number;\r\n\r\n    private _currentLevel:LevelData;\r\n    private _currentScore:ICurrentScore;\r\n\r\n    constructor(canvasDiv:HTMLCanvasElement) {\r\n\r\n        this._canvas = canvasDiv;\r\n        this._canvas.width = Game.WIDTH;\r\n        this._canvas.height = Game.HEIGHT;\r\n\r\n        this._lastGameTime = -1;\r\n\r\n        //set the scaling\r\n        this._scaling = Game.HEIGHT / 1024;\r\n\r\n        //start loading game assets\r\n        new Promise(async(res, rej) => {\r\n            //create the stage\r\n            this._stage = new createjs.StageGL(this._canvas, { antialias: true });\r\n            // this._stage = new createjs.StageGL(this._canvas);\r\n            (this._stage as any).setClearColor(\"#000000\");\r\n            this._stage.enableMouseOver(10);\r\n            this._stage.update();\r\n\r\n\r\n            //load the splash screen\r\n            ScreenManager.registerScreen(\"splash\", new SplashScreen(this));\r\n            ScreenManager.setCurrentScreen(\"splash\", this._stage);\r\n\r\n            const splash = ScreenManager.getScreenByKey(\"splash\") as SplashScreen;\r\n\r\n            //listen to asset updates\r\n            (this._stage as any).addEventListener(LoadManager.ASSETS_UPDATED, (e) => {\r\n                //update percent\r\n                splash.Text = Math.ceil(LoadManager.Percentage * 100).toString();\r\n            });\r\n            //load assets\r\n            await LoadManager.loadAssets(\"assets/manifest.json\", this._stage)\r\n                .catch(err => {\r\n                    console.warn(\"Error loading assets:\", err);\r\n                });\r\n\r\n            Logging.success(\"Assets Loaded Successfully!\");\r\n\r\n            //load level data\r\n            await DataManager.loadWorldsData(\"assets/data/levels.json\")\r\n                .catch(err => {\r\n                    Logging.error(err);\r\n                    return;\r\n                });\r\n            //load progress data\r\n            await ProgressManager.loadWorldsData(DataManager.WorldsData);\r\n\r\n            //set the current screen\r\n            //game test, load desired level patch -- if autoloading to game screen\r\n            this.changeCurrentLevel(DataManager.getLevelDataByIndex(0));\r\n\r\n            Logging.success(\"Level Data Loaded Successfully!\");\r\n\r\n            //setup createjs.Sprites\r\n            await Sprites.setup();\r\n\r\n            //build the screens\r\n            ScreenManager.registerScreen(\"menu\", new MenuScreen(this));\r\n            ScreenManager.registerScreen(\"game\", new GameScreen(this));\r\n            ScreenManager.registerScreen(\"end\", new EndScreen(this));\r\n            ScreenManager.registerScreen(\"intermediary\", new IntermediaryScreen(this));\r\n            \r\n\r\n            ScreenManager.setCurrentScreen(\"menu\", this._stage);\r\n            // ScreenManager.setCurrentScreen(\"game\", this._stage);\r\n            // ScreenManager.setCurrentScreen(\"end\", this._stage);\r\n\r\n            //setup the game loop\r\n            createjs.Ticker.framerate = Game.FRAME_RATE;\r\n            createjs.Ticker.on(\"tick\", this.update, this);\r\n\r\n            res();\r\n\r\n        });\r\n    }\r\n\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public changeCurrentLevel(levelData:LevelData) {\r\n        this._currentLevel = levelData;\r\n    }\r\n\r\n    public changeCurrentScore(currentScore:ICurrentScore) {\r\n        this._currentScore = currentScore;\r\n    }\r\n\r\n\r\n\r\n    //recursive sizing\r\n    private _scaleChildren(children) {\r\n\r\n\r\n        if(children != null) {\r\n            for(let i = 0; i < children.length; i++) {\r\n                const ch = children[i];\r\n                ch.scaleX = ch.scaleY = this._scaling;\r\n                if(ch.children != null && ch.scaleX != null) this._scaleChildren(ch);\r\n            }\r\n        }\r\n\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    public update(e:any) {\r\n\r\n        const gameTime = (this._lastGameTime != -1) ? createjs.Ticker.getMeasuredFPS() - this._lastGameTime : 1;\r\n        this._lastGameTime = createjs.Ticker.getMeasuredFPS();\r\n\r\n        //update the screen\r\n        if(ScreenManager.CurrentScreen != null) ScreenManager.CurrentScreen.update(gameTime);\r\n\r\n        //scale all children\r\n        // this._scaleChildren(this._stage.children);\r\n\r\n        //update the stage\r\n        this._stage.update();\r\n    }\r\n\r\n\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get FRAME_RATE() { return 30; }\r\n    // public static get WIDTH() { return Game.HEIGHT * 0.5625; } //desired size\r\n    // public static get HEIGHT() { return Math.min(document.body.clientHeight, 1024); }\r\n\r\n    public static get WIDTH() { return 576; }\r\n    public static get HEIGHT() { return 1024; }\r\n\r\n    public get StageWidth() { return this._canvas.width; } //actual size\r\n    public get StageHeight() { return this._canvas.height; }\r\n\r\n    public get Stage() { return this._stage; }\r\n    public get Scaling() { return this._scaling; }\r\n\r\n    public get CurrentLevelData() { return this._currentLevel; }\r\n    public get CurrentScoreData() { return this._currentScore; }\r\n\r\n\r\n\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n\r\n\r\n}","import { Logging } from \"./Functions\";\r\nimport { Entity } from \"./entities/Entity\";\r\n\r\nexport interface IPoolObject {\r\n    type:string;\r\n    obj:Entity,\r\n    active:boolean;\r\n}\r\n\r\nexport class ObjectPool {\r\n    private static _pool:IPoolObject[];\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Creates a pool object. */\r\n    public static createPoolObject(obj:Entity, type:string) {\r\n        const poolObj = {\r\n            type,\r\n            obj,\r\n            active: false\r\n        };\r\n        ObjectPool.Pool.push(poolObj);\r\n        return poolObj;\r\n    }\r\n\r\n    /**Checks out a pool object.  Use POOL global function to access. */\r\n    public static checkout(type:string) {\r\n        const poolObj = ObjectPool._getObjectByType(type);\r\n        if(poolObj != null) {\r\n            poolObj.active = true;\r\n            return poolObj.obj;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**Returns an object to the pool. */\r\n    public static return(obj:Entity) {\r\n        const poolObj = ObjectPool._getObjectByObj(obj);\r\n        if(poolObj != null) {\r\n            poolObj.active = false;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**Returns all objects to pool. */\r\n    public static releaseAllObjects() {\r\n        ObjectPool._pool.forEach(p => {\r\n            p.active = false;\r\n        });\r\n    }\r\n\r\n\r\n    public static _getObjectByType(type) {\r\n        const poolObj = ObjectPool._pool.find((o => o.type == type && !o.active));\r\n        if(poolObj == null) Logging.error(\"Object not found in pool, or pool is exhausted.  Return some objects.\");\r\n        return poolObj\r\n    }\r\n    public static _getObjectByObj(obj) {\r\n        return ObjectPool._pool.find((o => o.obj == obj));\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get Pool() { \r\n        if(ObjectPool._pool == null) ObjectPool._pool = [];\r\n        return ObjectPool._pool;\r\n    }\r\n}","import { Game } from \"../Game\";\r\nimport { Entity } from \"./Entity\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { IEnableable } from \"../Interfaces\";\r\nimport { GameScreen } from \"../screens/GameScreen\";\r\nimport { Fish } from \"./Fish\";\r\nimport { SoundManager } from \"../managers/SoundManager\";\r\n\r\nexport class Cat extends Entity implements IEnableable {\r\n    private _gameScreen:GameScreen;\r\n    private _speed:number;\r\n    private _fishCaughtMultiplier:number; //this will be the rate at which the cat slows down when rising per fish\r\n\r\n    private _catYTween:createjs.Tween;\r\n    private _caughtFish:Fish[];\r\n\r\n    private _isGrabbing:boolean;\r\n    private _isRising:boolean;\r\n    private _isInjured:boolean;\r\n    private _hasReachedSurface:boolean;\r\n\r\n    constructor(game:Game, gameScreen:GameScreen) {\r\n        super(game, LoadManager.Spritesheets.Kitty_Spritesheet);\r\n        this._gameScreen = gameScreen;\r\n\r\n        this._speed = 3;\r\n        this._fishCaughtMultiplier = 0.05;\r\n\r\n        this._caughtFish = [];\r\n        this._isGrabbing = false;\r\n        this._isRising = false;\r\n        this._isInjured = false;\r\n        this._hasReachedSurface = true;\r\n\r\n        this._sprite.gotoAndPlay(Cat.ANIMATION.Idle);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    enable() {\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n    }\r\n\r\n\r\n    /***************/\r\n    /*   ACTIONS   */\r\n    /***************/\r\n    public grab() {\r\n        //if the game is paused, we shall not grab\r\n        if(this._gameScreen.IsGamelogicPaused) return;\r\n\r\n        //cannot grab if we are not at surface\r\n        if(!this._hasReachedSurface) return;\r\n\r\n        this._isGrabbing = true;\r\n        this._hasReachedSurface = false;\r\n\r\n        //move to x position\r\n        this.X = this._gameScreen.Game.Stage.mouseX;\r\n\r\n        //grab to y position\r\n        const speed = (this._gameScreen.Game.Stage.mouseY / 2) * this.Speed;\r\n        this._catYTween = createjs.Tween\r\n            .get(this._sprite)\r\n            .to({ y:this._gameScreen.Game.Stage.mouseY }, speed, createjs.Ease.circIn)\r\n            .call(() => {\r\n                //once the grab is done, turn off flag\r\n                this._isGrabbing = false;\r\n\r\n                 //play animations\r\n                this._sprite.gotoAndPlay(Cat.ANIMATION.Grab);\r\n                //listen for animation to finish\r\n                (this._sprite as any).on(\"animationend\", () => {\r\n                    this._sprite.gotoAndPlay(Cat.ANIMATION.Hold);\r\n                }, true);\r\n\r\n                //try to grab a fish\r\n                const fishes = this._gameScreen.tryToGrabFishes(this.X , this.Y);\r\n\r\n                //see if a fish was grabbed\r\n                if(fishes.length > 0) this.caught(fishes);\r\n                else this.returnToSurface();\r\n            });\r\n\r\n    }\r\n\r\n    /**\r\n     * Called to return cat to surface.\r\n     */\r\n    public returnToSurface() {\r\n        this._sprite.gotoAndPlay(Cat.ANIMATION.Idle);\r\n\r\n        //remove any lingering tweens\r\n        createjs.Tween.removeTweens(this._sprite);\r\n        const speed = (this.Y / 2) * this.Speed;\r\n        this._catYTween = createjs.Tween.get(this._sprite)\r\n            .wait(150)\r\n            .to({y:20}, speed, createjs.Ease.linear)\r\n            .call(() => {\r\n                //once the surface has been reached, allow x movement again\r\n                this.reachSurface();\r\n            });\r\n    }\r\n\r\n    public caught(fishes:Fish[]) {\r\n        if(fishes.length <= 0) return;\r\n        this._isRising = true;  \r\n        \r\n        let hasNewFish = false;\r\n\r\n        fishes.forEach(f => {\r\n            if(this._caughtFish.indexOf(f) != -1) return;\r\n            hasNewFish = true;\r\n            //grab the fish\r\n            f.catch();\r\n\r\n            //add fish to caught array\r\n            this._caughtFish.push(f);\r\n\r\n            //control the fish\r\n            f.Y = this.Y;\r\n        });\r\n\r\n        if(!hasNewFish) return;\r\n\r\n        //play the sound\r\n        SoundManager.playSFX(LoadManager.Sounds.FishGrab);\r\n        \r\n        //if we grabbed a fish...\r\n        //go back up... slowly\r\n        createjs.Tween.removeTweens(this._sprite);\r\n        const speed = this.Y * this.Speed;\r\n        this._catYTween = createjs.Tween.get(this._sprite)\r\n            .wait(250)\r\n            .to({y:-20}, speed, createjs.Ease.linear)\r\n            .call(() => {\r\n                //once the surface has been reached, allow x movement again\r\n                this.reachSurface();\r\n                this._isRising = false;\r\n            });\r\n\r\n    }\r\n    public drop() {\r\n        //release the fish\r\n        this._caughtFish.forEach(f => f.release());\r\n        this._caughtFish = [];\r\n    }\r\n\r\n    /**Called when hit by an enemy. */\r\n    public injure() {\r\n        this._isInjured = true;\r\n        //start hurt animation\r\n        //end any current tweening\r\n        createjs.Tween.removeTweens(this._sprite);\r\n        this._sprite.gotoAndPlay(Cat.ANIMATION.Ow);\r\n        this._catYTween = createjs.Tween.get(this._sprite)\r\n            .wait(15)\r\n            .to({y:20}, 500, createjs.Ease.linear)\r\n            .call(() => {\r\n                //once the surface has been reached, allow x movement again\r\n                this.reachSurface();\r\n                this._sprite.gotoAndPlay(Cat.ANIMATION.Idle);\r\n            });\r\n    }\r\n\r\n    /**Called when the cat tickles an enemy. */\r\n    public hitEnemy() {\r\n        this.injure();\r\n        this.drop();\r\n\r\n        //play the sound\r\n        SoundManager.playSFX(LoadManager.Sounds.CatInjure);\r\n    }\r\n\r\n    public reachSurface() {\r\n        //if we have a fish, send to main logic\r\n        if(this._caughtFish != null) {\r\n            this._caughtFish.forEach(f => {\r\n                this._gameScreen.collectFish(f);\r\n            });\r\n            this._caughtFish = [];\r\n        }\r\n\r\n        //set flags\r\n        this._hasReachedSurface = true;\r\n        this._isInjured = false;\r\n        this._isRising = false;\r\n        this._isGrabbing = false;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    update(gameTime:number) {\r\n        //if our game logic is paused, no FISHING\r\n        if(this._gameScreen.IsGamelogicPaused) return;\r\n\r\n        super.update(gameTime);\r\n\r\n\r\n        //if we are rising, attempt to catch more fish\r\n        if(this._isRising && !this._isInjured) {\r\n            //try to grab a fish\r\n            const fishes = this._gameScreen.tryToGrabFishes(this.X , this.Y);\r\n            //see if a fish was grabbed\r\n            if(fishes.length > 0)\r\n                this.caught(fishes);\r\n        }\r\n\r\n        //test puffer damage\r\n        if(this._isRising || this._isGrabbing) {\r\n            //don't test again if injured\r\n            if(!this._isInjured) {\r\n                //test for puffer hit\r\n                const hasHitPuffer = this._gameScreen.hasHitAPuffer(this.X, this.Y);\r\n                if(hasHitPuffer) {\r\n                    this.hitEnemy();\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        //drag fish with us if we have any\r\n        if(this._caughtFish != null) {\r\n            this._caughtFish.forEach(f => {\r\n                f.Y = this.Y - 20;\r\n            });\r\n        }\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get GRAB_RANGE() { return 120; }\r\n    public static get ANIMATION() {\r\n        return Object.freeze({\r\n            \"Idle\" : \"kittyIdle\",\r\n            \"Death\" : \"kittyIdle\",\r\n            \"Grab\" : \"kittyIdle\",\r\n            \"Hold\" : \"kittyIdle\",\r\n            \"Ow\" : \"kittyIdle\"\r\n        });\r\n    }\r\n    // public static get ANIMATION() {\r\n    //     return Object.freeze({\r\n    //         \"Idle\" : \"cat_idle\",\r\n    //         \"Death\" : \"cat_death\",\r\n    //         \"Grab\" : \"cat_grab\",\r\n    //         \"Hold\" : \"cat_grab_hold\",\r\n    //         \"Ow\" : \"cat_ow\"\r\n    //     });\r\n    // }\r\n    public get Speed() { \r\n        const caughtFishMult = ((this._caughtFish.length > 0) ? 1 + (this._caughtFish.length + this._fishCaughtMultiplier) : 1);\r\n\r\n        return caughtFishMult * this._speed;\r\n    }\r\n    public set Speed(value:number) { this._speed = value; }\r\n}","import { ICreateable, IUpdateable } from \"../Interfaces\";\r\nimport { Game } from \"../Game\";\r\n\r\nexport class Entity implements ICreateable<Entity>, IUpdateable {\r\n    private _game:Game;\r\n    protected _name:string;\r\n    protected _sprite:createjs.Sprite;\r\n    protected _direction:{ x:number, y:number };\r\n\r\n    private _isIgnoringCollision:boolean;\r\n    private _ignoreCollisionTimer:number;\r\n\r\n    constructor(game:Game, spritesheet:createjs.SpriteSheet) {\r\n        this._game = game;\r\n        this._sprite = new createjs.Sprite(spritesheet);\r\n        this._direction = { x:1, y:1 };\r\n\r\n        this._isIgnoringCollision = false;\r\n        this._ignoreCollisionTimer = 0;\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public create(container:createjs.Container):Entity {\r\n\r\n        //move to main container\r\n        if(container == null)\r\n            this._game.Stage.addChild(this._sprite);\r\n        else\r\n            container.addChild(this._sprite);\r\n        return this;\r\n    }\r\n\r\n    public destroy():Entity {\r\n        if(this._sprite == null || this._sprite.parent == null) return null;\r\n\r\n        //remove from main container\r\n        this._sprite.parent.removeChild(this._sprite);\r\n\r\n        return this;\r\n    }\r\n\r\n    public update(gameTime:number) {\r\n\r\n         //listen for collision ignore\r\n        if(this._isIgnoringCollision) {\r\n            this._ignoreCollisionTimer++;\r\n\r\n            if(this._ignoreCollisionTimer > Entity.IGNORE_COLLISION)\r\n                this._isIgnoringCollision = false;\r\n        }\r\n    }\r\n\r\n    protected startIgnoreCollision() {\r\n        this._isIgnoringCollision = true\r\n    }\r\n\r\n    protected testStageBounds(artificialReg:{x:number, y:number} = null) {\r\n        let reg = { x:this._sprite.regX, y:this._sprite.regY };\r\n        if(artificialReg != null) {\r\n            reg = {\r\n                x: (this._direction.x > 0) ? this.Bounds.Width * artificialReg.x : (this.Bounds.Width * (1 - artificialReg.x)),\r\n                y: (this._direction.y > 0) ? this.Bounds.Height * artificialReg.y : (this.Bounds.Height * (1 - artificialReg.y))\r\n            }\r\n        }\r\n        // const bounds = { width:this._game.StageWidth, height: this._game.StageHeight };\r\n        const bounds = { width:this._game.StageWidth, height: this._game.StageHeight };\r\n        const extents = {   \r\n            x:(this._direction.x > 0) ? (this.Bounds.Width - reg.x) : -reg.x, \r\n            y:(this._direction.y > 0) ? (this.Bounds.Height - reg.y) : -reg.y \r\n        };\r\n\r\n        //test walls\r\n        if((this.X + extents.x) > bounds.width) return Entity.HIT.Right;\r\n        else if(this.X + extents.x < 0) return Entity.HIT.Left;\r\n    }\r\n\r\n    public forceDirectionX(value) {\r\n        this._direction.x = value;\r\n        this._sprite.scaleX = value;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get IGNORE_COLLISION() { return 20; }\r\n    public static get HIT() { return Object.freeze({Top:0, Right:1, Bottom:2, Left:3}); }\r\n\r\n    protected get Game():Game { return this._game; }\r\n\r\n    public get Sprite() { return this._sprite; }\r\n    public get Parent() { return this._sprite.parent; }\r\n\r\n    public get X() { return this._sprite.x; }\r\n    public set X(value) { this._sprite.x = value; }\r\n    public get Y() { return this._sprite.y; }\r\n    public set Y(value) { this._sprite.y = value; }\r\n\r\n    public set DirectionX(value) { \r\n        const lastX = this._direction.x;\r\n        this._direction.x = value; \r\n        //flip sprite if our direction has changed\r\n        if(this._direction.x != lastX) this._sprite.scaleX *= -1;\r\n    }\r\n    public get DirectionX() { return this._direction.x; }\r\n\r\n    public get Bounds() { \r\n        let bounds = this._sprite.getBounds();\r\n        return  { Width:bounds.width, Height:bounds.height };\r\n    }\r\n\r\n    public get IsIgnoringCollision() { return this._isIgnoringCollision; }\r\n}","import { Game } from \"../Game\";\r\nimport { Entity } from \"./Entity\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { IEnableable } from \"../Interfaces\";\r\n\r\nexport class Fish extends Entity implements IEnableable {\r\n    private _speed:number;\r\n    private _naturalY:number;\r\n\r\n    private _isCaught:boolean;\r\n    private _isReturning:boolean;\r\n\r\n    constructor(game:Game, spritesheet?:createjs.SpriteSheet) {\r\n        super(game, spritesheet || LoadManager.Spritesheets.Peeper_Spritesheet);\r\n        this._speed = 1;\r\n\r\n        this._isCaught = false;\r\n        this._isReturning = false;\r\n\r\n        this._sprite.gotoAndPlay(Fish.ANIMATION.Slow);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    \r\n\r\n\r\n    /***************/\r\n    /*   ACTIONS   */\r\n    /***************/\r\n    public setNaturalY() {\r\n        this._naturalY = this.Y;\r\n    }\r\n\r\n    public catch() {\r\n        if(this._isCaught) return;\r\n        \r\n        this._isCaught = true;\r\n\r\n        this._sprite.gotoAndPlay(Fish.ANIMATION.Panic);\r\n    }\r\n\r\n    public release() {\r\n        this._isCaught = false;\r\n        //return to natural y position\r\n        this._isReturning = true;\r\n    }\r\n\r\n\r\n    /**Test to see if global position hits sprite. */\r\n    public testHit(x:number, y:number):boolean {\r\n        return this._sprite.hitTest(x, y);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    destroy() {\r\n        //reset flags\r\n        this._isCaught = false;\r\n        //reset animations\r\n        this._sprite.gotoAndPlay(Fish.ANIMATION.Slow);\r\n\r\n        this.disable();\r\n        return super.destroy();\r\n    }\r\n\r\n    update(gameTime:number) {\r\n        super.update(gameTime);\r\n\r\n        //move the fishy\r\n        if(!this._isCaught)\r\n            // this.X += this._speed * gameTime * this._direction.x;\r\n            this.X += this._speed * this._direction.x;\r\n        //--if returning, swim to natural y\r\n        if(this._isReturning) {\r\n            //if we are still far away, swim!\r\n            if(Math.abs(this.Y - this._naturalY) > 30) {\r\n                const isNeg = this.Y > this._naturalY;\r\n                this.Y += (isNeg) ? -10 : 10;\r\n            }\r\n            else {\r\n                this._isReturning = false;\r\n                this._sprite.gotoAndPlay(Fish.ANIMATION.Slow);\r\n            }\r\n        }\r\n\r\n        //test collision\r\n        if(!this.IsIgnoringCollision) {\r\n\r\n            //if fish hits the edge, flip direction\r\n            const hit = this.testStageBounds({x:0.5, y:0.5});\r\n            switch(hit) {\r\n                case Entity.HIT.Right:\r\n                    this.DirectionX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X -= 5 - this.Bounds.Width;\r\n                    break;\r\n                case Entity.HIT.Left:\r\n                    this.DirectionX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X += 5 - this.Bounds.Width;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    enable() {\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get ANIMATION() {\r\n        return Object.freeze({\r\n            \"Slow\" : \"fishIdle\",\r\n            \"Fast\" : \"fishIdle\",\r\n            \"Panic\" : \"fishPanic\"\r\n        });\r\n    }\r\n    public get Speed() { return this._speed; }\r\n    public set Speed(value:number) { this._speed = value; }\r\n}","import { Game } from \"../Game\";\r\nimport { Entity } from \"./Entity\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { IEnableable } from \"../Interfaces\";\r\nimport { Logging } from \"../Functions\";\r\nimport { Cat } from \"./Cat\";\r\n\r\nexport class Puffer extends Entity implements IEnableable {\r\n    public get Type() { return \"Puffer\"; }\r\n\r\n    private _speed:number;\r\n    private _cooldown:number = 40;\r\n    private _currentCooldown:number = 0;\r\n\r\n    private _isCaught:boolean;\r\n\r\n    constructor(game:Game) {\r\n        super(game, LoadManager.Spritesheets.Puffer_Spritesheet);\r\n        this._speed = 1;\r\n\r\n        this._isCaught = false;\r\n\r\n        this._sprite.gotoAndPlay(Puffer.ANIMATION.Idle);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    \r\n\r\n\r\n    /***************/\r\n    /*   ACTIONS   */\r\n    /***************/\r\n    public puff() {\r\n        this._sprite.gotoAndPlay(Puffer.ANIMATION.Angry);\r\n        //start cooldown\r\n        this._currentCooldown = this._cooldown;\r\n    }\r\n\r\n\r\n    /**Test to see if global position hits sprite. */\r\n    public testHit(x:number, y:number, cat:Cat):boolean {\r\n        return (x >= this.X - cat.Bounds.Width && x <= this.X + this.Bounds.Width \r\n            && y >= this.Y - cat.Bounds.Height && y <= this.Y + this.Bounds.Height) ;\r\n        // return this._sprite.hitTest(x, y);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    destroy() {\r\n        //reset flags\r\n        this._isCaught = false;\r\n        //reset animations\r\n        this._sprite.gotoAndPlay(Puffer.ANIMATION.Idle);\r\n\r\n        this.disable();\r\n        return super.destroy();\r\n    }\r\n\r\n    update(gameTime:number) {\r\n        super.update(gameTime);\r\n\r\n        //move the fishy\r\n        if(!this._isCaught)\r\n            this.X += this._speed * gameTime * this._direction.x;\r\n\r\n        //do cooldown\r\n        if(this._currentCooldown >= 0) {\r\n            this._currentCooldown--;\r\n            if(this._currentCooldown == 0) {\r\n                //reset animations\r\n                this._sprite.gotoAndPlay(Puffer.ANIMATION.Recover);\r\n            }\r\n        }\r\n\r\n        //test collision\r\n        if(!this.IsIgnoringCollision) {\r\n\r\n            //if fish hits the edge, flip direction\r\n            const hit = this.testStageBounds({x:0.5, y:0.5});\r\n            switch(hit) {\r\n                case Entity.HIT.Right:\r\n                    this._direction.x *= -1;\r\n                    this._sprite.scaleX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X -= 5 - this.Bounds.Width;\r\n                    break;\r\n                case Entity.HIT.Left:\r\n                    this._direction.x *= -1;\r\n                    this._sprite.scaleX *= -1;\r\n                    this.startIgnoreCollision();\r\n                    this.X += 5 - this.Bounds.Width;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    enable() {\r\n\r\n    }\r\n\r\n    disable() {\r\n\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get ANIMATION() {\r\n        return Object.freeze({\r\n            \"Idle\" : \"pufferIdle\",\r\n            \"Angry\" : \"pufferAngry\",\r\n            \"Recover\" : \"pufferRecover\"\r\n        });\r\n    }\r\n    public get Speed() { return this._speed; }\r\n    public set Speed(value:number) { this._speed = value; }\r\n}","import { LoadManager } from \"../../managers/LoadManager\";\r\nimport { Special } from \"./Special\";\r\nimport { Game } from \"../../Game\";\r\n\r\nexport class Owen extends Special {\r\n\r\n    constructor(game:Game) {\r\n        super(game, LoadManager.Spritesheets.Specials_Spritesheet);\r\n        this._sprite.gotoAndPlay(Owen.SPEC_ANIMATION.Idle);\r\n    }\r\n\r\n\r\n    public static get SPEC_ANIMATION() {\r\n        return Object.freeze({\r\n            \"Idle\" : \"owenIdle\"\r\n        });\r\n    }\r\n\r\n}","import { LoadManager } from \"../../managers/LoadManager\";\r\nimport { Special } from \"./Special\";\r\nimport { Game } from \"../../Game\";\r\n\r\nexport class Persephone extends Special {\r\n\r\n    constructor(game:Game) {\r\n        super(game, LoadManager.Spritesheets.Specials_Spritesheet);\r\n        this._sprite.gotoAndPlay(Persephone.SPEC_ANIMATION.Idle);\r\n    }\r\n\r\n\r\n    public static get SPEC_ANIMATION() {\r\n        return Object.freeze({\r\n            \"Idle\" : \"persIdle\"\r\n        });\r\n    }\r\n\r\n}","import { LoadManager } from \"../../managers/LoadManager\";\r\nimport { Special } from \"./Special\";\r\nimport { Game } from \"../../Game\";\r\n\r\nexport class Riley extends Special {\r\n\r\n    constructor(game:Game) {\r\n        super(game, LoadManager.Spritesheets.Specials_Spritesheet);\r\n        this._sprite.gotoAndPlay(Riley.SPEC_ANIMATION.Idle);\r\n    }\r\n\r\n\r\n    public static get SPEC_ANIMATION() {\r\n        return Object.freeze({\r\n            \"Idle\" : \"rileyIdle\"\r\n        });\r\n    }\r\n\r\n}","import { Fish } from \"../Fish\";\r\nimport { Game } from \"../../Game\";\r\n\r\nexport abstract class Special extends Fish {\r\n    private _isOnMainPage:boolean;\r\n    private _desiredX:number;\r\n    private _desiredY:number;\r\n    private _attnSpanDuration:number; //how long before fish wants to do something else\r\n\r\n    constructor(game:Game, spritesheet:createjs.SpriteSheet) {\r\n        super(game, spritesheet);\r\n        this._isOnMainPage = false;\r\n\r\n        this._resetAttentionSpan();\r\n    }\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public setMainPage(isOnMainPage) {\r\n        this._isOnMainPage = isOnMainPage;\r\n        //randomly place on the page\r\n        this.X = Math.floor(Math.random() * (576 - this.Sprite.getBounds().width));\r\n        this.Y = Math.floor(Math.random() * (1024 - this.Sprite.getBounds().height));\r\n        // this.X = Math.floor(Math.random() * (window.innerWidth - this.Sprite.getBounds().width));\r\n        // this.Y = Math.floor(Math.random() * (window.innerHeight - this.Sprite.getBounds().height));\r\n\r\n        //set reg to center\r\n        this.Sprite.regX = this.Sprite.getBounds().width / 2;\r\n    }\r\n\r\n    private _resetAttentionSpan() {\r\n        this._attnSpanDuration = Math.random() * 100 + 100;\r\n        this._desiredX = Math.floor(Math.random() * (576 - this.Sprite.getBounds().width));\r\n        this._desiredY = Math.floor(Math.random() * (1024 - this.Sprite.getBounds().height));\r\n        // this._desiredX = Math.floor(Math.random() * (window.innerWidth - this.Sprite.getBounds().width));\r\n        // this._desiredY = Math.floor(Math.random() * (window.innerHeight - this.Sprite.getBounds().height));\r\n\r\n        //do a flip?\r\n        if(this.DirectionX > 0 && this._desiredX < this.X)  this.DirectionX *= -1;\r\n        if(this.DirectionX < 0 && this._desiredX > this.X)  this.DirectionX *= -1;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /**Extend update for main menu logic. */\r\n    public update(gameTime:number) {\r\n\r\n        //listen for main page logic\r\n        if(this._isOnMainPage) {\r\n            //move to random y pos every once in a while\r\n            if(this._attnSpanDuration <= 0) this._resetAttentionSpan();\r\n            else this._attnSpanDuration--;\r\n\r\n            //float toward X\r\n            if(Math.abs(this.X - this._desiredX) > 60) {\r\n                const isNeg = this.X > this._desiredX;\r\n                this.X += (isNeg) ? -this.Speed : this.Speed;\r\n            }\r\n            //float toward y\r\n            if(Math.abs(this.Y - this._desiredY) > 30) {\r\n                const isNeg = this.Y > this._desiredY;\r\n                this.Y += (isNeg) ? -this.Speed : this.Speed;\r\n            }\r\n        }\r\n        else super.update(gameTime);\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n\r\n\r\n\r\n\r\n}","import { Game } from \"./Game\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    const game = new Game(document.getElementById(\"game-canvas\") as HTMLCanvasElement);\r\n});","import { Screen } from \"../screens/Screen\";\r\n\r\nexport interface WorldsData {\r\n    worlds:LevelData[];\r\n}\r\n\r\nexport interface LevelData {\r\n    name:string;\r\n    tutorials?:string[];\r\n    background?:string;\r\n    music?:string;\r\n    data:any[];\r\n    duration?:number;\r\n    showScore?:boolean;\r\n    showRemainingFish?:boolean;\r\n    special?:boolean;\r\n    unlocks?:string; // name of unlock fish\r\n}\r\n\r\nexport class DataManager {\r\n    private static _worldsData:WorldsData;\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Loads in the worlds data! */\r\n    public static loadWorldsData(fileLocation:string) {\r\n        return new Promise<WorldsData>(async(res, rej) => {\r\n            await fetch(fileLocation)\r\n                .then(blob => blob.json())\r\n                .then(json => {\r\n                    this._worldsData = json;\r\n                    res(this._worldsData);\r\n                })\r\n                .catch(err => {\r\n                    rej(\"Could not load world data! \" + err);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**Returns the level data received by the given index. */\r\n    public static getLevelDataByIndex(index:number) {\r\n        //flatten level data, and get data\r\n        let flatten = [].concat.apply([], DataManager._worldsData.worlds);\r\n        if(index < flatten.length)\r\n            return flatten[index];\r\n        return null;\r\n    }\r\n\r\n    /**Inverse of getLevelDataByIndex.\r\n     * @see getLevelDataByIndex . */\r\n    public static getLevelIndexByData(levelData:LevelData) {\r\n        //flatten level data, and get data\r\n        let flatten = [].concat.apply([], DataManager._worldsData.worlds);\r\n        return flatten.indexOf(levelData);\r\n    }\r\n\r\n    /**Gets the next level data or returns null if there is no next level. */\r\n    public static getNextLevel(currentLevel:number | LevelData) {\r\n        let index = currentLevel as number;\r\n        if(currentLevel as LevelData != null) index = this.getLevelIndexByData(currentLevel as LevelData);\r\n\r\n        //get the next index\r\n        return this.getLevelDataByIndex(index + 1);\r\n    }\r\n\r\n    /**Gets the world and level index of the given level. */\r\n    public static getIndexData(levelData:LevelData) {\r\n        //test each world and look for us\r\n        for(let i = 0; i < DataManager._worldsData.worlds.length; i++) {\r\n            const world = DataManager._worldsData.worlds[i];\r\n            for(let n = 0; n < (world as any).length; n++) {\r\n                if(world[n] == levelData) return { world:i, level:n };\r\n            }            \r\n        }\r\n\r\n        return { world:-1, level:-1 };\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get WorldsData():WorldsData { return DataManager._worldsData; }\r\n    public static get FlatWorldData() { return [].concat.apply([], DataManager._worldsData.worlds); }\r\n}","export class LoadManager {\r\n    public static get ASSETS_LOADED():string { return \"onAssetsLoaded\"; }\r\n    public static get ASSETS_FAILED():string { return \"onAssetsFailed\"; }\r\n    public static get ASSETS_UPDATED():string { return \"onAssetsUpdated\"; }\r\n\r\n    public static Spritesheets:{ [key:string]:createjs.SpriteSheet } = {};\r\n    public static Images:{ [key:string]:createjs.Bitmap } = {};\r\n    public static Sounds:{ [key:string]:string } = {};\r\n\r\n    private static _stage:createjs.StageGL;\r\n    private static _preloadManager:createjs.LoadQueue;\r\n    private static _sheetsTotal:number = 0;\r\n    private static _sheetsLoaded:number = 0;\r\n\r\n    private static _percentage:number = 0;\r\n    private static _totalAssetsLoaded:number = 0;\r\n    private static _totalAssets:number = 0;\r\n\r\n    private static AssetsLoadedEvent:any = new (createjs as any).Event(LoadManager.ASSETS_LOADED, false, true);\r\n    private static AssetsFailedEvent:any = new (createjs as any).Event(LoadManager.ASSETS_FAILED, false, true);\r\n    private static AssetsUpdatedEvent:any = new (createjs as any).Event(LoadManager.ASSETS_UPDATED, false, true);\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public static reset() {\r\n        LoadManager._sheetsTotal = 0;\r\n        LoadManager._sheetsLoaded = 0;\r\n\r\n        LoadManager._percentage = 0;\r\n        LoadManager._totalAssetsLoaded = 0;\r\n        LoadManager._totalAssets = 0;\r\n    }\r\n\r\n    public static loadAssets(src:string, stage:createjs.StageGL) {\r\n        LoadManager.reset();\r\n        LoadManager._stage = stage;\r\n\r\n        return new Promise(async(res, rej) => {\r\n            LoadManager._preloadManager = new createjs.LoadQueue();\r\n\r\n            //setup sound controllers\r\n            createjs.Sound.registerPlugins([createjs.WebAudioPlugin, createjs.HTMLAudioPlugin, createjs.FlashAudioPlugin]);\r\n            createjs.Sound.alternateExtensions = [\"mp3\",\"wav\"];\r\n            LoadManager._preloadManager.installPlugin(createjs.Sound);\r\n\r\n            //setup listeners\r\n            (LoadManager._preloadManager as any).on(\"fileload\", LoadManager._onLoaded, LoadManager);\r\n            (LoadManager._preloadManager as any).on(\"complete\", LoadManager._onComplete, LoadManager);\r\n            (LoadManager._preloadManager as any).on(\"error\", LoadManager._onError, LoadManager);\r\n\r\n            //get the manifest\r\n            fetch(src)\r\n                .then(blob => blob.json())\r\n                .then(data => {\r\n                    //load the manifest\r\n                    LoadManager._preloadManager.setMaxConnections(1);\r\n                    LoadManager._preloadManager.loadManifest(data);\r\n\r\n                    (LoadManager._stage as any).addEventListener(LoadManager.ASSETS_LOADED, () => {\r\n                        res();\r\n                    });\r\n                })\r\n                .catch(() => {\r\n                    LoadManager.emitErrorEvent();\r\n                    rej(\"Could not load assets!\");\r\n                });\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    public static emitLoadedEvent() {\r\n        if(LoadManager._stage != null) (LoadManager._stage as any).dispatchEvent(LoadManager.AssetsLoadedEvent);\r\n    }\r\n    public static emitErrorEvent() {\r\n        if(LoadManager._stage != null) (LoadManager._stage as any).dispatchEvent(LoadManager.AssetsFailedEvent);\r\n    }\r\n    public static emitUpdatedEvent() {\r\n        LoadManager._percentage = parseFloat((LoadManager._preloadManager.getItems(true).length / LoadManager._preloadManager.getItems(false).length).toFixed(2));\r\n        if(LoadManager._stage != null) (LoadManager._stage as any).dispatchEvent(LoadManager.AssetsUpdatedEvent);\r\n    }\r\n\r\n\r\n    private static _loadedSheet(name:string, sheet:createjs.SpriteSheet) {\r\n        LoadManager.Spritesheets[name] = sheet;\r\n\r\n        LoadManager._sheetsLoaded++;\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    private static _onLoaded(e) {\r\n\r\n        switch(e.item.type) {\r\n            case (createjs as any).Types.JAVASCRIPT: {\r\n                //load the spritesheet\r\n                LoadManager._sheetsTotal++;\r\n                \r\n                const sheet = (window[e.item.id] as any)._SpriteSheet;\r\n\r\n                // listen for spritesheet to load\r\n                if(!sheet.complete) {\r\n                    sheet.on(\"complete\", (ev:any) => {\r\n                        LoadManager._loadedSheet(e.item.id, sheet);\r\n                        ev.remove();\r\n                    })\r\n                }\r\n                else LoadManager._loadedSheet(e.item.id, sheet);\r\n                break\r\n            }\r\n            case (createjs as any).Types.IMAGE: {\r\n                //build the bitmap\r\n                LoadManager.Images[e.item.id] = new createjs.Bitmap(e.item.src);\r\n            }\r\n            case (createjs as any).Types.SOUND: {\r\n                //build the sound\r\n                LoadManager.Sounds[e.item.id] = e.item.src;\r\n            }\r\n        }\r\n\r\n\r\n\r\n        //update event\r\n        LoadManager.emitUpdatedEvent();\r\n    }\r\n\r\n    private static _onComplete(e) {\r\n        //remove all preLoadManager events\r\n        (LoadManager._preloadManager as any).removeAllEventListeners();\r\n        \r\n        //make sure all spritesheets are loaded\r\n        if(LoadManager._sheetsLoaded < LoadManager._sheetsTotal) {\r\n            const loadInterval = setInterval((ev:any) => {\r\n                //see if they are loaded\r\n                if(LoadManager._sheetsLoaded >= LoadManager._sheetsTotal) {\r\n                    e.remove();\r\n                    // window.clearInterval(loadInterval);\r\n                    LoadManager.emitLoadedEvent();\r\n                }\r\n            }, 100)\r\n        }\r\n        else LoadManager.emitLoadedEvent();\r\n    }\r\n\r\n    private static _onError(e) {\r\n        LoadManager.emitErrorEvent();\r\n    }\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get Percentage():number { return LoadManager._percentage; }\r\n    \r\n\r\n\r\n\r\n}","import { WorldsData, LevelData } from \"./DataManager\";\r\nimport { Logging } from \"../Functions\";\r\n\r\nexport interface IProgressLevel {\r\n    unlocked: boolean;\r\n    completed: boolean;\r\n}\r\n\r\nexport interface IProgressSpecial {\r\n    collected: boolean;\r\n    unlocks: string;\r\n}\r\n\r\n/**Handles progress made while playing the game. */\r\nexport class ProgressManager {\r\n\r\n    private static _worldsData:WorldsData;\r\n    private static _levelsProgress:IProgressLevel[];\r\n    private static _specialsProgress:IProgressSpecial[];\r\n    \r\n    /*--------------- METHODS ------------------------*/\r\n    /**Loads in the worlds data so it can parse the progress data. */\r\n    public static loadWorldsData(worldsData:WorldsData) {\r\n        ProgressManager._worldsData = worldsData;\r\n\r\n        ProgressManager._levelsProgress = worldsData.worlds.map(world => {\r\n            return [].concat.apply([], world as any)\r\n                .map(level => {\r\n                    return { unlocked: false, completed: false };\r\n                });\r\n        });\r\n        ProgressManager._specialsProgress = worldsData.worlds.map(world => {\r\n            return [].concat.apply([], world as any)\r\n                .map(level => {\r\n                    if(level.special) return { collected: false, unlocks:level.unlocks };\r\n                    return null;\r\n                });\r\n        });\r\n\r\n        //unlock level 1\r\n        ProgressManager._levelsProgress[0][0].unlocked = true;\r\n\r\n        //read cookie data\r\n        ProgressManager._readCookieData();\r\n\r\n        //for TESTING\r\n        // ProgressManager.unlockAll();\r\n    }\r\n\r\n    /**Mark level as complete. Also saves data. */\r\n    public static completeLevel(worldIndex:number, levelIndex:number) {\r\n        //set to complete!\r\n        const level = ProgressManager._levelsProgress[worldIndex][levelIndex];\r\n        if(level == null) return;\r\n        level.completed = true;\r\n\r\n        //if there is a next level, unlock it\r\n        //test for next in this world\r\n        const nextLevel = ProgressManager._levelsProgress[worldIndex][levelIndex+1];\r\n        if(nextLevel != null) {\r\n            nextLevel.unlocked = true;\r\n        }\r\n        else {\r\n            if(worldIndex+1 < ProgressManager._levelsProgress.length) {\r\n                const nextWorld = ProgressManager._levelsProgress[worldIndex+1][0];\r\n                if(nextWorld != null) nextWorld.unlocked = true;\r\n            }\r\n        }\r\n\r\n        //save cookie data\r\n        ProgressManager.saveCookieData();\r\n    }\r\n\r\n    /**Well look at you, you dirty little cheater. :) */\r\n    public static unlockAll() {\r\n\r\n        Logging.message(\"You're a dirty little cheater!\");\r\n\r\n        ProgressManager._levelsProgress = ProgressManager._worldsData.worlds.map(world => {\r\n            return [].concat.apply([], world as any)\r\n                .map(level => {\r\n                    return { unlocked: true, completed: false };\r\n                });\r\n        });\r\n        ProgressManager._specialsProgress = ProgressManager._worldsData.worlds.map(world => {\r\n            return [].concat.apply([], world as any)\r\n                .map(level => {\r\n                    if(level.special) return { collected: true, unlocks:level.unlocks };\r\n                    return null;\r\n                });\r\n        });\r\n\r\n    }\r\n\r\n    /**Mark special as collected.  Also saves data. */\r\n    public static collectSpecial(worldIndex:number, levelIndex:number) {\r\n        //set to collected!\r\n        const level = ProgressManager._specialsProgress[worldIndex][levelIndex];\r\n        if(level == null) return;\r\n        level.collected = true;\r\n\r\n        //save cookie data\r\n        ProgressManager.saveCookieData();\r\n    }\r\n\r\n    /**Saves the progress data to a cookie or two. */\r\n    public static saveCookieData() {\r\n\r\n        document.cookie = `progData=${JSON.stringify(ProgressManager.ProgressData)};path=/`;\r\n    }\r\n\r\n    /**Reads cookie data and fills in progress data. */\r\n    private static _readCookieData() {\r\n        //look for cookie\r\n        const cookie = ProgressManager._getCookie(\"progData\");\r\n        if(cookie != null && cookie != '') {\r\n            //read the cookie\r\n            const data = JSON.parse(cookie);\r\n            ProgressManager._levelsProgress = data.levels;\r\n            ProgressManager._specialsProgress = data.specials;\r\n        }\r\n    }\r\n\r\n\r\n    /*https://www.w3schools.com/js/js_cookies.asp*/\r\n    private static _getCookie(cname) {\r\n        var name = cname + \"=\";\r\n        var decodedCookie = decodeURIComponent(document.cookie);\r\n        var ca = decodedCookie.split(';');\r\n        for(var i = 0; i <ca.length; i++) {\r\n            var c = ca[i];\r\n            while (c.charAt(0) == ' ') {\r\n            c = c.substring(1);\r\n            }\r\n            if (c.indexOf(name) == 0) {\r\n            return c.substring(name.length, c.length);\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get ProgressData() {\r\n        return {\r\n            levels : ProgressManager._levelsProgress,\r\n            specials : ProgressManager._specialsProgress\r\n        };\r\n    }\r\n}","import { Screen } from \"../screens/Screen\";\r\n\r\nexport class ScreenManager {\r\n    private static _screensLookup:{ [key:string]:Screen } = { };\r\n    private static _currentScreen:Screen = null;\r\n\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Registers a screen into the Screen Manager.  Uses a key to associate it. */\r\n    public static registerScreen(key:string, screen:Screen):void {\r\n        //if we don't have this screen, add it\r\n        if(ScreenManager._screensLookup[key] == null)\r\n            ScreenManager._screensLookup[key] = screen;\r\n    }\r\n\r\n    /**Unregisters a screen from the Screen Manager. */\r\n    public static unregisterScreen(key:string):boolean {\r\n        if(ScreenManager._screensLookup[key] == null) return false;\r\n\r\n        ScreenManager._screensLookup[key] = null;\r\n        delete ScreenManager._screensLookup[key];\r\n        return true;\r\n    }\r\n\r\n    /**Sets the current screen.  Can be done with the screen itself or an associative key. */\r\n    public static setCurrentScreen(screen:string | Screen, stage:createjs.StageGL):Promise<void> {\r\n        let tempScreen = null;\r\n        if(screen instanceof Screen) tempScreen = screen;\r\n        else tempScreen = ScreenManager._screensLookup[screen];\r\n\r\n        //if we did not find a screen, do not follow through\r\n        if(tempScreen == null) return Promise.resolve();\r\n\r\n        let promises = [];\r\n        //if we have a previous screen, wait for it to fade out\r\n        if(ScreenManager._currentScreen != null)\r\n        promises.push(\r\n            new Promise(async(res) => {\r\n                //fade out\r\n                createjs.Tween\r\n                    .get(ScreenManager._currentScreen.Container)\r\n                    .to({ alpha:0 }, 500, createjs.Ease.linear)\r\n                    .call(() => {\r\n                        ScreenManager._currentScreen.destroy();\r\n                        ScreenManager._currentScreen.disable();\r\n                        res();\r\n                    });\r\n            })\r\n        );\r\n\r\n\r\n        //wait for certain actions to finish\r\n        return new Promise(async(res) => {\r\n            //wait for promises to finish\r\n            await Promise.all(promises);\r\n\r\n            //now add in the new one\r\n            ScreenManager._currentScreen = tempScreen;\r\n            ScreenManager._currentScreen.create(stage);\r\n            ScreenManager._currentScreen.Container.alpha = 0;\r\n            ScreenManager._currentScreen.disable(); //disable until ready\r\n            //fade in\r\n            createjs.Tween\r\n                .get(ScreenManager._currentScreen.Container)\r\n                .to({ alpha:1 }, 1200, createjs.Ease.linear)\r\n                .call(() => {\r\n                    ScreenManager._currentScreen.enable();\r\n                    res();\r\n                });\r\n\r\n        });\r\n    }\r\n\r\n    public static getScreenByKey(key:string):Screen {\r\n        return ScreenManager._screensLookup[key];\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get AllScreens() { return ScreenManager._screensLookup; }\r\n    public static get CurrentScreen() { return ScreenManager._currentScreen; }\r\n}","export class SoundManager {\r\n    private static _ambience:{ [key:string]:createjs.AbstractSoundInstance } = {};\r\n    private static _sfx:createjs.AbstractSoundInstance[] = [];\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Plays an ambience track. */\r\n    public static playAmbience(key:string, src:string, loop:boolean=true) {\r\n        //make sure this key is not in use\r\n        if(SoundManager._ambience[key] != null) {\r\n            SoundManager._ambience[key].stop();\r\n            console.warn(\"This ambience key is already in use! Overwriting!\");\r\n        }\r\n\r\n        //add the ambience as a sound js object\r\n        const sound = createjs.Sound.play(src, { loop:(loop) ? -1 : 1} );\r\n        SoundManager._ambience[key] = sound;\r\n        sound.position = 0;\r\n        return sound;\r\n    }\r\n    /**Plays an ambience track with fade in. */\r\n    public static playAmbienceWithFadeIn(key:string, src:string, loop:boolean=true, prefVolume:number=1, duration:number=100, ) {\r\n        const sound = SoundManager.playAmbience(key, src, loop);\r\n\r\n        //start fade in \r\n        if(sound != null) {\r\n            SoundManager.fadeInAmbience(key, prefVolume, duration);\r\n        }\r\n\r\n    }\r\n    /**Removes an ambience track. */\r\n    public static removeAmbience(key:string) {\r\n        //look for ambience\r\n        let sound = SoundManager._ambience[key];\r\n        if(sound == null) {\r\n            console.warn(\"Could not find ambience with key of \" + key);\r\n            return;\r\n        }\r\n\r\n        sound.stop();\r\n        sound = null;\r\n        //splice it out\r\n        SoundManager._ambience[key] = null;\r\n    }\r\n\r\n    /**Plays a sound effect. */\r\n    public static playSFX(src:string, volume:number=1) {\r\n        const sound = createjs.Sound.play(src);\r\n        sound.volume = volume;\r\n        SoundManager._sfx.push(sound);\r\n\r\n        //listen for the sound to finish -- remove from array\r\n        sound.on(\"complete\", () => {\r\n            SoundManager._sfx.splice(SoundManager._sfx.indexOf(sound), 1);\r\n        });\r\n    }\r\n\r\n    /**Stops all queued sounds. */\r\n    public static stopAllSound() {\r\n        //ambience\r\n        Object.keys(SoundManager._ambience).forEach(key => {\r\n            SoundManager._ambience[key].stop();\r\n        });\r\n\r\n        //sfx\r\n        SoundManager._sfx.forEach(sound => sound.stop());\r\n    }\r\n\r\n    /**Plays any queued sounds. */\r\n    public static playAllSound() {\r\n         //ambience\r\n        Object.keys(SoundManager._ambience).forEach(key => {\r\n            const sound = SoundManager._ambience[key];\r\n            if(sound != null)\r\n                sound.play();\r\n        });\r\n\r\n        //sfx\r\n        SoundManager._sfx.forEach(sound => {\r\n            if(sound != null)\r\n                sound.play()\r\n        });\r\n    }\r\n\r\n\r\n    /**Fades in an ambience track. */\r\n    public static fadeInAmbience(key:string, prefVolume:number=1, duration:number=100) {\r\n        //find the ambience to fade\r\n        let sound = SoundManager._ambience[key];\r\n        if(sound == null) return;\r\n\r\n        //fade volume from 0\r\n        sound.volume = 0;\r\n        sound.play();\r\n        const step = prefVolume / duration;\r\n\r\n        const fadeEvent = () => {\r\n            //clear the interval if done\r\n            if(sound.volume >= prefVolume) {\r\n                window.clearInterval(fadeInterval);\r\n                return;\r\n            }\r\n\r\n            sound.volume += step;\r\n        };\r\n        const fadeInterval = window.setInterval(fadeEvent, 10);\r\n        \r\n    }\r\n    /**Fades out an ambience track. */\r\n    public static fadeOutAmbience(key:string, duration:number=100, killOnFinish:boolean=true) {\r\n        //find the ambience to fade\r\n        let sound = SoundManager._ambience[key];\r\n        if(sound == null) return;\r\n        const prefVolume = sound.volume;\r\n\r\n        //fade volume to 0\r\n        const step = prefVolume / duration;\r\n\r\n        const fadeEvent = () => {\r\n            //clear the interval if done\r\n            if(sound.volume <= 0) {\r\n                window.clearInterval(fadeInterval);\r\n                //turn off sound\r\n                sound.stop();\r\n                //set volume back to preferred\r\n                sound.volume = prefVolume;\r\n                if(killOnFinish) sound = null;\r\n                return;\r\n            }\r\n\r\n            sound.volume -= step;\r\n        };\r\n        const fadeInterval = window.setInterval(fadeEvent, 10);\r\n        \r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Container } from \"../ui/display/Container\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { Game } from \"../Game\";\r\nimport { DataManager } from \"../managers/DataManager\";\r\nimport { IntermediaryScreen } from \"./IntermediaryScreen\";\r\nimport { Logging } from \"../Functions\";\r\nimport { SoundManager } from \"../managers/SoundManager\";\r\n\r\nexport class EndScreen extends Screen {\r\n    private _game:Game;\r\n    private _buttonsContainer:Container;\r\n\r\n    private _completeSpr:createjs.DisplayObject;\r\n    private _failSpr:createjs.DisplayObject;\r\n\r\n    //flags\r\n    private _isFail:boolean;\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n\r\n        this._game = game;\r\n        this._isFail = false;\r\n\r\n        //layout stuff\r\n        const bg = new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"bg\");\r\n        this._container.addChild(bg);\r\n\r\n        this._buttonsContainer = new Container(Container.LAYOUT_OPTIONS.ColumnLeftBottom);\r\n        this._buttonsContainer.addMany({\r\n            btnTryAgain : new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"btnTryAgain\"),\r\n            btnNextLevel : new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"btnNextLevel\"),\r\n            btnMainMenu : new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"btnMainMenu\"),\r\n        });\r\n        this._container.addChild(this._buttonsContainer.Container);\r\n\r\n        //--conditional text\r\n        this._completeSpr = new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"complete\");\r\n        this._failSpr = new createjs.Sprite(LoadManager.Spritesheets.Catfish_End, \"failure\");\r\n        this._completeSpr.x = this._game.StageWidth / 2 - (this._completeSpr.getBounds().width / 2);\r\n        this._completeSpr.y = 220;\r\n        this._failSpr.x = this._game.StageWidth / 2 - (this._failSpr.getBounds().width / 2);\r\n        this._failSpr.y = this._game.StageHeight * 0.45;\r\n        this._container.addChild(this._completeSpr);\r\n        this._container.addChild(this._failSpr);\r\n\r\n        \r\n        \r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    create(stage:createjs.StageGL):Screen {\r\n        \r\n        \r\n        //play the sound\r\n        // SoundManager.playSFX(LoadManager.Sounds.Wave, 0.6);\r\n        \r\n\r\n        return super.create(stage);\r\n    }\r\n\r\n\r\n    enable() {\r\n        super.enable();\r\n\r\n        //try again\r\n        (this._buttonsContainer.Sprites[\"btnTryAgain\"] as any).on(\"click\", () => {\r\n            //play the sound\r\n            SoundManager.playSFX(LoadManager.Sounds.BTNSelect);\r\n            //restart this level\r\n            this._game.changeCurrentLevel(this._game.CurrentLevelData);\r\n            ScreenManager.setCurrentScreen(\"game\", this._game.Stage);\r\n        }, this, true);\r\n        //next level\r\n        (this._buttonsContainer.Sprites[\"btnNextLevel\"] as any).on(\"click\", () => {\r\n            //play the sound\r\n            SoundManager.playSFX(LoadManager.Sounds.BTNSelect);\r\n            //find the next level\r\n            const nextLevel = DataManager.getNextLevel(this._game.CurrentLevelData);\r\n            //if there is no next level, go back to menu\r\n            if(nextLevel == null) {\r\n                //go to main menu\r\n                ScreenManager.setCurrentScreen(\"menu\", this._game.Stage);\r\n                return;\r\n            }\r\n\r\n            this._game.changeCurrentLevel(nextLevel);\r\n            //go to intermediary screen\r\n            const intermediary = ScreenManager.getScreenByKey(\"intermediary\") as IntermediaryScreen;\r\n            new Promise(async(res) => {\r\n                intermediary.Text = nextLevel.name;\r\n                await ScreenManager.setCurrentScreen(intermediary, this._game.Stage);\r\n                intermediary.queueNextScreen(\"game\", 1000);\r\n\r\n                res();\r\n            });\r\n        }, this, true);\r\n        //main menu\r\n        (this._buttonsContainer.Sprites[\"btnMainMenu\"] as any).on(\"click\", () => {\r\n            //play the sound\r\n            SoundManager.playSFX(LoadManager.Sounds.BTNSelect);\r\n            //go to main menu\r\n            ScreenManager.setCurrentScreen(\"menu\", this._game.Stage);\r\n        }, this, true);\r\n    }\r\n\r\n    disable() {\r\n        //toggle fail/success\r\n        this._completeSpr.visible = !this._isFail;\r\n        this._failSpr.visible = this._isFail;\r\n\r\n        Object.keys(this._buttonsContainer.Sprites).forEach(key => this._buttonsContainer.Sprites[key].removeAllEventListeners());\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n}","import { TutorialCreator } from \"./TutorialCreator\";\r\nimport { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { ObjectPool } from \"../ObjectPool\";\r\nimport { Fish } from \"../entities/Fish\";\r\nimport { Persephone } from \"../entities/specials/Persephone\";\r\nimport { Owen } from \"../entities/specials/Owen\";\r\nimport { Riley } from \"../entities/specials/Riley\";\r\nimport { Puffer } from \"../entities/Puffer\";\r\nimport { Cat } from \"../entities/Cat\";\r\nimport { Game } from \"../Game\";\r\nimport { Container } from \"../ui/display/Container\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { Logging } from \"../Functions\";\r\nimport { LevelData, DataManager } from \"../managers/DataManager\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { GameScore } from \"../ui/partials/GameScore\";\r\nimport { ProgressManager } from \"../managers/ProgressManager\";\r\nimport { SoundManager } from \"../managers/SoundManager\";\r\n\r\nexport class GameScreen extends Screen {\r\n    private _game:Game;\r\n\r\n    //create containers\r\n    private _staticContainer:Container;\r\n    private _fishContainer:createjs.Container;\r\n    private _pufferContainer:createjs.Container;\r\n\r\n    private _winContainer:createjs.Container;\r\n    private _winBanner:createjs.Shape;\r\n    private _winText:createjs.BitmapText;\r\n\r\n    private _gameScore:GameScore;\r\n    private _tutorialCreator:TutorialCreator;\r\n\r\n    private _cat:Cat;\r\n    private _fishes:Fish[];\r\n    private _puffers:Puffer[];\r\n\r\n    private _remainingFish:number;\r\n\r\n    private _pauseLogic:Boolean;\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n        this._game = game;\r\n        this._fishes = [];\r\n        this._puffers = [];\r\n        this._remainingFish = -1;\r\n\r\n        //create object pool\r\n        ObjectPool.createPoolObject(new Cat(this._game, this), POOL.CAT)\r\n        for(let i = 0; i < 120; i++) {\r\n            ObjectPool.createPoolObject(new Fish(this._game), POOL.FISH);\r\n        }\r\n        for(let i = 0; i < 30; i++) {\r\n            ObjectPool.createPoolObject(new Puffer(this._game), POOL.PUFFERFISH)\r\n        }\r\n        ObjectPool.createPoolObject(new Persephone(this._game), POOL.PERSEPHONE);\r\n        ObjectPool.createPoolObject(new Owen(this._game), POOL.OWEN);\r\n        ObjectPool.createPoolObject(new Riley(this._game), POOL.RILEY);\r\n\r\n\r\n        //pool out static kitty\r\n        this._cat = (ObjectPool.checkout(POOL.CAT) as Cat);\r\n        this._cat.X = 290;\r\n        this._cat.Y = 70;\r\n\r\n        //create containers\r\n        this._staticContainer = new Container();\r\n        this._staticContainer.addMany({\r\n            bg : new createjs.Sprite(LoadManager.Spritesheets.BG_Spritesheet, \"bg1\")\r\n        });\r\n\r\n        this._fishContainer = new createjs.Container();\r\n        this._pufferContainer = new createjs.Container();\r\n\r\n        this._winContainer = new createjs.Container();\r\n\r\n        this._gameScore = new GameScore(this._game);\r\n        this._tutorialCreator = new TutorialCreator(this._game, this);\r\n\r\n        this._pauseLogic = false;\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n\r\n    /**Attempts to grab a fish.  Returns any fish that are touching the global position. */\r\n    public tryToGrabFishes(x:number, y:number):Fish[] {\r\n        let fishes = [];\r\n\r\n\r\n        const hitObjects = this._container.getObjectsUnderPoint(x, y, 0);\r\n        for(let i = 0; i < this._fishes.length; i++) {\r\n            const fish = this._fishes[i];\r\n            if(hitObjects.indexOf(fish.Sprite) != -1) {\r\n                fishes.push(fish);\r\n            }\r\n        }\r\n\r\n        return fishes;\r\n\r\n    }\r\n\r\n    /**Tests to see if we hit a puffer. */\r\n    public hasHitAPuffer(x:number, y:number):Boolean {\r\n\r\n        let hasHitPuffer = false;\r\n        const hitObjects = this._container.getObjectsUnderPoint(x, y, 0);\r\n        for(let i = 0; i < this._puffers.length; i++) {\r\n            if(hitObjects.indexOf(this._puffers[i].Sprite) != -1) {\r\n                this._puffers[i].puff();\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public collectFish(fish:Fish) {\r\n\r\n        const killedFish = fish.destroy();\r\n\r\n        //decrement fish counter -- make sure we didn't make an error\r\n        if(killedFish != null) {\r\n            this._remainingFish--;\r\n            this._fishes.splice(this._fishes.indexOf(killedFish as Fish), 1);\r\n\r\n            //if all our fish are gone, end the game!\r\n            if(this._remainingFish <= 0) {\r\n                //call win\r\n                this.win();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    public win() {\r\n        //disable controls\r\n        this.disable();\r\n        //set the score\r\n        this._game.changeCurrentScore({\r\n            totalFish: this._fishes.length,\r\n            combos: 10,\r\n            time: 100\r\n        });\r\n\r\n        SoundManager.playSFX(LoadManager.Sounds.Win);\r\n        \r\n        //show win banner\r\n        createjs.Tween.get(this._winContainer)\r\n            .to({y:this._game.StageHeight / 2 - 25}, 600, createjs.Ease.elasticOut)\r\n            .wait(2000)\r\n            .call(() => {\r\n                //transition to end screen\r\n                ScreenManager.setCurrentScreen(\"end\", this._game.Stage);\r\n                SoundManager.fadeOutAmbience(\"ambience\", 200);\r\n\r\n                //save this data\r\n                const levelIndices = DataManager.getIndexData(this._game.CurrentLevelData);\r\n                //mark level as complete\r\n                ProgressManager.completeLevel(levelIndices.world, levelIndices.level);\r\n                //try to mark special as collected\r\n                ProgressManager.collectSpecial(levelIndices.world, levelIndices.level);\r\n\r\n                //reset game data\r\n                this.reset();\r\n            });\r\n    }\r\n\r\n    public pauseGameLogic() {\r\n        this._pauseLogic = true;\r\n    }\r\n\r\n    public unpauseGameLogic() {\r\n        this._pauseLogic = false;\r\n    }\r\n\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n        super.create(stage);\r\n        //add stuff\r\n        this._staticContainer.checkoutSprites();\r\n        this._staticContainer.Sprites.bg.y = 0;\r\n        this._container.addChild(this._staticContainer.Container);\r\n\r\n        this._container.addChild(this._fishContainer);\r\n        this._container.addChild(this._pufferContainer);\r\n\r\n        //add conditional text\r\n        this._winBanner = new createjs.Shape();\r\n        this._winBanner.graphics.beginFill(\"black\");\r\n        this._winBanner.graphics.drawRect(0, 0, this._game.StageWidth, 50);\r\n        this._winBanner.cache(0, 0, this._game.StageWidth, 50);\r\n        this._winContainer.addChild(this._winBanner);\r\n        this._winText = Sprites.generateBitmapText(\"Win!\", LoadManager.Spritesheets.TypographyWhite);\r\n        this._winContainer.addChild(this._winText);\r\n        this._winText.x = (this._game.StageWidth / 2) - (this._winText.getBounds().width / 2);\r\n\r\n        this._container.addChild(this._winContainer);\r\n        this._winContainer. y = this._game.StageHeight + 50;\r\n        this._winContainer.mouseEnabled = false;\r\n\r\n        \r\n        this._cat.create(this._container);\r\n\r\n\r\n        //add level data if it exists\r\n        // this.reset();\r\n        // this.destroy();\r\n        if(this._game.CurrentLevelData != null) {\r\n            //load in critters\r\n            for(let i = 0; i < this._game.CurrentLevelData.data.length; i++) {\r\n                const data = this._game.CurrentLevelData.data[i];\r\n                switch(data.id) {\r\n                    case POOL.PERSEPHONE:\r\n                    case POOL.OWEN:\r\n                    case POOL.RILEY:\r\n                    case POOL.FISH:\r\n                        const fish = (ObjectPool.checkout(data.id) as Fish);\r\n                        fish.create(this._fishContainer);\r\n                        if(data.speed != null) fish.Speed = data.speed; //set variables\r\n                        if(data.x != null) fish.X = data.x;\r\n                        if(data.y != null) fish.Y = data.y;\r\n                        fish.forceDirectionX((data.flip != null && data.flip) ? -1 : 1);\r\n                        fish.setNaturalY();\r\n                        this._fishes.push(fish);\r\n                        break;\r\n                    case POOL.PUFFERFISH:\r\n                        const puffer = (ObjectPool.checkout(POOL.PUFFERFISH) as Puffer);\r\n                        puffer.create(this._pufferContainer);\r\n                        if(data.speed != null) puffer.Speed = data.speed; //set variables\r\n                        if(data.x != null) puffer.X = data.x;\r\n                        if(data.y != null) puffer.Y = data.y;\r\n                        puffer.forceDirectionX((data.flip != null && data.flip) ? -1 : 1);\r\n                        this._puffers.push(puffer);\r\n                }      \r\n            }\r\n\r\n            //set fish total\r\n            this._remainingFish = this._fishes.length;\r\n        }\r\n        //get the level tutorials\r\n        if(this._game.CurrentLevelData.tutorials != null) {\r\n            this._tutorialCreator.queueTutorials(this._game.CurrentLevelData.tutorials);\r\n        }\r\n        //get the level background\r\n        if(this._game.CurrentLevelData.background != null) {\r\n            (this._staticContainer.Sprites[\"bg\"] as createjs.Sprite).gotoAndStop(this._game.CurrentLevelData.background);\r\n        }\r\n        else {\r\n            (this._staticContainer.Sprites[\"bg\"] as createjs.Sprite).gotoAndStop(\"bg1\");\r\n        }\r\n\r\n        //get the level music!\r\n        let musicKey = \"babylevels\";\r\n        if(this._game.CurrentLevelData.music) musicKey = this._game.CurrentLevelData.music;\r\n        SoundManager.playAmbienceWithFadeIn(\"ambience\", LoadManager.Sounds[musicKey], true, 0.4, 400);\r\n\r\n\r\n        //add the score\r\n        // this._gameScore.Container.y = this._game.StageHeight - 40;\r\n        // this._container.addChild(this._gameScore.Container);\r\n\r\n\r\n        //update the game HUD for this round\r\n        const levelData = this._game.CurrentLevelData;\r\n        const showScore = (levelData.showScore != null && !levelData.showScore) ? false : true;\r\n        const showTimer = (levelData.duration != null);\r\n        const showFishRemain = (levelData.showRemainingFish != null && !levelData.showRemainingFish) ? false : true;\r\n        this._gameScore.startHUD(showScore, showFishRemain, showTimer);\r\n\r\n        return null;\r\n    }\r\n\r\n    public destroy() {\r\n\r\n        this._cat.destroy();\r\n        this._fishes.forEach(f => {\r\n            f.destroy();\r\n        });\r\n        this._puffers.forEach(f => {\r\n            f.destroy();\r\n        });\r\n\r\n        ObjectPool.releaseAllObjects();\r\n\r\n        this.reset();\r\n\r\n        return super.destroy();\r\n    }\r\n\r\n    public update(gameTime:number) {\r\n        //if our logic is paused, do not do game loop\r\n        if(this._pauseLogic) return;\r\n\r\n        const normalizedTime = Math.min(1, gameTime) + 0.5;\r\n\r\n        //update entities\r\n        this._fishes.forEach(fish => {\r\n            fish.update(normalizedTime);\r\n        });\r\n        this._puffers.forEach(puffer => {\r\n            puffer.update(normalizedTime);\r\n        });\r\n\r\n        this._cat.update(normalizedTime);\r\n\r\n        //update the score\r\n        this._gameScore.update(gameTime);\r\n\r\n        super.update(gameTime);\r\n    }\r\n\r\n    public enable() {\r\n        (this._container as any).on(\"click\", this._cat.grab, this._cat);\r\n    }\r\n\r\n    public disable() {\r\n        (this._container as any).removeAllEventListeners();\r\n    }\r\n\r\n    public reset() {\r\n        this._cat.X = 290;\r\n        this._fishes.forEach(f => { ObjectPool.return(f); });\r\n        this._puffers.forEach(f => { ObjectPool.return(f); });\r\n\r\n        ObjectPool.releaseAllObjects();\r\n\r\n        this._fishContainer.removeAllChildren();\r\n        this._pufferContainer.removeAllChildren();\r\n\r\n        this._fishes = [];\r\n        this._puffers = [];\r\n\r\n\r\n        super.reset();\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Game() { return this._game; }\r\n    public get Cat() { return this._cat; }\r\n    public get Fishes() { return this._fishes; }\r\n    public get IsGamelogicPaused() { return this._pauseLogic; }\r\n}\r\n\r\n\r\n\r\nexport class POOL { \r\n    static get CAT() { return \"cat\"; }\r\n    static get FISH() { return \"fish\"; }\r\n    static get PUFFERFISH() { return \"puffer\"; }\r\n    static get PERSEPHONE() { return \"persephone\"; }\r\n    static get OWEN() { return \"owen\"; }\r\n    static get RILEY() { return \"riley\"; }\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { Game } from \"../Game\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\n\r\nexport class IntermediaryScreen extends Screen {\r\n    private _game:Game;\r\n    private _bg:createjs.Shape;\r\n    private _textContainer:createjs.Container;\r\n    private _txtSprite:createjs.DisplayObject;\r\n\r\n    private _text:string;\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n        this._game = game;\r\n\r\n        this._text = \"\";\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Chooses the screen to load in after the intermediary. */\r\n    public queueNextScreen(screenKey:string, duration:number=3000) {\r\n        const evt = window.setTimeout(() => {\r\n            //load the screen\r\n            ScreenManager.setCurrentScreen(screenKey, this._game.Stage);\r\n            //clear the timeout\r\n            window.clearTimeout(evt);\r\n        }, duration);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n        //add stuff\r\n        this._bg = new createjs.Shape();\r\n        this._bg.graphics.beginFill(\"#191919\");\r\n        this._bg.graphics.drawRect(0, 0, this._game.StageWidth, this._game.StageHeight);\r\n        this._bg.graphics.endFill();\r\n        this._bg.cache(0, 0, this._game.StageWidth, this._game.StageHeight);\r\n        this._container.addChild(this._bg);\r\n\r\n        this._textContainer = new createjs.Container();\r\n        this._container.addChild(this._textContainer);\r\n\r\n        if(this._text != \"\") {\r\n            //create the text\r\n            this._txtSprite = Sprites.generateBitmapText(this._text, LoadManager.Spritesheets.TypographyWhite);\r\n            (this._txtSprite as any).scale = 0.6;\r\n            //load into container\r\n            this._textContainer.addChild(this._txtSprite);\r\n    \r\n            //put container at bottom\r\n            this._textContainer.x = (this._game.StageWidth / 2) - ((this._txtSprite.getBounds().width / 2) * 0.6);\r\n            this._textContainer.y = (this._game.StageHeight / 2) - (this._txtSprite.getBounds().height / 2);\r\n        }\r\n\r\n        return super.create(stage);\r\n    }\r\n\r\n    public destroy() {\r\n        this._textContainer.removeAllChildren();\r\n\r\n        return super.destroy();\r\n    }\r\n\r\n    public enable() {\r\n        super.enable();\r\n    }\r\n\r\n    public disable() {\r\n        super.disable();\r\n\r\n        this.reset();\r\n    }\r\n\r\n    public reset() {\r\n        this.Text = \"\";\r\n        super.reset();\r\n    }\r\n\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public set Text(value:string) {\r\n        this._text = value;\r\n    }\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\nimport { Layout } from \"../ui/display/Layout\";\r\nimport { LoadManager } from \"../managers/LoadManager\";\r\nimport { Container } from \"../ui/display/Container\";\r\nimport { Logging } from \"../Functions\";\r\nimport { Game } from \"../Game\";\r\nimport { LevelSelectDisplay } from \"../ui/custom/LevelSelectDisplay\";\r\nimport { IntermediaryScreen } from \"./IntermediaryScreen\";\r\nimport { GameScreen, POOL } from \"./GameScreen\";\r\nimport { DataManager } from \"../managers/DataManager\";\r\nimport { Special } from \"../entities/specials/Special\";\r\nimport { Persephone } from \"../entities/specials/Persephone\";\r\nimport { ProgressManager } from \"../managers/ProgressManager\";\r\nimport { SoundManager } from \"../managers/SoundManager\";\r\nimport { Owen } from \"../entities/specials/Owen\";\r\nimport { Riley } from \"../entities/specials/Riley\";\r\n\r\nexport class MenuScreen extends Screen {\r\n    private _game:Game;\r\n    //containers\r\n    private _swipeContainer:createjs.Container;\r\n    private _staticContainer:Container;\r\n    // private _mainContainer:Container;\r\n    private _mainContainer:createjs.Container;\r\n    private _clearedContainer:Container;\r\n    private _optionsContainer:Container;\r\n    private _collectedContainer:createjs.Container;\r\n\r\n    private _mainButtonsContainer:Container;\r\n    private _logo:createjs.DisplayObject;\r\n    private _fancyFish:createjs.Sprite;\r\n\r\n    //custom containers\r\n    private _levelSelectDisplay:LevelSelectDisplay;\r\n\r\n    //properties\r\n    private _swipeSpeed:number;\r\n    private _currentScreen:string;\r\n    private _initialSwipePos:{x:number, y:number};\r\n    private _dragTimer:any;\r\n\r\n    //collectibles\r\n    private _collectibleFish:Special[];\r\n\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n\r\n        this._game = game;\r\n\r\n        //setup swipe container -- holds all moving sprites\r\n        this._swipeContainer = new createjs.Container();\r\n\r\n        //setup static container\r\n        this._staticContainer = new Container();\r\n        const bg = new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"bg\");\r\n\r\n        this._staticContainer.addMany({\r\n            bg\r\n        });\r\n\r\n        //setup main container\r\n        this._mainContainer = new createjs.Container();\r\n        this._logo = new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"logo\");\r\n        this._logo.x = this._game.StageWidth - this._logo.getBounds().width - 20;\r\n        this._logo.y = this._game.StageHeight * 0.4;\r\n        this._mainContainer.addChild(this._logo);\r\n        this._mainButtonsContainer = new Container(Container.LAYOUT_OPTIONS.ColumnLeftBottom);\r\n        this._mainButtonsContainer.addMany({\r\n            btnNewGame : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnNewGame\"),\r\n            btnOptions : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnOptions\"),\r\n            btnLevelSelect : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnLevelSelect\"),\r\n            btnExit : new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"btnExit\"),\r\n        });\r\n        this._mainContainer.addChild(this._mainButtonsContainer.Container);\r\n        this._fancyFish = new createjs.Sprite(LoadManager.Spritesheets.Catfish_Main, \"fancyFish\");\r\n        this._fancyFish.x = this._game.StageWidth - this._fancyFish.getBounds().width - 20;\r\n        this._fancyFish.y = this._game.StageHeight - this._fancyFish.getBounds().height - 20;\r\n        this._mainContainer.addChild(this._fancyFish);\r\n        this._fancyFish.visible = false;\r\n\r\n        //setup options container\r\n        this._optionsContainer = new Container();\r\n        this._optionsContainer.addMany({\r\n            txtOptions : Sprites.generateBitmapText(\"Options\", LoadManager.Spritesheets.Typography),\r\n            btnClearData : Sprites.Buttons.ClearData\r\n        });\r\n        this._optionsContainer.Container.x -= this._game.StageWidth;\r\n\r\n        //setup cleared container\r\n        this._clearedContainer = new Container();\r\n        this._clearedContainer.add(\"txtCleared\", Sprites.generateBitmapText(\"Data successfully cleared!\", LoadManager.Spritesheets.Typography));\r\n        this._clearedContainer.Container.x -= this._game.StageWidth;\r\n        this._clearedContainer.Container.y -= this._game.StageHeight;\r\n\r\n        this._levelSelectDisplay = new LevelSelectDisplay(game);\r\n        this._levelSelectDisplay.Container.x += this._game.StageWidth;\r\n\r\n        //setup collected container\r\n        this._collectedContainer = new createjs.Container;\r\n        this._collectedContainer.y += this._game.StageHeight;\r\n\r\n\r\n        this._collectibleFish = [];\r\n\r\n\r\n        //setup properties\r\n        this._swipeSpeed = 800;\r\n        this._currentScreen = \"main\";\r\n        this._initialSwipePos = { x:-1, y:-1 };        \r\n\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    private _onNewGame() {\r\n        // SoundManager.stopAllSound();\r\n        SoundManager.fadeOutAmbience(\"ambience\");\r\n        //play the sound\r\n        createjs.Sound.play(LoadManager.Sounds.BubblesFade);\r\n        Logging.message(\"Go to new game!\");\r\n        \r\n        const data = DataManager.getLevelDataByIndex(0);\r\n        this._game.changeCurrentLevel(data);\r\n        \r\n        const intermediary = ScreenManager.getScreenByKey(\"intermediary\") as IntermediaryScreen;\r\n        new Promise(async(res) => {\r\n            intermediary.Text = data.name;\r\n            await ScreenManager.setCurrentScreen(intermediary, this.Stage);\r\n            intermediary.queueNextScreen(\"game\");\r\n\r\n            res();\r\n        });\r\n    }\r\n    private _onOptions() {\r\n        //play the sound\r\n        SoundManager.playSFX(LoadManager.Sounds.BTNSelect);\r\n        //go to options!\r\n        Logging.message(\"Go to options!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:this._game.StageWidth}, this._swipeSpeed, createjs.Ease.circOut);\r\n        this._currentScreen = \"options\";\r\n    }\r\n    private _onLevelSelect() {\r\n        //play the sound\r\n        SoundManager.playSFX(LoadManager.Sounds.BTNSelect);\r\n        Logging.message(\"Go to level select!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:-this._game.StageWidth}, this._swipeSpeed, createjs.Ease.circOut);\r\n        this._currentScreen = \"levelSelect\";\r\n    }\r\n    private _onFish() {\r\n        //play the sound\r\n        SoundManager.playSFX(LoadManager.Sounds.BTNSelect);\r\n        Logging.message(\"Go to fish!\");\r\n        createjs.Tween.get(this._swipeContainer).to({y:-this._game.StageHeight}, this._swipeSpeed, createjs.Ease.circOut);\r\n        this._currentScreen = \"fish\";\r\n    }\r\n    private _onExit() {\r\n        //play the sound\r\n        SoundManager.playSFX(LoadManager.Sounds.BTNSelect);\r\n        Logging.message(\"Go to exit!\");\r\n    }\r\n\r\n    private _onMain() {\r\n        Logging.message(\"Go to main!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:0, y:0}, this._swipeSpeed, createjs.Ease.bounceOut);\r\n        this._currentScreen = \"main\";\r\n    }\r\n\r\n    private _onClearData() {\r\n        Logging.success(\"Cleared data!\");\r\n        createjs.Tween.get(this._swipeContainer).to({x:this._game.StageWidth, y:this._game.StageHeight}, this._swipeSpeed, createjs.Ease.cubicIn);\r\n        // this._currentScreen = \"cleared\"\r\n        let e = window.setTimeout(() => {\r\n            createjs.Tween.get(this._swipeContainer).to({x:this._game.StageWidth, y:0}, this._swipeSpeed, createjs.Ease.cubicInOut);\r\n            window.clearInterval(e);\r\n            this._currentScreen = \"options\";\r\n        }, 2000);\r\n    }\r\n\r\n    private _onDragStart(e) {\r\n\r\n        this._initialSwipePos = { x:e.stageX, y:e.stageY };\r\n\r\n        //reset drag timer if not null\r\n        if(this._dragTimer != null) window.clearTimeout(this._dragTimer);\r\n        this._dragTimer = setTimeout(() => {\r\n            this._initialSwipePos = { x:-1, y:-1 };\r\n            this._dragTimer = null;\r\n        }, 500);\r\n    }\r\n    private _onDragEnd(e) {\r\n        if(this._initialSwipePos.x != -1 || this._initialSwipePos.y != -1) {\r\n            //find the direction\r\n            if((this._initialSwipePos.x - e.stageX) > 20) {\r\n                if(this._currentScreen == \"options\")\r\n                    this._onMain();\r\n            }\r\n            else if((this._initialSwipePos.x - e.stageX) < -20) {\r\n                if(this._currentScreen == \"levelSelect\")\r\n                    this._onMain();\r\n            }\r\n            else if((this._initialSwipePos.y - e.stageY) < -20) {\r\n                if(this._currentScreen == \"fish\")\r\n                    this._onMain();\r\n            }\r\n        }\r\n    }\r\n\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n        //start music\r\n        SoundManager.playAmbienceWithFadeIn(\"ambience\", LoadManager.Sounds[\"intro\"], true, 1, 400);\r\n        // SoundManager.playAmbienceWithFadeIn(\"ambience\", LoadManager.Sounds[\"woowoobeat\"], true, 1, 400);\r\n\r\n        //add in the containers\r\n        this._staticContainer.Sprites.bg.y = 0;\r\n        this._container.addChild(this._staticContainer.Container);\r\n        this._container.addChild(this._swipeContainer);\r\n        this._swipeContainer.addChild(this._mainContainer);\r\n        this._swipeContainer.addChild(this._optionsContainer.Container);\r\n        this._swipeContainer.addChild(this._clearedContainer.Container);\r\n        this._swipeContainer.addChild(this._collectedContainer);\r\n\r\n        \r\n        this._swipeContainer.addChild(this._levelSelectDisplay.Container);\r\n\r\n        this._fancyFish.visible = false;\r\n\r\n        //kill any existing collectibles\r\n        this._collectedContainer.removeAllChildren();\r\n        this._collectibleFish.forEach(f => {\r\n            f = null;\r\n        });\r\n        this._collectibleFish = [];\r\n\r\n        return super.create(stage);\r\n    }\r\n\r\n    public enable() {\r\n        super.enable();\r\n        //listen to events\r\n        (this._mainButtonsContainer.Sprites.btnNewGame as any).on(\"click\", this._onNewGame, this, true);\r\n        (this._mainButtonsContainer.Sprites.btnOptions as any).on(\"click\", this._onOptions, this);\r\n        (this._mainButtonsContainer.Sprites.btnLevelSelect as any).on(\"click\", this._onLevelSelect, this);\r\n        (this._mainButtonsContainer.Sprites.btnExit as any).on(\"click\", this._onExit, this);\r\n\r\n        (this._fancyFish as any).on(\"click\", this._onFish, this);\r\n\r\n        Sprites.listenToClearData();\r\n        (this._optionsContainer.Sprites.btnClearData as any).on(Sprites.CLEAR_DATA, this._onClearData, this);\r\n\r\n        //listen for swipes\r\n        (this._staticContainer.Sprites.bg as any).on(\"mousedown\", this._onDragStart, this);\r\n        (this._staticContainer.Sprites.bg as any).on(\"click\", this._onDragEnd, this);\r\n\r\n        this._levelSelectDisplay.enable();\r\n\r\n        //testing -- add fakey collectible fish\r\n        //get any collected fish CLASS names\r\n        const collFish = [].concat.apply([], ProgressManager.ProgressData.specials).filter(d => d != null && d.collected).map(d => d.unlocks);\r\n\r\n        \r\n        collFish.forEach(f => {\r\n            switch(f.toLowerCase()) {\r\n                case POOL.PERSEPHONE:\r\n                    this._collectibleFish.push(new Persephone(this._game));\r\n                    break;\r\n                case POOL.OWEN:\r\n                    this._collectibleFish.push(new Owen(this._game));\r\n                    break;\r\n                case POOL.RILEY:\r\n                    this._collectibleFish.push(new Riley(this._game));\r\n                    break;\r\n            }\r\n        });\r\n            \r\n\r\n        //add the fish to the container\r\n        this._collectibleFish.forEach(f => {\r\n            f.setMainPage(true);\r\n            f.create(this._collectedContainer);\r\n            f.Speed = Math.random() * 3 + 3;\r\n        });\r\n\r\n        //if we don't have any collectible fish, hide the fish button\r\n        if(collFish.length <= 0) {\r\n            this._fancyFish.visible = false;\r\n        }\r\n        else {\r\n            this._fancyFish.visible = true;\r\n            this._fancyFish.alpha = 0;\r\n\r\n            createjs.Tween\r\n            .get(this._fancyFish)\r\n            .to({ alpha:1 }, 500, createjs.Ease.circIn);\r\n        }\r\n\r\n\r\n\r\n        //rock the fish\r\n        createjs.Tween\r\n            // @ts-ignore\r\n            .get(this._fancyFish, { loop:true })\r\n            .to({ y:this._fancyFish.y-30 }, 3000, createjs.Ease.sineInOut)\r\n            .to({ y:this._fancyFish.y }, 3000, createjs.Ease.sineInOut);\r\n\r\n        //rock the logo\r\n        createjs.Tween\r\n            // @ts-ignore\r\n            .get(this._logo, { loop:true })\r\n            .wait(1200)\r\n            .to({ y:this._logo.y-15 }, 4500, createjs.Ease.sineInOut)\r\n            .to({ y:this._logo.y }, 4800, createjs.Ease.sineInOut);\r\n    }\r\n\r\n    public disable() {\r\n        super.disable();\r\n        //stop listen to events\r\n        (this._mainButtonsContainer.Sprites.btnNewGame as any).off(\"click\", this._onNewGame);\r\n        (this._mainButtonsContainer.Sprites.btnOptions as any).off(\"click\", this._onOptions);\r\n        (this._mainButtonsContainer.Sprites.btnLevelSelect as any).off(\"click\", this._onLevelSelect);\r\n        (this._mainButtonsContainer.Sprites.btnExit as any).off(\"click\", this._onExit);\r\n\r\n        this._fancyFish.removeAllEventListeners();\r\n\r\n        Sprites.stopListenToClearData();\r\n        (this._optionsContainer.Sprites.btnClearData as any).off(Sprites.CLEAR_DATA, this._onClearData);\r\n\r\n        //stop listen for swipes\r\n        (this._staticContainer.Sprites.bg as any).off(\"mousedown\", this._onDragStart);\r\n        (this._staticContainer.Sprites.bg as any).off(\"click\", this._onDragEnd);\r\n\r\n\r\n        this._mainButtonsContainer.Sprites.btnNewGame.removeAllEventListeners();\r\n        this._mainButtonsContainer.Sprites.btnOptions.removeAllEventListeners();\r\n        this._mainButtonsContainer.Sprites.btnLevelSelect.removeAllEventListeners();\r\n        this._mainButtonsContainer.Sprites.btnExit.removeAllEventListeners();\r\n        this._staticContainer.Sprites.bg.removeAllEventListeners();\r\n\r\n\r\n        this._levelSelectDisplay.disable();\r\n\r\n        this.reset();\r\n\r\n\r\n        createjs.Tween.removeAllTweens();\r\n    }\r\n\r\n    public reset() {\r\n        //reset the position of the swipe container\r\n        this._swipeContainer.x = 0;\r\n        this._swipeContainer.y = 0;\r\n\r\n        super.reset();\r\n    }\r\n\r\n    public update(gameTime:number) {\r\n        this._collectibleFish.forEach(f => f.update(gameTime));\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n}","import { IUpdateable, ICreateable, IEnableable } from \"../Interfaces\";\r\n\r\nexport class Screen implements ICreateable<Screen>, IUpdateable, IEnableable {\r\n    private _stage:createjs.StageGL;\r\n    protected _container:createjs.Container;\r\n\r\n    constructor() {\r\n        this._container = new createjs.Container();\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /**Updates the screen. */\r\n    public update(gameTime:number) {\r\n\r\n    }\r\n\r\n    /**Creates the screen and adds to the stage. */\r\n    public create(stage:createjs.StageGL):Screen {\r\n        this._stage = stage;\r\n        //add to the stage\r\n        this._stage.addChild(this._container);\r\n\r\n        \r\n        return this;\r\n    }\r\n\r\n    /**Destroys the screen and removes from the stage. */\r\n    public destroy():Screen {\r\n\r\n        //remove from the stage\r\n        this._stage.removeChild(this._container);\r\n\r\n        return this;\r\n    }\r\n\r\n    public enable() {\r\n\r\n    }\r\n\r\n    public disable() {\r\n        \r\n    }\r\n\r\n    public reset() {\r\n        \r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container():createjs.Container { return this._container; }\r\n    protected get Stage():createjs.StageGL { return this._stage; }\r\n\r\n}","import { Screen } from \"./Screen\";\r\nimport { ScreenManager } from \"../managers/ScreenManager\";\r\nimport { Game } from \"../Game\";\r\nimport { Sprites } from \"../ui/Sprites\";\r\n\r\nexport class SplashScreen extends Screen {\r\n    private _game:Game;\r\n    private _textContainer:createjs.Container;\r\n\r\n    private _textSpritesheet;\r\n    \r\n    constructor(game:Game) {\r\n        super();\r\n        this._game = game;\r\n\r\n\r\n        this._textSpritesheet = new createjs.SpriteSheet({images: [\"assets/spritesheets/typography_white.png\"], frames: [[0,329,27,44,0,0,0],[89,47,21,44,0,0,0],[63,47,23,44,0,0,0],[32,141,24,44,0,0,0],[89,94,21,44,0,0,0],[110,141,20,44,0,0,0],[34,94,26,44,0,0,0],[0,188,28,44,0,0,0],[152,282,14,44,0,0,0],[158,94,16,44,0,0,0],[59,141,24,44,0,0,0],[136,94,19,44,0,0,0],[0,47,32,44,0,0,0],[0,141,29,44,0,0,0],[0,235,28,44,0,0,0],[86,141,21,44,0,0,0],[0,282,28,44,0,0,0],[63,94,23,44,0,0,0],[156,141,17,44,0,0,0],[81,235,21,44,0,0,0],[30,329,27,44,0,0,0],[66,0,24,44,0,0,0],[0,0,35,44,0,0,0],[31,188,23,44,0,0,0],[31,235,22,44,0,0,0],[57,188,23,44,0,0,0],[108,329,18,44,0,0,0],[60,329,21,44,0,0,0],[159,47,17,44,0,0,0],[118,0,20,44,0,0,0],[129,329,18,44,0,0,0],[169,282,14,44,0,0,0],[113,47,20,44,0,0,0],[84,329,21,44,0,0,0],[171,329,12,44,0,0,0],[186,282,12,44,0,0,0],[113,94,20,44,0,0,0],[191,188,12,44,0,0,0],[0,94,31,44,0,0,0],[56,235,22,44,0,0,0],[60,282,22,44,0,0,0],[108,188,20,44,0,0,0],[85,282,20,44,0,0,0],[177,94,15,44,0,0,0],[184,0,15,44,0,0,0],[179,47,15,44,0,0,0],[31,282,22,44,0,0,0],[131,282,18,44,0,0,0],[38,0,25,44,0,0,0],[150,329,18,44,0,0,0],[108,282,20,44,0,0,0],[152,235,18,44,0,0,0],[35,47,25,44,0,0,0],[153,188,16,44,0,0,0],[83,188,22,44,0,0,0],[131,188,19,44,0,0,0],[93,0,22,44,0,0,0],[129,235,20,44,0,0,0],[133,141,20,44,0,0,0],[141,0,20,44,0,0,0],[105,235,21,44,0,0,0],[136,47,20,44,0,0,0],[194,141,12,44,0,0,0],[195,94,12,44,0,0,0],[197,47,12,44,0,0,0],[172,188,16,44,0,0,0],[176,141,15,44,0,0,0],[173,235,14,44,0,0,0],[164,0,17,44,0,0,0]],  animations: {A:[0,0, true], B:[1,1, true], C:[2,2, true], D:[3,3, true], E:[4,4, true], F:[5,5, true], G:[6,6, true], H:[7,7, true], I:[8,8, true], J:[9,9, true], K:[10,10, true], L:[11,11, true], M:[12,12, true], N:[13,13, true], O:[14,14, true], P:[15,15, true], Q:[16,16, true], R:[17,17, true], S:[18,18, true], T:[19,19, true], U:[20,20, true], V:[21,21, true], W:[22,22, true], X:[23,23, true], Y:[24,24, true], Z:[25,25, true], a:[26,26, true], b:[27,27, true], c:[28,28, true], d:[29,29, true], e:[30,30, true], f:[31,31, true], g:[32,32, true], h:[33,33, true], i:[34,34, true], j:[35,35, true], k:[36,36, true], l:[37,37, true], m:[38,38, true], n:[39,39, true], o:[40,40, true], p:[41,41, true], q:[42,42, true], r:[43,43, true], s:[44,44, true], t:[45,45, true], u:[46,46, true], v:[47,47, true], w:[48,48, true], x:[49,49, true], y:[50,50, true], z:[51,51, true], 0:[52,52, true], 1:[53,53, true], 2:[54,54, true], 3:[55,55, true], 4:[56,56, true], 5:[57,57, true], 6:[58,58, true], 7:[59,59, true], 8:[60,60, true], 9:[61,61, true], \".\":[62,62, true], \",\":[63,63, true], \"'\":[64,64, true], \"\\\"\":[65,65, true], \"?\":[66,66, true], \"!\":[67,67, true], \"$\":[68,68, true]}});\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public create(stage:createjs.StageGL):Screen {\r\n        //add stuff\r\n        //load the image\r\n        const img = document.createElement(\"img\");\r\n        img.onload = (e) => {\r\n            const splash = new createjs.Bitmap(img);\r\n            this._container.addChild(splash);\r\n\r\n            super.create(stage);\r\n        }\r\n        img.src = \"assets/images/splash.png\";\r\n\r\n\r\n        this._textContainer = new createjs.Container();\r\n        this._container.addChild(this._textContainer);\r\n\r\n        this.Text = \"0\";\r\n\r\n        stage.update();\r\n\r\n\r\n\r\n        return this;\r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public set Text(text:string) {\r\n        this._textContainer.removeAllChildren();\r\n        //add text\r\n        const textEl = Sprites.generateBitmapText(text, this._textSpritesheet);\r\n        this._textContainer.addChild(textEl);\r\n        this._container.addChild(this._textContainer);\r\n\r\n        this._game.Stage.update();\r\n    }\r\n}","import { LoadManager } from \"../managers/LoadManager\";\r\nimport { Game } from \"../Game\";\r\nimport { GameScreen } from \"./GameScreen\";\r\n\r\n/**This class creates the tutorial items.  This class will control the game and game screen when being used. */\r\nexport class TutorialCreator {\r\n    public static get KEY() {\r\n        return {\r\n            \"First\" : \"first\",\r\n            \"You\" : \"you\",\r\n            \"Fish\" : \"fish\",\r\n            \"Puffer\" : \"puffer\",\r\n            \"Many\" : \"many\",\r\n            \"Pause\" : \"pause\",\r\n            \"Special\" : \"special\"\r\n        }\r\n    };\r\n\r\n    private _game:Game;\r\n    private _gameScreen:GameScreen;\r\n\r\n\r\n    //tutorial overlays\r\n    private _youOverlay:createjs.Sprite;\r\n    private _fishOverlay:createjs.Sprite;\r\n    private _pufferOverlay:createjs.Sprite;\r\n    private _manyOverlay:createjs.Sprite;\r\n    private _pauseOverlay:createjs.Sprite;\r\n    private _specialOverlay:createjs.Sprite;\r\n\r\n    private _currentOverlay:createjs.Sprite;\r\n    private _tutorialQueue:string[];\r\n\r\n    constructor(game:Game, gameScreen:GameScreen) {\r\n        this._game = game;\r\n        this._gameScreen = gameScreen;\r\n\r\n        this._tutorialQueue = [];\r\n\r\n        //build all the required screens\r\n        this._youOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"you\");\r\n        this._fishOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"fish\");\r\n        this._pufferOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"puffer\");\r\n        this._manyOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"many\");\r\n        this._pauseOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"pause\");\r\n        this._specialOverlay = new createjs.Sprite(LoadManager.Spritesheets.Tutorial_Spritesheet, \"special\");\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public async queueTutorials(keys:string[]) {\r\n\r\n        for(let i = 0; i < keys.length; i++) {\r\n            const key = keys[i];\r\n\r\n            await new Promise(async(res, rej) => {\r\n\r\n                switch(key) {\r\n                    //first will play multiple screens\r\n                    case TutorialCreator.KEY.First :\r\n                        await this._runYou();\r\n                        await this._transition(this._fishOverlay);\r\n                        await this._runFish();\r\n                        await this._transition(null);\r\n                        this._gameScreen.unpauseGameLogic();\r\n                        res();\r\n                        break;\r\n                    case TutorialCreator.KEY.You :\r\n                        await this._runYou();\r\n                        await this._transition(null);\r\n                        this._gameScreen.unpauseGameLogic();\r\n                        res();\r\n                        break;\r\n                    case TutorialCreator.KEY.Fish :\r\n                        await this._runFish();\r\n                        await this._transition(null);\r\n                        this._gameScreen.unpauseGameLogic();\r\n                        res();\r\n                        break;\r\n                    case TutorialCreator.KEY.Puffer :\r\n                        await this._runPuffer();\r\n                        await this._transition(null);\r\n                        this._gameScreen.unpauseGameLogic();\r\n                        res();\r\n                        break;\r\n                    case TutorialCreator.KEY.Special :\r\n                        await this._runSpecial();\r\n                        await this._transition(null);\r\n                        this._gameScreen.unpauseGameLogic();\r\n                        res();\r\n                        break;\r\n\r\n                }\r\n\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    private async _transition(nextScreen) {\r\n        let promises = [];\r\n        //if we have a current screen, wait for it to fade out\r\n        if(this._currentOverlay != null) {\r\n            promises.push(\r\n                new Promise(async(res) => {\r\n                    //fade out\r\n                    createjs.Tween\r\n                        .get(this._currentOverlay)\r\n                        .to({ alpha:0 }, 500, createjs.Ease.linear)\r\n                        .call(() => {\r\n                            this._gameScreen.Container.removeChild(this._currentOverlay);\r\n                            res();\r\n                        });\r\n                })\r\n            );\r\n        }\r\n\r\n        //wait for certain actions to finish\r\n        return new Promise(async(res) => {\r\n            //wait for promises to finish\r\n            await Promise.all(promises);\r\n\r\n            //if we are transitioning to null, just end us\r\n            if(nextScreen == null) {\r\n                this._currentOverlay.alpha = 1;\r\n                res();\r\n                return;\r\n            }\r\n\r\n            this._currentOverlay.alpha = 1;\r\n\r\n            //now add in the new one\r\n            this._currentOverlay = nextScreen;\r\n            this._gameScreen.Container.addChild(this._currentOverlay);\r\n            this._currentOverlay.alpha = 0;\r\n\r\n            //fade in\r\n            createjs.Tween\r\n                .get(this._currentOverlay)\r\n                .to({ alpha:1 }, 500, createjs.Ease.linear)\r\n                .call(() => {\r\n                    res();\r\n                });\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    private async _runYou() {\r\n\r\n        return new Promise((res, rej) => {\r\n            this._currentOverlay = this._youOverlay;\r\n\r\n            const catStart = this._gameScreen.Cat.Y;\r\n            //move the cat hand\r\n            \r\n            this._gameScreen.Cat.Y = 80;\r\n            //pause the game\r\n            this._gameScreen.pauseGameLogic();\r\n            //overlay screen\r\n            this._gameScreen.Container.addChild(this._youOverlay);\r\n            //listen for screen click\r\n            (this._game.Stage).on(\"pressup\", () => { \r\n                //put cat paw back to start Y\r\n                this._gameScreen.Cat.Y = catStart;\r\n                res();\r\n            }, true, true);\r\n\r\n        });\r\n        \r\n    }\r\n\r\n    private async _runFish() {\r\n\r\n        return new Promise((res, rej) => {\r\n            this._currentOverlay = this._fishOverlay;\r\n            //pause the game\r\n            this._gameScreen.pauseGameLogic();\r\n            //overlay screen\r\n            this._gameScreen.Container.addChild(this._fishOverlay);\r\n            //listen for screen click\r\n            (this._game.Stage).on(\"pressup\", () => { \r\n                res();\r\n            }, true, true);\r\n        });\r\n\r\n    }\r\n\r\n    private async _runPuffer() {\r\n\r\n        return new Promise((res, rej) => {\r\n            this._currentOverlay = this._pufferOverlay;\r\n            //pause the game\r\n            this._gameScreen.pauseGameLogic();\r\n            //overlay screen\r\n            this._gameScreen.Container.addChild(this._pufferOverlay);\r\n            //listen for screen click\r\n            (this._game.Stage).on(\"pressup\", () => { \r\n                res();\r\n            }, true, true);\r\n        });\r\n\r\n    }\r\n\r\n    private async _runSpecial() {\r\n\r\n        return new Promise((res, rej) => {\r\n            this._currentOverlay = this._specialOverlay;\r\n            //pause the game\r\n            this._gameScreen.pauseGameLogic();\r\n            //overlay screen\r\n            this._gameScreen.Container.addChild(this._specialOverlay);\r\n            //listen for screen click\r\n            (this._game.Stage).on(\"pressup\", () => { \r\n                res();\r\n            }, true, true);\r\n        });\r\n\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n}","import { LoadManager } from \"../managers/LoadManager\";\r\n\r\n/**Used to gain access to in-game sprites. */\r\nexport class Sprites {\r\n    public static CLEAR_DATA:string = \"onClearData\";\r\n\r\n    private static _backgrounds:{ [key:string]:createjs.DisplayObject } = { };\r\n    private static _buttons:{ [key:string]:createjs.DisplayObject } = { };\r\n\r\n    private static _graphics:{ [key:string]:createjs.DisplayObject } = { };\r\n\r\n    private static _spritesheets:createjs.SpriteSheet[];\r\n\r\n    private static _canClearData:boolean = false;\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public static setup() {\r\n        return new Promise((res, rej) => {\r\n            // Sprites.spritesheets = spritesheets\r\n            //setup all the sprites\r\n            /* ------- STATIC ------- */\r\n            Sprites._backgrounds.Main = new createjs.Sprite(LoadManager.Spritesheets.UI); // Static BG\r\n            (Sprites._backgrounds.Main as createjs.Sprite).gotoAndStop(\"bg_main_static\");\r\n\r\n            Sprites._backgrounds.Logo = new createjs.Sprite(LoadManager.Spritesheets.Entities); // LOGO\r\n            (Sprites._backgrounds.Logo as createjs.Sprite).gotoAndStop(\"icon_title\");\r\n\r\n            Sprites._backgrounds.BG = LoadManager.Images.BG; // Redux\r\n            Sprites._backgrounds.BGTop = LoadManager.Images.BGTop;\r\n\r\n\r\n            /* ------- ANIMATED ------- */\r\n            Sprites._backgrounds.Wave = new createjs.Sprite(LoadManager.Spritesheets.UI); // Animated BG\r\n            (Sprites._backgrounds.Wave as createjs.Sprite).gotoAndPlay(\"bg_main\");\r\n\r\n\r\n            /* ------- GRAPHICS ------ */\r\n            Sprites._graphics.Timer = new createjs.Sprite(LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n            (Sprites._graphics.Timer as createjs.Sprite).gotoAndPlay(\"sprTime\");\r\n            Sprites._graphics.Score = new createjs.Sprite(LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n            (Sprites._graphics.Score as createjs.Sprite).gotoAndPlay(\"sprScore\");\r\n            Sprites._graphics.FishRemain = new createjs.Sprite(LoadManager.Spritesheets.ScoreHUD_Spritesheet);\r\n            (Sprites._graphics.FishRemain as createjs.Sprite).gotoAndPlay(\"sprFish\");\r\n            \r\n            /* ------- BUTTONS ------- */\r\n            Sprites._buttons.NewGame = new createjs.Sprite(LoadManager.Spritesheets.Entities); // New Game\r\n            (Sprites._buttons.NewGame as createjs.Sprite).gotoAndStop(\"btn_new_game\");\r\n            new createjs.ButtonHelper(Sprites._buttons.NewGame as createjs.Sprite, \"btn_new_game\", \"btn_new_game_hover\", \"btn_new_game_hover\");\r\n\r\n\r\n            Sprites._buttons.Options = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Options\r\n            (Sprites._buttons.Options as createjs.Sprite).gotoAndStop(\"btn_new_game\");\r\n            new createjs.ButtonHelper(Sprites._buttons.Options as createjs.Sprite, \"btn_options\", \"btn_options_hover\", \"btn_options_hover\");\r\n\r\n            Sprites._buttons.LevelSelect = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Select\r\n            (Sprites._buttons.LevelSelect as createjs.Sprite).gotoAndStop(\"btn_select\");\r\n            new createjs.ButtonHelper(Sprites._buttons.LevelSelect as createjs.Sprite, \"btn_select\", \"btn_select_hover\", \"btn_select_hover\");\r\n\r\n            Sprites._buttons.Exit = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Exit\r\n            (Sprites._buttons.Exit as createjs.Sprite).gotoAndStop(\"btn_select\");\r\n            new createjs.ButtonHelper(Sprites._buttons.Exit as createjs.Sprite, \"btn_exit\", \"btn_exit_hover\", \"btn_exit_hover\");\r\n\r\n            Sprites._buttons.Fishbowl = new createjs.Sprite(LoadManager.Spritesheets.Entities); // Fishbowl\r\n            (Sprites._buttons.Fishbowl as createjs.Sprite).gotoAndStop(\"btn_select\");\r\n            new createjs.ButtonHelper(Sprites._buttons.Fishbowl as createjs.Sprite, \"icon_fishbowl\", \"icon_fishbowl_hover\", \"icon_fishbowl_hover\", true);\r\n\r\n\r\n            /* ------- MENU ------- */\r\n            Sprites._backgrounds.LevelSelectBG = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Select BG\r\n            (Sprites._backgrounds.LevelSelectBG as createjs.Sprite).gotoAndStop(\"static_bg\");\r\n            Sprites._buttons.LevelEmpty = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Empty Button\r\n            (Sprites._buttons.LevelEmpty as createjs.Sprite).gotoAndStop(\"level_empty\");\r\n            Sprites._buttons.LevelComplete = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Complete Button\r\n            (Sprites._buttons.LevelComplete as createjs.Sprite).gotoAndStop(\"level_complete\");\r\n            Sprites._buttons.LevelSpecialEmpty = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Special Empty Button\r\n            (Sprites._buttons.LevelSpecialEmpty as createjs.Sprite).gotoAndStop(\"level_special_empty\");\r\n            Sprites._buttons.LevelSpecialComplete = new createjs.Sprite(LoadManager.Spritesheets.Menu_Level_Select); // Level Special Complete Button\r\n            (Sprites._buttons.LevelSpecialComplete as createjs.Sprite).gotoAndStop(\"level_special_complete\");\r\n\r\n\r\n            /* ------- COMPLEX ------- */\r\n            Sprites._setupBTNClearData();\r\n\r\n            res();\r\n        });\r\n    }\r\n\r\n    // /* --- Complex createjs.Sprite Setup --- */\r\n    private static _setupBTNClearData() {\r\n        Sprites._buttons.ClearData = new createjs.Sprite(LoadManager.Spritesheets.UI); // BTN Clear Data\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndStop(\"btn_clear_data\");\r\n        (Sprites._buttons.ClearData as createjs.Sprite).cursor = \"pointer\";\r\n        Sprites._canClearData = false;\r\n    }\r\n    public static listenToClearData() {\r\n        //listen\r\n        (Sprites._buttons.ClearData as any).on(\"mousedown\", Sprites._btnDataDown);\r\n        (Sprites._buttons.ClearData as any).on(\"animationend\", Sprites._btnDataComplete);\r\n        (Sprites._buttons.ClearData as any).on(\"click\", Sprites._btnDataUp);\r\n    }\r\n    public static stopListenToClearData() {\r\n        //listen\r\n        (Sprites._buttons.ClearData as any).off(\"mousedown\", Sprites._btnDataDown);\r\n        (Sprites._buttons.ClearData as any).off(\"animationend\", Sprites._btnDataComplete);\r\n        (Sprites._buttons.ClearData as any).off(\"click\", Sprites._btnDataUp);\r\n    }\r\n\r\n    private static _btnDataDown(e) {\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndPlay(\"btn_clear_data_progress\");\r\n        Sprites._canClearData = true;\r\n    }\r\n    private static _btnDataUp(e) {\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndStop(\"btn_clear_data\");\r\n        Sprites._canClearData = false;\r\n    }\r\n    private static _btnDataComplete(e) {\r\n        (Sprites._buttons.ClearData as createjs.Sprite).gotoAndStop(\"btn_clear_data\");\r\n        //dispatch event to button\r\n        if(Sprites._canClearData) {\r\n            (Sprites._buttons.ClearData as createjs.Sprite).dispatchEvent(new Event(Sprites.CLEAR_DATA));\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**A helper function to generate and cache text for the StageGL object. */\r\n    public static generateText(text, details = \"20px Arial\", color = \"#FFFEEE\") {\r\n        const textObj = new createjs.Text(text, details, color)\r\n        textObj.cache(0, 0, textObj.getBounds().width, textObj.getBounds().height);\r\n        return textObj;\r\n    }\r\n\r\n    public static generateBitmapText(text, spritesheet) {\r\n        const textObj = new createjs.BitmapText(text, spritesheet);\r\n        return textObj;\r\n    }\r\n\r\n\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public static get Backgrounds() { return Sprites._backgrounds; }\r\n    public static get Buttons() { return Sprites._buttons; }\r\n    public static get Graphics() { return Sprites._graphics; }\r\n\r\n    // static get BG() { return Sprites._bg }\r\n    // static get Logo() { return Sprites._logo }\r\n    // static get AnimBG() { return Sprites._animBg }\r\n    // static get GameBG() { return Sprites._gameBG }\r\n    // static get GameBGTop() { return Sprites._gameBGTop }\r\n    // //buttons\r\n    // static get BTN_New_Game() { return Sprites._btnNewGame }\r\n    // static get BTN_Options() { return Sprites._btnOptions }\r\n    // static get BTN_Select() { return Sprites._btnSelect }\r\n    // static get BTN_Exit() { return Sprites._btnExit }\r\n    // static get BTN_Fishbowl() { return Sprites._btnFishbowl }\r\n    // static get BTN_ClearData() { return Sprites._btnClearData }\r\n\r\n\r\n    // static get CLEAR_DATA() { return \"onClearData\" }\r\n}","import { Sprites } from \"../Sprites\";\r\nimport { LoadManager } from \"../../managers/LoadManager\";\r\nimport { ProgressManager } from \"../../managers/ProgressManager\";\r\nimport { Game } from \"../../Game\";\r\nimport { IEnableable } from \"../../Interfaces\";\r\nimport { GameScreen } from \"../../screens/GameScreen\";\r\nimport { DataManager } from \"../../managers/DataManager\";\r\nimport { ScreenManager } from \"../../managers/ScreenManager\";\r\nimport { IntermediaryScreen } from \"../../screens/IntermediaryScreen\";\r\nimport { SoundManager } from \"../../managers/SoundManager\";\r\n\r\n\r\nexport class LevelSelectDisplay implements IEnableable {\r\n    private _game:Game;\r\n\r\n    private _container:createjs.Container;\r\n    private _background:createjs.Sprite;\r\n    private _levelsContainer:createjs.Container;\r\n    private _levelTextContainer:createjs.Container;\r\n\r\n    private _levelsData:any;\r\n\r\n    private _levelButtons:createjs.Sprite[];\r\n\r\n    constructor(game:Game) {\r\n        this._game = game;\r\n        this._levelButtons = [];\r\n\r\n        //build the required components for the level select display\r\n        this._container = new createjs.Container();\r\n        this._background = Sprites.Backgrounds.LevelSelectBG as createjs.Sprite;\r\n        this._background.x = (game.StageWidth / 2) - (this._background.getBounds().width / 2);\r\n        this._background.y = 80;\r\n\r\n        this._levelsContainer = new createjs.Container();\r\n        this._container.addChild(this._background);\r\n        let text = Sprites.generateBitmapText(\"Level Select\", LoadManager.Spritesheets.Typography);\r\n        text.x = (game.StageWidth / 2) - (text.getBounds().width / 2);\r\n        text.y = 30;\r\n        this._container.addChild(text);\r\n\r\n\r\n        //setup display text\r\n        this._levelTextContainer = new createjs.Container();\r\n        this._container.addChild(this._levelTextContainer);\r\n\r\n        this.LevelText = \"\";\r\n\r\n\r\n\r\n        this.rebuild();\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public enable() {\r\n        this.rebuild();\r\n        this._levelButtons.forEach(btn => {\r\n            btn.on(\"click\", this._onLevelClick, this);\r\n            btn.on(\"mouseover\", this._onLevelHover, this);\r\n            btn.on(\"mouseout\", this._onLevelUnhover, this);\r\n        });\r\n    }\r\n\r\n    public disable() {\r\n        this._levelButtons.forEach(btn => {\r\n            btn.removeAllEventListeners();\r\n        });\r\n    }\r\n\r\n    public rebuild() {\r\n        //rebuild all buttons\r\n        this._levelButtons.forEach(ch => {\r\n            this._container.removeChild(ch);\r\n            ch.removeAllEventListeners();\r\n            ch = null;\r\n        });\r\n        this._levelButtons = [];\r\n        this._levelsContainer.removeAllChildren();\r\n\r\n        //build levels data\r\n        this._levelsData = DataManager.WorldsData.worlds.map((world, i) => {\r\n            return [].concat.apply([], world as any)\r\n            .map((level, n) => {\r\n                let special = ProgressManager.ProgressData.specials[i][n];\r\n\r\n                let obj = level;\r\n                obj.unlocked = ProgressManager.ProgressData.levels[i][n].unlocked;\r\n                obj.completed = ProgressManager.ProgressData.levels[i][n].completed;\r\n                obj.special = (special != null);\r\n\r\n                return obj;\r\n            })\r\n        });\r\n\r\n\r\n        //build the level icons\r\n        for(let r = 0; r < this._levelsData.length; r++) {\r\n            //iterate through levels\r\n            for(let i = 0; i < this._levelsData[r].length; i++) {\r\n                const levelData = this._levelsData[r][i];\r\n                //decide the sprite\r\n                let sprite = Sprites.Buttons.LevelEmpty.clone();\r\n                if(levelData.special != null && levelData.special) sprite = Sprites.Buttons.LevelSpecialEmpty.clone();\r\n                // //completed\r\n                if(levelData.completed) {\r\n                    sprite = Sprites.Buttons.LevelComplete.clone();\r\n                    if(levelData.special != null && levelData.special) sprite = Sprites.Buttons.LevelSpecialComplete.clone();\r\n                }\r\n                //locked\r\n                if(!levelData.unlocked) {\r\n                    sprite.alpha = 0.25;\r\n                }\r\n                else {\r\n                    sprite.alpha = 1;\r\n                     //extras\r\n                    sprite.cursor = \"pointer\";\r\n                }\r\n\r\n                //place\r\n                sprite.x = 60 * i;\r\n                sprite.y = 50 * r;\r\n                //add\r\n                this._levelsContainer.addChild(sprite);\r\n                //to array\r\n                this._levelButtons.push(sprite as createjs.Sprite);\r\n            }\r\n        };\r\n\r\n        this._levelsContainer.x = (this._game.StageWidth / 2) - (this._levelsContainer.getBounds().width / 2);\r\n        this._levelsContainer.y = 100;\r\n        this._container.addChild(this._levelsContainer);\r\n    }\r\n\r\n\r\n    /**Returns level data from the given index. */\r\n    private _getDataByIndex(index:number) {\r\n        //flatten level data, and get data\r\n        let flatten = this._levelsData.reduce((acc, next) => acc.concat(next));\r\n        return flatten[index];\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    private _onLevelClick(e) {\r\n         //get button index\r\n        let index = this._levelButtons.indexOf(e.target);\r\n\r\n        if(index == -1) return;\r\n\r\n        \r\n        //set the level index\r\n        const data = DataManager.getLevelDataByIndex(index);\r\n        if(data == null) return;\r\n        if(!data.unlocked) return;\r\n\r\n        SoundManager.playSFX(LoadManager.Sounds.BubblesFade);\r\n        SoundManager.fadeOutAmbience(\"ambience\");\r\n\r\n        //make sure this level is UNLOCKED\r\n        this._game.changeCurrentLevel(data);\r\n        //go to intermediary screen\r\n        const intermediary = ScreenManager.getScreenByKey(\"intermediary\") as IntermediaryScreen;\r\n        new Promise(async(res) => {\r\n            intermediary.Text = data.name;\r\n            await ScreenManager.setCurrentScreen(intermediary, this._game.Stage);\r\n            intermediary.queueNextScreen(\"game\", 1000);\r\n\r\n            res();\r\n        });\r\n    }\r\n\r\n    private _onLevelHover(e) {\r\n        //find the button data\r\n        //get button index\r\n        let index = this._levelButtons.indexOf(e.target);\r\n        \r\n        if(index != -1) {\r\n            const data = this._getDataByIndex(index);\r\n            if(data != null) {\r\n                if(data.unlocked)\r\n                    this.LevelText = data.name;\r\n            }\r\n        }\r\n\r\n    }\r\n    private _onLevelUnhover(e) {\r\n        this.LevelText = \"\";\r\n    }\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container() { return this._container; }\r\n    public set LevelText(value:string) {\r\n        if(value == \"\") {\r\n            this._levelTextContainer.removeAllChildren();\r\n            return;\r\n        }\r\n        //create the text\r\n        const text = Sprites.generateBitmapText(value, LoadManager.Spritesheets.TypographyWhite);\r\n        (text as any).scale = 0.6;\r\n        //load into container\r\n        this._levelTextContainer.removeAllChildren();\r\n        this._levelTextContainer.addChild(text);\r\n\r\n        //put container at bottom\r\n        this._levelTextContainer.x = (this._game.StageWidth / 2) - ((text.getBounds().width / 2) * 0.6);\r\n        this._levelTextContainer.y = this._game.StageHeight - 30;\r\n    }\r\n}","import { Layout } from \"./Layout\";\r\n\r\n/**Uses custom classes and the createjs library to help easily build up ui interfaces with DisplayObjects. */\r\nexport class Container {\r\n    private _sprites:{ [key:string]:createjs.DisplayObject };\r\n    private _container:createjs.Container;\r\n    private _layout:Layout;\r\n\r\n    constructor(layout:{ direction:string, alignment:string, crossAlignment:string, spacing:number } = null) {\r\n        this._sprites = { };\r\n        this._container = new createjs.Container();\r\n        this._layout = (layout != null) ? new Layout(this._container, layout.direction, layout.alignment, layout.crossAlignment, layout.spacing)  : Layout.MAKE_VERTICAL_CENTER(this._container);\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public add(key:string, sprite:createjs.DisplayObject, updateLayout:boolean=true):boolean {\r\n        if(this._sprites[key] != null) return false;\r\n        this._sprites[key] = sprite.clone();\r\n\r\n        if(updateLayout) this._layout.buildLayout(true, ...Object.keys(this._sprites).map(k => this._sprites[k]));\r\n        return true;\r\n    }\r\n\r\n    public addMany(sprites:{ [key:string]:createjs.DisplayObject }) {\r\n        Object.keys(sprites).forEach(k => {\r\n            this.add(k, sprites[k], false);\r\n        });\r\n\r\n        this._layout.buildLayout(true, ...Object.keys(this._sprites).map(k => this._sprites[k]));\r\n    }\r\n\r\n    public changeLayout(layout:Layout) {\r\n        this._layout = layout;\r\n    }\r\n\r\n    /**In case of wandering or reusable sprites, call them back to this layout! */\r\n    public checkoutSprites() {\r\n        this._layout.buildLayout(true, ...Object.keys(this._sprites).map(k => this._sprites[k]));\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container():createjs.Container { return this._container; }\r\n    public get Sprites() { return this._sprites; }\r\n\r\n    public static get LAYOUT_OPTIONS() {\r\n        return {\r\n            //column layouts\r\n            //-- left aligned\r\n            \"ColumnLeftTop\" : {direction:Layout.VERTICAL, alignment:Layout.START, crossAlignment:Layout.START, spacing:5},\r\n            \"ColumnLeftCenter\" : {direction:Layout.VERTICAL, alignment:Layout.START, crossAlignment:Layout.CENTER, spacing:5},\r\n            \"ColumnLeftBottom\" : {direction:Layout.VERTICAL, alignment:Layout.START, crossAlignment:Layout.END, spacing:5},\r\n            //-- center aligned\r\n            \"ColumnCenterTop\" : {direction:Layout.VERTICAL, alignment:Layout.CENTER, crossAlignment:Layout.START, spacing:5},\r\n            \"ColumnCenterCenter\" : {direction:Layout.VERTICAL, alignment:Layout.CENTER, crossAlignment:Layout.CENTER, spacing:5},\r\n            \"ColumnCenterBottom\" : {direction:Layout.VERTICAL, alignment:Layout.CENTER, crossAlignment:Layout.END, spacing:5},\r\n            //-- right aligned\r\n            \"ColumnRightTop\" : {direction:Layout.VERTICAL, alignment:Layout.END, crossAlignment:Layout.START, spacing:5},\r\n            \"ColumnRightCenter\" : {direction:Layout.VERTICAL, alignment:Layout.END, crossAlignment:Layout.CENTER, spacing:5},\r\n            \"ColumnRightBottom\" : {direction:Layout.VERTICAL, alignment:Layout.END, crossAlignment:Layout.END, spacing:5}\r\n        };\r\n    }\r\n}","import { Game } from \"../../Game\";\r\n\r\n/**Used to layout createjs display objects. */\r\nexport class Layout {\r\n    //justify content\r\n    public static HORIZONTAL:string = \"horizontal\";\r\n    public static VERTICAL:string = \"vertical\";\r\n    //align items\r\n    public static START:string = \"start\";\r\n    public static END:string = \"end\";\r\n    public static CENTER:string = \"center\";\r\n\r\n    private _parent:createjs.Container;\r\n    private _items:createjs.DisplayObject[];\r\n\r\n    private _direction:string;\r\n    private _alignment:string;\r\n    private _crossAlignment:string;\r\n    private _spacing:number;\r\n\r\n    constructor(parent:createjs.Container, direction:string, alignment:string, crossAlignment:string, spacing:number = 5) {\r\n        this._parent = parent;\r\n        this._items = [];\r\n\r\n        this._direction = direction;\r\n        this._alignment = alignment;\r\n        this._crossAlignment = crossAlignment;\r\n        this._spacing = spacing;\r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public buildLayout(addToParent:boolean=true, ...items:createjs.DisplayObject[]) {\r\n        if(items.length <= 0) return;\r\n\r\n        this._items = items;\r\n\r\n        if(addToParent) {\r\n            this._parent.removeAllChildren();\r\n        }\r\n        \r\n\r\n        if(this._direction == Layout.VERTICAL) {\r\n            let totalHeight = 0;\r\n            //ALIGNMENT\r\n            switch(this._alignment) {\r\n                case Layout.START : {\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        item.x = 0;\r\n                        item.y = totalHeight;\r\n                        totalHeight += item.getBounds().height + this._spacing;\r\n                        if(addToParent) this._parent.addChild(item);\r\n                    }\r\n                    break;\r\n                }\r\n                case Layout.CENTER : {\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        item.x = (Game.WIDTH / 2) - (item.getBounds().width / 2);\r\n                        item.y = totalHeight;\r\n                        totalHeight += item.getBounds().height + this._spacing;\r\n                        if(addToParent) this._parent.addChild(item);\r\n                    }\r\n                    break;\r\n                }\r\n                case Layout.END : {\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        item.x = Game.WIDTH - item.getBounds().width;\r\n                        item.y = totalHeight;\r\n                        totalHeight += item.getBounds().height + this._spacing;\r\n                        if(addToParent) this._parent.addChild(item);\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n\r\n            //CROSS ALIGNMENT\r\n            //handle vertical alignment\r\n            switch(this._crossAlignment) {\r\n                case Layout.START : {\r\n                    break;\r\n                }\r\n                case Layout.CENTER : {\r\n                    totalHeight += items[items.length-1].getBounds().height;\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        //decipher desired center\r\n                        item.y += (Game.HEIGHT / 2) - (totalHeight / 2);\r\n                    }\r\n                    break;\r\n                }\r\n                case Layout.END :  {\r\n                    totalHeight += items[items.length-1].getBounds().height;\r\n                    for(let i = 0; i < items.length; i++) {\r\n                        const item:createjs.DisplayObject = items[i];\r\n                        //decipher desired center\r\n                        item.y += Game.HEIGHT - totalHeight;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n\r\n        }\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    \r\n    /*--------------- HELPER FUNCTIONS ---------------*/\r\n    public static MAKE_VERTICAL_CENTER(container:createjs.Container) { return new Layout(container, Layout.VERTICAL, Layout.CENTER, Layout.CENTER, 5); }\r\n    public static MAKE_VERTICAL_START(container:createjs.Container) { return new Layout(container, Layout.VERTICAL, Layout.CENTER, Layout.START, 5); }\r\n\r\n}","import { Game } from \"../../Game\";\r\nimport { Sprites } from \"../Sprites\";\r\nimport { LoadManager } from \"../../managers/LoadManager\";\r\n\r\n/**Creates a display container for the game screen. */\r\nexport class GameScore {\r\n    private _game:Game;\r\n    private _container:createjs.Container;\r\n    private _bg:createjs.Shape;\r\n    private _txtTimer:createjs.DisplayObject;\r\n\r\n    private _timerContainer:createjs.Container;\r\n    private _timerTextContainer:createjs.Container;\r\n    private _fishRemainContainer:createjs.Container;\r\n    private _fishRemainTextContainer:createjs.Container;\r\n    private _scoreContainer:createjs.Container;\r\n    private _scoreTextContainer:createjs.Container;\r\n\r\n    //game conditions\r\n    private _useTimer:boolean = false;\r\n    private _useFishRemain:boolean = true;\r\n    private _useScore:boolean = true;\r\n\r\n    constructor(game:Game) {\r\n        this._game = game;\r\n        //create the initial objects\r\n        this._container = new createjs.Container();\r\n        this._bg = new createjs.Shape();\r\n        this._bg.graphics.beginFill(\"#000000\");\r\n        this._bg.graphics.drawRect(0, 0, this._game.StageWidth, 40);\r\n        this._bg.graphics.endFill();\r\n        this._bg.cache(0, 0, this._game.StageWidth, 40);\r\n        this._container.addChild(this._bg);\r\n\r\n        //create the container objects\r\n        //timer\r\n        this._timerContainer = new createjs.Container();\r\n        this._timerContainer.x += 10;\r\n        const timerSprite = Sprites.Graphics.Timer.clone();\r\n        this._timerContainer.addChild(timerSprite);\r\n        this._timerTextContainer = new createjs.Container();\r\n        this._timerTextContainer.y += 8;\r\n        this._timerTextContainer.x += Sprites.Graphics.Timer.getBounds().width + 10;\r\n        this._timerContainer.addChild(this._timerTextContainer);\r\n        this._container.addChild(this._timerContainer);\r\n\r\n        //fish remain\r\n        this._fishRemainContainer = new createjs.Container();\r\n        const fishRemainSprite = Sprites.Graphics.FishRemain.clone();\r\n        this._fishRemainContainer.addChild(fishRemainSprite);\r\n        this._fishRemainTextContainer = new createjs.Container();\r\n        this._fishRemainTextContainer.y += 8;\r\n        this._fishRemainTextContainer.x += Sprites.Graphics.FishRemain.getBounds().width + 10;\r\n        this._fishRemainContainer.addChild(this._fishRemainTextContainer);\r\n        this._container.addChild(this._fishRemainContainer);\r\n\r\n        //score\r\n        this._scoreContainer = new createjs.Container();\r\n        this._scoreContainer.x = this._game.StageWidth - Sprites.Graphics.Score.getBounds().width - 40;\r\n        const scoreSprite = Sprites.Graphics.Score.clone();\r\n        this._scoreContainer.addChild(scoreSprite);\r\n        this._scoreTextContainer = new createjs.Container();\r\n        this._scoreTextContainer.y += 8;\r\n        this._scoreTextContainer.x += Sprites.Graphics.Score.getBounds().width + 10;\r\n        this._scoreContainer.addChild(this._scoreTextContainer);\r\n        this._container.addChild(this._scoreContainer);\r\n        \r\n    }\r\n\r\n    /*--------------- METHODS ------------------------*/\r\n    public startHUD(showScore:boolean, showFishRemain:boolean, showTimer:boolean) {\r\n        this._useScore = showScore;\r\n        this._useFishRemain = showFishRemain;\r\n        this._useTimer = showTimer;\r\n\r\n        if(this._useScore) this._container.addChild(this._scoreContainer);\r\n        else this._container.removeChild(this._scoreContainer);\r\n\r\n        if(this._useFishRemain) this._container.addChild(this._fishRemainContainer);\r\n        else this._container.removeChild(this._fishRemainContainer);\r\n\r\n        if(this._useTimer) this._container.addChild(this._timerContainer);\r\n        else this._container.removeChild(this._timerContainer);\r\n    }\r\n    /*--------------- ABSTRACTS ----------------------*/\r\n    /*--------------- EVENTS -------------------------*/\r\n    /*--------------- OVERRIDES ----------------------*/\r\n    public update(gameTime:number) {\r\n        \r\n    }\r\n    /*--------------- GETTERS & SETTERS --------------*/\r\n    public get Container() { return this._container; }\r\n\r\n}"]}